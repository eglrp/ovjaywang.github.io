{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":0,"renderable":1},{"_id":"themes/next/source/images/author.jpg","path":"images/author.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":0,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/touxiang.jpg","path":"images/touxiang.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/xiaoxin.jpg","path":"images/xiaoxin.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/images/wechat.png","path":"images/wechat.png","modified":0,"renderable":1},{"_id":"themes/next/source/images/alipay.jpg","path":"images/alipay.jpg","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/LICENSE","path":"vendors/fastclick/LICENSE","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/README.md","path":"vendors/fastclick/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/bower.json","path":"vendors/fastclick/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","path":"vendors/font-awesome/HELP-US-OUT.txt","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/bower.json","path":"vendors/font-awesome/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","path":"vendors/jquery_lazyload/CONTRIBUTING.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","path":"vendors/jquery_lazyload/README.md","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","path":"vendors/jquery_lazyload/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","path":"vendors/jquery_lazyload/jquery.lazyload.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","path":"vendors/jquery_lazyload/jquery.scrollstop.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/bower.json","path":"vendors/velocity/bower.json","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","path":"vendors/velocity/velocity.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","path":"vendors/velocity/velocity.ui.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","path":"vendors/velocity/velocity.ui.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/jquery/index.js","path":"vendors/jquery/index.js","modified":0,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","path":"vendors/fancybox/source/blank.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","path":"vendors/fancybox/source/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","path":"vendors/fancybox/source/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","path":"vendors/fancybox/source/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","path":"vendors/fancybox/source/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","path":"vendors/fancybox/source/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","path":"vendors/fancybox/source/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","path":"vendors/fancybox/source/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","path":"vendors/fancybox/source/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","path":"vendors/fastclick/lib/fastclick.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","path":"vendors/fastclick/lib/fastclick.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","path":"vendors/font-awesome/css/font-awesome.css.map","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","path":"vendors/font-awesome/css/font-awesome.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","path":"vendors/font-awesome/css/font-awesome.min.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff2","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","path":"vendors/ua-parser-js/dist/ua-parser.min.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","path":"vendors/ua-parser-js/dist/ua-parser.pack.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","path":"vendors/font-awesome/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","path":"vendors/font-awesome/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","path":"vendors/font-awesome/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/velocity/velocity.js","path":"vendors/velocity/velocity.js","modified":0,"renderable":1},{"_id":"themes/next/source/images/xiaozaizi.png","path":"images/xiaozaizi.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","path":"vendors/fancybox/source/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","path":"vendors/font-awesome/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","path":"vendors/font-awesome/fonts/fontawesome-webfont.svg","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"1b21b5ef120bdbfd43eaf5aefb83c9850551d26d","modified":1460375714237},{"_id":"source/favicon.ico","hash":"e7ec823921ebbba9dd11072041ea3b8b79b56fc2","modified":1460301206331},{"_id":"themes/next/.bowerrc","hash":"20038353db532b4c40625419d396da7359f89cbe","modified":1461415113919},{"_id":"themes/next/.editorconfig","hash":"211d2c92bfdddb3e81ea946f4ca7a539f150f4da","modified":1461415113920},{"_id":"themes/next/.gitignore","hash":"63d003fa46cf9665b4dab1786f9dc694812a5a79","modified":1461415113985},{"_id":"themes/next/.hound.yml","hash":"289dcf5bfe92dbd680d54d6e0668f41c9c9c0c78","modified":1461415113985},{"_id":"themes/next/.javascript_ignore","hash":"beb0b95736650284ceb712a162cc033847a83cd3","modified":1461415113985},{"_id":"themes/next/.jshintrc","hash":"b7d23f2ce8d99fa073f22f9960605f318acd7710","modified":1461415113985},{"_id":"themes/next/README.en.md","hash":"fa31bbc6dd8778b8dee469740c92b3b5b59702af","modified":1461415113986},{"_id":"themes/next/README.md","hash":"06aaf1241e9e1619956c86d8b1397a643840a9d1","modified":1461415113986},{"_id":"themes/next/_config.yml","hash":"74fe27e05b266be9b8e71c916faf7cd57c36c7a7","modified":1463557023743},{"_id":"themes/next/bower.json","hash":"da39b00fcdf2e7a42af412de0a4d3617cc6d7084","modified":1461415113987},{"_id":"themes/next/gulpfile.coffee","hash":"4e8c1082fa82e383494ff5b5963b7936d9c7bb2e","modified":1461415113987},{"_id":"themes/next/package.json","hash":"95eaba1607544965e432d56406bae391dd11bcbb","modified":1461415114012},{"_id":"source/a-pic-a-movie/index.md","hash":"73991e999d7ec93b7b43ca651c824f55630d1198","modified":1463451725849},{"_id":"source/_posts/2013年度总结，，玩不动.md","hash":"aed88c2200d12ce248f396135c9fcff19111d6ef","modified":1460383785580},{"_id":"source/_posts/2014生活生命、.md","hash":"bfbe5bb9261d432f8498c104d65956f559f3d7fa","modified":1460383785581},{"_id":"source/_posts/2015.11.08安装google 框架 service 一系列.md","hash":"93cbb89e42244305bdbac98216f1802d9e6c3b4e","modified":1460383785581},{"_id":"source/_posts/Android adt zip包下载.md","hash":"8b69462dde2aee51628ebd687935667ccbfe8a10","modified":1460383785581},{"_id":"source/_posts/Android为毛耗电[1].md","hash":"39d20e3f22c9d7d0342cd30151effd3f82861293","modified":1461921203588},{"_id":"source/_posts/Android 丢lib.md","hash":"88222148315b1f3ed1c0ba23b81437019a2517d4","modified":1460538597874},{"_id":"source/_posts/Android为毛耗电[2].md","hash":"d1f80458551cefcd22347bf9423bb7feb39cde89","modified":1461921203589},{"_id":"source/_posts/Android常用控件及其使用方法.md","hash":"96df44d94eded0b7946a880fd9637eaea2d43730","modified":1460538506741},{"_id":"source/_posts/AsyncTask 很好.md","hash":"22825afcb3954a6b95844022a210cf794e1f9feb","modified":1460383785580},{"_id":"source/_posts/Conversion to Dalvik format failed with error 1解决方法.md","hash":"42d170f0b24e012ad08c9732e144a0c3af7fedaa","modified":1460383785580},{"_id":"source/_posts/GitHub上最受欢迎的Android开源项目TOP20.md","hash":"1622194f59ee3c5a89572c1aec158f264dcc12cf","modified":1460538551721},{"_id":"source/_posts/Hadoop2.2.0 Mapreduce Log日志分析小例.md","hash":"bb216a6d69ebdc0008cdd0b8ecd7daa2f515bebc","modified":1460383785581},{"_id":"source/_posts/Hello-Hexo.md","hash":"a1c4f3bb164c0052ec5f34565abae1cf0010474c","modified":1463376808615},{"_id":"source/_posts/HttpURLConnection HttpClient commit pics.md","hash":"81508a7014e45af21f2d915959ebf2111e179983","modified":1460553969380},{"_id":"source/_posts/Java和mySql间date数据的注意.md","hash":"c540118ab5e8b45f7de68b7eff5a0e8bc7341b45","modified":1460383785579},{"_id":"source/_posts/MFC中添加控制台调试.md","hash":"7d5148c4c079edcd4e59e24bfd28fdf7fb14942c","modified":1460383785581},{"_id":"source/_posts/OWL的语义语法及Jena初步.md","hash":"70b4dfbe933d9a27bf6fc511510d8af824867ecd","modified":1460383785580},{"_id":"source/_posts/SublimeText添加中文编码.md","hash":"51a847d27b13ee2d271fb056c0edc03ce94e6b6a","modified":1460383785581},{"_id":"source/_posts/Ontology本体的基础概念.md","hash":"12e9d1abac01ef847777ac4095a2076e4413dacd","modified":1460383785580},{"_id":"source/_posts/[机器学习课程小结][110].md","hash":"7abd9675e4f279d86ce64f5cc7568ab47065e8ec","modified":1460383785581},{"_id":"source/_posts/[汇总][2015.1.3]电脑端与Android iOS传输文件.md","hash":"57f4282c4754336f7df628a3b98b15047f09d263","modified":1461921203590},{"_id":"source/_posts/android-listview-initpics-and-update.md","hash":"99888d45906b0d4858e2474101040aa6c2ca8715","modified":1460383785580},{"_id":"source/_posts/android-listview-push-update.md","hash":"86a8d4d431b6b78ea2daead7062a8c8fb4470680","modified":1460383785580},{"_id":"source/_posts/avd调试加速解决方案.md","hash":"a5244b61b52a0303a998ce8035dc93177362cdc6","modified":1460538160999},{"_id":"source/_posts/bae-java.md","hash":"a7f0359217a1fcd622e9084da37abe4d95162ba4","modified":1460384420862},{"_id":"source/_posts/cmakeqt5-0-with-opengl-e7-bc-96-e8-af-91cloudcompare.md","hash":"c6b970ea8e32cdff48fbbbcf5ebaf016bcf884da","modified":1460538276214},{"_id":"source/_posts/defy miui3.9.6升级记录.md","hash":"361cd722eb68d52af988dc37d9390d76bc308614","modified":1460383785580},{"_id":"source/_posts/easy-come-easy-go.md","hash":"87d71750d11eae939c397e84d16792e4d75b0c81","modified":1460383785580},{"_id":"source/_posts/effective java 笔记--创建对象的几个tips.md","hash":"92466df528cc4f80f9502e8f194834103658a16a","modified":1461857009022},{"_id":"source/_posts/effective java--builer构造器.md","hash":"63cd4486f38eee5110c55d6c704840a834f50352","modified":1463404704708},{"_id":"source/_posts/effective java--静态工厂.md","hash":"dad46512ddc23ad68f40239950bf6efba35bd568","modified":1463412077911},{"_id":"source/_posts/erdas9.2+lps安装.md","hash":"77499b4eb8d6cfeb6841a2a2eb69a53341544c7f","modified":1460383785581},{"_id":"source/_posts/goagent-chrome.md","hash":"d9adac4fccbb799c0d0d9735bb5803129ce83216","modified":1460383785581},{"_id":"source/_posts/gson-json-java.md","hash":"040d607d5602abaf73317da714a937dddf3e7bbc","modified":1460384554439},{"_id":"source/_posts/hadoop2.2+wordcount.md","hash":"c22cbd79d4775d2a704f93413658548b46d7dee6","modified":1460383785581},{"_id":"source/_posts/harris-python-to-exe.md","hash":"67be7d81212e7bbff135b54cf74bbf6499d32ef3","modified":1460383785581},{"_id":"source/_posts/hexo多客户端写作.md","hash":"4a2ce5768673f26236e61596d8aa8f08a22a0285","modified":1461857343676},{"_id":"source/_posts/hello-world-1.md","hash":"bbe91dccc4f8b2b766bd62ecdd4b6aace660eaef","modified":1460383785578},{"_id":"source/_posts/jQuery的两个坑.md","hash":"3e9d6149c4f890c457e8c5a9d2ef629d35c9e664","modified":1463022802340},{"_id":"source/_posts/listactivity-84onlistitemclick-nowork.md","hash":"2bd160cb4d1c43b6496dd370ec67acc890763295","modified":1460383785580},{"_id":"source/_posts/opencv-findhomography-findfundanmentalmat.md","hash":"f5b14d5190a08f0489d8a0c8c6071e3843fb6bc3","modified":1461921203591},{"_id":"source/_posts/owl jena owls ontology资料集合.md","hash":"9d030367e89c286e9ea10c5f24e6b90420a949bd","modified":1460383785580},{"_id":"source/_posts/poy.md","hash":"32244fcdbb3322b2e2a3853eb3912fc2b9765693","modified":1460383785579},{"_id":"source/_posts/sift-with-python.md","hash":"41e0ff3ad59ab9f659c34029212a613c3eaf8fc2","modified":1460383785581},{"_id":"source/_posts/so-be-better-man.md","hash":"26f85bceb3c18d0537e10b81771d1a2271703b23","modified":1460383785579},{"_id":"source/_posts/svm初探.md","hash":"ae75f04f4d904ccbd1511fa2fa5719347c4b51b6","modified":1461856616004},{"_id":"source/_posts/targets-by-07-2014.md","hash":"591fee23dcc1e80c2779527ae64a9a47f23e2157","modified":1460383785579},{"_id":"source/_posts/time-to-fight.md","hash":"61dc0a6207f3222793ee3d2a89f6e0d2b55ce325","modified":1460383785580},{"_id":"source/_posts/the-miss-next-life.md","hash":"0a127f5b4c16657d230af733f9998ce7f1c16860","modified":1460383785580},{"_id":"source/_posts/top-10-reasons-to-root-your-android-phone.md","hash":"cc2264bd196a64f36d9470fe1e8436be39b6c5d1","modified":1460383785580},{"_id":"source/_posts/trans-between-pc-and-phone.md","hash":"4c239e465fef2765f70ef27d7036513cb5ff92e9","modified":1460383785581},{"_id":"source/_posts/travel-to-jiangnan-10-days.md","hash":"ff6927d036c6bdd5218982db884e9cefc59ef576","modified":1460383785581},{"_id":"source/_posts/uac-involved.md","hash":"ed742f0ce808f0e937c281f7a868220adefb5067","modified":1460383785581},{"_id":"source/_posts/update-efficient.md","hash":"d4c438ed62f0871ef59269eb71d7f4017c9129c1","modified":1460383785580},{"_id":"source/_posts/what-the-hell-of-sdf.md","hash":"35f7d11df08c75a79bbf2dde6a78a4bd33f4bd79","modified":1461413930416},{"_id":"source/_posts/win8笔记本热点创建.md","hash":"1160f1a16e8bf62aca689285dea4bd02416e6bd0","modified":1460383785580},{"_id":"source/_posts/wuha.md","hash":"164a836a6fc97b21f7a55a510063f1e14ac24b0d","modified":1460383785579},{"_id":"source/_posts/xiaomi-360-story.md","hash":"5b9129a7a4467bf585ee13de7c3fa2df8cf758e6","modified":1460383785580},{"_id":"source/_posts/【电影】【2015】 〇二次点评.md","hash":"a5bb96e517b3d73e949face2cd9a819c4420c685","modified":1460383785581},{"_id":"source/_posts/【电影】【2015】〇一次点评.md","hash":"c9a812cb8b9113346fbdbb98f1f6d51985e1d3eb","modified":1460383785581},{"_id":"source/_posts/一个装机清单.md","hash":"167d216dcd43aaf4e05681b72d17d35380c2936f","modified":1460383785581},{"_id":"source/_posts/不予置评。.md","hash":"f2ce0a70d45f03737ce832c0f48818e582e2412a","modified":1460383785580},{"_id":"source/_posts/主题更新伤不起.md","hash":"b534730f7b494296f6a0a1f6de6287b84126880a","modified":1460383785580},{"_id":"source/_posts/今日吐槽.md","hash":"5324bd8b27c12310cda2a01dd9980d15a76ecc0c","modified":1460383785579},{"_id":"source/_posts/位运算各种.md","hash":"779cb005432a2c2c52905f587154f7d3b38ef1ff","modified":1463577198644},{"_id":"source/_posts/你他妈的在逗我？——为什么小时代是烂片.md","hash":"a76a681fcb4ca0c1b341b2c955623461f3a25620","modified":1460383785580},{"_id":"source/_posts/内地研究生的所为科研和自我养成.md","hash":"7f41024041cf0a0b3ca29a407bc61c9f8c679115","modified":1460383785580},{"_id":"source/_posts/刷屏测试。。.md","hash":"3b405a0486c966ad84b81ece16103e37a37ad936","modified":1460383785579},{"_id":"source/_posts/后方交会检校(1)--前景 共线方程及其线性化.md","hash":"77cb3fbf45ecfefdd14f6189f3a5ead8327f5464","modified":1460383785581},{"_id":"source/_posts/后方交会检校(2)--误差方程及各项系数解求及精度.md","hash":"d66f0853a736ea3c2d3132c2921e4e65476705e8","modified":1461058660732},{"_id":"source/_posts/后方交会检校(3)--角度、坐标及其应用.md","hash":"eaf736a5a026405c71560817cdcca16f6db1b3a0","modified":1460383785581},{"_id":"source/_posts/后方交会检校(4)--畸变差矫正.md","hash":"57e00c6dc2a9b57907c62287c1e1ba3d38e18ad4","modified":1460383785581},{"_id":"source/_posts/后方交会检校(5)--多片后方交会 相对绝对定向.md","hash":"4dbfb85074d7dd67162db5302cbf4910d8940985","modified":1460383785581},{"_id":"source/_posts/后方交会检校(6)--后方交会的补充及DLT和角锥体法.md","hash":"8455ff7b4f279920efc194a11752abb539251dd9","modified":1460383785581},{"_id":"source/_posts/后方交会检校(7)--后方检校精度的检验.md","hash":"43a2a0e95f034950ec90d67bfdd1149be1cba1f7","modified":1460383785581},{"_id":"source/_posts/后方交会检校(8)--光束法区域平差 bundle block adjustment.md","hash":"0748de9a0a4985f52e82aa168e08d77779ba903e","modified":1460383785581},{"_id":"source/_posts/国内主要科技博客类型表.md","hash":"84a403e836afcdb7f24225bbf8beaaf42b9a1e4a","modified":1460383785580},{"_id":"source/_posts/坑爹呢摔.md","hash":"00aaaddd0b58e96382448126700c95c73892e29a","modified":1460538782903},{"_id":"source/_posts/大巴黎 摩纳哥.md","hash":"950891f634d5b5cb3ec9f83d37423cc63e46dd68","modified":1460554109383},{"_id":"source/_posts/小目标.md","hash":"ce7c3b0c361f0aced8e22c17277982296aba1f69","modified":1460383785580},{"_id":"source/_posts/微博咋还没挂.md","hash":"cfe152008c8c630b4f167560913bb10b68773a40","modified":1460539456022},{"_id":"source/_posts/新浪微博的衰败 (2).md","hash":"f8d69f5baa34049b811f22932a9b050951301c4e","modified":1460538677250},{"_id":"source/_posts/新浪微博的衰败.md","hash":"f8d69f5baa34049b811f22932a9b050951301c4e","modified":1460383785580},{"_id":"source/_posts/最近demo 模块 算法总结.md","hash":"4e7a03d93e9bdf92b431115d497fc29027d3bf6d","modified":1461414144295},{"_id":"source/_posts/最近听的音乐.md","hash":"98c15763a4916466f9553378ab93d6382ed9f1dc","modified":1460383785581},{"_id":"source/_posts/最近的一些推荐拉.md","hash":"c7bdd7d8537a00c22f564afdec27f5b94cd9706a","modified":1460383785580},{"_id":"source/_posts/本体的介绍.md","hash":"c5283d79d2991f2e2eda2e6376eeffa05983fd6f","modified":1460383785580},{"_id":"source/_posts/树系列码集合-持更.md","hash":"c6d929ac00fb64a721ee85415451307ff632b37b","modified":1463538384567},{"_id":"source/_posts/格言.md","hash":"1a2173087a15d973180241097cc602a38cb63ca6","modified":1460383785580},{"_id":"source/_posts/求解释..布吉岛.md","hash":"c64fc808882c8279ba96a6fd1b75da59fb6075e0","modified":1460383785579},{"_id":"source/_posts/测试flicker.md","hash":"2ec448be7ad6b746b378f310c3f3951a4288cc68","modified":1460538536293},{"_id":"source/_posts/猜地址游戏.md","hash":"b0ec1ff2f5924969b741ef10933a30042bff3493","modified":1460383785581},{"_id":"source/_posts/瀚海箴言- -.md","hash":"17bdc1c6bcf63e55889e2e8bda617eabf089f9b8","modified":1460383785580},{"_id":"source/_posts/真是心累.md","hash":"e12511fa29617575eee95d85d5aa48961e40019b","modified":1460383785579},{"_id":"source/_posts/睡不着啊睡不着.md","hash":"9b80db2e0045706fab7f29e2ae39ed3e7295e13f","modified":1460383785580},{"_id":"source/_posts/知乎与果壳.md","hash":"15f8ccdb0b0c0cd07a2adf72ba2360a9fbc7f0b1","modified":1460383785580},{"_id":"source/_posts/破处篇...好吧.md","hash":"44251f0a4da9c8d1a5da84983f4d4025fd34e671","modified":1460383785579},{"_id":"source/_posts/社交app的2015.md","hash":"2299450ffbb7e159da215787d58270e2e88e9586","modified":1461921203592},{"_id":"source/_posts/红包在哪里.md","hash":"c2f5742b67462a6eea9ad6989f899e9131b8b5f0","modified":1460383785581},{"_id":"source/_posts/考研政治预测.md","hash":"26305854f995ab1c5450d305e73fde5c6ae79911","modified":1460383785580},{"_id":"source/_posts/考研目标。。。.md","hash":"dd1c8af343ce8604cf3b336807fbfd38fe111dd9","modified":1460383785580},{"_id":"source/_posts/考研视频马克.md","hash":"3e19317b6e6bc9f70c71ac0db92b7dbfc7804c72","modified":1460383785580},{"_id":"source/_posts/要有追求啊.md","hash":"b0fdb53e245acbea0dbfe1f3bf25bf0248fc79e5","modified":1460383785581},{"_id":"source/_posts/记静态ip的坑.md","hash":"d8088e03e641c2ad21d4caf860284384a27aa9f2","modified":1461414071330},{"_id":"source/_posts/逼格不能随便装.md","hash":"c06588300f38317d1a3b08aee6963845b0e21eb8","modified":1460383785580},{"_id":"source/sth/index.md","hash":"5c3ef4afca41f772398611089022054a0f81b785","modified":1463554152983},{"_id":"source/me/index.md","hash":"06a0438083ff26205343ae65641f29aff9f04100","modified":1460305318972},{"_id":"source/tags/index.md","hash":"79c4135ccdb72cf2136384a3b19cfe2fcc7916e8","modified":1461518617468},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1461829423108},{"_id":"themes/next/.git/config","hash":"340cff4364d9733a32042fdb93097c334a781c93","modified":1461829423134},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1461829355325},{"_id":"themes/next/.git/index","hash":"e0c9642326954c51d8e236e77d43583509b14668","modified":1461851681647},{"_id":"themes/next/.git/packed-refs","hash":"ba9cdcf5944e85d2ceb8c3aef723c8565e95da90","modified":1461829423104},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"4312fb37fa2b8663006be3c4fe01125ec01171c1","modified":1461829423188},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"2692e36cc35b1594530981e7727771f601720a43","modified":1461829423189},{"_id":"themes/next/languages/de.yml","hash":"4c3ffeb0d214c807a226dd98214958cb5483df1c","modified":1461415113987},{"_id":"themes/next/languages/default.yml","hash":"d2f6784b9c6567b64e58736e36025dbf96d863d4","modified":1461415113988},{"_id":"themes/next/languages/en.yml","hash":"df81ab6b1cf3c88ed053d3766381cd12eb659fe3","modified":1461415113988},{"_id":"themes/next/languages/fr-FR.yml","hash":"d8a40fe025fad6f42df0cf16d4be2d513769b062","modified":1461415113988},{"_id":"themes/next/languages/id.yml","hash":"19537c8bae42c4c2e7d06a64537e8dfd503b7e19","modified":1461829423196},{"_id":"themes/next/languages/ja.yml","hash":"e594aa42a33c489e4a65065659a01bb76c3c0cb5","modified":1461415113989},{"_id":"themes/next/languages/pt.yml","hash":"4c64594f477905d5d2d9ca2422f03175b7b0c617","modified":1461415113989},{"_id":"themes/next/languages/ru.yml","hash":"c3aedb94decf05a301662afc3398ab563dd9995a","modified":1461415113989},{"_id":"themes/next/languages/zh-Hans.yml","hash":"7819788cc08a6c6b946102d218f0c74a7c1be4d7","modified":1463331994189},{"_id":"themes/next/languages/zh-hk.yml","hash":"88e603eb0f3fd25c35bb37bd30372fd77bba7c46","modified":1461415113990},{"_id":"themes/next/languages/zh-tw.yml","hash":"04479b419c72b71fd34046f3fc33ebda4fe8de84","modified":1461415113990},{"_id":"themes/next/layout/_layout.swig","hash":"1138b849e1240249480849cc2b6c6d09b28207a5","modified":1461415113991},{"_id":"themes/next/layout/archive.swig","hash":"b867a08f6b43de8b5d700c84b943df55917407ae","modified":1461415114010},{"_id":"themes/next/layout/category.swig","hash":"58cf08388901f7549b1fca95548b2c79173aa840","modified":1461415114011},{"_id":"themes/next/layout/index.swig","hash":"e5b52e04296203262a400e8e36ae12426d31fd5b","modified":1461415114011},{"_id":"themes/next/layout/page.swig","hash":"a91e3fd7aef26e8a02e339e3372801c517f400cf","modified":1461415114012},{"_id":"themes/next/layout/post.swig","hash":"b8334c479840b7724638eec71971cbd8512ae58d","modified":1461415114012},{"_id":"themes/next/layout/tag.swig","hash":"6f764ea3ab11eeb7c530df45528d449b14f5dc62","modified":1461415114012},{"_id":"themes/next/scripts/merge-configs.js","hash":"f8cde6953939802f92da5b7a2458c6c539e9be69","modified":1461415114013},{"_id":"themes/next/test/.jshintrc","hash":"1dae9d1cf7df1ae6d5c5efd6cffb949e9b8dcebb","modified":1461415114102},{"_id":"themes/next/test/helpers.js","hash":"f25e7f3265eb5a6e1ccbb5e5012fa9bebf134105","modified":1461415114103},{"_id":"themes/next/test/intern.js","hash":"db90b1063356727d72be0d77054fdc32fa882a66","modified":1461415114103},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1461415114054},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1461829355349},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1461829355348},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1461829355340},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1461829355350},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1461829355351},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1461829355351},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1461829355359},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1461829355360},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1461829355361},{"_id":"themes/next/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1461829355362},{"_id":"themes/next/.git/logs/HEAD","hash":"97ebc482d27981f2f435f246148a98969a86fea1","modified":1461829423112},{"_id":"themes/next/layout/_macro/post.swig","hash":"74e316a693166969af1de1eb23cd8077dc922963","modified":1461415113992},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"b87a5122dbff1d5fccf8f3d09d1640bd4b01c4a0","modified":1461415113991},{"_id":"themes/next/layout/_macro/reward.swig","hash":"05cad11b3efcb8b7e74677bd7c13ad53d268476a","modified":1461415113992},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"8cd78f0f934318524393fcb26dbdff9be4df70b9","modified":1461415113993},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"d569af20d20a960d534a5b60f90c20fef519d351","modified":1461415113993},{"_id":"themes/next/layout/_partials/comments.swig","hash":"325dd5923d845a539fc0524ca72ce40edd1e516a","modified":1461415113994},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"ba75672183d94f1de7c8bd0eeee497a58c70e889","modified":1461415113994},{"_id":"themes/next/layout/_partials/footer.swig","hash":"27669118b957e8a39d843b63dddf561c9d62b336","modified":1461415113995},{"_id":"themes/next/layout/_partials/head.swig","hash":"d5eadfe13cd28aa4626a1b17e18deaafe0a0452e","modified":1461415113995},{"_id":"themes/next/layout/_partials/header.swig","hash":"b3f4f07f03bedd615039934b44d552b91e2a4a1d","modified":1461415113996},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"1634fb887842698e01ff6e632597fe03c75d2d01","modified":1461415113996},{"_id":"themes/next/layout/_partials/search.swig","hash":"95b55fe35f2d2c22f2cc055d4379b5435314c7ec","modified":1461415113996},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c5db707b46eac6a5df1d2a77f8556945a66fd181","modified":1461415114000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"c0f5a0955f69ca4ed9ee64a2d5f8aa75064935ad","modified":1461415114000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"931808ad9b8d8390c0dcf9bdeb0954eeb9185d68","modified":1461415114000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"c9d45628330ce8bf5fbe71c9f131c7d75334c1c4","modified":1461415114008},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"99b66949f18398689b904907af23c013be1b978f","modified":1461415114013},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"ac681b0d0d8d39ba3817336c0270c6787c2b6b70","modified":1461415114014},{"_id":"themes/next/scripts/tags/full-image.js","hash":"86194a05a8c6499de0b2aaa525d6de135778c0ae","modified":1461415114014},{"_id":"themes/next/source/css/main.styl","hash":"a91dbb7ef799f0a171b5e726c801139efe545176","modified":1461415114053},{"_id":"themes/next/source/images/author.jpg","hash":"78f534fbda5eb4fdb4e4ce01dce0bfc39e2f729d","modified":1460300847315},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1461415114054},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1461415114055},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1461415114055},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1461415114055},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1461415114056},{"_id":"themes/next/source/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1461415114056},{"_id":"themes/next/source/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1461415114057},{"_id":"themes/next/source/images/favicon.ico","hash":"e7ec823921ebbba9dd11072041ea3b8b79b56fc2","modified":1460301206331},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1461415114058},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1461415114058},{"_id":"themes/next/source/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1461415114059},{"_id":"themes/next/source/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1461415114059},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1461415114059},{"_id":"themes/next/source/images/touxiang.jpg","hash":"db472f3b6a9642b0d83db6e66050af358ae6b597","modified":1460301522963},{"_id":"themes/next/source/images/xiaoxin.jpg","hash":"f3b30bd133a7ef52159512a42254abe80ce3eb29","modified":1460301637058},{"_id":"themes/next/source/images/wechat.png","hash":"08d559d1902590978819bd1cf0e27f1395295134","modified":1461858002954},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1461415114002},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1461415114002},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1461415114040},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1461415114041},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1461415114042},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1461415114051},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1461415114052},{"_id":"themes/next/.git/refs/heads/master","hash":"e3d1b06d5dd3ad7232847edd24ffddae9eac89d7","modified":1461829423110},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"b83439cfca7b2c81846cd35596e27381ea4045e9","modified":1461415113995},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"efa7efcbb575381b508f9aa0e0c53140eef72a7b","modified":1461415113997},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"b25002a83cbd2ca0c4a5df87ad5bff26477c0457","modified":1461415113997},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"a8c7f9ca7c605d039a1f3bf4e4d3183700a3dd62","modified":1461415113997},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"bf8e9223a40748b2e3ef77d753a8e1dbbce8095e","modified":1461415113998},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"d4fbffd7fa8f2090eb32a871872665d90a885fac","modified":1461415113999},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"3fdde03f45a80f7a85097a40b40358adde618fc7","modified":1461415113998},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"12684840de632eb16e53ffa863166306a756fd4f","modified":1461415113999},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"9b84ab576982b2c3bb0291da49143bc77fba3cc6","modified":1461415114001},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a9a3995b9615adfb8d6b127c78c6771627bee19a","modified":1461415114002},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"91c5353fcb94cc3b3f265b06ad2341734bc4c826","modified":1461415114003},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"8ba01f1ac07fbca62a4b00f5a0a3a506122c1530","modified":1461415114006},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"aebc73513c9cbbbbda2935e2eb18e09bb1c24bf8","modified":1461415114007},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"5bd98c26cc188a2a30504d1330a0eaae34034db0","modified":1461415114008},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"4a5c6df1579a4ca72ed17f7dbd6d16a509aa7dc8","modified":1461415114008},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"fe95dd3d166634c466e19aa756e65ad6e8254d3e","modified":1461415114008},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"3403fdd8efde1a0afd11ae8a5a97673f5903087f","modified":1461415114040},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"ba8ab5a0280b953aa97435ff8946cbcbb2755a27","modified":1461415114041},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"10ca6744a8594c1a085b50120f4ed0a1ef433f40","modified":1461415114042},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"e55265c8a8a6ae0c3c08e3509de92ee62c3cb5f6","modified":1461415114051},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"6da593f19a9c8e76b43bc05172923d82b2aefa03","modified":1461415114052},{"_id":"themes/next/source/css/_variables/base.styl","hash":"ea6e519065702dfdb1dc299f85411b9ee2bcf4ce","modified":1461415114052},{"_id":"themes/next/source/css/_variables/default.styl","hash":"17779fa6fa3c9e1262ba100a86a8dec730c2f312","modified":1461415114053},{"_id":"themes/next/source/images/alipay.jpg","hash":"1276ce1f07836049c6bbd8d801c6d1c94c9185c1","modified":1461858031833},{"_id":"themes/next/source/js/src/affix.js","hash":"1b509c3b5b290a6f4607f0f06461a0c33acb69b1","modified":1461415114060},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"4a0da1bed19e65bd7db42421b447061bc1618710","modified":1461415114060},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"b35a7dc47b634197b93487cea8671a40a9fdffce","modified":1461415114061},{"_id":"themes/next/source/js/src/motion.js","hash":"ff9ea37d05c269e3a140c4ab448af03efc4bcc76","modified":1461415114061},{"_id":"themes/next/source/js/src/post-details.js","hash":"b8c0b5563cc6edbac82ed5a4f43f72800029ea87","modified":1461415114062},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"b7657be25fc52ec67c75ab5481bdcb483573338b","modified":1461415114063},{"_id":"themes/next/source/js/src/utils.js","hash":"14521498ba62a9a4050b86fb1eae0babd5b88c8a","modified":1461415114063},{"_id":"themes/next/source/vendors/fancybox/.bower.json","hash":"9be892a4e14e0da18ff9cb962c9ef71f163b1b22","modified":1461415114065},{"_id":"themes/next/source/vendors/fancybox/.gitattributes","hash":"672d3b5767e0eacd83bb41b188c913f2cf754793","modified":1461415114065},{"_id":"themes/next/source/vendors/fastclick/.bower.json","hash":"bf3eef9d647cd7c9b62feda3bc708c6cdd7c0877","modified":1461415114073},{"_id":"themes/next/source/vendors/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1461415114074},{"_id":"themes/next/source/vendors/fastclick/README.md","hash":"68a9b9d53126405b0fa5f3324f1fb96dbcc547aa","modified":1461415114074},{"_id":"themes/next/source/vendors/fastclick/bower.json","hash":"a9b3ee1e4db71a0e4ea6d5bed292d176dd68b261","modified":1461415114075},{"_id":"themes/next/source/vendors/font-awesome/.bower.json","hash":"bb093f2ac1f1305069d873a7941324c8e0de3135","modified":1461415114076},{"_id":"themes/next/source/vendors/font-awesome/.gitignore","hash":"03ddbf76c1dd1afb93eed0b670d2eee747472ef1","modified":1461415114077},{"_id":"themes/next/source/vendors/font-awesome/.npmignore","hash":"c31ff06a740955e44edd4403902e653ccabfd4db","modified":1461415114078},{"_id":"themes/next/source/vendors/font-awesome/HELP-US-OUT.txt","hash":"ed80b43dbc7e3009b2f436741b9796df8eb3be02","modified":1461415114078},{"_id":"themes/next/source/vendors/font-awesome/bower.json","hash":"71e7183634dc1b9449f590f15ebd7201add22ca7","modified":1461415114079},{"_id":"themes/next/source/vendors/jquery/.bower.json","hash":"865d6c1328ab209a4376b9d2b7a7824369565f28","modified":1461415114091},{"_id":"themes/next/source/vendors/jquery_lazyload/.bower.json","hash":"90fa628f156d8045357ff11eaf32e61abacf10e8","modified":1461415114093},{"_id":"themes/next/source/vendors/jquery_lazyload/CONTRIBUTING.md","hash":"4ded6fee668544778e97e38c2b211fc56c848e77","modified":1461415114094},{"_id":"themes/next/source/vendors/jquery_lazyload/README.md","hash":"b930297cb98b8e1dbd5abe9bc1ed9d5935d18ce8","modified":1461415114094},{"_id":"themes/next/source/vendors/jquery_lazyload/bower.json","hash":"e0acf1db27b0cc16128a59c46db1db406b5c4c58","modified":1461415114095},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.lazyload.js","hash":"f4a570908f6c89c6edfb1c74959e733eaadea4f2","modified":1461415114095},{"_id":"themes/next/source/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"bf773ad48a0b9aa77681a89d7569eefc0f7b7b18","modified":1461415114096},{"_id":"themes/next/source/vendors/velocity/.bower.json","hash":"63da5e80ebb61bb66a2794d5936315ca44231f0c","modified":1461415114097},{"_id":"themes/next/source/vendors/velocity/bower.json","hash":"92d92860418c4216aa59eb4cb4a556290a7ad9c3","modified":1461415114098},{"_id":"themes/next/source/vendors/velocity/velocity.min.js","hash":"bf172816a9c57f9040e3d19c24e181a142daf92b","modified":1461415114101},{"_id":"themes/next/source/vendors/velocity/velocity.ui.js","hash":"dbbfb50f6502f6b81dcc9fee7b31f1e812da3464","modified":1461415114101},{"_id":"themes/next/source/vendors/velocity/velocity.ui.min.js","hash":"dde584994ac13dc601836e86f4cf490e418d9723","modified":1461415114102},{"_id":"themes/next/source/vendors/jquery/index.js","hash":"17a740d68a1c330876c198b6a4d9319f379f3af2","modified":1461415114092},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"97ebc482d27981f2f435f246148a98969a86fea1","modified":1461829423111},{"_id":"themes/next/.git/objects/pack/pack-bb3d6db899c058e0269babbce12a88890c777be6.idx","hash":"6983eb0ddae7aa98a2f9d7b1c7056d7daa59e5a4","modified":1461829422768},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1461829423108},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"ae5b8597603d4e42ee66ed121544e7b1c644767e","modified":1461415114003},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"24105e62d7f26946907fa14cd02589f899bf8122","modified":1461415114004},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"096e7a6958b3bcacaa94361266832871ccb989c0","modified":1461415114004},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"1b6af02fd0ba3f729675cd95429a0cea4aebf358","modified":1461415114005},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"61347b9cf5c42a02f28cda4b6d920d6d17099d44","modified":1461415114005},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"8a399df90dadba5ad4e781445b58f4765aeb701e","modified":1461415114005},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"c1186e609d4810ebfb3e675e9045b023a557d1db","modified":1461415114006},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"2338be12ffee58bc08197cb9da8aaf31737aaf5c","modified":1461415114007},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ad69cbf94eedacc27e756cdb9c7073416db697d0","modified":1461415114016},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"22828f5141c0cecb9ef25a110e194cdfa3a36423","modified":1461415114016},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"ff4489cd582f518bba6909a301ac1292a38b4e96","modified":1461415114016},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"b7d5cc29586ac796a50d90974ad99d24a5982137","modified":1461415114017},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"88559b13ce94311405b170a0506ded91273beceb","modified":1461415114023},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"6eb4bcc3056bd279d000607e8b4dad50d368ca69","modified":1461415114032},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"5a35aa0381b0e1d465b952a997194441020446ea","modified":1461415114038},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"302fca2d38d0175f5b5c7c42bc80b5a87404a50d","modified":1461415114038},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"3f40e8a9fe8e7bd5cfc4cf4cbbbcb9539462e973","modified":1461415114039},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"c9218b48c56e52c06af9ce3cc8fbdae737cf16fe","modified":1461415114039},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"d110befc142dbb881c4fdcb94df65ed2f603f1c1","modified":1461415114039},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"12662536c7a07fff548abe94171f34b768dd610f","modified":1461415114037},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"124b540f059fd1ed13514362007cfc70355278c6","modified":1461415114046},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"748dbfbf9c08e719ddc775958003c64b00d39dab","modified":1461415114046},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"13af2fb21fabfc4df4b577ce5363e13d03daff71","modified":1461415114047},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1461415114047},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"f70fa81275eb4e0ea5e5a740b7a35539c6ffa9ba","modified":1461415114048},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"d0bfd1bef988c76f7d7dd72d88af6f0908a8b0db","modified":1461415114043},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"b1025c421406d2c24cc92a02ae28c1915b01e240","modified":1461415114043},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"25d5e45a355ee2093f3b8b8eeac125ebf3905026","modified":1461415114043},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"09c965022c13b84ed8a661fee8ac2a6d550495ae","modified":1461415114045},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"55b44e03054cd20ed8129bf986b15fba5fd85aad","modified":1461415114044},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"5187512cc4b2ce095230928c7046e0b26c3897bd","modified":1461415114045},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"26666c1f472bf5f3fb9bc62081cca22b4de15ccb","modified":1461415114044},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c9875c010bebd77b4f59d459a10455fceb0a66a1","modified":1461415114048},{"_id":"themes/next/source/css/_schemes/Pisces/_full-image.styl","hash":"de31e923bf5102498f06b1ae6bdf2ea22409f3e0","modified":1461415114049},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"2182a6da3434a6fd4d03ab1592c645d3d3c88500","modified":1461415114049},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"9887bd3894db5394c1e64e800afaae55f47e8dd0","modified":1461415114049},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"1f6e2ce674735269599acc6d77b3ea18d31967fc","modified":1461415114050},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"7e8da9aa4b0ef05f8100bdb6998b6db6e4d39639","modified":1461415114050},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"88a5e0e95f93e4adb196bff1aac17d6cfb03768a","modified":1461415114050},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"a9d064d600ee35acd66508167e1ac8c6cfdbdcd8","modified":1461415114062},{"_id":"themes/next/source/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1461415114066},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1461415114066},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1461415114066},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1461415114067},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1461415114067},{"_id":"themes/next/source/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1461415114068},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.css","hash":"82f33ad0842aa9c154d029e0dada2497d4eb1d57","modified":1461415114071},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.js","hash":"d71602cbca33b9ecdb7ab291b7f86a49530f3601","modified":1461415114072},{"_id":"themes/next/source/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"ae6318aeb62ad4ce7a7e9a4cdacd93ffb004f0fb","modified":1461415114073},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.js","hash":"1d6aeda0480d0e4cb6198edf7719d601d4ae2ccc","modified":1461415114075},{"_id":"themes/next/source/vendors/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1461415114076},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1461415114080},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.css","hash":"811432ad1e2d6c1f6da9a63fd919bf2a02b71dd9","modified":1461415114080},{"_id":"themes/next/source/vendors/font-awesome/css/font-awesome.min.css","hash":"4c2c5f5f6cc86d775a44b944661e038b7be98149","modified":1461415114082},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1461415114091},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"41ea797c68dbcff2f6fb3aba1d1043a22e7cc0f6","modified":1461415114096},{"_id":"themes/next/source/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"a817b6c158cbc5bab3582713de9fe18a18a80552","modified":1461415114097},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1461415114084},{"_id":"themes/next/source/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1461415114083},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1461415114090},{"_id":"themes/next/source/vendors/velocity/velocity.js","hash":"e63dc7cea055ca60a95d286f32349d88b10c5a4d","modified":1461415114099},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"97ebc482d27981f2f435f246148a98969a86fea1","modified":1461829423108},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"4c4ef6e997d0c6e21de39c2daa0c768e12c8c6fa","modified":1461415114017},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"53cde051e0337f4bf42fb8d6d7a79fa3fa6d4ef2","modified":1461415114018},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d63e0cacc53dd375fcc113465a4328c59ff5f2c1","modified":1461415114018},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"852fd77500bda2c1a6651a14aa48d7d6222adc9d","modified":1461415114019},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"0656e753f182c9f47fef7304c847b7587a85ef0d","modified":1461415114020},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"1727702eac5d326b5c81a667944a245016668231","modified":1461415114020},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"4f7dfc2826a95a0d571976d9084b7e7175d99b0f","modified":1461415114021},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"12e366f04497e3f44388fd40111a03e02f7c26af","modified":1461415114021},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"104b5c79cd891506e0beaf938b083685f1da8637","modified":1461415114022},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"7fb593f90d74a99c21840679933b9ef6fdc16a61","modified":1461415114022},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"b8f9c95702e87fd0b170ab586c82c9718a245f8a","modified":1461415114022},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"4e3838d7ac81d9ad133960f0f7ed58a44a015285","modified":1461415114023},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"a45f5fce643eec4e1b927165229d560364bcace1","modified":1461415114024},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"4866fb9453d7d4c83a1c4e55d74e4afed336eb8b","modified":1461415114025},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"a200c0a1c5a895ac9dc41e0641a5dfcd766be99b","modified":1461415114024},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"cd9e214e502697f2f2db84eb721bac57a49b0fce","modified":1461415114025},{"_id":"themes/next/source/css/_common/components/post/post-more-link.styl","hash":"2bc3e33fdfbcf348c96ca60598f629dcd7ba3617","modified":1461415114026},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"ca20affaeaf33c0904cb6356864fc6b78e95f447","modified":1461415114026},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"929fac3a505bacbce6ba63009fd15851e2a8669d","modified":1461415114027},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"5a982d8ef3b3623ea5f59e63728990f5623c1b57","modified":1461415114027},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"758d64ad65f718537ab5bfe5592a626abc40987e","modified":1461415114028},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"01567edaea6978628aa5521a122a85434c418bfd","modified":1461415114028},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"a1e83e7cd686239d75caa12b7e74d69f3e1d2d90","modified":1461415114028},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"7f2bdd6109614d35408ee5ac3335aad4464c69c7","modified":1461415114029},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"70407054dbb5180c69e50ea2655d32835494394e","modified":1461415114029},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"821991c0890966a512b43e8b1cf9537e738a09a0","modified":1461415114030},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"61f8cea3c01acd600e90e1bc2a07def405503748","modified":1461415114030},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"1153bb71edf253765145559674390e16dd67c633","modified":1461415114030},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"394888efec32749b353292a59ec7f1b609d6325e","modified":1461415114031},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"06b9a99d63b4d57fdbf70b88ab7036fbc47e3f52","modified":1461415114031},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"702be9e57dd6ff5fa99642a1f6e3df26215b8805","modified":1461415114032},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"99c4b7d1459569cda394c733845d368008a180bf","modified":1461415114032},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"dd941824210733588841897457e0cc9697ca5608","modified":1461415114033},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"2fe76476432b31993338cb45cdb3b29a518b6379","modified":1461415114033},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"2ad1a2a9bbf6742d1b0762c4c623b68113d1e0fe","modified":1461415114034},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"a83f493e494f5c73fab8f6f5b686ef1670490095","modified":1461415114034},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"5dbeed535d63a50265d96b396a5440f9bb31e4ba","modified":1461415114035},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"7f7e9df15148608a9c29326dd880d8e8e8efc0ec","modified":1461415114035},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"717cc7f82be9cc151e23a7678601ff2fd3a7fa1d","modified":1461415114036},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"15975ba7456b96916b1dbac448a1a0d2c38b8f3d","modified":1461415114036},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"dcb4548d07cbb38b645b1753cf3ee7157e16921a","modified":1461415114036},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"7bd182d918f3117335a5ee87a1b544e6d2b54d7d","modified":1461415114037},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"a07aa12cc36ac5c819670c2a3c17d07ed7a08986","modified":1461415114046},{"_id":"themes/next/source/images/xiaozaizi.png","hash":"9814cf109fe3256cc0b49d9a259e89bd18314509","modified":1460302102439},{"_id":"themes/next/source/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1461415114068},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"6394c48092085788a8c0ef72670b0652006231a1","modified":1461415114069},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"ee948b4489aedeb548a77c9e45d8c7c5732fd62d","modified":1461415114069},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"51139a4c79573d372a347ef01a493222a1eaf10a","modified":1461415114070},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"b88b589f5f1aa1b3d87cc7eef34c281ff749b1ae","modified":1461415114070},{"_id":"themes/next/source/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"d22b1629cb23a6181bebb70d0cf653ffe4b835c8","modified":1461415114071},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1461415114089},{"_id":"themes/next/source/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"f346b8b3df147e4059e1a7d66c52c9a6e1cec3e8","modified":1461415114088},{"_id":"themes/next/.git/objects/pack/pack-bb3d6db899c058e0269babbce12a88890c777be6.pack","hash":"bb77bbf71496a762e46972b6e859cdb93ca5f1f0","modified":1461829422869},{"_id":"public/baidusitemap.xml","hash":"09fb8d714dd10c13ddfe4407676d86e885202b31","modified":1463577330848},{"_id":"public/atom.xml","hash":"a7ff462294eb92dbc4e64d58270325b2e34c80d8","modified":1463577331380},{"_id":"public/sitemap.xml","hash":"88dbc6a9ce63973be6aca6dda2027fd965580614","modified":1463577331384},{"_id":"public/a-pic-a-movie/index.html","hash":"47f9fcf1fbcefa47b734deae112eb2be5c9ff658","modified":1463457598270},{"_id":"public/sth/index.html","hash":"ce171f78b836eb2ccba4f9245769c4a378e0ed29","modified":1463554185879},{"_id":"public/me/index.html","hash":"684e13cd08357c6e9e1c1aeb2f10c23c00c87565","modified":1463411206563},{"_id":"public/archives/2013/06/index.html","hash":"2c260702267afdb5d6790e3ae6717eee67c89d1b","modified":1463411206577},{"_id":"public/archives/2013/09/index.html","hash":"3a972a18fc4292c31ea58e01f1962a4fdc005662","modified":1463411206563},{"_id":"public/archives/2013/11/index.html","hash":"3a7ee9456e299a56292afe5aea1427cc76385ca3","modified":1463411206577},{"_id":"public/archives/2013/12/index.html","hash":"ea97c2d07453343a4742ce59fe537b94759c98b4","modified":1463411206563},{"_id":"public/archives/2014/page/2/index.html","hash":"24075233d0f8964945c8b41c84f157ec24efeed0","modified":1463411206578},{"_id":"public/archives/2014/01/index.html","hash":"569879676da1fced513bfa0f559e98a87277497f","modified":1463411206578},{"_id":"public/archives/2014/02/index.html","hash":"8656c2e0fd6b729999e2d6f4f89f01a3faabe4ca","modified":1463411206563},{"_id":"public/archives/2014/03/index.html","hash":"7592886b2a24c674768ccea5784f8ac52a0d8607","modified":1463411206563},{"_id":"public/archives/2014/10/index.html","hash":"482d318bb07e9562104d423440b0ee6eb0d08b91","modified":1463411206563},{"_id":"public/archives/2014/11/index.html","hash":"e51fc2850c3335e8ccbe3a412e6a80cf38e5aaf6","modified":1463411206563},{"_id":"public/archives/2014/12/index.html","hash":"e5a6aaa6506b27ba3bc1447c405fe674b42a2613","modified":1463411206563},{"_id":"public/archives/2015/01/index.html","hash":"5e1f80e1984b367cf42e39ecd03954b7db88e89c","modified":1463411206563},{"_id":"public/archives/2015/02/index.html","hash":"9de9af1aed4129bf68eb1a5c60445a0d043a719a","modified":1463411206563},{"_id":"public/archives/2015/03/index.html","hash":"94cbfac1789b60dba9d09b55d6889b6e2c9ee9c7","modified":1463411206563},{"_id":"public/archives/2015/04/index.html","hash":"03a0a6af6f020dbf8994a2c5857b3f2e84f05995","modified":1463411206563},{"_id":"public/archives/2015/06/index.html","hash":"6aece54f3325f47c1434f9d7a8b129f89932bef0","modified":1463411206564},{"_id":"public/archives/2015/12/index.html","hash":"64048975ba9e61618ecd58815c38e250ffbe06b6","modified":1463411206564},{"_id":"public/archives/2016/page/2/index.html","hash":"9db7a3593939e430cb65db87cac33c618d08b6ad","modified":1463411206564},{"_id":"public/archives/2016/01/index.html","hash":"25dd53d511e112820adf1e97736654cc256c58e0","modified":1463411206578},{"_id":"public/archives/2016/03/index.html","hash":"eb8294d25c1826e4963aa98ce1c5e9055cac7f0c","modified":1463411206564},{"_id":"public/archives/2016/05/index.html","hash":"723d5f0cdba648569abf531b5c03553e90860e90","modified":1463537041838},{"_id":"public/categories/软件测评/index.html","hash":"72c13d6957934c6fc0e00c11e6343844a16f0d7e","modified":1463411206579},{"_id":"public/categories/什么都学一下/代码狗/index.html","hash":"726034c946a3190fd28ac67022d7e656487c0323","modified":1463411206564},{"_id":"public/categories/软件测评/软文/index.html","hash":"78f7823b23c7e29da33e6c9a19e7ad07bfa39dd0","modified":1463411206579},{"_id":"public/categories/什么都学一下/代码狗/学习log/index.html","hash":"6f009c570697af53be3e5e28fc28cfce4d977315","modified":1463411206564},{"_id":"public/tags/年度总结/index.html","hash":"5f3b9320bbf896f4520fd9593696fe417cc58510","modified":1463411206564},{"_id":"public/tags/gms/index.html","hash":"f912b7a00ecf9cc1ccc0126e96806b968fc862ab","modified":1463411206564},{"_id":"public/tags/mark/index.html","hash":"817eccce9c4efcbe35f9a15b4cce7464e6f79525","modified":1463411206580},{"_id":"public/tags/马克/index.html","hash":"0c4b157dde1a254d354a44eb0b3103cf586e2574","modified":1463411206580},{"_id":"public/tags/hadoop/index.html","hash":"ab473562e5e747fe6a253eddc79f46533a02198d","modified":1463411206564},{"_id":"public/tags/hello/index.html","hash":"9f133c4248277146efb60183ddc860db72136cc1","modified":1463411206564},{"_id":"public/tags/mysql/index.html","hash":"86fef7e974af12600daa6e0c4e6cb4e6d04aa289","modified":1463411206564},{"_id":"public/tags/mfc/index.html","hash":"37582b6a08e81b7f1fcb40c0271c386795b508de","modified":1463411206564},{"_id":"public/tags/控制台/index.html","hash":"71cb545cdce63d1807c61669f211ea4613923c99","modified":1463411206564},{"_id":"public/tags/jena/index.html","hash":"d74c860a45c6f63fa0dda64e2871e4da148636a5","modified":1463411206564},{"_id":"public/tags/本体/index.html","hash":"6798f20a27620fd1b4eb9f77ccc49492fe4c535d","modified":1463411206564},{"_id":"public/tags/语义网/index.html","hash":"c8b9ab6f904dc9cd190cccd9d07391e9e241f4b0","modified":1463411206564},{"_id":"public/tags/sublimetext/index.html","hash":"d14f5a1fc8a30b96db78059d23074f8e49443ef8","modified":1463411206564},{"_id":"public/tags/ontology/index.html","hash":"c8a01b1560e089f6de29fcfde09685839ba8eb85","modified":1463411206565},{"_id":"public/tags/本体论/index.html","hash":"d1dd618481d4b99b6ed4b00abac4a0ed0641c01c","modified":1463411206565},{"_id":"public/tags/机器学习/index.html","hash":"abf66f6ed14164eb88ef1d6e76f87d8ab6e5192d","modified":1463411206565},{"_id":"public/tags/bae/index.html","hash":"a2a5ad7c718bf6ceab98d8068a07f6e3998e9f8e","modified":1463411206565},{"_id":"public/tags/点云/index.html","hash":"f6e46496285d1a2bb868cbe80c12b22e7313160a","modified":1463411206565},{"_id":"public/tags/cmake/index.html","hash":"ecbb2856c325e7cd8a8bcc1f083317242be80869","modified":1463411206565},{"_id":"public/tags/呵呵/index.html","hash":"7ce71436d22a467d2cb909491c92dd972c5fce51","modified":1463411206565},{"_id":"public/tags/test/index.html","hash":"84e0f1d6d25dc907f24070e5fc3185feb3026d8d","modified":1463411206565},{"_id":"public/tags/erdas/index.html","hash":"188f44d731e9412b1162e7f5e453aa7e4e81f720","modified":1463411206565},{"_id":"public/tags/梯子/index.html","hash":"30a36529da2dde756ef9cbc16c5c9df0aa8e568c","modified":1463411206565},{"_id":"public/tags/测评/index.html","hash":"fb4e090f891229a019f8af348ae3faee227eeb47","modified":1463411206565},{"_id":"public/tags/python/index.html","hash":"004cfb4d975894e02bc21a248bdde733f328651e","modified":1463411206565},{"_id":"public/tags/jQuery/index.html","hash":"8fcd9d7aaf5bfb5dcf1dedfa8701211c33adc7f2","modified":1463411206565},{"_id":"public/tags/juddi/index.html","hash":"eea8bc1422f1b07d76df14ebe7bc4088c9e0f33f","modified":1463411206565},{"_id":"public/tags/opencv/index.html","hash":"206399896f5c4ad7b6372b84af43d04567039b09","modified":1463411206565},{"_id":"public/tags/计算机视觉/index.html","hash":"a590159000d79ad2217969d052e4a7c6cc2f0235","modified":1463411206566},{"_id":"public/tags/考研/index.html","hash":"bf804bf8f76ad5e8180521add4c54a3201025260","modified":1463411206580},{"_id":"public/tags/我失恋了/index.html","hash":"31151cf514c2169f8d9299762e67c54f9f9ffb86","modified":1463411206568},{"_id":"public/tags/无线传输/index.html","hash":"931f4eb002bcc39cc3bafe3f637e52b75f8b0285","modified":1463411206568},{"_id":"public/tags/游记/index.html","hash":"38b7301ba50fb7b89df921b78cb9e953e398d62a","modified":1463411206568},{"_id":"public/tags/航空摄影测量/index.html","hash":"8e4389b03b7eb52e36befcb14356982ca2f0abaf","modified":1463411206568},{"_id":"public/tags/c/index.html","hash":"7b40abe12239068d5cb885209001618e75d6ff65","modified":1463411206568},{"_id":"public/tags/热点/index.html","hash":"a7457568148d6622de09152507f274f2c53c161f","modified":1463411206568},{"_id":"public/tags/电影/index.html","hash":"f632280ee3fb9bbd9c92053effc98e268fa92677","modified":1463411206568},{"_id":"public/tags/装机/index.html","hash":"fdd432ca3eaf4bb317c93a4df4e094f69d0a2f1a","modified":1463411206568},{"_id":"public/tags/BitManipulattion/index.html","hash":"477694ab44da64171d6630a654f49bda53b66f8f","modified":1463411206568},{"_id":"public/tags/寂寞寂寞就好/index.html","hash":"a39ed1cf475cbef96a57986412930d23ce3f39ba","modified":1463411206568},{"_id":"public/tags/后方交会/index.html","hash":"dc75e136f1ecb9539d985080088593508bdf20a9","modified":1463411206580},{"_id":"public/tags/精度/index.html","hash":"a2459192d0656ec092b1db574f20bf507d010147","modified":1463411206568},{"_id":"public/tags/recommend/index.html","hash":"1f257077f9040ad2bdf612796d9be1f075761306","modified":1463411206568},{"_id":"public/tags/足球/index.html","hash":"6285e3cd26316263527427f8cc46f0f9e4f67bc0","modified":1463411206568},{"_id":"public/tags/dbscan/index.html","hash":"cd619c8aace4860c16a9b20b238db29597e22d43","modified":1463411206568},{"_id":"public/tags/demo/index.html","hash":"495b09897d70f152ff029e33b1ebcab0c3bf3983","modified":1463411206568},{"_id":"public/tags/ICP/index.html","hash":"cfb1295b54c77d0601932e9d8f8c2cd29888973f","modified":1463411206568},{"_id":"public/tags/MMC/index.html","hash":"288707cfec44077d6c2cf21e3be1b193bf2ac01c","modified":1463411206569},{"_id":"public/tags/MME/index.html","hash":"f6b96f4935b586396beb34e3601e81444651e524","modified":1463411206569},{"_id":"public/tags/SPark/index.html","hash":"0a5664bb905e6167ddec8e4efee522299fb162dd","modified":1463411206569},{"_id":"public/tags/算法/index.html","hash":"d04a6c2a74d51c80f3d3f06f5e83d44b3c803dc5","modified":1463411206569},{"_id":"public/tags/音乐/index.html","hash":"90e3af582262c961bb144314991782625f8464fd","modified":1463411206569},{"_id":"public/tags/code/index.html","hash":"e9903c987b9a107c6351d556f5ef89cf9cebdbc2","modified":1463537041839},{"_id":"public/tags/翔/index.html","hash":"6962f63663a6583162d29b1d16d8504d0ec4fe97","modified":1463411206569},{"_id":"public/tags/呵呵哒/index.html","hash":"e7e542385193ba40e96f5dc9e9d83356e1b715f2","modified":1463411206569},{"_id":"public/tags/静态ip/index.html","hash":"04041b25c252582a684c85c145ed6b8d1eb30bc7","modified":1463411206569},{"_id":"public/tags/index.html","hash":"8b5b9dc3aa8f4c40c9492c8b488c4146f152fdd9","modified":1463411206569},{"_id":"public/2016/05/12/位运算各种/index.html","hash":"85614a20aa5f2b0074e24c72fb3671fe152c756a","modified":1463577331451},{"_id":"public/2016/05/10/jQuery的两个坑/index.html","hash":"00054355fb09956d2260cab14098da37d8544f0e","modified":1463537041839},{"_id":"public/2016/05/03/树系列码集合-持更/index.html","hash":"cf89c1b5111581499c59f7a72680513a7ea588ff","modified":1463538433804},{"_id":"public/2016/04/28/svm初探/index.html","hash":"3855edd11b0433ba99522f7dfdfee1ae13e3ca39","modified":1463537041839},{"_id":"public/2016/04/27/hexo多客户端写作/index.html","hash":"4c77e9c0e1523a91ff952ab6a1259e753b318435","modified":1463411206569},{"_id":"public/2016/04/27/effective java 笔记--创建对象的几个tips/index.html","hash":"93440572effc9436c5373b56052071612cfdf2d0","modified":1463411206569},{"_id":"public/2016/04/22/effective java--builer构造器/index.html","hash":"c3e384d8872d41bd30104177640b678e735b9964","modified":1463411206569},{"_id":"public/2016/04/22/what-the-hell-of-sdf/index.html","hash":"39d6c54f5a181075b2a0cf23baf012f874b6d55c","modified":1463411206570},{"_id":"public/2016/04/13/effective java--静态工厂/index.html","hash":"26ae37737f324a036bfee2baad613a06161428ae","modified":1463412097193},{"_id":"public/2016/04/10/Hello-Hexo/index.html","hash":"b877f9ed5d52e058cd0cdbcd01c3409ecd44c300","modified":1463411206570},{"_id":"public/2016/04/01/记静态ip的坑/index.html","hash":"5b9d96d3a262b997dfcbcc70f8d0a431b444d5aa","modified":1463411206570},{"_id":"public/2016/03/08/最近demo 模块 算法总结/index.html","hash":"7af7407f602abbe938ecccc63f47b9e6aa9dc626","modified":1463411206570},{"_id":"public/2016/01/25/opencv-findhomography-findfundanmentalmat/index.html","hash":"c2ea5f5619fc9d108a4057ebce2e40a4c0a16941","modified":1463411206570},{"_id":"public/2016/01/18/社交app的2015/index.html","hash":"fa4a14e624295fcf91b9ba57e170ae6cf020062c","modified":1463411206570},{"_id":"public/2016/01/01/Android为毛耗电[2]/index.html","hash":"c271a625c77ae9509cc27dbec77b5bbd2ded106f","modified":1463411206570},{"_id":"public/2016/01/04/[汇总][2015.1.3]电脑端与Android iOS传输文件/index.html","hash":"4a26140b3732240b03a8cafc562bd24f4f629499","modified":1463411206570},{"_id":"public/2015/12/28/Android为毛耗电[1]/index.html","hash":"a7c58eaf02c40d863a9bd3262943f3f4c4828778","modified":1463411206570},{"_id":"public/2015/11/18/后方交会检校(8)--光束法区域平差 bundle block adjustment/index.html","hash":"037ad1c48d1a6cb73c7a4dc1b24b7a4520bca294","modified":1463411206570},{"_id":"public/2015/11/09/后方交会检校(7)--后方检校精度的检验/index.html","hash":"f55378c2f90db78363e3f3bcbecaa2b23ad950d3","modified":1463411206570},{"_id":"public/2015/11/08/2015.11.08安装google 框架 service 一系列/index.html","hash":"ba24b575be585cd9fce00e78a5ae69c98f41f194","modified":1463411206570},{"_id":"public/2015/11/04/uac-involved/index.html","hash":"ab600833482961e2a2c9860a60ba6ea955d3fe0a","modified":1463411206570},{"_id":"public/2015/11/04/后方交会检校(6)--后方交会的补充及DLT和角锥体法/index.html","hash":"6d2629c68885c3a5edf721b5525f57edfee3e439","modified":1463411206570},{"_id":"public/2015/11/04/后方交会检校(5)--多片后方交会 相对绝对定向/index.html","hash":"8703e9f3fd7c032372f274bac0384fecbd3d75bc","modified":1463411206570},{"_id":"public/2015/10/28/后方交会检校(4)--畸变差矫正/index.html","hash":"00d526916040d523bdb5954e55d59e99530bed4b","modified":1463411206571},{"_id":"public/2015/10/28/后方交会检校(3)--角度、坐标及其应用/index.html","hash":"589f75ab3111342f2f6b781911f5b6720ccc7371","modified":1463411206571},{"_id":"public/2015/10/12/后方交会检校(2)--误差方程及各项系数解求及精度/index.html","hash":"5140dddccdf4dae74ef7e9a4ec9f36f4e904d255","modified":1463411206571},{"_id":"public/2015/10/10/后方交会检校(1)--前景 共线方程及其线性化/index.html","hash":"f592cb36b812cac6f65c60f290e0ad1e494af833","modified":1463411206571},{"_id":"public/2015/10/09/红包在哪里/index.html","hash":"ded14b1859d1feb8cd02ea317d9a65e9203d9760","modified":1463411206571},{"_id":"public/2015/06/21/一个装机清单/index.html","hash":"05249ed057a39e1565f259ec288b13ef0787f83a","modified":1463411206571},{"_id":"public/2015/05/30/最近听的音乐/index.html","hash":"f40b89c567329d05785e8d9efa34d99fc5dd53ae","modified":1463411206571},{"_id":"public/2015/05/12/sift-with-python/index.html","hash":"9c9dee87f6f5bf5b1334f6237bd1bf28d992b918","modified":1463411206571},{"_id":"public/2015/05/12/harris-python-to-exe/index.html","hash":"2d8baa4b5e58f2a9bae5823800661f65f55eb667","modified":1463411206571},{"_id":"public/2015/05/07/MFC中添加控制台调试/index.html","hash":"fda3aff0c23b036e692bbc94cd25ad1d9a9748e0","modified":1463411206571},{"_id":"public/2015/05/05/[机器学习课程小结][110]/index.html","hash":"08476e5130968069384184da3c2b820ef5166b42","modified":1463411206571},{"_id":"public/2015/04/21/cmakeqt5-0-with-opengl-e7-bc-96-e8-af-91cloudcompare/index.html","hash":"8012ce74625c393a41dfda1c60af5d63417cc961","modified":1463411206571},{"_id":"public/2015/03/03/【电影】【2015】 〇二次点评/index.html","hash":"fa31191e583cc4fedd68f68668565bccd336aa24","modified":1463411206571},{"_id":"public/2015/02/01/【电影】【2015】〇一次点评/index.html","hash":"998493af180b86f7e5f18b27d85696edfa51a199","modified":1463411206571},{"_id":"public/2015/01/29/2014生活生命、/index.html","hash":"c8bd3e66747eac32635fafb93a21cdc3868c1aeb","modified":1463411206571},{"_id":"public/2014/12/15/SublimeText添加中文编码/index.html","hash":"d8ace1c9d4aff49fb382c499094d16c8b24df411","modified":1463411206571},{"_id":"public/2014/12/12/Hadoop2.2.0 Mapreduce Log日志分析小例/index.html","hash":"dbcf9ae9d17a956b45628dafca6ce06bcbbf777f","modified":1463411206571},{"_id":"public/2014/12/06/Android adt zip包下载/index.html","hash":"4d66dc35acf3bf263895dc3bb8cafd122d96047c","modified":1463411206572},{"_id":"public/2014/11/12/hadoop2.2+wordcount/index.html","hash":"4a3ebaeb4bf0ff7401e4b2c2b8c86ee29b53024c","modified":1463411206572},{"_id":"public/2014/10/12/erdas9.2+lps安装/index.html","hash":"842639c19f1fa3636260acf43f3548567e0f809e","modified":1463411206572},{"_id":"public/2014/05/25/要有追求啊/index.html","hash":"9a8026167ec18dfcb26493f7500a60aedac8bcc3","modified":1463411206572},{"_id":"public/2014/05/15/猜地址游戏/index.html","hash":"f737941d64bc78df232db8fc6fa74de3dc924c9b","modified":1463411206572},{"_id":"public/2014/05/09/trans-between-pc-and-phone/index.html","hash":"76ab7e24652d53d3ce72f4ffb04c5319b1661ade","modified":1463411206572},{"_id":"public/2014/05/08/goagent-chrome/index.html","hash":"2d85ffc1668006d0d083e1729c42e78e696b0946","modified":1463411206572},{"_id":"public/2014/05/05/travel-to-jiangnan-10-days/index.html","hash":"1a1739d7537adfda070be09b6f88fec41cff0b90","modified":1463411206572},{"_id":"public/2014/03/15/逼格不能随便装/index.html","hash":"25de0fbf07076ddad16f091c096ca9ff2baa258c","modified":1463411206572},{"_id":"public/2014/02/10/瀚海箴言- -/index.html","hash":"3ca20923c7e6b6aafacd91e883edfda04951c6a5","modified":1463411206572},{"_id":"public/2014/01/20/知乎与果壳/index.html","hash":"ddcae91fbcfde0ac4304114d86207bd1ab895fb2","modified":1463411206572},{"_id":"public/2014/01/18/新浪微博的衰败 (2)/index.html","hash":"c5ddf548c851edd03df4dc5ac4137555b36d1d20","modified":1463411206572},{"_id":"public/2014/01/18/新浪微博的衰败/index.html","hash":"74fa730d9476f72d568904c864976ac5bc5e614a","modified":1463411206573},{"_id":"public/2014/01/03/考研政治预测/index.html","hash":"fba062cc394c2d19b83820e0ff9be82ac8b66835","modified":1463411206573},{"_id":"public/2014/01/03/考研目标。。。/index.html","hash":"f7316bddbcda5a9bc7b4e0fc41f844cd42035e28","modified":1463411206573},{"_id":"public/2013/12/31/2013年度总结，，玩不动/index.html","hash":"5ec577af54eb35269db27dde16ea78c069e9dc8b","modified":1463411206573},{"_id":"public/2013/12/17/不予置评。/index.html","hash":"c19e832d2039f0f07e15f4f2002e2001d1804ce9","modified":1463411206573},{"_id":"public/2013/11/29/the-miss-next-life/index.html","hash":"3ef0dbaf4454736b09f837934540138df662c27d","modified":1463411206574},{"_id":"public/2013/11/29/poy/index.html","hash":"7b80931629538ecf9181db40fb6a5e7e2a6dc8de","modified":1463411206574},{"_id":"public/2013/11/23/so-be-better-man/index.html","hash":"9249d3f401affa1b5a76a1635a841cb40d74b970","modified":1463411206574},{"_id":"public/2013/11/08/targets-by-07-2014/index.html","hash":"2f4069d8bd47d2f157d4c3c4235abc248fc75dba","modified":1463411206574},{"_id":"public/2013/11/08/easy-come-easy-go/index.html","hash":"db3147135dbf46e33dd54a7dc4ad01549c51183b","modified":1463411206574},{"_id":"public/2013/09/12/defy miui3.9.6升级记录/index.html","hash":"71f4a68eb9571c59882840ab933585ad16c812ec","modified":1463411206575},{"_id":"public/2013/08/29/xiaomi-360-story/index.html","hash":"e89648caa54aa7024ee62c84ed98738fda380e3f","modified":1463411206575},{"_id":"public/2013/08/12/update-efficient/index.html","hash":"956b8655e5922fdc15d28abe0c3289d8ef2f5eaa","modified":1463411206575},{"_id":"public/2013/08/11/top-10-reasons-to-root-your-android-phone/index.html","hash":"9ffaa04cb348b7ba37399c5d08ad6a1f6d8b2eeb","modified":1463411206575},{"_id":"public/2013/08/10/考研视频马克/index.html","hash":"745e2115fe1a7f16fe8c53780276556fdb3b2c19","modified":1463411206575},{"_id":"public/2013/08/06/睡不着啊睡不着/index.html","hash":"9a523208f11b903b35a5aa836566fd7c98f87867","modified":1463411206575},{"_id":"public/2013/07/31/time-to-fight/index.html","hash":"90984a6c944ab55b1c20d48d75830ab3ea7ffeb6","modified":1463411206575},{"_id":"public/2013/07/24/owl jena owls ontology资料集合/index.html","hash":"5831613672179b8a41490736df01dba82eed17ce","modified":1463411206575},{"_id":"public/2013/07/21/OWL的语义语法及Jena初步/index.html","hash":"b6c795578bcccdca4c062d444f040d4e06f00310","modified":1463411206575},{"_id":"public/2013/07/20/大巴黎 摩纳哥/index.html","hash":"743b8f69a1c961fad03e5a8a0fd9d5ec2a08c31e","modified":1463411206575},{"_id":"public/2013/07/18/小目标/index.html","hash":"1eb4ee8050bb738bf309288d9fd03dcddb5c72e1","modified":1463411206575},{"_id":"public/2013/07/18/格言/index.html","hash":"cc67468f184abcfea6f92195968531c3df92b10a","modified":1463411206575},{"_id":"public/2013/07/18/你他妈的在逗我？——为什么小时代是烂片/index.html","hash":"3e00785a458e5fdcfccca0c205474799ee3f28c6","modified":1463411206575},{"_id":"public/2013/07/15/Ontology本体的基础概念/index.html","hash":"9cf058aff927e3207a5b7e8b2d7a00f5907e2461","modified":1463411206575},{"_id":"public/2013/07/12/本体的介绍/index.html","hash":"41b7246910ed913703b2f399a05fc338b707e8eb","modified":1463411206575},{"_id":"public/2013/07/11/主题更新伤不起/index.html","hash":"7f138f3308e328fdd32ae32d2b6b382732e507e3","modified":1463411206575},{"_id":"public/2013/06/11/AsyncTask 很好/index.html","hash":"54879dfa63b1922bcf3c53ea1bf0b7e7e634388a","modified":1463411206575},{"_id":"public/2013/06/11/listactivity-84onlistitemclick-nowork/index.html","hash":"73c07c4430d2711b5b7de7607ee85ae93761e45e","modified":1463411206575},{"_id":"public/2013/06/09/国内主要科技博客类型表/index.html","hash":"ef642a89ab4701f240790513b6f07967bff933db","modified":1463411206575},{"_id":"public/2013/06/02/android-listview-push-update/index.html","hash":"6374f0f11f989379b2a2798ab7f1876ed339a82b","modified":1463411206576},{"_id":"public/2013/05/26/android-listview-initpics-and-update/index.html","hash":"ab946401f6f40754e80cec2a4caa52c72e4cf789","modified":1463411206576},{"_id":"public/2013/05/25/Conversion to Dalvik format failed with error 1解决方法/index.html","hash":"af61c40b0b577f429ea6f8c94a4ef322e85839f1","modified":1463411206576},{"_id":"public/2013/05/24/最近的一些推荐拉/index.html","hash":"6747101b509f7df823840b747f9a6e335aa200d4","modified":1463411206576},{"_id":"public/2013/05/21/HttpURLConnection HttpClient commit pics/index.html","hash":"8c65decf55d777ea374f00ee3379333d017274f1","modified":1463411206576},{"_id":"public/2013/05/20/Android 丢lib/index.html","hash":"56804520456b77df3014a79b1547b9434f3e7dba","modified":1463411206576},{"_id":"public/2013/05/18/avd调试加速解决方案/index.html","hash":"271c63a7f9cd7ca153167221c889f8448b51e1cd","modified":1463411206576},{"_id":"public/2013/05/17/Android常用控件及其使用方法/index.html","hash":"322af7e8e761eef3d528523f1094d7f8cd2e691e","modified":1463411206576},{"_id":"public/2013/05/17/gson-json-java/index.html","hash":"918c5fb5c7cf7339f1b37804e5f2aeaec0f84220","modified":1463411206576},{"_id":"public/2013/05/17/win8笔记本热点创建/index.html","hash":"79e6011d43ca73f6e74b6f072ab97b63a1bc6018","modified":1463411206576},{"_id":"public/2013/05/16/Java和mySql间date数据的注意/index.html","hash":"d706ebb5156594e4ec678f06ace1dc5a78686caa","modified":1463411206576},{"_id":"public/2013/05/14/内地研究生的所为科研和自我养成/index.html","hash":"1658fbf2c0433e3670addd8772bde088fba5866a","modified":1463411206576},{"_id":"public/2013/05/10/微博咋还没挂/index.html","hash":"ee35ef7d4c7e69333d123ac5403eb2b0940e9f59","modified":1463411206576},{"_id":"public/2013/05/09/wuha/index.html","hash":"41fc5dd16dc4a272aa83959fa6564dd554d6e709","modified":1463411206576},{"_id":"public/2013/05/08/求解释..布吉岛/index.html","hash":"252c4dd43e770e6c3f5eddbfec846e425a27e636","modified":1463411206576},{"_id":"public/2013/05/08/bae-java/index.html","hash":"f6c7374cfa4bc1620ce2d5f19f0f4fe321e98514","modified":1463411206576},{"_id":"public/2013/05/08/今日吐槽/index.html","hash":"96de6293991c2293e361b1f05c4a4e92a6a1d33f","modified":1463411206576},{"_id":"public/2013/05/07/刷屏测试。。/index.html","hash":"9818e5f3be6660997046179ca85fdf1555db9e55","modified":1463411206576},{"_id":"public/2013/05/07/GitHub上最受欢迎的Android开源项目TOP20/index.html","hash":"37078420ee464b66aa64df83ae9904fc8c59e61d","modified":1463411206576},{"_id":"public/2013/05/07/坑爹呢摔/index.html","hash":"4e191d7038246d7bfbb27c0faa835046da47dbe3","modified":1463411206576},{"_id":"public/2013/05/06/测试flicker/index.html","hash":"39ecda2821dfa8fc18f538ef6d179af469571271","modified":1463411206576},{"_id":"public/2013/05/06/真是心累/index.html","hash":"aa466c231fb2267991e3c94581fae8362be8007a","modified":1463411206576},{"_id":"public/2013/05/05/破处篇...好吧/index.html","hash":"2fb16d28f21a67ea0b61c6daf9333e8fd734c6ab","modified":1463411206577},{"_id":"public/2013/05/05/hello-world-1/index.html","hash":"604cc36811435055273c6ade1a0e1c1de14ef5b8","modified":1463411206577},{"_id":"public/archives/index.html","hash":"0de32c56ca7ea69e9326eae73bd0912ea4d9128a","modified":1463537041839},{"_id":"public/archives/page/2/index.html","hash":"6061514cffa68e99a6b102725a759ccc62e2a32f","modified":1463411206577},{"_id":"public/archives/page/3/index.html","hash":"178c443b859ea6f740d0fe5db17e2dec35dcdacf","modified":1463411206577},{"_id":"public/archives/page/4/index.html","hash":"5abd02a82dfe98543d8905d9db696eed1af5f910","modified":1463411206577},{"_id":"public/archives/page/5/index.html","hash":"c0ec8b9e1873a6c39e5bf8beaa4e19c3c973c7eb","modified":1463411206577},{"_id":"public/archives/page/6/index.html","hash":"29fb3a1b85fc520f86218ee5d5999cdac634bced","modified":1463411206577},{"_id":"public/archives/page/7/index.html","hash":"285a6f59af39ea19b4d10267bd9c679969b2e2f2","modified":1463411206577},{"_id":"public/archives/page/8/index.html","hash":"cd08c4856be45d9473e73f74dbfd7f8de8b5b425","modified":1463411206577},{"_id":"public/archives/2013/index.html","hash":"edc26ccf0875b1f2adbfb992a4b504c2679bf373","modified":1463411206577},{"_id":"public/archives/2013/page/2/index.html","hash":"24bd24a86d0376c68c1b255fb912cc123fa89c70","modified":1463411206577},{"_id":"public/archives/2013/page/3/index.html","hash":"c855308297af50af9b62b5e33d02acce045dcec4","modified":1463411206577},{"_id":"public/archives/2013/page/4/index.html","hash":"fe1b67d4a94c92454a0f60ca92febd84866ea763","modified":1463411206577},{"_id":"public/archives/2013/05/index.html","hash":"a3395161648347c5838b4def9d64ec40b886bd0a","modified":1463411206577},{"_id":"public/archives/2013/05/page/2/index.html","hash":"b83c1eee0064c2cf6301b8e00fb1886a559c419e","modified":1463411206577},{"_id":"public/archives/2013/07/index.html","hash":"3a022220367f510593dc14dd6e98a3495b91b3a8","modified":1463411206577},{"_id":"public/archives/2013/08/index.html","hash":"7860c1739a32b7f75f2941aab70eedc597e2cee0","modified":1463411206577},{"_id":"public/archives/2014/index.html","hash":"a151dea0ffaa3729a6c76765baf3cadbc4f4d4c1","modified":1463411206577},{"_id":"public/archives/2014/05/index.html","hash":"e07277100f9ef204e41017d9a02673526ac281ea","modified":1463411206578},{"_id":"public/archives/2015/index.html","hash":"801d125e6b4d7962af1a30cedf11aeb769d661be","modified":1463411206578},{"_id":"public/archives/2015/page/2/index.html","hash":"c18296713aaf8a80f3d72ff655e6fcb9786fb7dc","modified":1463411206578},{"_id":"public/archives/2015/05/index.html","hash":"835cac525dd2e9c7de82a8dd29d6f8b62ae0b063","modified":1463411206578},{"_id":"public/archives/2015/11/index.html","hash":"61197ea0886db98c04704e7a91c4dec01e5e12e4","modified":1463411206578},{"_id":"public/archives/2015/10/index.html","hash":"03795a4d69650101b84ff07125b5626683079ab3","modified":1463411206578},{"_id":"public/archives/2016/index.html","hash":"957c8bb80a54f1d47b5bacb6dd3a04cd75d48bb2","modified":1463537041839},{"_id":"public/archives/2016/04/index.html","hash":"9735db106494f51a86808b687ec7bfe54cc68bfa","modified":1463411206578},{"_id":"public/index.html","hash":"da2b393b6d14c6da82fcaa0d94bf947c262f7efa","modified":1463577331452},{"_id":"public/page/2/index.html","hash":"9f6dfca942074cb14c07886c0972c9c1483c7218","modified":1463411206579},{"_id":"public/page/3/index.html","hash":"fc6988f02a06a4d36df7cdc1aba057661e3fb97d","modified":1463411206579},{"_id":"public/page/4/index.html","hash":"f76145afb2cc64a44e12a0e263a08e08c4c95737","modified":1463411206579},{"_id":"public/page/5/index.html","hash":"83a08933607f74595030e58e1370941856342ca1","modified":1463411206579},{"_id":"public/page/6/index.html","hash":"d5b1ed07b2d39786efefcb6ddedc30d04cfd956d","modified":1463411206579},{"_id":"public/page/7/index.html","hash":"7076b49f4a2785feba859f2cd7802715313a4eb7","modified":1463411206579},{"_id":"public/page/8/index.html","hash":"f983bfddf333d354c972c74dedb704801d7e6a19","modified":1463411206579},{"_id":"public/categories/槽/index.html","hash":"de3ea8814a721301f05086e77351a6b5a36d0229","modified":1463411206578},{"_id":"public/categories/槽/page/2/index.html","hash":"a79d15d1da94c9643213ed63c1211fa8775533f0","modified":1463411206578},{"_id":"public/categories/槽/page/3/index.html","hash":"f51e160a67f001a166db5c2b5bd75528d6605aee","modified":1463411206578},{"_id":"public/categories/代码狗/index.html","hash":"09889f87f72ec951889c80e310dde2506219f6d7","modified":1463537041839},{"_id":"public/categories/代码狗/page/2/index.html","hash":"2f7d6e24fadb2093035b946ed7e5d7aeae69b5b3","modified":1463411206578},{"_id":"public/categories/App强推/index.html","hash":"14dc76125a6cf8b51880184fb19b9b1fedacbb51","modified":1463411206578},{"_id":"public/categories/代码狗/学习log/index.html","hash":"f9cf12df3fc6d763bf7fd14c32fdeeb7ec7c51f3","modified":1463537041839},{"_id":"public/categories/代码狗/学习log/page/2/index.html","hash":"006d54b73b7f3e5f236c5baf248a6224ce258e95","modified":1463411206578},{"_id":"public/categories/App强推/软文/index.html","hash":"9a8ab17e24a4e3c1c705c53a9d6f09f50b025717","modified":1463411206578},{"_id":"public/categories/什么都学一下/index.html","hash":"be88c0387938d5e7278cd0f65af8b0f9f3498237","modified":1463411206579},{"_id":"public/categories/什么都学一下/page/2/index.html","hash":"5eee09c2ad08a36c328494d1ec94b0c3dd3b2f60","modified":1463411206579},{"_id":"public/categories/什么都学一下/学习log/index.html","hash":"bcb3c9d411285a5c97ac63970b78619143cff57a","modified":1463411206579},{"_id":"public/categories/什么都学一下/学习log/page/2/index.html","hash":"c82e814cbb74d7ee5facc4f726626e7760288690","modified":1463411206579},{"_id":"public/tags/Android/index.html","hash":"342aed345e88a0da0848b8575a7f6162b97d581b","modified":1463411206580},{"_id":"public/tags/吐槽/index.html","hash":"66adfbeb68cf23b45c802c2a53b747bdec69e7d4","modified":1463411206580},{"_id":"public/tags/吐槽/page/2/index.html","hash":"97494a0d6c3d1debe6d0530a2f0883dc1cbd1c0c","modified":1463411206580},{"_id":"public/tags/java/index.html","hash":"0a6fca2263d193feac20fea655f644a07dd80cfc","modified":1463411206580},{"_id":"public/tags/检校/index.html","hash":"5b963dcc68a910f9502969ed2fbfd6815bfdfb4e","modified":1463411206580},{"_id":"public/CNAME","hash":"1b21b5ef120bdbfd43eaf5aefb83c9850551d26d","modified":1463331148147},{"_id":"public/favicon.ico","hash":"e7ec823921ebbba9dd11072041ea3b8b79b56fc2","modified":1463331148147},{"_id":"public/images/author.jpg","hash":"78f534fbda5eb4fdb4e4ce01dce0bfc39e2f729d","modified":1463331148147},{"_id":"public/images/cc-by-nc-nd.svg","hash":"bc3588c9b2d7c68830524783120ff6cf957cf668","modified":1463331148147},{"_id":"public/images/cc-by-nc.svg","hash":"6f076713fb9bf934aa2c1046bdf2cf2e37bc1eab","modified":1463331148147},{"_id":"public/images/cc-by-nc-sa.svg","hash":"6f55543d1fb9cbc436c101d24f802dec7b41efc3","modified":1463331148147},{"_id":"public/images/cc-by-nd.svg","hash":"42cd73da328077ccc92f859bb8f3cf621b3484f8","modified":1463331148147},{"_id":"public/images/cc-by-sa.svg","hash":"70c1535f43e54e5ff35ca81419e77e4c0c301398","modified":1463331148147},{"_id":"public/images/cc-by.svg","hash":"e92a33c32d1dac8ed94849b2b4e6456e887efe70","modified":1463331148147},{"_id":"public/images/cc-zero.svg","hash":"9bfb52b2f63527a7049247bf00d44e6dc1170e7d","modified":1463331148147},{"_id":"public/images/favicon.ico","hash":"e7ec823921ebbba9dd11072041ea3b8b79b56fc2","modified":1463331148147},{"_id":"public/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1463331148147},{"_id":"public/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1463331148147},{"_id":"public/images/quote-l.svg","hash":"cd108d6f44351cadf8e6742565217f88818a0458","modified":1463331148147},{"_id":"public/images/quote-r.svg","hash":"2a2a250b32a87c69dcc1b1976c74b747bedbfb41","modified":1463331148147},{"_id":"public/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1463331148147},{"_id":"public/images/touxiang.jpg","hash":"db472f3b6a9642b0d83db6e66050af358ae6b597","modified":1463331148147},{"_id":"public/images/xiaoxin.jpg","hash":"f3b30bd133a7ef52159512a42254abe80ce3eb29","modified":1463331148147},{"_id":"public/images/wechat.png","hash":"08d559d1902590978819bd1cf0e27f1395295134","modified":1463331148147},{"_id":"public/vendors/fastclick/LICENSE","hash":"6f474ea75c42442da7bbcf2e9143ce98258efd8d","modified":1463331148147},{"_id":"public/vendors/font-awesome/HELP-US-OUT.txt","hash":"ed80b43dbc7e3009b2f436741b9796df8eb3be02","modified":1463331148147},{"_id":"public/vendors/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1463331148147},{"_id":"public/vendors/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1463331148148},{"_id":"public/vendors/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1463331148148},{"_id":"public/vendors/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1463331148148},{"_id":"public/vendors/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1463331148148},{"_id":"public/vendors/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1463331148148},{"_id":"public/vendors/font-awesome/css/font-awesome.css.map","hash":"1573904b82807abbb32c97a3632c6c6808eaac50","modified":1463331148148},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff2","hash":"574ea2698c03ae9477db2ea3baf460ee32f1a7ea","modified":1463331148148},{"_id":"public/vendors/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1463331148148},{"_id":"public/vendors/font-awesome/fonts/FontAwesome.otf","hash":"0112e96f327d413938d37c1693806f468ffdbace","modified":1463331154732},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.eot","hash":"b3c2f08e73320135b69c23a3908b87a12053a2f6","modified":1463331148906},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.woff","hash":"507970402e328b2baeb05bde73bf9ded4e2c3a2d","modified":1463331154741},{"_id":"public/vendors/fastclick/bower.json","hash":"4dcecf83afddba148464d5339c93f6d0aa9f42e9","modified":1463331154746},{"_id":"public/vendors/font-awesome/bower.json","hash":"64394a2a9aa00f8e321d8daa5e51a420f0e96dad","modified":1463331154746},{"_id":"public/vendors/jquery_lazyload/bower.json","hash":"ae3c3b61e6e7f9e1d7e3585ad854380ecc04cf53","modified":1463331154746},{"_id":"public/vendors/velocity/bower.json","hash":"0ef14e7ccdfba5db6eb3f8fc6aa3b47282c36409","modified":1463331154746},{"_id":"public/vendors/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1463331154746},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1463331154746},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1463331154747},{"_id":"public/js/src/affix.js","hash":"df4a845d0a1504c4563e262529e4866f9493bbdd","modified":1463331154747},{"_id":"public/js/src/bootstrap.js","hash":"70583194828772692209a0f9048d55ceb4b2491e","modified":1463331154747},{"_id":"public/js/src/hook-duoshuo.js","hash":"c5afc9926d8de675fc55e8cb04eb33e591347633","modified":1463331154747},{"_id":"public/js/src/motion.js","hash":"1a4425e69200fbc71962d62eba4cf55a54daff8a","modified":1463331154747},{"_id":"public/js/src/post-details.js","hash":"3c70e33be9506003ddcc92f8ed7c7d59ec09ef2e","modified":1463331154747},{"_id":"public/js/src/scrollspy.js","hash":"4454465c22f36d70c6b9d2b5d90d7bdb58d55952","modified":1463331154747},{"_id":"public/js/src/utils.js","hash":"55dc47d478c436e5efa7a0da23c07e163507639c","modified":1463331154747},{"_id":"public/vendors/jquery_lazyload/jquery.scrollstop.js","hash":"ba25b2685ac718304e0766919c871fffec605d62","modified":1463331154747},{"_id":"public/vendors/jquery_lazyload/jquery.lazyload.js","hash":"170b068c474b00f821fdf3d60bd93ce3915ed786","modified":1463331154747},{"_id":"public/vendors/velocity/velocity.ui.min.js","hash":"77c00d06e435552ea6c8d0c37827791a7037c6af","modified":1463331154747},{"_id":"public/vendors/velocity/velocity.ui.js","hash":"956d622e0729f0e8fd41b902f6aec82cff18fb1c","modified":1463331154747},{"_id":"public/js/src/schemes/pisces.js","hash":"fa9f912e57f453fc7471e791d0b22d7038e41a31","modified":1463331154747},{"_id":"public/vendors/fastclick/lib/fastclick.min.js","hash":"469fe912212a7b2ca40ae3def2ef946067407d5b","modified":1463331154747},{"_id":"public/vendors/fastclick/lib/fastclick.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1463331154747},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.pack.js","hash":"758fcfe192bfc783b7c2b258889b4c0e736b24d2","modified":1463331154747},{"_id":"public/vendors/ua-parser-js/dist/ua-parser.min.js","hash":"ac7a8cb9012a927b9dc2aa85b815ed6cc290c1b7","modified":1463331154747},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"7ea72c413c812b6d6954dfefe2193769555ec381","modified":1463331154747},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-media.js","hash":"76cacae5f4963db12e63594d919a1f6af72b1e38","modified":1463331154747},{"_id":"public/vendors/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"50de33386877d451b3fccad8ab953f5d7a580ada","modified":1463331154748},{"_id":"public/vendors/fastclick/README.html","hash":"f80d582afa4fbe070a28e4b29579773c8e12b193","modified":1463331154748},{"_id":"public/vendors/jquery_lazyload/CONTRIBUTING.html","hash":"752020064b6ed88ffbf4aeb19ebdd86b1273bd7b","modified":1463331154748},{"_id":"public/vendors/jquery_lazyload/README.html","hash":"2d75c073ac3d7e25d01d483384b3515966ac6b6c","modified":1463331154748},{"_id":"public/css/main.css","hash":"d61ba991995f38e31b0524f13628b063adfac40c","modified":1463331154748},{"_id":"public/vendors/font-awesome/css/font-awesome.min.css","hash":"05ea25bc9b3ac48993e1fee322d3bc94b49a6e22","modified":1463331154748},{"_id":"public/vendors/font-awesome/css/font-awesome.css","hash":"3b87c2560832748cd06f9bfd2fd6ea8edbdae8c7","modified":1463331154748},{"_id":"public/vendors/velocity/velocity.min.js","hash":"3cd21cb92f339f6550d6b79263ad9fb7b249292d","modified":1463331154748},{"_id":"public/vendors/jquery/index.js","hash":"9412c95d692612a8efb656908566f970b0d05399","modified":1463331154748},{"_id":"public/vendors/fancybox/source/jquery.fancybox.js","hash":"f2ccbbc9764de5b891172579702fb2dbf95e80fb","modified":1463331154748},{"_id":"public/vendors/fancybox/source/jquery.fancybox.pack.js","hash":"849f56c2f8d556adbbcd74f4ec7ec7551ef1e6e6","modified":1463331154748},{"_id":"public/vendors/velocity/velocity.js","hash":"505a41fc7215b164909f934d882570613affd748","modified":1463331154748},{"_id":"public/images/alipay.jpg","hash":"1276ce1f07836049c6bbd8d801c6d1c94c9185c1","modified":1463331154760},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.ttf","hash":"27cf1f2ec59aece6938c7bb2feb0e287ea778ff9","modified":1463331154759},{"_id":"public/vendors/font-awesome/fonts/fontawesome-webfont.svg","hash":"f346b8b3df147e4059e1a7d66c52c9a6e1cec3e8","modified":1463331154855},{"_id":"public/images/xiaozaizi.png","hash":"9814cf109fe3256cc0b49d9a259e89bd18314509","modified":1463331154960}],"Category":[{"name":"槽","_id":"cio8sn7k80005uco4rh5r71io"},{"name":"代码狗","_id":"cio8sn7kp000guco4el25px95"},{"name":"App强推","_id":"cio8sn7kv000muco41giom107"},{"name":"学习log","parent":"cio8sn7kp000guco4el25px95","_id":"cio8sn7lt001euco4uqvqvptk"},{"name":"软文","parent":"cio8sn7kv000muco41giom107","_id":"cio8sn7mh001xuco4ksspexlx"},{"name":"什么都学一下","_id":"cio8sn7o7003suco48w91hhrk"},{"name":"软件测评","_id":"cio8sn7ph004uuco4m53b9x8s"},{"name":"代码狗","parent":"cio8sn7o7003suco48w91hhrk","_id":"cio8sn7q3005quco49cljsxnh"},{"name":"学习log","parent":"cio8sn7o7003suco48w91hhrk","_id":"cio8sn7q9005zuco4p234uruy"},{"name":"软文","parent":"cio8sn7ph004uuco4m53b9x8s","_id":"cio8sn7r5007auco4gorz35dg"},{"name":"学习log","parent":"cio8sn7q3005quco49cljsxnh","_id":"cio8sn7rs008buco45bqqs5pc"}],"Data":[],"Page":[{"title":"一影一图","date":"2016-05-15T16:15:07.000Z","_content":"\n{% centerquote 谜一样的双眼%}永远无法改变的，是一个人的激情\n{% fi http://ooo.0o0.ooo/2016/05/15/5738b06e35953.png, \"谜一样的双眼\", \"谜一样的双眼\" %}\n{% endcenterquote %}\n\n\n{% centerquote%}今晚的食物都是本地的特色菜，绝对没有人肉\n{% fi http://ooo.0o0.ooo/2016/05/15/5738b028d944b.png, \"末代独裁\", \"末代独裁\" %}\n{% endcenterquote %}\n\n{% centerquote%}除非你当我和你平等，否则我不会找你\n{% fi http://ooo.0o0.ooo/2016/05/16/5739e7d65fbc2.png, \"平常的心\", \"平常的心\" %}\n{% endcenterquote %}\n\n{% centerquote%}\n{% fi http://ooo.0o0.ooo/2016/05/16/573a80bba3ba9.png, \"丹麦女孩\", \"丹麦女孩\" %}\n{% endcenterquote %}","source":"a-pic-a-movie/index.md","raw":"---\ntitle: 一影一图\ndate: 2016-05-16 00:15:07\n---\n\n{% centerquote 谜一样的双眼%}永远无法改变的，是一个人的激情\n{% fi http://ooo.0o0.ooo/2016/05/15/5738b06e35953.png, \"谜一样的双眼\", \"谜一样的双眼\" %}\n{% endcenterquote %}\n\n\n{% centerquote%}今晚的食物都是本地的特色菜，绝对没有人肉\n{% fi http://ooo.0o0.ooo/2016/05/15/5738b028d944b.png, \"末代独裁\", \"末代独裁\" %}\n{% endcenterquote %}\n\n{% centerquote%}除非你当我和你平等，否则我不会找你\n{% fi http://ooo.0o0.ooo/2016/05/16/5739e7d65fbc2.png, \"平常的心\", \"平常的心\" %}\n{% endcenterquote %}\n\n{% centerquote%}\n{% fi http://ooo.0o0.ooo/2016/05/16/573a80bba3ba9.png, \"丹麦女孩\", \"丹麦女孩\" %}\n{% endcenterquote %}","updated":"2016-05-17T02:22:05.849Z","path":"a-pic-a-movie/index.html","_id":"cio8sn7ju0000uco4o8m00rqc","comments":1,"layout":"page","content":"<blockquote class=\"blockquote-center\"><p>永远无法改变的，是一个人的激情<br><img src=\"http://ooo.0o0.ooo/2016/05/15/5738b06e35953.png\" class=\"full-image\" alt=\"谜一样的双眼\" title=\"谜一样的双眼\"></p></blockquote>\n<blockquote class=\"blockquote-center\"><p>今晚的食物都是本地的特色菜，绝对没有人肉<br><img src=\"http://ooo.0o0.ooo/2016/05/15/5738b028d944b.png\" class=\"full-image\" alt=\"末代独裁\" title=\"末代独裁\"></p></blockquote>\n<blockquote class=\"blockquote-center\"><p>除非你当我和你平等，否则我不会找你<br><img src=\"http://ooo.0o0.ooo/2016/05/16/5739e7d65fbc2.png\" class=\"full-image\" alt=\"平常的心\" title=\"平常的心\"></p></blockquote>\n<blockquote class=\"blockquote-center\"><p><img src=\"http://ooo.0o0.ooo/2016/05/16/573a80bba3ba9.png\" class=\"full-image\" alt=\"丹麦女孩\" title=\"丹麦女孩\"></p></blockquote>","excerpt":"","more":"<blockquote class=\"blockquote-center\"><p>永远无法改变的，是一个人的激情<br><img src=\"http://ooo.0o0.ooo/2016/05/15/5738b06e35953.png\" class=\"full-image\" alt=\"谜一样的双眼\" title=\"谜一样的双眼\"></p></blockquote>\n<blockquote class=\"blockquote-center\"><p>今晚的食物都是本地的特色菜，绝对没有人肉<br><img src=\"http://ooo.0o0.ooo/2016/05/15/5738b028d944b.png\" class=\"full-image\" alt=\"末代独裁\" title=\"末代独裁\"></p></blockquote>\n<blockquote class=\"blockquote-center\"><p>除非你当我和你平等，否则我不会找你<br><img src=\"http://ooo.0o0.ooo/2016/05/16/5739e7d65fbc2.png\" class=\"full-image\" alt=\"平常的心\" title=\"平常的心\"></p></blockquote>\n<blockquote class=\"blockquote-center\"><p><img src=\"http://ooo.0o0.ooo/2016/05/16/573a80bba3ba9.png\" class=\"full-image\" alt=\"丹麦女孩\" title=\"丹麦女孩\"></p></blockquote>"},{"title":"sth","date":"2016-04-24T17:02:50.000Z","_content":"# **推荐马克**\n\nsoftware  \n**[Listary](http://www.iplaysoft.com/listary.html)**  全局搜索 支持中文 谁用谁知道。win+G开启美妙体验\n**[picpick](http://ngwin.com/picpick)** 全能截屏取色工具 支持各种活动屏滚屏\n**[rolan](http://www.irolan.com/)** 快速启动launcher。整理桌面和快捷方式\n\nweb  \n**[v2ex](https://v2ex.com)** 启蒙网站   \n**[老D](http://laod.cn/)** host较全更新 移动端不挂ss省电\n\nweb-tools\n**[encode](http://tool.oschina.net/encode)** 解码ascii utf-8 Unicode等\n**[图床集合](http://upload.otar.im/)** 三个图床源 一般用七牛的smms\n**[颜色转换](http://www.365mini.com/page/convert-color-in-rgb-hex-hsl.htm)* rgb<->hex<->hsl三颜色系统转换","source":"sth/index.md","raw":"---\ntitle: sth\ndate: 2016-04-25 01:02:50\n---\n# **推荐马克**\n\nsoftware  \n**[Listary](http://www.iplaysoft.com/listary.html)**  全局搜索 支持中文 谁用谁知道。win+G开启美妙体验\n**[picpick](http://ngwin.com/picpick)** 全能截屏取色工具 支持各种活动屏滚屏\n**[rolan](http://www.irolan.com/)** 快速启动launcher。整理桌面和快捷方式\n\nweb  \n**[v2ex](https://v2ex.com)** 启蒙网站   \n**[老D](http://laod.cn/)** host较全更新 移动端不挂ss省电\n\nweb-tools\n**[encode](http://tool.oschina.net/encode)** 解码ascii utf-8 Unicode等\n**[图床集合](http://upload.otar.im/)** 三个图床源 一般用七牛的smms\n**[颜色转换](http://www.365mini.com/page/convert-color-in-rgb-hex-hsl.htm)* rgb<->hex<->hsl三颜色系统转换","updated":"2016-05-18T06:49:12.983Z","path":"sth/index.html","_id":"cio8sn7k20002uco4mi6igcnp","comments":1,"layout":"page","content":"<h1 id=\"推荐马克\"><a href=\"#推荐马克\" class=\"headerlink\" title=\"推荐马克\"></a><strong>推荐马克</strong></h1><p>software<br><strong><a href=\"http://www.iplaysoft.com/listary.html\" target=\"_blank\" rel=\"external\">Listary</a></strong>  全局搜索 支持中文 谁用谁知道。win+G开启美妙体验<br><strong><a href=\"http://ngwin.com/picpick\" target=\"_blank\" rel=\"external\">picpick</a></strong> 全能截屏取色工具 支持各种活动屏滚屏<br><strong><a href=\"http://www.irolan.com/\" target=\"_blank\" rel=\"external\">rolan</a></strong> 快速启动launcher。整理桌面和快捷方式</p>\n<p>web<br><strong><a href=\"https://v2ex.com\" target=\"_blank\" rel=\"external\">v2ex</a></strong> 启蒙网站<br><strong><a href=\"http://laod.cn/\" target=\"_blank\" rel=\"external\">老D</a></strong> host较全更新 移动端不挂ss省电</p>\n<p>web-tools<br><strong><a href=\"http://tool.oschina.net/encode\" target=\"_blank\" rel=\"external\">encode</a></strong> 解码ascii utf-8 Unicode等<br><strong><a href=\"http://upload.otar.im/\" target=\"_blank\" rel=\"external\">图床集合</a></strong> 三个图床源 一般用七牛的smms<br><em>*<a href=\"http://www.365mini.com/page/convert-color-in-rgb-hex-hsl.htm\" target=\"_blank\" rel=\"external\">颜色转换</a></em> rgb&lt;-&gt;hex&lt;-&gt;hsl三颜色系统转换</p>","excerpt":"","more":"<h1 id=\"推荐马克\"><a href=\"#推荐马克\" class=\"headerlink\" title=\"推荐马克\"></a><strong>推荐马克</strong></h1><p>software<br><strong><a href=\"http://www.iplaysoft.com/listary.html\">Listary</a></strong>  全局搜索 支持中文 谁用谁知道。win+G开启美妙体验<br><strong><a href=\"http://ngwin.com/picpick\">picpick</a></strong> 全能截屏取色工具 支持各种活动屏滚屏<br><strong><a href=\"http://www.irolan.com/\">rolan</a></strong> 快速启动launcher。整理桌面和快捷方式</p>\n<p>web<br><strong><a href=\"https://v2ex.com\">v2ex</a></strong> 启蒙网站<br><strong><a href=\"http://laod.cn/\">老D</a></strong> host较全更新 移动端不挂ss省电</p>\n<p>web-tools<br><strong><a href=\"http://tool.oschina.net/encode\">encode</a></strong> 解码ascii utf-8 Unicode等<br><strong><a href=\"http://upload.otar.im/\">图床集合</a></strong> 三个图床源 一般用七牛的smms<br><em>*<a href=\"http://www.365mini.com/page/convert-color-in-rgb-hex-hsl.htm\">颜色转换</a></em> rgb&lt;-&gt;hex&lt;-&gt;hsl三颜色系统转换</p>"},{"title":".me","date":"2016-04-10T15:50:15.000Z","_content":"## 这是一个简介\n\n遥感与数字地球研究所-中国科学院-研究生 2014级\n\n国际软件学院-武汉大学-本科 2010级\n\n乐于探索和折腾\n\n","source":"me/index.md","raw":"---\ntitle: .me\ndate: 2016-04-10 23:50:15\n---\n## 这是一个简介\n\n遥感与数字地球研究所-中国科学院-研究生 2014级\n\n国际软件学院-武汉大学-本科 2010级\n\n乐于探索和折腾\n\n","updated":"2016-04-10T16:21:58.972Z","path":"me/index.html","comments":1,"layout":"page","_id":"cio8sn7xl00f3uco4brlo7rz5","content":"<h2 id=\"这是一个简介\"><a href=\"#这是一个简介\" class=\"headerlink\" title=\"这是一个简介\"></a>这是一个简介</h2><p>遥感与数字地球研究所-中国科学院-研究生 2014级</p>\n<p>国际软件学院-武汉大学-本科 2010级</p>\n<p>乐于探索和折腾</p>","excerpt":"","more":"<h2 id=\"这是一个简介\"><a href=\"#这是一个简介\" class=\"headerlink\" title=\"这是一个简介\"></a>这是一个简介</h2><p>遥感与数字地球研究所-中国科学院-研究生 2014级</p>\n<p>国际软件学院-武汉大学-本科 2010级</p>\n<p>乐于探索和折腾</p>"},{"title":"标签","date":"2016-04-24T17:22:49.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2016-04-25 01:22:49\ntype: \"tags\"\ncomments: false\n---\n","updated":"2016-04-24T17:23:37.468Z","path":"tags/index.html","layout":"page","_id":"cio8sn7xm00f4uco4wn1b6avn","content":"","excerpt":"","more":""}],"Post":[{"title":"[2013]年度总结，，玩不动","id":"439","date":"2013-12-31T14:04:16.000Z","_content":"\n2010年注定是无法后悔的图样的，两场演唱会，圣诞刷夜购物，光谷跨年k歌。真心是当年欠的总是要还的。\n2011比初恋还纯的荡漾着，飘忽，煲电话粥跨年，陪笑，真心笑的很开心\n2012和俩傻大木长江看烟花，，几乎踩踏。三个小时走回来。不能更呆逼了。\n2013 沉寂 静默 失去与得到的都很多。多的缤纷。自习室陪我过了一夜。一夜又一夜。还有五夜。加油。","source":"_posts/2013年度总结，，玩不动.md","raw":"---\ntitle: '[2013]年度总结，，玩不动'\ncategories:\n  - 槽\ntags:\n  - 年度总结\nid: 439\ndate: 2013-12-31 22:04:16\n---\n\n2010年注定是无法后悔的图样的，两场演唱会，圣诞刷夜购物，光谷跨年k歌。真心是当年欠的总是要还的。\n2011比初恋还纯的荡漾着，飘忽，煲电话粥跨年，陪笑，真心笑的很开心\n2012和俩傻大木长江看烟花，，几乎踩踏。三个小时走回来。不能更呆逼了。\n2013 沉寂 静默 失去与得到的都很多。多的缤纷。自习室陪我过了一夜。一夜又一夜。还有五夜。加油。","slug":"2013年度总结，，玩不动","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7jw0001uco4wbl2tuut","content":"<p>2010年注定是无法后悔的图样的，两场演唱会，圣诞刷夜购物，光谷跨年k歌。真心是当年欠的总是要还的。<br>2011比初恋还纯的荡漾着，飘忽，煲电话粥跨年，陪笑，真心笑的很开心<br>2012和俩傻大木长江看烟花，，几乎踩踏。三个小时走回来。不能更呆逼了。<br>2013 沉寂 静默 失去与得到的都很多。多的缤纷。自习室陪我过了一夜。一夜又一夜。还有五夜。加油。</p>","excerpt":"","more":"<p>2010年注定是无法后悔的图样的，两场演唱会，圣诞刷夜购物，光谷跨年k歌。真心是当年欠的总是要还的。<br>2011比初恋还纯的荡漾着，飘忽，煲电话粥跨年，陪笑，真心笑的很开心<br>2012和俩傻大木长江看烟花，，几乎踩踏。三个小时走回来。不能更呆逼了。<br>2013 沉寂 静默 失去与得到的都很多。多的缤纷。自习室陪我过了一夜。一夜又一夜。还有五夜。加油。</p>"},{"title":"[2014]生活生命、","id":"539","date":"2015-01-28T16:42:10.000Z","_content":"\n2014亦算是个重要节点。考研了。复试了。毕业了。喝醉了。一切都这么顺利，顺利得很平静。狂欢中带走离别，夹杂着不少的噪音。世界杯让我忘了自己，撞上了树状。自以为满心得意的DIP，睡过了。怪不了谁，谁都不应该为我负责，22岁，一个复杂的年龄。\n\n或许该是成长到成熟这个节点了。一个人一年，走了至今最多的城市，**武汉 北京 天津 绍兴 杭州  桐乡乌镇 嘉善西塘 吴江同里 苏州 无锡 扬州 长沙 张家界 成都 都江堰 川主寺黄龙 九寨沟 若尔盖花湖 乐山 重庆 南宁 大同 介休 太原 平遥 鄂尔多斯 达拉特旗 包头 呼和浩特 **。一个人一年，看了至今最多的书，尽管都是学术和科研，但终归是目测达到了智商的巅峰，无论数理逻辑还是语言学习，都未曾来过的顶峰。一个人一年，看过了至今最多的电影，学会了沉溺，更学会了跳跃和放弃，不再执着于影评，不再执着于类别，看的就是当下的心情 。一个人一年，习惯了抬头看星星，低头碰杯饮，吃了至今最多的零食，喝了至今最多的酒，吐了至今最多的槽。我有一个常煮面的锅，我有一个可以经常打羽毛球的伴，我有一个听李荣浩的音箱，我变得有些孤僻，但时而放荡得不着边际。更爱笑也学会了哭，面对恐惧却不自觉的冷静得冷酷，面对压力从容得像未曾来过。我学着独自承受，学着享受提供的起起伏伏，学着把握每一时刻的心跳。平淡里最显唐突的就是离别，但是把酒言欢，抑或酒吧，抑或桌游，抑或聚餐，都是无懈可击的欢乐筵席。有泪水，却不带苦涩。有倾斜，却毫无酸楚。我们珍重这说着的是永恒的朋友，唱着这一次又一次骊歌。\n\n&nbsp;\n\n我却爱逃避。逃避挥手。逃避责任。逃避胆怯。用放纵来表达着怂。\n\n&nbsp;\n\n2015.**不怂**。","source":"_posts/2014生活生命、.md","raw":"---\ntitle: '[2014]生活生命、'\ncategories:\n  - 槽\ntags:\n  - 年度总结\nid: 539\ndate: 2015-01-29 00:42:10\n---\n\n2014亦算是个重要节点。考研了。复试了。毕业了。喝醉了。一切都这么顺利，顺利得很平静。狂欢中带走离别，夹杂着不少的噪音。世界杯让我忘了自己，撞上了树状。自以为满心得意的DIP，睡过了。怪不了谁，谁都不应该为我负责，22岁，一个复杂的年龄。\n\n或许该是成长到成熟这个节点了。一个人一年，走了至今最多的城市，**武汉 北京 天津 绍兴 杭州  桐乡乌镇 嘉善西塘 吴江同里 苏州 无锡 扬州 长沙 张家界 成都 都江堰 川主寺黄龙 九寨沟 若尔盖花湖 乐山 重庆 南宁 大同 介休 太原 平遥 鄂尔多斯 达拉特旗 包头 呼和浩特 **。一个人一年，看了至今最多的书，尽管都是学术和科研，但终归是目测达到了智商的巅峰，无论数理逻辑还是语言学习，都未曾来过的顶峰。一个人一年，看过了至今最多的电影，学会了沉溺，更学会了跳跃和放弃，不再执着于影评，不再执着于类别，看的就是当下的心情 。一个人一年，习惯了抬头看星星，低头碰杯饮，吃了至今最多的零食，喝了至今最多的酒，吐了至今最多的槽。我有一个常煮面的锅，我有一个可以经常打羽毛球的伴，我有一个听李荣浩的音箱，我变得有些孤僻，但时而放荡得不着边际。更爱笑也学会了哭，面对恐惧却不自觉的冷静得冷酷，面对压力从容得像未曾来过。我学着独自承受，学着享受提供的起起伏伏，学着把握每一时刻的心跳。平淡里最显唐突的就是离别，但是把酒言欢，抑或酒吧，抑或桌游，抑或聚餐，都是无懈可击的欢乐筵席。有泪水，却不带苦涩。有倾斜，却毫无酸楚。我们珍重这说着的是永恒的朋友，唱着这一次又一次骊歌。\n\n&nbsp;\n\n我却爱逃避。逃避挥手。逃避责任。逃避胆怯。用放纵来表达着怂。\n\n&nbsp;\n\n2015.**不怂**。","slug":"2014生活生命、","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7k40003uco4jrh6yzud","content":"<p>2014亦算是个重要节点。考研了。复试了。毕业了。喝醉了。一切都这么顺利，顺利得很平静。狂欢中带走离别，夹杂着不少的噪音。世界杯让我忘了自己，撞上了树状。自以为满心得意的DIP，睡过了。怪不了谁，谁都不应该为我负责，22岁，一个复杂的年龄。</p>\n<p>或许该是成长到成熟这个节点了。一个人一年，走了至今最多的城市，<strong>武汉 北京 天津 绍兴 杭州  桐乡乌镇 嘉善西塘 吴江同里 苏州 无锡 扬州 长沙 张家界 成都 都江堰 川主寺黄龙 九寨沟 若尔盖花湖 乐山 重庆 南宁 大同 介休 太原 平遥 鄂尔多斯 达拉特旗 包头 呼和浩特 </strong>。一个人一年，看了至今最多的书，尽管都是学术和科研，但终归是目测达到了智商的巅峰，无论数理逻辑还是语言学习，都未曾来过的顶峰。一个人一年，看过了至今最多的电影，学会了沉溺，更学会了跳跃和放弃，不再执着于影评，不再执着于类别，看的就是当下的心情 。一个人一年，习惯了抬头看星星，低头碰杯饮，吃了至今最多的零食，喝了至今最多的酒，吐了至今最多的槽。我有一个常煮面的锅，我有一个可以经常打羽毛球的伴，我有一个听李荣浩的音箱，我变得有些孤僻，但时而放荡得不着边际。更爱笑也学会了哭，面对恐惧却不自觉的冷静得冷酷，面对压力从容得像未曾来过。我学着独自承受，学着享受提供的起起伏伏，学着把握每一时刻的心跳。平淡里最显唐突的就是离别，但是把酒言欢，抑或酒吧，抑或桌游，抑或聚餐，都是无懈可击的欢乐筵席。有泪水，却不带苦涩。有倾斜，却毫无酸楚。我们珍重这说着的是永恒的朋友，唱着这一次又一次骊歌。</p>\n<p>&nbsp;</p>\n<p>我却爱逃避。逃避挥手。逃避责任。逃避胆怯。用放纵来表达着怂。</p>\n<p>&nbsp;</p>\n<p>2015.<strong>不怂</strong>。</p>","excerpt":"","more":"<p>2014亦算是个重要节点。考研了。复试了。毕业了。喝醉了。一切都这么顺利，顺利得很平静。狂欢中带走离别，夹杂着不少的噪音。世界杯让我忘了自己，撞上了树状。自以为满心得意的DIP，睡过了。怪不了谁，谁都不应该为我负责，22岁，一个复杂的年龄。</p>\n<p>或许该是成长到成熟这个节点了。一个人一年，走了至今最多的城市，<strong>武汉 北京 天津 绍兴 杭州  桐乡乌镇 嘉善西塘 吴江同里 苏州 无锡 扬州 长沙 张家界 成都 都江堰 川主寺黄龙 九寨沟 若尔盖花湖 乐山 重庆 南宁 大同 介休 太原 平遥 鄂尔多斯 达拉特旗 包头 呼和浩特 </strong>。一个人一年，看了至今最多的书，尽管都是学术和科研，但终归是目测达到了智商的巅峰，无论数理逻辑还是语言学习，都未曾来过的顶峰。一个人一年，看过了至今最多的电影，学会了沉溺，更学会了跳跃和放弃，不再执着于影评，不再执着于类别，看的就是当下的心情 。一个人一年，习惯了抬头看星星，低头碰杯饮，吃了至今最多的零食，喝了至今最多的酒，吐了至今最多的槽。我有一个常煮面的锅，我有一个可以经常打羽毛球的伴，我有一个听李荣浩的音箱，我变得有些孤僻，但时而放荡得不着边际。更爱笑也学会了哭，面对恐惧却不自觉的冷静得冷酷，面对压力从容得像未曾来过。我学着独自承受，学着享受提供的起起伏伏，学着把握每一时刻的心跳。平淡里最显唐突的就是离别，但是把酒言欢，抑或酒吧，抑或桌游，抑或聚餐，都是无懈可击的欢乐筵席。有泪水，却不带苦涩。有倾斜，却毫无酸楚。我们珍重这说着的是永恒的朋友，唱着这一次又一次骊歌。</p>\n<p>&nbsp;</p>\n<p>我却爱逃避。逃避挥手。逃避责任。逃避胆怯。用放纵来表达着怂。</p>\n<p>&nbsp;</p>\n<p>2015.<strong>不怂</strong>。</p>"},{"title":"Android adt zip包下载","id":"527","date":"2014-12-06T08:28:47.000Z","_content":"\nAndroid adt zip包下载\nhttp://developer.android.com/sdk/installing/installing-adt.html#Troubleshooting","source":"_posts/Android adt zip包下载.md","raw":"---\ntitle: Android adt zip包下载\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - Android\nid: 527\ndate: 2014-12-06 16:28:47\n---\n\nAndroid adt zip包下载\nhttp://developer.android.com/sdk/installing/installing-adt.html#Troubleshooting","slug":"Android adt zip包下载","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7k80006uco4x6ccokov","content":"<p>Android adt zip包下载<br><a href=\"http://developer.android.com/sdk/installing/installing-adt.html#Troubleshooting\" target=\"_blank\" rel=\"external\">http://developer.android.com/sdk/installing/installing-adt.html#Troubleshooting</a></p>","excerpt":"","more":"<p>Android adt zip包下载<br><a href=\"http://developer.android.com/sdk/installing/installing-adt.html#Troubleshooting\">http://developer.android.com/sdk/installing/installing-adt.html#Troubleshooting</a></p>"},{"title":"[2015.11.08]安装google 框架 service 一系列","id":"828","date":"2015-11-08T15:53:53.000Z","_content":"\n装了cm还有其他一些国产ui直接滤掉了google的一系列被墙的服务。\n\n但明明又不可或缺。尤其是最近无可救药的爱上了google相册，那无限制的容量让人流口水。\n\n试了一下各种论坛apk专栏的gms（google mobile service 涉及Android版本 cpu类型 屏幕尺寸，以及各种旧版本都试过了都不行。。我就郁闷了。。\n\n[各版本gms-酷安网](http://www.coolapk.com/apk/com.google.android.gms)&nbsp; &nbsp; [各种旧版本google](http://www.android-apk.com/zh-cn/2015/02/google-play-store-%E8%88%8A%E7%89%88%E6%9C%AC-apk-%E5%A4%A7%E9%9B%86%E5%90%88/)&nbsp;&nbsp; [各种能找到的google相关旧版本](http://www.apkmirror.com/?s=google+play+service&amp;post_type=apps_post)&nbsp;&nbsp; [少数派的小姿势](http://sspai.com/30499)\n\n因此试了一下传说中的，Open GApps和TK GApps，非常顺滑。一刷就行，不用双清，放在sd里和刷机一样。\n\n提供了详细列表的[tk gapps-5.1.X列表](http://forum.xda-developers.com/android/software/tk-gapps-t3116347)\n\n同样提供了详细列表的[PA Gapps-5.1.X列表](http://www.androidrootz.com/2015/03/download-android-51x-lollipop-pa-gapps.html)\n\n[GAPPS FOR ANY ANDROID ROM](http://www.technobuzz.net/download-google-apps-gapps/)（提供所有安卓版本的GAPPS安装，我成功的刷入了一台老机子nexus 7 在CM12下。震精的是，居然也提供了6.0和我家一加二的安装-。-，MIUI6也适时的出现了\n\nstock ：最为贴近 Nexus 机型体验的 GApps 版本，包含了 Nexus 机型所预装的所有 Google 服务和 Google 应用。需要注意的是，这个版本会用 Chrome 、 Google Now Launcher 、 Google Keybord 等 Google 应用替换掉 CM 系 ROM 中那些基于 AOSP 代码的相关应用。\n full ：与 stock 版所包含的内容相同，但不会替换 AOSP 应用。\n mini ：包含了完整的 Google 服务框架和主流 Google 应用，去掉了 Google Docs 等文档处理应用\n micro ：包含了完整的 Google 服务框架和少数 Google 应用，如 Gmail 、 Google Calender 、 Google Now Launcher 。\n nano ：包含完整的 Google 服务框架但不包含多余的 Google 应用。\n pico：包含了最基础的 Google 服务框架，体积最小，一些依赖完整 Google 框架的应用（如 Google Camera ）将无法运行。\n\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\">[](http://sns.juziyue.com/webinvite.php?u=94887)&nbsp;今天你[菊子曰](http://sns.juziyue.com/webinvite.php?u=94887)了么？</div>","source":"_posts/2015.11.08安装google 框架 service 一系列.md","raw":"---\ntitle: '[2015.11.08]安装google 框架 service 一系列'\ncategories:\n  - App强推\n  - 软文\ntags:\n  - Android\n  - gms\nid: 828\ndate: 2015-11-08 23:53:53\n---\n\n装了cm还有其他一些国产ui直接滤掉了google的一系列被墙的服务。\n\n但明明又不可或缺。尤其是最近无可救药的爱上了google相册，那无限制的容量让人流口水。\n\n试了一下各种论坛apk专栏的gms（google mobile service 涉及Android版本 cpu类型 屏幕尺寸，以及各种旧版本都试过了都不行。。我就郁闷了。。\n\n[各版本gms-酷安网](http://www.coolapk.com/apk/com.google.android.gms)&nbsp; &nbsp; [各种旧版本google](http://www.android-apk.com/zh-cn/2015/02/google-play-store-%E8%88%8A%E7%89%88%E6%9C%AC-apk-%E5%A4%A7%E9%9B%86%E5%90%88/)&nbsp;&nbsp; [各种能找到的google相关旧版本](http://www.apkmirror.com/?s=google+play+service&amp;post_type=apps_post)&nbsp;&nbsp; [少数派的小姿势](http://sspai.com/30499)\n\n因此试了一下传说中的，Open GApps和TK GApps，非常顺滑。一刷就行，不用双清，放在sd里和刷机一样。\n\n提供了详细列表的[tk gapps-5.1.X列表](http://forum.xda-developers.com/android/software/tk-gapps-t3116347)\n\n同样提供了详细列表的[PA Gapps-5.1.X列表](http://www.androidrootz.com/2015/03/download-android-51x-lollipop-pa-gapps.html)\n\n[GAPPS FOR ANY ANDROID ROM](http://www.technobuzz.net/download-google-apps-gapps/)（提供所有安卓版本的GAPPS安装，我成功的刷入了一台老机子nexus 7 在CM12下。震精的是，居然也提供了6.0和我家一加二的安装-。-，MIUI6也适时的出现了\n\nstock ：最为贴近 Nexus 机型体验的 GApps 版本，包含了 Nexus 机型所预装的所有 Google 服务和 Google 应用。需要注意的是，这个版本会用 Chrome 、 Google Now Launcher 、 Google Keybord 等 Google 应用替换掉 CM 系 ROM 中那些基于 AOSP 代码的相关应用。\n full ：与 stock 版所包含的内容相同，但不会替换 AOSP 应用。\n mini ：包含了完整的 Google 服务框架和主流 Google 应用，去掉了 Google Docs 等文档处理应用\n micro ：包含了完整的 Google 服务框架和少数 Google 应用，如 Gmail 、 Google Calender 、 Google Now Launcher 。\n nano ：包含完整的 Google 服务框架但不包含多余的 Google 应用。\n pico：包含了最基础的 Google 服务框架，体积最小，一些依赖完整 Google 框架的应用（如 Google Camera ）将无法运行。\n\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\">[](http://sns.juziyue.com/webinvite.php?u=94887)&nbsp;今天你[菊子曰](http://sns.juziyue.com/webinvite.php?u=94887)了么？</div>","slug":"2015.11.08安装google 框架 service 一系列","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7kb0007uco4uahmwo6p","content":"<p>装了cm还有其他一些国产ui直接滤掉了google的一系列被墙的服务。</p>\n<p>但明明又不可或缺。尤其是最近无可救药的爱上了google相册，那无限制的容量让人流口水。</p>\n<p>试了一下各种论坛apk专栏的gms（google mobile service 涉及Android版本 cpu类型 屏幕尺寸，以及各种旧版本都试过了都不行。。我就郁闷了。。</p>\n<p><a href=\"http://www.coolapk.com/apk/com.google.android.gms\" target=\"_blank\" rel=\"external\">各版本gms-酷安网</a>&nbsp; &nbsp; <a href=\"http://www.android-apk.com/zh-cn/2015/02/google-play-store-%E8%88%8A%E7%89%88%E6%9C%AC-apk-%E5%A4%A7%E9%9B%86%E5%90%88/\" target=\"_blank\" rel=\"external\">各种旧版本google</a>&nbsp;&nbsp; <a href=\"http://www.apkmirror.com/?s=google+play+service&amp;post_type=apps_post\" target=\"_blank\" rel=\"external\">各种能找到的google相关旧版本</a>&nbsp;&nbsp; <a href=\"http://sspai.com/30499\" target=\"_blank\" rel=\"external\">少数派的小姿势</a></p>\n<p>因此试了一下传说中的，Open GApps和TK GApps，非常顺滑。一刷就行，不用双清，放在sd里和刷机一样。</p>\n<p>提供了详细列表的<a href=\"http://forum.xda-developers.com/android/software/tk-gapps-t3116347\" target=\"_blank\" rel=\"external\">tk gapps-5.1.X列表</a></p>\n<p>同样提供了详细列表的<a href=\"http://www.androidrootz.com/2015/03/download-android-51x-lollipop-pa-gapps.html\" target=\"_blank\" rel=\"external\">PA Gapps-5.1.X列表</a></p>\n<p><a href=\"http://www.technobuzz.net/download-google-apps-gapps/\" target=\"_blank\" rel=\"external\">GAPPS FOR ANY ANDROID ROM</a>（提供所有安卓版本的GAPPS安装，我成功的刷入了一台老机子nexus 7 在CM12下。震精的是，居然也提供了6.0和我家一加二的安装-。-，MIUI6也适时的出现了</p>\n<p>stock ：最为贴近 Nexus 机型体验的 GApps 版本，包含了 Nexus 机型所预装的所有 Google 服务和 Google 应用。需要注意的是，这个版本会用 Chrome 、 Google Now Launcher 、 Google Keybord 等 Google 应用替换掉 CM 系 ROM 中那些基于 AOSP 代码的相关应用。<br> full ：与 stock 版所包含的内容相同，但不会替换 AOSP 应用。<br> mini ：包含了完整的 Google 服务框架和主流 Google 应用，去掉了 Google Docs 等文档处理应用<br> micro ：包含了完整的 Google 服务框架和少数 Google 应用，如 Gmail 、 Google Calender 、 Google Now Launcher 。<br> nano ：包含完整的 Google 服务框架但不包含多余的 Google 应用。<br> pico：包含了最基础的 Google 服务框架，体积最小，一些依赖完整 Google 框架的应用（如 Google Camera ）将无法运行。</p>\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\"><a href=\"http://sns.juziyue.com/webinvite.php?u=94887\" target=\"_blank\" rel=\"external\"></a>&nbsp;今天你<a href=\"http://sns.juziyue.com/webinvite.php?u=94887\" target=\"_blank\" rel=\"external\">菊子曰</a>了么？</div>","excerpt":"","more":"<p>装了cm还有其他一些国产ui直接滤掉了google的一系列被墙的服务。</p>\n<p>但明明又不可或缺。尤其是最近无可救药的爱上了google相册，那无限制的容量让人流口水。</p>\n<p>试了一下各种论坛apk专栏的gms（google mobile service 涉及Android版本 cpu类型 屏幕尺寸，以及各种旧版本都试过了都不行。。我就郁闷了。。</p>\n<p><a href=\"http://www.coolapk.com/apk/com.google.android.gms\">各版本gms-酷安网</a>&nbsp; &nbsp; <a href=\"http://www.android-apk.com/zh-cn/2015/02/google-play-store-%E8%88%8A%E7%89%88%E6%9C%AC-apk-%E5%A4%A7%E9%9B%86%E5%90%88/\">各种旧版本google</a>&nbsp;&nbsp; <a href=\"http://www.apkmirror.com/?s=google+play+service&amp;post_type=apps_post\">各种能找到的google相关旧版本</a>&nbsp;&nbsp; <a href=\"http://sspai.com/30499\">少数派的小姿势</a></p>\n<p>因此试了一下传说中的，Open GApps和TK GApps，非常顺滑。一刷就行，不用双清，放在sd里和刷机一样。</p>\n<p>提供了详细列表的<a href=\"http://forum.xda-developers.com/android/software/tk-gapps-t3116347\">tk gapps-5.1.X列表</a></p>\n<p>同样提供了详细列表的<a href=\"http://www.androidrootz.com/2015/03/download-android-51x-lollipop-pa-gapps.html\">PA Gapps-5.1.X列表</a></p>\n<p><a href=\"http://www.technobuzz.net/download-google-apps-gapps/\">GAPPS FOR ANY ANDROID ROM</a>（提供所有安卓版本的GAPPS安装，我成功的刷入了一台老机子nexus 7 在CM12下。震精的是，居然也提供了6.0和我家一加二的安装-。-，MIUI6也适时的出现了</p>\n<p>stock ：最为贴近 Nexus 机型体验的 GApps 版本，包含了 Nexus 机型所预装的所有 Google 服务和 Google 应用。需要注意的是，这个版本会用 Chrome 、 Google Now Launcher 、 Google Keybord 等 Google 应用替换掉 CM 系 ROM 中那些基于 AOSP 代码的相关应用。<br> full ：与 stock 版所包含的内容相同，但不会替换 AOSP 应用。<br> mini ：包含了完整的 Google 服务框架和主流 Google 应用，去掉了 Google Docs 等文档处理应用<br> micro ：包含了完整的 Google 服务框架和少数 Google 应用，如 Gmail 、 Google Calender 、 Google Now Launcher 。<br> nano ：包含完整的 Google 服务框架但不包含多余的 Google 应用。<br> pico：包含了最基础的 Google 服务框架，体积最小，一些依赖完整 Google 框架的应用（如 Google Camera ）将无法运行。</p>\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\"><a href=\"http://sns.juziyue.com/webinvite.php?u=94887\"></a>&nbsp;今天你<a href=\"http://sns.juziyue.com/webinvite.php?u=94887\">菊子曰</a>了么？</div>"},{"title":"Android 丢lib","id":"200","date":"2013-05-19T19:59:55.000Z","_content":"\nandroid极其容易发生的NoClassDefFoundError错误 \n在csdn和stackflow都有人提问。。。最终的解决方案是：\n1.建一个libs包（名字不楞换）libs右键->Build path->Use as source folder 并将所需的jar包丢进去 jar包也要加入buildpath\n2.工程右键 java build path ->order and export 中勾选android private library 并置顶","source":"_posts/Android 丢lib.md","raw":"---\ntitle: 'Android 丢lib'\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - mark\n  - 吐槽\nid: 200\ndate: 2013-05-20 03:59:55\n---\n\nandroid极其容易发生的NoClassDefFoundError错误 \n在csdn和stackflow都有人提问。。。最终的解决方案是：\n1.建一个libs包（名字不楞换）libs右键->Build path->Use as source folder 并将所需的jar包丢进去 jar包也要加入buildpath\n2.工程右键 java build path ->order and export 中勾选android private library 并置顶","slug":"Android 丢lib","published":1,"updated":"2016-04-13T09:09:57.874Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7ke0009uco4fogw0bi9","content":"<p>android极其容易发生的NoClassDefFoundError错误<br>在csdn和stackflow都有人提问。。。最终的解决方案是：<br>1.建一个libs包（名字不楞换）libs右键-&gt;Build path-&gt;Use as source folder 并将所需的jar包丢进去 jar包也要加入buildpath<br>2.工程右键 java build path -&gt;order and export 中勾选android private library 并置顶</p>","excerpt":"","more":"<p>android极其容易发生的NoClassDefFoundError错误<br>在csdn和stackflow都有人提问。。。最终的解决方案是：<br>1.建一个libs包（名字不楞换）libs右键-&gt;Build path-&gt;Use as source folder 并将所需的jar包丢进去 jar包也要加入buildpath<br>2.工程右键 java build path -&gt;order and export 中勾选android private library 并置顶</p>"},{"title":"Android为毛耗电[1]","id":"889","date":"2015-12-28T15:34:25.000Z","_content":"\n**<font color=\"#000000\"></font>****<font color=\"#000000\" size=\"4\"><font face=\"微软雅黑 Light\">本文只讨论安卓手机软节电，不负责推荐底包、rom、调频调压方案，<font color=\"#ff0000\">刷机root后果自负。</font></font></font>**\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">**纯硬货，只想节电看后文。**</font>\n\n<!-- more -->\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">使用安德猴主要还是谷歌的情怀。最近无可救药的恋上了无线高质量同步的Google相册和Keep。此外Google Contact和Gmail也时不时要收一下。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">问题是。。墙内不能随时翻。国内流氓自启和相互唤醒严重影响待机时间。如何破？首先搞清楚什么在耗电。再来解决怎么防流氓的同时不影响收发消息体验。</font>\n\n<font color=\"#333333\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">这里提到的几个概念是安猪手机由于真后台，而造成的各种能耗电耗流量元凶——四大组件</font>**<font color=\"#ff0000\">Activity、Service、BroadCastReceiver、ContentProvider</font>。**</font></font></font>\n\n**<font color=\"#333333\" size=\"4\" face=\"微软雅黑 Light\">耗电--一定是这四个中的一个在以某种方式运行</font>**\n\n<font color=\"#000000\" size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">**Activity**</font>简言之就是前台窗体可视界面它上面可以显示一些控件也可以监听并处理用户的事件做出响应。你跳转到一个程序的界面、里面可能嵌套了很多个Activity。也有的一个Activity自成一个界面，例如第一次启动的引导界面。当然，程序猿代码风格迥异，一个<font size=\"4\">Activity有的直接盖在一个上面，这样按下返回键销毁当前的能直接返回上一个；有的流程和任务则直接生成新Activity把当前的干掉。一些广告，一些无聊的需求，如淘宝摇一摇、美图下游戏，你完全不想要，则可以通过阻止Activity启动的方式，干掉。这样的做法可以降低内存消耗。但如果代码流程，若写入了不开启这个Activity就没法运行，很可能造成FC。因此测试Activity阻止就需要很谨慎。网路也有很多大神提供了Activity的阻止列表。但App更新极快，同时包名和Activity的命名方式更加让人难以捉摸，就相当难以防范。</font></font></font>\n\n<font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">**Activity**</font>之间通过<font color=\"#ff0000\">Intent</font>进行通信，它描述的事某一个事件（单机、浏览、编辑）。也就是说这个Activity的一些参数在Activity跳转时，通过把参数塞入Intent这样一个对象，在另一个Activity读取。在Intent的描述结构中，有两个最重要的部分：动作和动作对应的数据。而IntentFilter则对应一个Activity能做哪些Intent。IntentFilter通常写入Android的AndroidManifest文件中定义好。</font></font></font>\n\n<font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">**BroadCastReceiver**</font>（广播接收器）它是监听响应各种手机变化并作出响应反应的组件。例如打进电话某个App调出号码查询，例如WiFi网络改变某App可以进行同步。这些监听并不经常是我们需要的，同时如果App写的极差，接收的广播级多，也会造成资源的浪费也相当耗电。它并不会产生一个界面，但是它能唤起一个Activity或者Service对事件进行相应。最常见的就是电话来了闪灯响铃，最讨厌的就是有Wifi了发个通知广告。甚至，当一个App装过还启动过，由于设置了开机启动的响应或网络状况的变化响应，都会产生通知。然而与Activity一样，阻止某一种广播接收同样会可能造成应用使用不正常，但FC情况相当少，测试的时候需要相当小心，但这里的组件命名方式都较为规范，因此测试起来也会比较顺利。</font></font></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">监听广播同样可以视为一个事件，使用Intent对其参数进行传递。这些事件，就是通常意义上的权限，可以查看联系人、可以监听电话等。许多监控App都能查看并修改应用程序能够监听的内容。注册广播接收器可以写入一个App的AndroidManifest.xml中进行静态注册，若完成时间比较长必须通过线程，放进Service后台中运行，否则容易造成程序卡顿；也可以程序动态注册，当Activity关闭后，监听广播也关闭，这样的做法比较省电，但是关闭程序就无法接受一些通知和广告。（需要完全退出或者多任务杀掉）因此大多数App都采用静态注册，App不启动，也能通过订阅的广播触发，例如开机启动触发、时间变化触发等。</font>\n\n<font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">**Service**</font>（服务）也是无界面的组件，它通过后台长时间的运行来进行运行一些监测程序，例如后台听歌单曲循环等，后台轮询查询最新消息的微博。配合BroadCastReceiver使用效果极佳耗电也极棒。一个App很可能有相当多的Service在后台挂着，同时一个流氓集团的Service也会相互唤醒保证一个被杀掉的时候又自启动。但乱杀也会造成严重的后果，一些闹钟，一些天气，一些消息软件误杀后没有了后台Service做消息推送，就会错过重要的事情。</font></font></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">一个Service不能自己运行。首次启动需要create再start，第二次之后就只用start需要别的启动或触发。但Service一旦启动，就与调用者无关了。需要停止service需要调用stop方法同时销毁destroy。可以使用bindservice让service随着调用者关闭而终止。</font>\n\n<font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">**ContentProvider**</font>(内容提供者)一个应用程序的指定数据集提供给其他应用程序。这些数据可以存储在文件系统中、在一个SQLite数据库、或以任何其他合理的方式。其他应用可以通过ContentResolver类(见ContentProviderAccessApp例子)从该内容提供者中获取或存入数据.(相当于在应用外包了一层壳),最常见的就是支付婊在别的应用中的调用，它提供了一个统一的支付接口，写在一个内部路径URL里。</font></font></font>\n\n<font color=\"#ff0000\" size=\"4\" face=\"微软雅黑 Light\">四大组件启动，</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">除了ContentProvider是通过别的应用程序调用ContentResolver 发出内容请求后激活外，其他三个都是通过Intent异步消息激活。\nActivity的激活通过传递一个Intent 对象至<font color=\"#ff0000\">Context.startActivity()或Activity.startActivityForResult()</font>以载入（或指定新工作给）一个activity。 前面的函数直接启动的Activity，可以查看Intent中传入的参数。若期待新启动的Activity返回一个值（例如填写个人信息提交返回是否成功）就调用后面那个函数，并调用onActivityResult() 查询返回结果. \nService的激活可以通过传递一个Intent 对象至<font color=\"#ff0000\">Context.startService()或Context.bindService()</font>前者Android 调用服务的onStart()方法并将Intent 对象传递给它，后者Android 调用服务的onBind()方法将这个Intent 对象传递给它\n发送广播可以通过传递一个Intent 对象至给<font color=\"#ff0000\">Context.sendBroadcast() 、Context.sendOrderedBroadcast()或Context.sendStickyBroadcast()。</font>Android 会调用所有对此广播有兴趣的广播接收器的onReceive()方法，将intent 传递给它们</font></p>\n\n<font color=\"#ff0000\" size=\"4\" face=\"微软雅黑 Light\">四大组件销毁时，</font>\n\n<font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">**ContentProvider**</font>通过别的应用程序调用，消息处理完毕即销毁（如调用图片viewer看图，调用支付接口付款）。<font color=\"#ff0000\">**BroadCastReceiver**</font>则注册在系统中监听，这两者都无需主动人为关闭，可以直接在权限中限制。其中BroadCastReceiver的生命周期只有十秒，否则就会报ANR(Application No Response)程序无响应的消息。\n**<font color=\"#ff0000\">Activity</font>**则通过finish()函数退出。一般情况下，按下返回退出键，或在多任务窗口杀掉都能直接关闭显式的Activity。有时直接按下Home键则会在后台缓存（Process），当切换过多个应用后，切回来时还能完整的保留原先打开时候的数据和窗口。当然，这样的过程会占用内存空间（RAM），同时也消耗一定的电量（比较少）。当后台运行过多缓存时，部分低内存手机会出现明显的卡顿。Android5.0之后的系统做的不错，能够按照优先级杀掉缓存应用。\n**<font color=\"#ff0000\">Service</font>**是个比较头疼的东西。尽管App可以调用<font color=\"#ff0000\">Context.stopService()</font>方法关闭服务，或使用<font color=\"#ff0000\">bindService()</font>绑定调用的组件关闭，但，流氓才不会这么做。\n通常，手机应用中都看到正在运行的x个进程和y个服务。进程由多个线程组成，其中，主线程主要负责全局的参数传递，一些核心启动器及主界面的显示。而一些时间较长的函数，如获取多个图片，获取大量的数据，可以写在一个子线程，对主界面交互可以进行异步刷新，否则会造成主界面的卡顿。而当程序退居后台后，子线程依然处理数据，但没有了Activity进行联系，因此可以通过Service进行管理。由于Service并不负责应用层面的复杂操作，只对数据进行处理传递，同时可以写进单独的进程中，因而更为便利。</font></font></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">这里总结一下Service能被启动&amp;被守护的各种方式。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">1.打开应用后，直接显而易见的调用它想要完成的Service，此时按照一般的逻辑，理应是退出App关闭Activity后就会stopservice.</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">2.注册一个广播，可以按时钟、按网络变化、屏幕变化等，每次触发这些广播，就会检查一次Service的状况。遇到杀掉就重启。此时应当关注app的权限及其注册的广播。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">3.重写Service里的函数，在被杀时自动重启；配置到单独的进程中；配置安卓persistent=true；设置前台foreground=true.这些情况，在root情况下很容易被进程管理的杀掉</font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">4.双Service或多Service守护，在AndroidManifest.xml里面定义Service时加入android:process=\":service1\"</font>\n</font></font>\n\n<pre class=\"brush: xml; gutter: true; first-line: 1; highlight: []; html-script: false\">&lt;service android:enabled=\"true\" \nandroid:name=\"com.service.demo.Service1\" \nandroid:process=\":service1\"&gt;\n&lt;service&gt;\n&lt;service android:enabled=\"true\" \nandroid:name=\"com.service.demo.Service2\" \nandroid:process=\":service2\"&gt;\n&lt;service&gt;  \n</pre>\n\n&lt;\n\np align=\"left\"><span><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">关键的Point是触发了service的onTrimMemory()函数。又分别重新启动。</font></span></span>\n\n<span><span><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\"></font></font></font></span></span>&nbsp;\n\n<span><span><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">5.Wakelock。Android机制下有一个唤醒锁，可以唤醒休眠中的手机。</font><font color=\"#000000\">WakeLock阻止应用处理器（Application <wbr>Processor）挂起</font><font color=\"#000000\">，确保关键代码的运行，通过中断唤起应用处理器（Application <wbr>Processor），可以阻止屏幕变暗。一旦有有效的wakelock，系统就不能进入深度睡眠（Deep Sleep）。一般在熄屏传输文件、下歌中使用。被滥用后，后果不堪设想。</font></font></font></span></span>\n\n<span><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">AlarmManage有一个AlarmManagerService,该服务程序主要维护app注册下来的各类Alarm,并且一直监听 Alarm设备，一旦有Alarm触发，或者是Alarm事件发生，AlarmManagerService就会遍历Alarm列表，找到相应的注册 Alarm并发出广播。Alarm <wbr>Manager会维持一个cpu的wake <wbr>lock。这样能保证电话休眠时，也能处理alarm的广播。一旦alarm <wbr>receiver的onReceive() <wbr>方法执行完，wake <wbr>lock会迅速被释放。如果在receiver中开启一个service，有可能service还没启动，wake <wbr>lock已经被释放了。所以此时要实现单独的wake <wbr>lock策略。</font></span></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">这也是一般不root不能根治的唤醒service的手段。App通过反复注册系统应用，调用级别高的Wakelock使得手机很难进入低频率的待机状态。</font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">6.注册成为系统app同时包名混乱的编写。隐藏需要调用的service。一般没root的做不到。</font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">所以，杀进程很容易，杀会自启的service也不难，难的是杀各种唤醒。</font></span>\n\n<font size=\"4\" face=\"微软雅黑 Light\"></font>\n\n<font size=\"4\" face=\"微软雅黑 Light\">\n\n<div align=\"left\">\n\n* * *\n\n</div>\n\n</font>\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">这里提到两个重要概念：</font></span>\n\n<span><font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">**Wakelock**</font>。唤醒锁；<font color=\"#ff0000\">**Alarm**</font>。定时器</font></font></font></span>\n\n<span><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">**Wakelock**</font><font color=\"#000000\">定义了一个接口，能让App有权限，在停止交互、黑屏状况下</font><font color=\"#ff0000\">阻止手机休眠</font><font color=\"#000000\">，运行关键而必要的一些代码，通常是账户同步、消息推送。<span>Android手机有两个处理器，一个叫Application Processor（AP），一个叫Baseband Processor（BP）。AP是ARM架构的处理器，用于运行Linux+Android系统；BP用于运行实时操作系统（RTOS），通讯协议栈运行于BP的RTOS之上。非通话时间，BP的能耗基本上在5mA左右，而AP只要处于非休眠状态，能耗至少在50mA以上，执行图形运算时会更高 。此外耗电大户wifi在100mA左右，LCD灯也在100mA左右。而进入休眠的手机大部分代码会停止运行。但，并不是很容易进入深度休眠的状态。</span></font></font></font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\"><span>wakelock针对的是<font color=\"#ff0000\">某个Activity，而不是整个app</font>。因此，获取和释放wakelock在单个Activity中进行。</span></font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\"><span>对于唤醒锁，官方文档中的解释是：</span></font></span>\n\n[<font color=\"#000000\" size=\"4\" face=\"华文中宋\">PowerManager</font>](http://developer.android.com/reference/android/os/PowerManager.html#goToSleep(long))<font color=\"#000000\" size=\"4\" face=\"华文中宋\">:This class gives you control of the power state of the device.</font>\n\n[<font color=\"#000000\" size=\"4\" face=\"华文中宋\">PowerManager.WakeLock</font>](http://developer.android.com/reference/android/os/PowerManager.WakeLock.html)<font color=\"#000000\" size=\"4\" face=\"华文中宋\">: lets you say that you need to have the device on.</font>\n\n<font color=\"#ff0000\" size=\"4\" face=\"微软雅黑 Light\">只要系统中存在任一有效的wake_lock，系统就不能进入深度休眠，但可以进行设备的浅度休眠操作。</font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">Android定义了几种低功耗状态，</font>：**<font color=\"#ff0000\">earlysuspend、suspend、hibernation.</font>**</font></font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\">1) <font color=\"#ff0000\">**earlysuspend**</font><font color=\"#000000\">（浅度休眠），</font><font color=\"#000000\">也有称standby</font></font></font><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">: 是一种低功耗的状态,某些设备可以选择进入某种功耗较低的状态,比如 LCD可以降低亮度或灭掉;它不会受到wakelock阻止。例如接收黑屏手势。\n</font>2) <font color=\"#ff0000\">**suspend**</font><font color=\"#000000\">（休眠），也有称sleep（bad nomenclature）: 是指除电源管理以外的其他外围模块以及cpu均不工作,只有内存保持自刷新的状态; 一般休眠到RAM</font></font></font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\">3) <font color=\"#ff0000\">**hibernation**</font><font color=\"#000000\">（冬眠）是指所有内存镜像都被写入磁盘（disk）中,然后系统关机,恢复后系统将能恢复到“关机”之前的状态。是最彻底的低功耗模式，它把所有内存镜像都写入磁盘中，然后系统关机，是Linux内核系统级的休眠。</font></font></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">\n\nPowerManager.WakeLock有加锁与解锁两种状态，而加锁的形式有两种:\n\n①永久锁住，这种锁除非显式的放开，否则是不会解锁的，所以用起来需要非常小心！\n\n②超时锁，到时间后就会解锁，而创建WakeLock后，有两种加锁机制: ①不计数锁机制，②计数锁机制(默认)可通过setReferenceCounted(boolean value)来指定,区别在于: 前者无论acquire( )多少次，一次release( )就可以解开锁。 而后者则需要(--count == 0)的时候，同样当(count == 0)才会去申请锁 所以，WakeLock的计数机制并不是正真意义上对每次请求进行申请/释放一个锁; 只是对同一把锁被申请/释放的次数来进行统计，然后再去操作！</font><font face=\"微软雅黑 Light\"><font color=\"#000000\"><font size=\"4\">该操作可通过setReferenceCounted(boolean value)设置。</font></font></font>\n\n<font color=\"#000000\" face=\"微软雅黑 Light\">当然，需要用到权限<pre>&lt;uses-permission android:name=\"android.permission.WAKE_LOCK\"/&gt;</pre><pre>&lt;uses-permission android:name=\"android.permission.DEVICE_POWER\"/&gt;</pre></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">锁有两种类型：</font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">WAKE_LOCK_SUSPEND：这种锁会防止系统进入睡眠(suspend)。 \nWAKE_LOCK_IDLE：这种锁不会影响系统的休眠，用于阻止系统在持有锁的过程中进入低功耗状态。即直到wake_lock被释放，系统才会从idle状态进入低功耗状态，此低功耗状态将使中断延迟或禁用一组中断</font> </font></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">有3个地方让<font color=\"#ff0000\">系统直接开始挂起</font>suspend()， 分别是:</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">&nbsp;&nbsp;&nbsp; • 在wake_unlock()中， 如果发现解锁以后没有任何其他的wake lock了，就开始休眠\n&nbsp;&nbsp;&nbsp; • 在定时器都到时间以后，定时器的回调函数会查看是否有其他的wake lock，如果没有，就在这里让系统进入睡眠。\n&nbsp;&nbsp;&nbsp; • 在wake_lock() 中，对一个wake lock加锁以后，会再次检查一下有没有锁， 这里的检查是没有必要的， 更好的方法是使加锁的这个操作原子化，而不是繁冗的检查，而且这样的检查也有可能漏掉。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">如下是一些常见的调用wakelock的操作\n\n</font>\n\n<table width=\"80%\" border=\"0\">\n<tbody>\n<tr>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">应用</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">操作</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">唤醒锁的服务</font>\n</td>\n<td width=\"20%\" align=\"center\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">运行状态</font></td></tr>\n<tr>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">任意</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">按下UI中的button或listview</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">PowerManagerService</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">启用并在5秒后释放锁定</font>\n</td></tr>\n<tr>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">地图/导航</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">启用地图或进入导航</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">gps-lock</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">锁定并使用GPS直到退出应用或手动设置取消GPS</font>\n</td></tr>\n<tr>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">视频软件</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">观看视频流</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">PowerManagerService</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">视频播放过程中一直启用唤醒锁</font>\n</td></tr>\n<tr>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">音乐软件</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">听歌</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">PowerManagerService</font>\n</td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">音乐播放过程中一直启用唤醒锁</font></td></tr></tbody></table>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">Video和 Music 应用能够很好地展示不同级别的唤醒锁。 用户播放视频时，Video应用将会启用唤醒锁。 在播放视频的整个过程中，显示器会保持开启状态（忽略系统的显示设置）。 但是，如果用户在播放过程中按下了电源按钮，设备将会挂起，这会导致显示器关闭以及音频/视频停止播放。 Music 应用在播放音频时使用不同的唤醒锁。 显示设置无法更改，因此设备的屏幕将会根据用户的显示设置来关闭。 显示器关闭后，唤醒锁会让 CPU 保持活动状态以便音频能够继续播放 — 即使用户按下了电源按钮。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">上图可见，<font color=\"#ff0000\">PowerManagerService</font>是一项使用率非常高的wakelock调用的操作，它是Android上层电源管理服务，属于<font color=\"#ff0000\">内核唤醒锁,适用于所有局部唤醒锁（partial wakelock 后文提到）的容器</font>。主要负责系统待机、屏幕背光、按键背光、键盘背光以及用户事件的处理。这些可在后文的wakelock detector软件中看到。通过锁的申请和释放以及默认待机时间来控制系统的待机状态，通过系统的灭屏时间及用户操作的事件状态来控制背光暗亮。此外该服务还包括了光线、距离传感器上层查询与控制、LCD灯控制。</font>\n\n<font color=\"#000000\" face=\"微软雅黑 Light\">其他的内核唤醒锁有：</font>\n\n<font color=\"#000000\">Wlan_rx： 当通过 Wi-Fi* 发送或接收数据时由内核控制。</font>\n\n<font color=\"#000000\">Sync： 在同步流程运行时启用。</font>\n\n<font color=\"#000000\">Alarm_rtc： 控制告警（当应用或流程执行定期检查时使用）。</font>\n\n<font color=\"#000000\">Main： 保持内核处于唤醒状态。 系统进入挂起模式时，这是最后一个被释放的唤醒锁。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">自最初版本的Android OS 的API中就设置了Android.OS.PowerManager.WakeLock类 </font>[<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">https://developer.xamarin.com/api/type/Android.OS.PowerManager+WakeLock/</font>](https://developer.xamarin.com/api/type/Android.OS.PowerManager+WakeLock/)\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">一下为Java代码应用层的操作。</font>&nbsp;\n\n<pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">PowerManager pm = (PowerManager) getSystemService(Context.POWER_SERVICE);//创建pm对象\nPowerManager.WakeLock wl = pm.newWakeLock(PowerManager.SCREEN_DIM_WAKE_LOCK, \"Tag\");\n//第一个参数为flag,即后文提到的六个标记；最后一个参数为实例名，可以换成其他的\nwl.acquire(); //唤醒点亮屏幕 获取wakelock\nwl.release(); //恢复屏幕到黑暗 释放wakelock</pre>\n\n&nbsp;\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">2.1 API Level7开始增加了一个判断屏幕是否处于点亮状态可以使用public boolean isScreenOn ()这个方法，代码为</font>\n\n<pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">PowerManager pm = (PowerManager) getSystemService(Context.POWER_SERVICE);\nboolean isScreenOn = pm.isScreenOn();\n</pre>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">对它进行实例化。</font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">Wakelock源码简介</font>&nbsp; </font></font>[<font size=\"4\" face=\"微软雅黑 Light\">http://www.07net01.com/2015/07/870479.html</font>](http://www.07net01.com/2015/07/870479.html)\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">PowerManager和Wakelock申请 http://blog.csdn.net/wh_19910525/article/details/8287202</font>\n<p align=\"left\"><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">Android PowerManager API 介绍了4种用于更改设备电源状态的<font color=\"#ff0000\">唤醒锁标记</font>：\n\n</font></span>\n<table width=\"80%\" border=\"0\">\n<tbody>\n<tr>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">标记值</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">CPU/场景</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">屏幕</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">键盘</font></td></tr>\n<tr>\n<td width=\"20%\"><font color=\"#ff0000\" size=\"4\" face=\"微软雅黑 Light\">PARTIAL_WAKE_LOCK</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">开启-长时间运行的后台service</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">关闭</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">关闭</font></td></tr>\n<tr>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">SCREEN_DIM_WAKE_LOCK</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">开启-除非必须保持CPU运行至运算完成，否则尽量使用FLAG_KEEP_SCREEN_ON</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">低亮度</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">关闭</font></td></tr>\n<tr>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">SCREEN_BRIGHT_WAKE_LOCK</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">同上</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">高亮度</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">关闭</font></td></tr>\n<tr>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">FULL_WAKE_LOCK</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">同上</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">高亮度</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">调亮</font></td></tr></tbody></table>\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">需要注意的是 API17开始，FULL_WAKE_LOCK将被弃用，取而代之的是FLAG_KEEP_SCREEN_ON 因此有的检测软件也将屏幕亮屏所单独提出来，表明调用该锁时目的是保证屏幕不会超时熄灭。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">除了四个标记值外，还提供了两个Flag配合使用。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">ACQUIRE_CAUSES_WAKEUP：默认情况下唤醒锁并不是马上开启CPU、屏幕或者调整键盘的亮度（对于屏幕处于低亮度或高亮度、键盘处于高亮，唤醒锁只是在被开启后，延续这一状态）但如果加上这一标记，就可让屏幕或键盘亮度未开启的状态下，马上开启它们。典型的例子就是受到一个重要的notification时（短信、邮件等），需要马上点亮屏幕。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">ON_AFTER_RELEASE：当wake lock被释放的时候，当前调用wake lock的activity的计数器会被重置，所以屏幕会继续亮一段时间。</font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">因此，Android中通常是这么写。</font>\n</font></font>\n<div align=\"center\"><pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">PowerManager pm = (PowerManager) context.getSystemService(Context.POWER_SERVICE);\n\n WakeLock sCpuWakeLock = pm.newWakeLock( \n                PowerManager.FULL_WAKE_LOCK | \n                PowerManager.ACQUIRE_CAUSES_WAKEUP,\"okTag\"); \n if (sCpuWakeLock!= null) {          \n sCpuWakeLock.release(); \n          sCpuWakeLock = null; \n\n}\n</pre></div>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\"></font>&nbsp;\n\n**<font color=\"#ff0000\">注意</font>**：如果申请了<font color=\"#ff0000\">partial wakelock</font>,那么即使按Power键,系统也不会进Sleep,如Music播放时。所有的锁必须成对的使用, 如果申请了而没有及时释放，会造成系统故障。如申请了partial wakelock,而没有及时释放, 那系统就永远进不了Sleep模式.\n\n因此，partial wakelock作为6中标识中，需最为谨慎使用的一个。BBS也专门指出了partial wakelock造成的电量损耗及待机时长。其余的则可标记为屏幕锁，辅助标记CPU锁。\n\n<font color=\"#000000\" face=\"微软雅黑 Light\">![](http://ww4.sinaimg.cn/large/68eb7c93gw1eztpciku00j20de0bjjsd.jpg)</font>\n\n<font size=\"4\"><font color=\"#000000\" face=\"微软雅黑 Light\">**上图表明了App内部、Android框架及内核硬件在唤醒锁交互中的流程。**</font></font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">**AlarmManager**</font><font color=\"#000000\">，有一个AlarmManagerService,该服务程序主要维护app注册下来的各类Alarm,并且一直监听Alarm设备，一旦有Alarm触发，或者是Alarm事件发生，AlarmManagerService就会遍历Alarm列表，找到相应的注册Alarm并发出广播，是Android中常用的一种<font color=\"#ff0000\">系统级别的提示服务</font>，在特定的时刻为我们广播一个指定的Intent。通常我们使用 PendingIntent，可以理解为Intent的封装包，在Intent上在加个指定的动作。在使用Intent的时候，我们还需要在执行startActivity、startService或sendBroadcast才能使Intent有用。而PendingIntent的话就是将这个动作包含在内了。</font></font></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">闹钟响起，实际上是系统发出了为这个<font color=\"#ff0000\">闹钟注册的广播</font>，会自动开启目标应用。这种做法可以在某一时刻当做唤醒应用。注册的闹钟在设备睡眠的时候仍然会保留，可以选择性地设置是否唤醒设备，但是当设备关机和重启后，闹钟将会被清除。在alarm的receiver的onReceive()方法被执行的时候，Alarm Manager持有一个CPU唤醒锁，这样就保证了设备在处理完广播之前不会sleep。</font>\n\n<span><font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\">有4种Alarm类型： <wbr></font></font></font></span></p>\n\n<font color=\"#000000\"><font size=\"4\" face=\"微软雅黑 Light\">1)</font><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">RTC_WAKEUP <wbr>\n</font>在指定的时刻（设置Alarm的时候），唤醒设备来触发Intent。（闹钟）</font></font></font><font size=\"4\" face=\"微软雅黑 Light\"> </font>\n\n<span></span><span><font color=\"#000000\"><font size=\"4\" face=\"微软雅黑 Light\">2)<font color=\"#ff0000\">RTC</font> <wbr>\n在一个显式的时间触发Intent，但不唤醒设备。<wbr><wbr><wbr>\n3)</font><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">ELAPSED_REALTIME <wbr>\n</font>从设备启动后，如果流逝的时间达到总时间，那么触发Intent，但不唤醒设备。流逝的时间包括设备睡眠的任何时间。注意一点的是，时间流逝的计算点是自从它最后一次启动算起。 <wbr>&nbsp;<wbr>&nbsp;<wbr>\n4)<font color=\"#ff0000\">ELAPSED_REALTIME_WAKEUP</font> <wbr>\n从设备启动后，达到流逝的总时间后，如果需要将唤醒设备并触发Intent。</font></font></font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">这样，唤醒对齐的方案就显得相当便捷，让唤醒次数大大降低。把允许唤醒的应用，按照某一合理的时刻进行排序和对齐，不会凌乱的唤醒手机而出现过度的cpu变频造成的耗电。</font></span>\n\n<span><font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">软节电</font>方案：</font></font></font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">1、对不需要联网、不需要通知的 限制权限&amp;App自调 取消通知、联网等权限 杀注册广播</font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">2、限制通知和自启动、互相启动、相互守护的service 禁启动</font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">3、（千万少做）安全软件狂杀进程process和service</font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">4、限制唤醒时长和对齐唤醒</font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">5、对可识别的Activity禁止</font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">6、对不需要通知、自升级、关闭软件啥也不想让他做的 结晶 禁止、半禁止一切后台</font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">7、争取多冬眠service</font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">8、在合理的时间重启并FQ</font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">So 开搞</font></span>\n\n<span><font color=\"#000000\" face=\"微软雅黑 Light\"></font></span>参考\n\n<span>[http://www.runoob.com/w3cnote/android-tutorial-powermanager.html](http://www.runoob.com/w3cnote/android-tutorial-powermanager.html)&nbsp; PowerManager(电源服务)</span>\n\n[http://www.kancloud.cn/kancloud/android-tutorial/87277](http://www.kancloud.cn/kancloud/android-tutorial/87277 \"http://www.kancloud.cn/kancloud/android-tutorial/87277\") 这俩好像一样、\n\n[http://forum.xda-developers.com/galaxy-s2/general/guide-complete-guide-maximum-battery-t1909996](http://forum.xda-developers.com/galaxy-s2/general/guide-complete-guide-maximum-battery-t1909996 \"http://forum.xda-developers.com/galaxy-s2/general/guide-complete-guide-maximum-battery-t1909996\") 真的是能关的全给关了的大全\n\n<font size=\"4\" face=\"微软雅黑 Light\"></font>\n\n<font size=\"4\" face=\"微软雅黑 Light\"></font>\n\n<font size=\"4\" face=\"微软雅黑 Light\"></font>\n\n[http://lockekk.github.io/jekyll-bootstrap/2014/07/22/Android-Standby/](http://lockekk.github.io/jekyll-bootstrap/2014/07/22/Android-Standby/ \"http://lockekk.github.io/jekyll-bootstrap/2014/07/22/Android-Standby/\") Android Standby 解析查杀软件的弊病","source":"_posts/Android为毛耗电[1].md","raw":"---\ntitle: 'Android为毛耗电[1]'\ncategories:\n  - App强推\n  - 软文\ntags:\n  - Android\nid: 889\ndate: 2015-12-28 23:34:25\n---\n\n**<font color=\"#000000\"></font>****<font color=\"#000000\" size=\"4\"><font face=\"微软雅黑 Light\">本文只讨论安卓手机软节电，不负责推荐底包、rom、调频调压方案，<font color=\"#ff0000\">刷机root后果自负。</font></font></font>**\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">**纯硬货，只想节电看后文。**</font>\n\n<!-- more -->\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">使用安德猴主要还是谷歌的情怀。最近无可救药的恋上了无线高质量同步的Google相册和Keep。此外Google Contact和Gmail也时不时要收一下。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">问题是。。墙内不能随时翻。国内流氓自启和相互唤醒严重影响待机时间。如何破？首先搞清楚什么在耗电。再来解决怎么防流氓的同时不影响收发消息体验。</font>\n\n<font color=\"#333333\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">这里提到的几个概念是安猪手机由于真后台，而造成的各种能耗电耗流量元凶——四大组件</font>**<font color=\"#ff0000\">Activity、Service、BroadCastReceiver、ContentProvider</font>。**</font></font></font>\n\n**<font color=\"#333333\" size=\"4\" face=\"微软雅黑 Light\">耗电--一定是这四个中的一个在以某种方式运行</font>**\n\n<font color=\"#000000\" size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">**Activity**</font>简言之就是前台窗体可视界面它上面可以显示一些控件也可以监听并处理用户的事件做出响应。你跳转到一个程序的界面、里面可能嵌套了很多个Activity。也有的一个Activity自成一个界面，例如第一次启动的引导界面。当然，程序猿代码风格迥异，一个<font size=\"4\">Activity有的直接盖在一个上面，这样按下返回键销毁当前的能直接返回上一个；有的流程和任务则直接生成新Activity把当前的干掉。一些广告，一些无聊的需求，如淘宝摇一摇、美图下游戏，你完全不想要，则可以通过阻止Activity启动的方式，干掉。这样的做法可以降低内存消耗。但如果代码流程，若写入了不开启这个Activity就没法运行，很可能造成FC。因此测试Activity阻止就需要很谨慎。网路也有很多大神提供了Activity的阻止列表。但App更新极快，同时包名和Activity的命名方式更加让人难以捉摸，就相当难以防范。</font></font></font>\n\n<font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">**Activity**</font>之间通过<font color=\"#ff0000\">Intent</font>进行通信，它描述的事某一个事件（单机、浏览、编辑）。也就是说这个Activity的一些参数在Activity跳转时，通过把参数塞入Intent这样一个对象，在另一个Activity读取。在Intent的描述结构中，有两个最重要的部分：动作和动作对应的数据。而IntentFilter则对应一个Activity能做哪些Intent。IntentFilter通常写入Android的AndroidManifest文件中定义好。</font></font></font>\n\n<font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">**BroadCastReceiver**</font>（广播接收器）它是监听响应各种手机变化并作出响应反应的组件。例如打进电话某个App调出号码查询，例如WiFi网络改变某App可以进行同步。这些监听并不经常是我们需要的，同时如果App写的极差，接收的广播级多，也会造成资源的浪费也相当耗电。它并不会产生一个界面，但是它能唤起一个Activity或者Service对事件进行相应。最常见的就是电话来了闪灯响铃，最讨厌的就是有Wifi了发个通知广告。甚至，当一个App装过还启动过，由于设置了开机启动的响应或网络状况的变化响应，都会产生通知。然而与Activity一样，阻止某一种广播接收同样会可能造成应用使用不正常，但FC情况相当少，测试的时候需要相当小心，但这里的组件命名方式都较为规范，因此测试起来也会比较顺利。</font></font></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">监听广播同样可以视为一个事件，使用Intent对其参数进行传递。这些事件，就是通常意义上的权限，可以查看联系人、可以监听电话等。许多监控App都能查看并修改应用程序能够监听的内容。注册广播接收器可以写入一个App的AndroidManifest.xml中进行静态注册，若完成时间比较长必须通过线程，放进Service后台中运行，否则容易造成程序卡顿；也可以程序动态注册，当Activity关闭后，监听广播也关闭，这样的做法比较省电，但是关闭程序就无法接受一些通知和广告。（需要完全退出或者多任务杀掉）因此大多数App都采用静态注册，App不启动，也能通过订阅的广播触发，例如开机启动触发、时间变化触发等。</font>\n\n<font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">**Service**</font>（服务）也是无界面的组件，它通过后台长时间的运行来进行运行一些监测程序，例如后台听歌单曲循环等，后台轮询查询最新消息的微博。配合BroadCastReceiver使用效果极佳耗电也极棒。一个App很可能有相当多的Service在后台挂着，同时一个流氓集团的Service也会相互唤醒保证一个被杀掉的时候又自启动。但乱杀也会造成严重的后果，一些闹钟，一些天气，一些消息软件误杀后没有了后台Service做消息推送，就会错过重要的事情。</font></font></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">一个Service不能自己运行。首次启动需要create再start，第二次之后就只用start需要别的启动或触发。但Service一旦启动，就与调用者无关了。需要停止service需要调用stop方法同时销毁destroy。可以使用bindservice让service随着调用者关闭而终止。</font>\n\n<font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">**ContentProvider**</font>(内容提供者)一个应用程序的指定数据集提供给其他应用程序。这些数据可以存储在文件系统中、在一个SQLite数据库、或以任何其他合理的方式。其他应用可以通过ContentResolver类(见ContentProviderAccessApp例子)从该内容提供者中获取或存入数据.(相当于在应用外包了一层壳),最常见的就是支付婊在别的应用中的调用，它提供了一个统一的支付接口，写在一个内部路径URL里。</font></font></font>\n\n<font color=\"#ff0000\" size=\"4\" face=\"微软雅黑 Light\">四大组件启动，</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">除了ContentProvider是通过别的应用程序调用ContentResolver 发出内容请求后激活外，其他三个都是通过Intent异步消息激活。\nActivity的激活通过传递一个Intent 对象至<font color=\"#ff0000\">Context.startActivity()或Activity.startActivityForResult()</font>以载入（或指定新工作给）一个activity。 前面的函数直接启动的Activity，可以查看Intent中传入的参数。若期待新启动的Activity返回一个值（例如填写个人信息提交返回是否成功）就调用后面那个函数，并调用onActivityResult() 查询返回结果. \nService的激活可以通过传递一个Intent 对象至<font color=\"#ff0000\">Context.startService()或Context.bindService()</font>前者Android 调用服务的onStart()方法并将Intent 对象传递给它，后者Android 调用服务的onBind()方法将这个Intent 对象传递给它\n发送广播可以通过传递一个Intent 对象至给<font color=\"#ff0000\">Context.sendBroadcast() 、Context.sendOrderedBroadcast()或Context.sendStickyBroadcast()。</font>Android 会调用所有对此广播有兴趣的广播接收器的onReceive()方法，将intent 传递给它们</font></p>\n\n<font color=\"#ff0000\" size=\"4\" face=\"微软雅黑 Light\">四大组件销毁时，</font>\n\n<font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">**ContentProvider**</font>通过别的应用程序调用，消息处理完毕即销毁（如调用图片viewer看图，调用支付接口付款）。<font color=\"#ff0000\">**BroadCastReceiver**</font>则注册在系统中监听，这两者都无需主动人为关闭，可以直接在权限中限制。其中BroadCastReceiver的生命周期只有十秒，否则就会报ANR(Application No Response)程序无响应的消息。\n**<font color=\"#ff0000\">Activity</font>**则通过finish()函数退出。一般情况下，按下返回退出键，或在多任务窗口杀掉都能直接关闭显式的Activity。有时直接按下Home键则会在后台缓存（Process），当切换过多个应用后，切回来时还能完整的保留原先打开时候的数据和窗口。当然，这样的过程会占用内存空间（RAM），同时也消耗一定的电量（比较少）。当后台运行过多缓存时，部分低内存手机会出现明显的卡顿。Android5.0之后的系统做的不错，能够按照优先级杀掉缓存应用。\n**<font color=\"#ff0000\">Service</font>**是个比较头疼的东西。尽管App可以调用<font color=\"#ff0000\">Context.stopService()</font>方法关闭服务，或使用<font color=\"#ff0000\">bindService()</font>绑定调用的组件关闭，但，流氓才不会这么做。\n通常，手机应用中都看到正在运行的x个进程和y个服务。进程由多个线程组成，其中，主线程主要负责全局的参数传递，一些核心启动器及主界面的显示。而一些时间较长的函数，如获取多个图片，获取大量的数据，可以写在一个子线程，对主界面交互可以进行异步刷新，否则会造成主界面的卡顿。而当程序退居后台后，子线程依然处理数据，但没有了Activity进行联系，因此可以通过Service进行管理。由于Service并不负责应用层面的复杂操作，只对数据进行处理传递，同时可以写进单独的进程中，因而更为便利。</font></font></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">这里总结一下Service能被启动&amp;被守护的各种方式。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">1.打开应用后，直接显而易见的调用它想要完成的Service，此时按照一般的逻辑，理应是退出App关闭Activity后就会stopservice.</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">2.注册一个广播，可以按时钟、按网络变化、屏幕变化等，每次触发这些广播，就会检查一次Service的状况。遇到杀掉就重启。此时应当关注app的权限及其注册的广播。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">3.重写Service里的函数，在被杀时自动重启；配置到单独的进程中；配置安卓persistent=true；设置前台foreground=true.这些情况，在root情况下很容易被进程管理的杀掉</font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">4.双Service或多Service守护，在AndroidManifest.xml里面定义Service时加入android:process=\":service1\"</font>\n</font></font>\n\n<pre class=\"brush: xml; gutter: true; first-line: 1; highlight: []; html-script: false\">&lt;service android:enabled=\"true\" \nandroid:name=\"com.service.demo.Service1\" \nandroid:process=\":service1\"&gt;\n&lt;service&gt;\n&lt;service android:enabled=\"true\" \nandroid:name=\"com.service.demo.Service2\" \nandroid:process=\":service2\"&gt;\n&lt;service&gt;  \n</pre>\n\n&lt;\n\np align=\"left\"><span><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">关键的Point是触发了service的onTrimMemory()函数。又分别重新启动。</font></span></span>\n\n<span><span><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\"></font></font></font></span></span>&nbsp;\n\n<span><span><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">5.Wakelock。Android机制下有一个唤醒锁，可以唤醒休眠中的手机。</font><font color=\"#000000\">WakeLock阻止应用处理器（Application <wbr>Processor）挂起</font><font color=\"#000000\">，确保关键代码的运行，通过中断唤起应用处理器（Application <wbr>Processor），可以阻止屏幕变暗。一旦有有效的wakelock，系统就不能进入深度睡眠（Deep Sleep）。一般在熄屏传输文件、下歌中使用。被滥用后，后果不堪设想。</font></font></font></span></span>\n\n<span><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">AlarmManage有一个AlarmManagerService,该服务程序主要维护app注册下来的各类Alarm,并且一直监听 Alarm设备，一旦有Alarm触发，或者是Alarm事件发生，AlarmManagerService就会遍历Alarm列表，找到相应的注册 Alarm并发出广播。Alarm <wbr>Manager会维持一个cpu的wake <wbr>lock。这样能保证电话休眠时，也能处理alarm的广播。一旦alarm <wbr>receiver的onReceive() <wbr>方法执行完，wake <wbr>lock会迅速被释放。如果在receiver中开启一个service，有可能service还没启动，wake <wbr>lock已经被释放了。所以此时要实现单独的wake <wbr>lock策略。</font></span></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">这也是一般不root不能根治的唤醒service的手段。App通过反复注册系统应用，调用级别高的Wakelock使得手机很难进入低频率的待机状态。</font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">6.注册成为系统app同时包名混乱的编写。隐藏需要调用的service。一般没root的做不到。</font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">所以，杀进程很容易，杀会自启的service也不难，难的是杀各种唤醒。</font></span>\n\n<font size=\"4\" face=\"微软雅黑 Light\"></font>\n\n<font size=\"4\" face=\"微软雅黑 Light\">\n\n<div align=\"left\">\n\n* * *\n\n</div>\n\n</font>\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">这里提到两个重要概念：</font></span>\n\n<span><font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">**Wakelock**</font>。唤醒锁；<font color=\"#ff0000\">**Alarm**</font>。定时器</font></font></font></span>\n\n<span><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">**Wakelock**</font><font color=\"#000000\">定义了一个接口，能让App有权限，在停止交互、黑屏状况下</font><font color=\"#ff0000\">阻止手机休眠</font><font color=\"#000000\">，运行关键而必要的一些代码，通常是账户同步、消息推送。<span>Android手机有两个处理器，一个叫Application Processor（AP），一个叫Baseband Processor（BP）。AP是ARM架构的处理器，用于运行Linux+Android系统；BP用于运行实时操作系统（RTOS），通讯协议栈运行于BP的RTOS之上。非通话时间，BP的能耗基本上在5mA左右，而AP只要处于非休眠状态，能耗至少在50mA以上，执行图形运算时会更高 。此外耗电大户wifi在100mA左右，LCD灯也在100mA左右。而进入休眠的手机大部分代码会停止运行。但，并不是很容易进入深度休眠的状态。</span></font></font></font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\"><span>wakelock针对的是<font color=\"#ff0000\">某个Activity，而不是整个app</font>。因此，获取和释放wakelock在单个Activity中进行。</span></font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\"><span>对于唤醒锁，官方文档中的解释是：</span></font></span>\n\n[<font color=\"#000000\" size=\"4\" face=\"华文中宋\">PowerManager</font>](http://developer.android.com/reference/android/os/PowerManager.html#goToSleep(long))<font color=\"#000000\" size=\"4\" face=\"华文中宋\">:This class gives you control of the power state of the device.</font>\n\n[<font color=\"#000000\" size=\"4\" face=\"华文中宋\">PowerManager.WakeLock</font>](http://developer.android.com/reference/android/os/PowerManager.WakeLock.html)<font color=\"#000000\" size=\"4\" face=\"华文中宋\">: lets you say that you need to have the device on.</font>\n\n<font color=\"#ff0000\" size=\"4\" face=\"微软雅黑 Light\">只要系统中存在任一有效的wake_lock，系统就不能进入深度休眠，但可以进行设备的浅度休眠操作。</font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">Android定义了几种低功耗状态，</font>：**<font color=\"#ff0000\">earlysuspend、suspend、hibernation.</font>**</font></font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\">1) <font color=\"#ff0000\">**earlysuspend**</font><font color=\"#000000\">（浅度休眠），</font><font color=\"#000000\">也有称standby</font></font></font><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">: 是一种低功耗的状态,某些设备可以选择进入某种功耗较低的状态,比如 LCD可以降低亮度或灭掉;它不会受到wakelock阻止。例如接收黑屏手势。\n</font>2) <font color=\"#ff0000\">**suspend**</font><font color=\"#000000\">（休眠），也有称sleep（bad nomenclature）: 是指除电源管理以外的其他外围模块以及cpu均不工作,只有内存保持自刷新的状态; 一般休眠到RAM</font></font></font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\">3) <font color=\"#ff0000\">**hibernation**</font><font color=\"#000000\">（冬眠）是指所有内存镜像都被写入磁盘（disk）中,然后系统关机,恢复后系统将能恢复到“关机”之前的状态。是最彻底的低功耗模式，它把所有内存镜像都写入磁盘中，然后系统关机，是Linux内核系统级的休眠。</font></font></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">\n\nPowerManager.WakeLock有加锁与解锁两种状态，而加锁的形式有两种:\n\n①永久锁住，这种锁除非显式的放开，否则是不会解锁的，所以用起来需要非常小心！\n\n②超时锁，到时间后就会解锁，而创建WakeLock后，有两种加锁机制: ①不计数锁机制，②计数锁机制(默认)可通过setReferenceCounted(boolean value)来指定,区别在于: 前者无论acquire( )多少次，一次release( )就可以解开锁。 而后者则需要(--count == 0)的时候，同样当(count == 0)才会去申请锁 所以，WakeLock的计数机制并不是正真意义上对每次请求进行申请/释放一个锁; 只是对同一把锁被申请/释放的次数来进行统计，然后再去操作！</font><font face=\"微软雅黑 Light\"><font color=\"#000000\"><font size=\"4\">该操作可通过setReferenceCounted(boolean value)设置。</font></font></font>\n\n<font color=\"#000000\" face=\"微软雅黑 Light\">当然，需要用到权限<pre>&lt;uses-permission android:name=\"android.permission.WAKE_LOCK\"/&gt;</pre><pre>&lt;uses-permission android:name=\"android.permission.DEVICE_POWER\"/&gt;</pre></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">锁有两种类型：</font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">WAKE_LOCK_SUSPEND：这种锁会防止系统进入睡眠(suspend)。 \nWAKE_LOCK_IDLE：这种锁不会影响系统的休眠，用于阻止系统在持有锁的过程中进入低功耗状态。即直到wake_lock被释放，系统才会从idle状态进入低功耗状态，此低功耗状态将使中断延迟或禁用一组中断</font> </font></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">有3个地方让<font color=\"#ff0000\">系统直接开始挂起</font>suspend()， 分别是:</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">&nbsp;&nbsp;&nbsp; • 在wake_unlock()中， 如果发现解锁以后没有任何其他的wake lock了，就开始休眠\n&nbsp;&nbsp;&nbsp; • 在定时器都到时间以后，定时器的回调函数会查看是否有其他的wake lock，如果没有，就在这里让系统进入睡眠。\n&nbsp;&nbsp;&nbsp; • 在wake_lock() 中，对一个wake lock加锁以后，会再次检查一下有没有锁， 这里的检查是没有必要的， 更好的方法是使加锁的这个操作原子化，而不是繁冗的检查，而且这样的检查也有可能漏掉。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">如下是一些常见的调用wakelock的操作\n\n</font>\n\n<table width=\"80%\" border=\"0\">\n<tbody>\n<tr>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">应用</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">操作</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">唤醒锁的服务</font>\n</td>\n<td width=\"20%\" align=\"center\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">运行状态</font></td></tr>\n<tr>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">任意</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">按下UI中的button或listview</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">PowerManagerService</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">启用并在5秒后释放锁定</font>\n</td></tr>\n<tr>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">地图/导航</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">启用地图或进入导航</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">gps-lock</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">锁定并使用GPS直到退出应用或手动设置取消GPS</font>\n</td></tr>\n<tr>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">视频软件</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">观看视频流</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">PowerManagerService</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">视频播放过程中一直启用唤醒锁</font>\n</td></tr>\n<tr>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">音乐软件</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">听歌</font>\n</td>\n<td width=\"20%\">\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">PowerManagerService</font>\n</td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">音乐播放过程中一直启用唤醒锁</font></td></tr></tbody></table>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">Video和 Music 应用能够很好地展示不同级别的唤醒锁。 用户播放视频时，Video应用将会启用唤醒锁。 在播放视频的整个过程中，显示器会保持开启状态（忽略系统的显示设置）。 但是，如果用户在播放过程中按下了电源按钮，设备将会挂起，这会导致显示器关闭以及音频/视频停止播放。 Music 应用在播放音频时使用不同的唤醒锁。 显示设置无法更改，因此设备的屏幕将会根据用户的显示设置来关闭。 显示器关闭后，唤醒锁会让 CPU 保持活动状态以便音频能够继续播放 — 即使用户按下了电源按钮。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">上图可见，<font color=\"#ff0000\">PowerManagerService</font>是一项使用率非常高的wakelock调用的操作，它是Android上层电源管理服务，属于<font color=\"#ff0000\">内核唤醒锁,适用于所有局部唤醒锁（partial wakelock 后文提到）的容器</font>。主要负责系统待机、屏幕背光、按键背光、键盘背光以及用户事件的处理。这些可在后文的wakelock detector软件中看到。通过锁的申请和释放以及默认待机时间来控制系统的待机状态，通过系统的灭屏时间及用户操作的事件状态来控制背光暗亮。此外该服务还包括了光线、距离传感器上层查询与控制、LCD灯控制。</font>\n\n<font color=\"#000000\" face=\"微软雅黑 Light\">其他的内核唤醒锁有：</font>\n\n<font color=\"#000000\">Wlan_rx： 当通过 Wi-Fi* 发送或接收数据时由内核控制。</font>\n\n<font color=\"#000000\">Sync： 在同步流程运行时启用。</font>\n\n<font color=\"#000000\">Alarm_rtc： 控制告警（当应用或流程执行定期检查时使用）。</font>\n\n<font color=\"#000000\">Main： 保持内核处于唤醒状态。 系统进入挂起模式时，这是最后一个被释放的唤醒锁。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">自最初版本的Android OS 的API中就设置了Android.OS.PowerManager.WakeLock类 </font>[<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">https://developer.xamarin.com/api/type/Android.OS.PowerManager+WakeLock/</font>](https://developer.xamarin.com/api/type/Android.OS.PowerManager+WakeLock/)\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">一下为Java代码应用层的操作。</font>&nbsp;\n\n<pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">PowerManager pm = (PowerManager) getSystemService(Context.POWER_SERVICE);//创建pm对象\nPowerManager.WakeLock wl = pm.newWakeLock(PowerManager.SCREEN_DIM_WAKE_LOCK, \"Tag\");\n//第一个参数为flag,即后文提到的六个标记；最后一个参数为实例名，可以换成其他的\nwl.acquire(); //唤醒点亮屏幕 获取wakelock\nwl.release(); //恢复屏幕到黑暗 释放wakelock</pre>\n\n&nbsp;\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">2.1 API Level7开始增加了一个判断屏幕是否处于点亮状态可以使用public boolean isScreenOn ()这个方法，代码为</font>\n\n<pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">PowerManager pm = (PowerManager) getSystemService(Context.POWER_SERVICE);\nboolean isScreenOn = pm.isScreenOn();\n</pre>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">对它进行实例化。</font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">Wakelock源码简介</font>&nbsp; </font></font>[<font size=\"4\" face=\"微软雅黑 Light\">http://www.07net01.com/2015/07/870479.html</font>](http://www.07net01.com/2015/07/870479.html)\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">PowerManager和Wakelock申请 http://blog.csdn.net/wh_19910525/article/details/8287202</font>\n<p align=\"left\"><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">Android PowerManager API 介绍了4种用于更改设备电源状态的<font color=\"#ff0000\">唤醒锁标记</font>：\n\n</font></span>\n<table width=\"80%\" border=\"0\">\n<tbody>\n<tr>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">标记值</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">CPU/场景</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">屏幕</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">键盘</font></td></tr>\n<tr>\n<td width=\"20%\"><font color=\"#ff0000\" size=\"4\" face=\"微软雅黑 Light\">PARTIAL_WAKE_LOCK</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">开启-长时间运行的后台service</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">关闭</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">关闭</font></td></tr>\n<tr>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">SCREEN_DIM_WAKE_LOCK</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">开启-除非必须保持CPU运行至运算完成，否则尽量使用FLAG_KEEP_SCREEN_ON</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">低亮度</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">关闭</font></td></tr>\n<tr>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">SCREEN_BRIGHT_WAKE_LOCK</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">同上</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">高亮度</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">关闭</font></td></tr>\n<tr>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">FULL_WAKE_LOCK</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">同上</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">高亮度</font></td>\n<td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">调亮</font></td></tr></tbody></table>\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">需要注意的是 API17开始，FULL_WAKE_LOCK将被弃用，取而代之的是FLAG_KEEP_SCREEN_ON 因此有的检测软件也将屏幕亮屏所单独提出来，表明调用该锁时目的是保证屏幕不会超时熄灭。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">除了四个标记值外，还提供了两个Flag配合使用。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">ACQUIRE_CAUSES_WAKEUP：默认情况下唤醒锁并不是马上开启CPU、屏幕或者调整键盘的亮度（对于屏幕处于低亮度或高亮度、键盘处于高亮，唤醒锁只是在被开启后，延续这一状态）但如果加上这一标记，就可让屏幕或键盘亮度未开启的状态下，马上开启它们。典型的例子就是受到一个重要的notification时（短信、邮件等），需要马上点亮屏幕。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">ON_AFTER_RELEASE：当wake lock被释放的时候，当前调用wake lock的activity的计数器会被重置，所以屏幕会继续亮一段时间。</font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">因此，Android中通常是这么写。</font>\n</font></font>\n<div align=\"center\"><pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">PowerManager pm = (PowerManager) context.getSystemService(Context.POWER_SERVICE);\n\n WakeLock sCpuWakeLock = pm.newWakeLock( \n                PowerManager.FULL_WAKE_LOCK | \n                PowerManager.ACQUIRE_CAUSES_WAKEUP,\"okTag\"); \n if (sCpuWakeLock!= null) {          \n sCpuWakeLock.release(); \n          sCpuWakeLock = null; \n\n}\n</pre></div>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\"></font>&nbsp;\n\n**<font color=\"#ff0000\">注意</font>**：如果申请了<font color=\"#ff0000\">partial wakelock</font>,那么即使按Power键,系统也不会进Sleep,如Music播放时。所有的锁必须成对的使用, 如果申请了而没有及时释放，会造成系统故障。如申请了partial wakelock,而没有及时释放, 那系统就永远进不了Sleep模式.\n\n因此，partial wakelock作为6中标识中，需最为谨慎使用的一个。BBS也专门指出了partial wakelock造成的电量损耗及待机时长。其余的则可标记为屏幕锁，辅助标记CPU锁。\n\n<font color=\"#000000\" face=\"微软雅黑 Light\">![](http://ww4.sinaimg.cn/large/68eb7c93gw1eztpciku00j20de0bjjsd.jpg)</font>\n\n<font size=\"4\"><font color=\"#000000\" face=\"微软雅黑 Light\">**上图表明了App内部、Android框架及内核硬件在唤醒锁交互中的流程。**</font></font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">**AlarmManager**</font><font color=\"#000000\">，有一个AlarmManagerService,该服务程序主要维护app注册下来的各类Alarm,并且一直监听Alarm设备，一旦有Alarm触发，或者是Alarm事件发生，AlarmManagerService就会遍历Alarm列表，找到相应的注册Alarm并发出广播，是Android中常用的一种<font color=\"#ff0000\">系统级别的提示服务</font>，在特定的时刻为我们广播一个指定的Intent。通常我们使用 PendingIntent，可以理解为Intent的封装包，在Intent上在加个指定的动作。在使用Intent的时候，我们还需要在执行startActivity、startService或sendBroadcast才能使Intent有用。而PendingIntent的话就是将这个动作包含在内了。</font></font></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">闹钟响起，实际上是系统发出了为这个<font color=\"#ff0000\">闹钟注册的广播</font>，会自动开启目标应用。这种做法可以在某一时刻当做唤醒应用。注册的闹钟在设备睡眠的时候仍然会保留，可以选择性地设置是否唤醒设备，但是当设备关机和重启后，闹钟将会被清除。在alarm的receiver的onReceive()方法被执行的时候，Alarm Manager持有一个CPU唤醒锁，这样就保证了设备在处理完广播之前不会sleep。</font>\n\n<span><font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\">有4种Alarm类型： <wbr></font></font></font></span></p>\n\n<font color=\"#000000\"><font size=\"4\" face=\"微软雅黑 Light\">1)</font><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">RTC_WAKEUP <wbr>\n</font>在指定的时刻（设置Alarm的时候），唤醒设备来触发Intent。（闹钟）</font></font></font><font size=\"4\" face=\"微软雅黑 Light\"> </font>\n\n<span></span><span><font color=\"#000000\"><font size=\"4\" face=\"微软雅黑 Light\">2)<font color=\"#ff0000\">RTC</font> <wbr>\n在一个显式的时间触发Intent，但不唤醒设备。<wbr><wbr><wbr>\n3)</font><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">ELAPSED_REALTIME <wbr>\n</font>从设备启动后，如果流逝的时间达到总时间，那么触发Intent，但不唤醒设备。流逝的时间包括设备睡眠的任何时间。注意一点的是，时间流逝的计算点是自从它最后一次启动算起。 <wbr>&nbsp;<wbr>&nbsp;<wbr>\n4)<font color=\"#ff0000\">ELAPSED_REALTIME_WAKEUP</font> <wbr>\n从设备启动后，达到流逝的总时间后，如果需要将唤醒设备并触发Intent。</font></font></font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">这样，唤醒对齐的方案就显得相当便捷，让唤醒次数大大降低。把允许唤醒的应用，按照某一合理的时刻进行排序和对齐，不会凌乱的唤醒手机而出现过度的cpu变频造成的耗电。</font></span>\n\n<span><font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">软节电</font>方案：</font></font></font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">1、对不需要联网、不需要通知的 限制权限&amp;App自调 取消通知、联网等权限 杀注册广播</font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">2、限制通知和自启动、互相启动、相互守护的service 禁启动</font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">3、（千万少做）安全软件狂杀进程process和service</font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">4、限制唤醒时长和对齐唤醒</font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">5、对可识别的Activity禁止</font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">6、对不需要通知、自升级、关闭软件啥也不想让他做的 结晶 禁止、半禁止一切后台</font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">7、争取多冬眠service</font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">8、在合理的时间重启并FQ</font></span>\n\n<span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">So 开搞</font></span>\n\n<span><font color=\"#000000\" face=\"微软雅黑 Light\"></font></span>参考\n\n<span>[http://www.runoob.com/w3cnote/android-tutorial-powermanager.html](http://www.runoob.com/w3cnote/android-tutorial-powermanager.html)&nbsp; PowerManager(电源服务)</span>\n\n[http://www.kancloud.cn/kancloud/android-tutorial/87277](http://www.kancloud.cn/kancloud/android-tutorial/87277 \"http://www.kancloud.cn/kancloud/android-tutorial/87277\") 这俩好像一样、\n\n[http://forum.xda-developers.com/galaxy-s2/general/guide-complete-guide-maximum-battery-t1909996](http://forum.xda-developers.com/galaxy-s2/general/guide-complete-guide-maximum-battery-t1909996 \"http://forum.xda-developers.com/galaxy-s2/general/guide-complete-guide-maximum-battery-t1909996\") 真的是能关的全给关了的大全\n\n<font size=\"4\" face=\"微软雅黑 Light\"></font>\n\n<font size=\"4\" face=\"微软雅黑 Light\"></font>\n\n<font size=\"4\" face=\"微软雅黑 Light\"></font>\n\n[http://lockekk.github.io/jekyll-bootstrap/2014/07/22/Android-Standby/](http://lockekk.github.io/jekyll-bootstrap/2014/07/22/Android-Standby/ \"http://lockekk.github.io/jekyll-bootstrap/2014/07/22/Android-Standby/\") Android Standby 解析查杀软件的弊病","slug":"Android为毛耗电[1]","published":1,"updated":"2016-04-29T09:13:23.588Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7kh000cuco4y754qa0g","content":"<p><strong><font color=\"#000000\"></font>**</strong><font color=\"#000000\" size=\"4\"><font face=\"微软雅黑 Light\">本文只讨论安卓手机软节电，不负责推荐底包、rom、调频调压方案，<font color=\"#ff0000\">刷机root后果自负。</font></font></font>**</p>\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\"><strong>纯硬货，只想节电看后文。</strong></font>\n\n<a id=\"more\"></a>\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">使用安德猴主要还是谷歌的情怀。最近无可救药的恋上了无线高质量同步的Google相册和Keep。此外Google Contact和Gmail也时不时要收一下。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">问题是。。墙内不能随时翻。国内流氓自启和相互唤醒严重影响待机时间。如何破？首先搞清楚什么在耗电。再来解决怎么防流氓的同时不影响收发消息体验。</font>\n\n<font color=\"#333333\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">这里提到的几个概念是安猪手机由于真后台，而造成的各种能耗电耗流量元凶——四大组件</font><strong><font color=\"#ff0000\">Activity、Service、BroadCastReceiver、ContentProvider</font>。</strong></font></font></font>\n\n<p><strong><font color=\"#333333\" size=\"4\" face=\"微软雅黑 Light\">耗电–一定是这四个中的一个在以某种方式运行</font></strong></p>\n<font color=\"#000000\" size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\"><strong>Activity</strong></font>简言之就是前台窗体可视界面它上面可以显示一些控件也可以监听并处理用户的事件做出响应。你跳转到一个程序的界面、里面可能嵌套了很多个Activity。也有的一个Activity自成一个界面，例如第一次启动的引导界面。当然，程序猿代码风格迥异，一个<font size=\"4\">Activity有的直接盖在一个上面，这样按下返回键销毁当前的能直接返回上一个；有的流程和任务则直接生成新Activity把当前的干掉。一些广告，一些无聊的需求，如淘宝摇一摇、美图下游戏，你完全不想要，则可以通过阻止Activity启动的方式，干掉。这样的做法可以降低内存消耗。但如果代码流程，若写入了不开启这个Activity就没法运行，很可能造成FC。因此测试Activity阻止就需要很谨慎。网路也有很多大神提供了Activity的阻止列表。但App更新极快，同时包名和Activity的命名方式更加让人难以捉摸，就相当难以防范。</font></font></font>\n\n<font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\"><strong>Activity</strong></font>之间通过<font color=\"#ff0000\">Intent</font>进行通信，它描述的事某一个事件（单机、浏览、编辑）。也就是说这个Activity的一些参数在Activity跳转时，通过把参数塞入Intent这样一个对象，在另一个Activity读取。在Intent的描述结构中，有两个最重要的部分：动作和动作对应的数据。而IntentFilter则对应一个Activity能做哪些Intent。IntentFilter通常写入Android的AndroidManifest文件中定义好。</font></font></font>\n\n<font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\"><strong>BroadCastReceiver</strong></font>（广播接收器）它是监听响应各种手机变化并作出响应反应的组件。例如打进电话某个App调出号码查询，例如WiFi网络改变某App可以进行同步。这些监听并不经常是我们需要的，同时如果App写的极差，接收的广播级多，也会造成资源的浪费也相当耗电。它并不会产生一个界面，但是它能唤起一个Activity或者Service对事件进行相应。最常见的就是电话来了闪灯响铃，最讨厌的就是有Wifi了发个通知广告。甚至，当一个App装过还启动过，由于设置了开机启动的响应或网络状况的变化响应，都会产生通知。然而与Activity一样，阻止某一种广播接收同样会可能造成应用使用不正常，但FC情况相当少，测试的时候需要相当小心，但这里的组件命名方式都较为规范，因此测试起来也会比较顺利。</font></font></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">监听广播同样可以视为一个事件，使用Intent对其参数进行传递。这些事件，就是通常意义上的权限，可以查看联系人、可以监听电话等。许多监控App都能查看并修改应用程序能够监听的内容。注册广播接收器可以写入一个App的AndroidManifest.xml中进行静态注册，若完成时间比较长必须通过线程，放进Service后台中运行，否则容易造成程序卡顿；也可以程序动态注册，当Activity关闭后，监听广播也关闭，这样的做法比较省电，但是关闭程序就无法接受一些通知和广告。（需要完全退出或者多任务杀掉）因此大多数App都采用静态注册，App不启动，也能通过订阅的广播触发，例如开机启动触发、时间变化触发等。</font>\n\n<font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\"><strong>Service</strong></font>（服务）也是无界面的组件，它通过后台长时间的运行来进行运行一些监测程序，例如后台听歌单曲循环等，后台轮询查询最新消息的微博。配合BroadCastReceiver使用效果极佳耗电也极棒。一个App很可能有相当多的Service在后台挂着，同时一个流氓集团的Service也会相互唤醒保证一个被杀掉的时候又自启动。但乱杀也会造成严重的后果，一些闹钟，一些天气，一些消息软件误杀后没有了后台Service做消息推送，就会错过重要的事情。</font></font></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">一个Service不能自己运行。首次启动需要create再start，第二次之后就只用start需要别的启动或触发。但Service一旦启动，就与调用者无关了。需要停止service需要调用stop方法同时销毁destroy。可以使用bindservice让service随着调用者关闭而终止。</font>\n\n<font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\"><strong>ContentProvider</strong></font>(内容提供者)一个应用程序的指定数据集提供给其他应用程序。这些数据可以存储在文件系统中、在一个SQLite数据库、或以任何其他合理的方式。其他应用可以通过ContentResolver类(见ContentProviderAccessApp例子)从该内容提供者中获取或存入数据.(相当于在应用外包了一层壳),最常见的就是支付婊在别的应用中的调用，它提供了一个统一的支付接口，写在一个内部路径URL里。</font></font></font>\n\n<font color=\"#ff0000\" size=\"4\" face=\"微软雅黑 Light\">四大组件启动，</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">除了ContentProvider是通过别的应用程序调用ContentResolver 发出内容请求后激活外，其他三个都是通过Intent异步消息激活。<br>Activity的激活通过传递一个Intent 对象至<font color=\"#ff0000\">Context.startActivity()或Activity.startActivityForResult()</font>以载入（或指定新工作给）一个activity。 前面的函数直接启动的Activity，可以查看Intent中传入的参数。若期待新启动的Activity返回一个值（例如填写个人信息提交返回是否成功）就调用后面那个函数，并调用onActivityResult() 查询返回结果.<br>Service的激活可以通过传递一个Intent 对象至<font color=\"#ff0000\">Context.startService()或Context.bindService()</font>前者Android 调用服务的onStart()方法并将Intent 对象传递给它，后者Android 调用服务的onBind()方法将这个Intent 对象传递给它<br>发送广播可以通过传递一个Intent 对象至给<font color=\"#ff0000\">Context.sendBroadcast() 、Context.sendOrderedBroadcast()或Context.sendStickyBroadcast()。</font>Android 会调用所有对此广播有兴趣的广播接收器的onReceive()方法，将intent 传递给它们</font><br><br><font color=\"#ff0000\" size=\"4\" face=\"微软雅黑 Light\">四大组件销毁时，</font>\n\n<font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\"><strong>ContentProvider</strong></font>通过别的应用程序调用，消息处理完毕即销毁（如调用图片viewer看图，调用支付接口付款）。<font color=\"#ff0000\"><strong>BroadCastReceiver</strong></font>则注册在系统中监听，这两者都无需主动人为关闭，可以直接在权限中限制。其中BroadCastReceiver的生命周期只有十秒，否则就会报ANR(Application No Response)程序无响应的消息。<br><strong><font color=\"#ff0000\">Activity</font></strong>则通过finish()函数退出。一般情况下，按下返回退出键，或在多任务窗口杀掉都能直接关闭显式的Activity。有时直接按下Home键则会在后台缓存（Process），当切换过多个应用后，切回来时还能完整的保留原先打开时候的数据和窗口。当然，这样的过程会占用内存空间（RAM），同时也消耗一定的电量（比较少）。当后台运行过多缓存时，部分低内存手机会出现明显的卡顿。Android5.0之后的系统做的不错，能够按照优先级杀掉缓存应用。<br><strong><font color=\"#ff0000\">Service</font></strong>是个比较头疼的东西。尽管App可以调用<font color=\"#ff0000\">Context.stopService()</font>方法关闭服务，或使用<font color=\"#ff0000\">bindService()</font>绑定调用的组件关闭，但，流氓才不会这么做。<br>通常，手机应用中都看到正在运行的x个进程和y个服务。进程由多个线程组成，其中，主线程主要负责全局的参数传递，一些核心启动器及主界面的显示。而一些时间较长的函数，如获取多个图片，获取大量的数据，可以写在一个子线程，对主界面交互可以进行异步刷新，否则会造成主界面的卡顿。而当程序退居后台后，子线程依然处理数据，但没有了Activity进行联系，因此可以通过Service进行管理。由于Service并不负责应用层面的复杂操作，只对数据进行处理传递，同时可以写进单独的进程中，因而更为便利。</font></font></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">这里总结一下Service能被启动&amp;被守护的各种方式。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">1.打开应用后，直接显而易见的调用它想要完成的Service，此时按照一般的逻辑，理应是退出App关闭Activity后就会stopservice.</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">2.注册一个广播，可以按时钟、按网络变化、屏幕变化等，每次触发这些广播，就会检查一次Service的状况。遇到杀掉就重启。此时应当关注app的权限及其注册的广播。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">3.重写Service里的函数，在被杀时自动重启；配置到单独的进程中；配置安卓persistent=true；设置前台foreground=true.这些情况，在root情况下很容易被进程管理的杀掉</font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">4.双Service或多Service守护，在AndroidManifest.xml里面定义Service时加入android:process=”:service1”</font><br></font></font>\n\n<pre class=\"brush: xml; gutter: true; first-line: 1; highlight: []; html-script: false\">&lt;service android:enabled=\"true\" \nandroid:name=\"com.service.demo.Service1\" \nandroid:process=\":service1\"&gt;\n&lt;service&gt;\n&lt;service android:enabled=\"true\" \nandroid:name=\"com.service.demo.Service2\" \nandroid:process=\":service2\"&gt;\n&lt;service&gt;  \n</pre>\n\n<p>&lt;</p>\n<p>p align=”left”&gt;<span><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">关键的Point是触发了service的onTrimMemory()函数。又分别重新启动。</font></span></span></p>\n<p><span><span><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\"></font></font></font></span></span>&nbsp;</p>\n<p><span><span><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">5.Wakelock。Android机制下有一个唤醒锁，可以唤醒休眠中的手机。</font><font color=\"#000000\">WakeLock阻止应用处理器（Application <wbr>Processor）挂起</font><font color=\"#000000\">，确保关键代码的运行，通过中断唤起应用处理器（Application <wbr>Processor），可以阻止屏幕变暗。一旦有有效的wakelock，系统就不能进入深度睡眠（Deep Sleep）。一般在熄屏传输文件、下歌中使用。被滥用后，后果不堪设想。</font></font></font></span></span></p>\n<p><span><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">AlarmManage有一个AlarmManagerService,该服务程序主要维护app注册下来的各类Alarm,并且一直监听 Alarm设备，一旦有Alarm触发，或者是Alarm事件发生，AlarmManagerService就会遍历Alarm列表，找到相应的注册 Alarm并发出广播。Alarm <wbr>Manager会维持一个cpu的wake <wbr>lock。这样能保证电话休眠时，也能处理alarm的广播。一旦alarm <wbr>receiver的onReceive() <wbr>方法执行完，wake <wbr>lock会迅速被释放。如果在receiver中开启一个service，有可能service还没启动，wake <wbr>lock已经被释放了。所以此时要实现单独的wake <wbr>lock策略。</font></span></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">这也是一般不root不能根治的唤醒service的手段。App通过反复注册系统应用，调用级别高的Wakelock使得手机很难进入低频率的待机状态。</font></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">6.注册成为系统app同时包名混乱的编写。隐藏需要调用的service。一般没root的做不到。</font></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">所以，杀进程很容易，杀会自启的service也不难，难的是杀各种唤醒。</font></span></p>\n<font size=\"4\" face=\"微软雅黑 Light\"></font>\n\n<font size=\"4\" face=\"微软雅黑 Light\"><br><br><div align=\"left\"><br><br><em> </em> <em><br><br></em></div><br><br></font><br><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">这里提到两个重要概念：</font></span><br><br><span><font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\"><strong>Wakelock</strong></font>。唤醒锁；<font color=\"#ff0000\"><strong>Alarm</strong></font>。定时器</font></font></font></span><br><br><span><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\"><em>*Wakelock</em></font><font color=\"#000000\">定义了一个接口，能让App有权限，在停止交互、黑屏状况下</font><font color=\"#ff0000\">阻止手机休眠</font><font color=\"#000000\">，运行关键而必要的一些代码，通常是账户同步、消息推送。<span>Android手机有两个处理器，一个叫Application Processor（AP），一个叫Baseband Processor（BP）。AP是ARM架构的处理器，用于运行Linux+Android系统；BP用于运行实时操作系统（RTOS），通讯协议栈运行于BP的RTOS之上。非通话时间，BP的能耗基本上在5mA左右，而AP只要处于非休眠状态，能耗至少在50mA以上，执行图形运算时会更高 。此外耗电大户wifi在100mA左右，LCD灯也在100mA左右。而进入休眠的手机大部分代码会停止运行。但，并不是很容易进入深度休眠的状态。</span></font></font></font></span><br><br><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\"><span>wakelock针对的是<font color=\"#ff0000\">某个Activity，而不是整个app</font>。因此，获取和释放wakelock在单个Activity中进行。</span></font></span><br><br><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\"><span>对于唤醒锁，官方文档中的解释是：</span></font></span><br><br><a href=\"http://developer.android.com/reference/android/os/PowerManager.html#goToSleep(long\" target=\"_blank\" rel=\"external\"><font color=\"#000000\" size=\"4\" face=\"华文中宋\">PowerManager</font></a>)<font color=\"#000000\" size=\"4\" face=\"华文中宋\">:This class gives you control of the power state of the device.</font>\n\n<p><a href=\"http://developer.android.com/reference/android/os/PowerManager.WakeLock.html\" target=\"_blank\" rel=\"external\"><font color=\"#000000\" size=\"4\" face=\"华文中宋\">PowerManager.WakeLock</font></a><font color=\"#000000\" size=\"4\" face=\"华文中宋\">: lets you say that you need to have the device on.</font></p>\n<font color=\"#ff0000\" size=\"4\" face=\"微软雅黑 Light\">只要系统中存在任一有效的wake_lock，系统就不能进入深度休眠，但可以进行设备的浅度休眠操作。</font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">Android定义了几种低功耗状态，</font>：<strong><font color=\"#ff0000\">earlysuspend、suspend、hibernation.</font></strong></font></font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\">1) <font color=\"#ff0000\"><strong>earlysuspend</strong></font><font color=\"#000000\">（浅度休眠），</font><font color=\"#000000\">也有称standby</font></font></font><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">: 是一种低功耗的状态,某些设备可以选择进入某种功耗较低的状态,比如 LCD可以降低亮度或灭掉;它不会受到wakelock阻止。例如接收黑屏手势。<br></font>2) <font color=\"#ff0000\"><strong>suspend</strong></font><font color=\"#000000\">（休眠），也有称sleep（bad nomenclature）: 是指除电源管理以外的其他外围模块以及cpu均不工作,只有内存保持自刷新的状态; 一般休眠到RAM</font></font></font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\">3) <font color=\"#ff0000\"><strong>hibernation</strong></font><font color=\"#000000\">（冬眠）是指所有内存镜像都被写入磁盘（disk）中,然后系统关机,恢复后系统将能恢复到“关机”之前的状态。是最彻底的低功耗模式，它把所有内存镜像都写入磁盘中，然后系统关机，是Linux内核系统级的休眠。</font></font></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\"><br><br>PowerManager.WakeLock有加锁与解锁两种状态，而加锁的形式有两种:<br><br>①永久锁住，这种锁除非显式的放开，否则是不会解锁的，所以用起来需要非常小心！<br><br>②超时锁，到时间后就会解锁，而创建WakeLock后，有两种加锁机制: ①不计数锁机制，②计数锁机制(默认)可通过setReferenceCounted(boolean value)来指定,区别在于: 前者无论acquire( )多少次，一次release( )就可以解开锁。 而后者则需要(–count == 0)的时候，同样当(count == 0)才会去申请锁 所以，WakeLock的计数机制并不是正真意义上对每次请求进行申请/释放一个锁; 只是对同一把锁被申请/释放的次数来进行统计，然后再去操作！</font><font face=\"微软雅黑 Light\"><font color=\"#000000\"><font size=\"4\">该操作可通过setReferenceCounted(boolean value)设置。</font></font></font>\n\n<font color=\"#000000\" face=\"微软雅黑 Light\">当然，需要用到权限<pre>&lt;uses-permission android:name=”android.permission.WAKE_LOCK”/&gt;</pre><pre>&lt;uses-permission android:name=”android.permission.DEVICE_POWER”/&gt;</pre></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">锁有两种类型：</font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">WAKE_LOCK_SUSPEND：这种锁会防止系统进入睡眠(suspend)。<br>WAKE_LOCK_IDLE：这种锁不会影响系统的休眠，用于阻止系统在持有锁的过程中进入低功耗状态。即直到wake_lock被释放，系统才会从idle状态进入低功耗状态，此低功耗状态将使中断延迟或禁用一组中断</font> </font></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">有3个地方让<font color=\"#ff0000\">系统直接开始挂起</font>suspend()， 分别是:</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">&nbsp;&nbsp;&nbsp; • 在wake_unlock()中， 如果发现解锁以后没有任何其他的wake lock了，就开始休眠<br>&nbsp;&nbsp;&nbsp; • 在定时器都到时间以后，定时器的回调函数会查看是否有其他的wake lock，如果没有，就在这里让系统进入睡眠。<br>&nbsp;&nbsp;&nbsp; • 在wake_lock() 中，对一个wake lock加锁以后，会再次检查一下有没有锁， 这里的检查是没有必要的， 更好的方法是使加锁的这个操作原子化，而不是繁冗的检查，而且这样的检查也有可能漏掉。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">如下是一些常见的调用wakelock的操作<br><br></font>\n\n<table width=\"80%\" border=\"0\"><br><tbody><br><tr><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">应用</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">操作</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">唤醒锁的服务</font><br></td><br><td width=\"20%\" align=\"center\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">运行状态</font></td></tr><br><tr><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">任意</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">按下UI中的button或listview</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">PowerManagerService</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">启用并在5秒后释放锁定</font><br></td></tr><br><tr><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">地图/导航</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">启用地图或进入导航</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">gps-lock</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">锁定并使用GPS直到退出应用或手动设置取消GPS</font><br></td></tr><br><tr><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">视频软件</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">观看视频流</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">PowerManagerService</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">视频播放过程中一直启用唤醒锁</font><br></td></tr><br><tr><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">音乐软件</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">听歌</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">PowerManagerService</font><br></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">音乐播放过程中一直启用唤醒锁</font></td></tr></tbody></table>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">Video和 Music 应用能够很好地展示不同级别的唤醒锁。 用户播放视频时，Video应用将会启用唤醒锁。 在播放视频的整个过程中，显示器会保持开启状态（忽略系统的显示设置）。 但是，如果用户在播放过程中按下了电源按钮，设备将会挂起，这会导致显示器关闭以及音频/视频停止播放。 Music 应用在播放音频时使用不同的唤醒锁。 显示设置无法更改，因此设备的屏幕将会根据用户的显示设置来关闭。 显示器关闭后，唤醒锁会让 CPU 保持活动状态以便音频能够继续播放 — 即使用户按下了电源按钮。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">上图可见，<font color=\"#ff0000\">PowerManagerService</font>是一项使用率非常高的wakelock调用的操作，它是Android上层电源管理服务，属于<font color=\"#ff0000\">内核唤醒锁,适用于所有局部唤醒锁（partial wakelock 后文提到）的容器</font>。主要负责系统待机、屏幕背光、按键背光、键盘背光以及用户事件的处理。这些可在后文的wakelock detector软件中看到。通过锁的申请和释放以及默认待机时间来控制系统的待机状态，通过系统的灭屏时间及用户操作的事件状态来控制背光暗亮。此外该服务还包括了光线、距离传感器上层查询与控制、LCD灯控制。</font>\n\n<font color=\"#000000\" face=\"微软雅黑 Light\">其他的内核唤醒锁有：</font>\n\n<font color=\"#000000\">Wlan_rx： 当通过 Wi-Fi* 发送或接收数据时由内核控制。</font>\n\n<font color=\"#000000\">Sync： 在同步流程运行时启用。</font>\n\n<font color=\"#000000\">Alarm_rtc： 控制告警（当应用或流程执行定期检查时使用）。</font>\n\n<font color=\"#000000\">Main： 保持内核处于唤醒状态。 系统进入挂起模式时，这是最后一个被释放的唤醒锁。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">自最初版本的Android OS 的API中就设置了Android.OS.PowerManager.WakeLock类 </font><a href=\"https://developer.xamarin.com/api/type/Android.OS.PowerManager+WakeLock/\" target=\"_blank\" rel=\"external\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">https://developer.xamarin.com/api/type/Android.OS.PowerManager+WakeLock/</font></a><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">一下为Java代码应用层的操作。</font>&nbsp;<br><br><pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">PowerManager pm = (PowerManager) getSystemService(Context.POWER_SERVICE);//创建pm对象<br>PowerManager.WakeLock wl = pm.newWakeLock(PowerManager.SCREEN_DIM_WAKE_LOCK, “Tag”);<br>//第一个参数为flag,即后文提到的六个标记；最后一个参数为实例名，可以换成其他的<br>wl.acquire(); //唤醒点亮屏幕 获取wakelock<br>wl.release(); //恢复屏幕到黑暗 释放wakelock</pre><br><br>&nbsp;<br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">2.1 API Level7开始增加了一个判断屏幕是否处于点亮状态可以使用public boolean isScreenOn ()这个方法，代码为</font>\n\n<pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">PowerManager pm = (PowerManager) getSystemService(Context.POWER_SERVICE);\nboolean isScreenOn = pm.isScreenOn();\n</pre>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">对它进行实例化。</font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">Wakelock源码简介</font>&nbsp; </font></font><a href=\"http://www.07net01.com/2015/07/870479.html\" target=\"_blank\" rel=\"external\"><font size=\"4\" face=\"微软雅黑 Light\">http://www.07net01.com/2015/07/870479.html</font></a><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">PowerManager和Wakelock申请 <a href=\"http://blog.csdn.net/wh_19910525/article/details/8287202\" target=\"_blank\" rel=\"external\">http://blog.csdn.net/wh_19910525/article/details/8287202</a></font><br><p align=\"left\"><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">Android PowerManager API 介绍了4种用于更改设备电源状态的<font color=\"#ff0000\">唤醒锁标记</font>：<br><br></font></span><br><table width=\"80%\" border=\"0\"><br><tbody><br><tr><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">标记值</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">CPU/场景</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">屏幕</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">键盘</font></td></tr><br><tr><br><td width=\"20%\"><font color=\"#ff0000\" size=\"4\" face=\"微软雅黑 Light\">PARTIAL_WAKE_LOCK</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">开启-长时间运行的后台service</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">关闭</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">关闭</font></td></tr><br><tr><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">SCREEN_DIM_WAKE_LOCK</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">开启-除非必须保持CPU运行至运算完成，否则尽量使用FLAG_KEEP_SCREEN_ON</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">低亮度</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">关闭</font></td></tr><br><tr><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">SCREEN_BRIGHT_WAKE_LOCK</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">同上</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">高亮度</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">关闭</font></td></tr><br><tr><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">FULL_WAKE_LOCK</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">同上</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">高亮度</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">调亮</font></td></tr></tbody></table><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">需要注意的是 API17开始，FULL_WAKE_LOCK将被弃用，取而代之的是FLAG_KEEP_SCREEN_ON 因此有的检测软件也将屏幕亮屏所单独提出来，表明调用该锁时目的是保证屏幕不会超时熄灭。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">除了四个标记值外，还提供了两个Flag配合使用。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">ACQUIRE_CAUSES_WAKEUP：默认情况下唤醒锁并不是马上开启CPU、屏幕或者调整键盘的亮度（对于屏幕处于低亮度或高亮度、键盘处于高亮，唤醒锁只是在被开启后，延续这一状态）但如果加上这一标记，就可让屏幕或键盘亮度未开启的状态下，马上开启它们。典型的例子就是受到一个重要的notification时（短信、邮件等），需要马上点亮屏幕。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">ON_AFTER_RELEASE：当wake lock被释放的时候，当前调用wake lock的activity的计数器会被重置，所以屏幕会继续亮一段时间。</font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">因此，Android中通常是这么写。</font><br></font></font><br><div align=\"center\"><pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">PowerManager pm = (PowerManager) context.getSystemService(Context.POWER_SERVICE);<br><br> WakeLock sCpuWakeLock = pm.newWakeLock(<br>                PowerManager.FULL_WAKE_LOCK |<br>                PowerManager.ACQUIRE_CAUSES_WAKEUP,”okTag”);<br> if (sCpuWakeLock!= null) {<br> sCpuWakeLock.release();<br>          sCpuWakeLock = null;<br><br>}<br></pre></div><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\"></font>&nbsp;<br><br><strong><font color=\"#ff0000\">注意</font></strong>：如果申请了<font color=\"#ff0000\">partial wakelock</font>,那么即使按Power键,系统也不会进Sleep,如Music播放时。所有的锁必须成对的使用, 如果申请了而没有及时释放，会造成系统故障。如申请了partial wakelock,而没有及时释放, 那系统就永远进不了Sleep模式.<br><br>因此，partial wakelock作为6中标识中，需最为谨慎使用的一个。BBS也专门指出了partial wakelock造成的电量损耗及待机时长。其余的则可标记为屏幕锁，辅助标记CPU锁。<br><br><font color=\"#000000\" face=\"微软雅黑 Light\"><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1eztpciku00j20de0bjjsd.jpg\" alt=\"\"></font>\n\n<font size=\"4\"><font color=\"#000000\" face=\"微软雅黑 Light\"><strong>上图表明了App内部、Android框架及内核硬件在唤醒锁交互中的流程。</strong></font></font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\"><strong>AlarmManager</strong></font><font color=\"#000000\">，有一个AlarmManagerService,该服务程序主要维护app注册下来的各类Alarm,并且一直监听Alarm设备，一旦有Alarm触发，或者是Alarm事件发生，AlarmManagerService就会遍历Alarm列表，找到相应的注册Alarm并发出广播，是Android中常用的一种<font color=\"#ff0000\">系统级别的提示服务</font>，在特定的时刻为我们广播一个指定的Intent。通常我们使用 PendingIntent，可以理解为Intent的封装包，在Intent上在加个指定的动作。在使用Intent的时候，我们还需要在执行startActivity、startService或sendBroadcast才能使Intent有用。而PendingIntent的话就是将这个动作包含在内了。</font></font></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">闹钟响起，实际上是系统发出了为这个<font color=\"#ff0000\">闹钟注册的广播</font>，会自动开启目标应用。这种做法可以在某一时刻当做唤醒应用。注册的闹钟在设备睡眠的时候仍然会保留，可以选择性地设置是否唤醒设备，但是当设备关机和重启后，闹钟将会被清除。在alarm的receiver的onReceive()方法被执行的时候，Alarm Manager持有一个CPU唤醒锁，这样就保证了设备在处理完广播之前不会sleep。</font>\n\n</p><p><span><font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\">有4种Alarm类型： <wbr></font></font></font></span></p>\n<font color=\"#000000\"><font size=\"4\" face=\"微软雅黑 Light\">1)</font><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">RTC_WAKEUP <wbr><br></font>在指定的时刻（设置Alarm的时候），唤醒设备来触发Intent。（闹钟）</font></font></font><font size=\"4\" face=\"微软雅黑 Light\"> </font>\n\n<p><span></span><span><font color=\"#000000\"><font size=\"4\" face=\"微软雅黑 Light\">2)<font color=\"#ff0000\">RTC</font> <wbr><br>在一个显式的时间触发Intent，但不唤醒设备。<wbr><wbr><wbr><br>3)</font><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">ELAPSED_REALTIME <wbr><br></font>从设备启动后，如果流逝的时间达到总时间，那么触发Intent，但不唤醒设备。流逝的时间包括设备睡眠的任何时间。注意一点的是，时间流逝的计算点是自从它最后一次启动算起。 <wbr>&nbsp;<wbr>&nbsp;<wbr><br>4)<font color=\"#ff0000\">ELAPSED_REALTIME_WAKEUP</font> <wbr><br>从设备启动后，达到流逝的总时间后，如果需要将唤醒设备并触发Intent。</font></font></font></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">这样，唤醒对齐的方案就显得相当便捷，让唤醒次数大大降低。把允许唤醒的应用，按照某一合理的时刻进行排序和对齐，不会凌乱的唤醒手机而出现过度的cpu变频造成的耗电。</font></span></p>\n<p><span><font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">软节电</font>方案：</font></font></font></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">1、对不需要联网、不需要通知的 限制权限&amp;App自调 取消通知、联网等权限 杀注册广播</font></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">2、限制通知和自启动、互相启动、相互守护的service 禁启动</font></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">3、（千万少做）安全软件狂杀进程process和service</font></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">4、限制唤醒时长和对齐唤醒</font></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">5、对可识别的Activity禁止</font></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">6、对不需要通知、自升级、关闭软件啥也不想让他做的 结晶 禁止、半禁止一切后台</font></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">7、争取多冬眠service</font></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">8、在合理的时间重启并FQ</font></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">So 开搞</font></span></p>\n<p><span><font color=\"#000000\" face=\"微软雅黑 Light\"></font></span>参考</p>\n<p><span><a href=\"http://www.runoob.com/w3cnote/android-tutorial-powermanager.html\" target=\"_blank\" rel=\"external\">http://www.runoob.com/w3cnote/android-tutorial-powermanager.html</a>&nbsp; PowerManager(电源服务)</span></p>\n<p><a href=\"http://www.kancloud.cn/kancloud/android-tutorial/87277\" title=\"http://www.kancloud.cn/kancloud/android-tutorial/87277\" target=\"_blank\" rel=\"external\">http://www.kancloud.cn/kancloud/android-tutorial/87277</a> 这俩好像一样、</p>\n<p><a href=\"http://forum.xda-developers.com/galaxy-s2/general/guide-complete-guide-maximum-battery-t1909996\" title=\"http://forum.xda-developers.com/galaxy-s2/general/guide-complete-guide-maximum-battery-t1909996\" target=\"_blank\" rel=\"external\">http://forum.xda-developers.com/galaxy-s2/general/guide-complete-guide-maximum-battery-t1909996</a> 真的是能关的全给关了的大全</p>\n<font size=\"4\" face=\"微软雅黑 Light\"></font>\n\n<font size=\"4\" face=\"微软雅黑 Light\"></font>\n\n<font size=\"4\" face=\"微软雅黑 Light\"></font>\n\n<p><a href=\"http://lockekk.github.io/jekyll-bootstrap/2014/07/22/Android-Standby/\" title=\"http://lockekk.github.io/jekyll-bootstrap/2014/07/22/Android-Standby/\" target=\"_blank\" rel=\"external\">http://lockekk.github.io/jekyll-bootstrap/2014/07/22/Android-Standby/</a> Android Standby 解析查杀软件的弊病</p>","excerpt":"<p><strong><font color=\"#000000\"></font>**</strong><font color=\"#000000\" size=\"4\"><font face=\"微软雅黑 Light\">本文只讨论安卓手机软节电，不负责推荐底包、rom、调频调压方案，<font color=\"#ff0000\">刷机root后果自负。</font></font></font>**</p>\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\"><strong>纯硬货，只想节电看后文。</strong></font>","more":"<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">使用安德猴主要还是谷歌的情怀。最近无可救药的恋上了无线高质量同步的Google相册和Keep。此外Google Contact和Gmail也时不时要收一下。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">问题是。。墙内不能随时翻。国内流氓自启和相互唤醒严重影响待机时间。如何破？首先搞清楚什么在耗电。再来解决怎么防流氓的同时不影响收发消息体验。</font>\n\n<font color=\"#333333\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">这里提到的几个概念是安猪手机由于真后台，而造成的各种能耗电耗流量元凶——四大组件</font><strong><font color=\"#ff0000\">Activity、Service、BroadCastReceiver、ContentProvider</font>。</strong></font></font></font>\n\n<p><strong><font color=\"#333333\" size=\"4\" face=\"微软雅黑 Light\">耗电–一定是这四个中的一个在以某种方式运行</font></strong></p>\n<font color=\"#000000\" size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\"><strong>Activity</strong></font>简言之就是前台窗体可视界面它上面可以显示一些控件也可以监听并处理用户的事件做出响应。你跳转到一个程序的界面、里面可能嵌套了很多个Activity。也有的一个Activity自成一个界面，例如第一次启动的引导界面。当然，程序猿代码风格迥异，一个<font size=\"4\">Activity有的直接盖在一个上面，这样按下返回键销毁当前的能直接返回上一个；有的流程和任务则直接生成新Activity把当前的干掉。一些广告，一些无聊的需求，如淘宝摇一摇、美图下游戏，你完全不想要，则可以通过阻止Activity启动的方式，干掉。这样的做法可以降低内存消耗。但如果代码流程，若写入了不开启这个Activity就没法运行，很可能造成FC。因此测试Activity阻止就需要很谨慎。网路也有很多大神提供了Activity的阻止列表。但App更新极快，同时包名和Activity的命名方式更加让人难以捉摸，就相当难以防范。</font></font></font>\n\n<font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\"><strong>Activity</strong></font>之间通过<font color=\"#ff0000\">Intent</font>进行通信，它描述的事某一个事件（单机、浏览、编辑）。也就是说这个Activity的一些参数在Activity跳转时，通过把参数塞入Intent这样一个对象，在另一个Activity读取。在Intent的描述结构中，有两个最重要的部分：动作和动作对应的数据。而IntentFilter则对应一个Activity能做哪些Intent。IntentFilter通常写入Android的AndroidManifest文件中定义好。</font></font></font>\n\n<font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\"><strong>BroadCastReceiver</strong></font>（广播接收器）它是监听响应各种手机变化并作出响应反应的组件。例如打进电话某个App调出号码查询，例如WiFi网络改变某App可以进行同步。这些监听并不经常是我们需要的，同时如果App写的极差，接收的广播级多，也会造成资源的浪费也相当耗电。它并不会产生一个界面，但是它能唤起一个Activity或者Service对事件进行相应。最常见的就是电话来了闪灯响铃，最讨厌的就是有Wifi了发个通知广告。甚至，当一个App装过还启动过，由于设置了开机启动的响应或网络状况的变化响应，都会产生通知。然而与Activity一样，阻止某一种广播接收同样会可能造成应用使用不正常，但FC情况相当少，测试的时候需要相当小心，但这里的组件命名方式都较为规范，因此测试起来也会比较顺利。</font></font></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">监听广播同样可以视为一个事件，使用Intent对其参数进行传递。这些事件，就是通常意义上的权限，可以查看联系人、可以监听电话等。许多监控App都能查看并修改应用程序能够监听的内容。注册广播接收器可以写入一个App的AndroidManifest.xml中进行静态注册，若完成时间比较长必须通过线程，放进Service后台中运行，否则容易造成程序卡顿；也可以程序动态注册，当Activity关闭后，监听广播也关闭，这样的做法比较省电，但是关闭程序就无法接受一些通知和广告。（需要完全退出或者多任务杀掉）因此大多数App都采用静态注册，App不启动，也能通过订阅的广播触发，例如开机启动触发、时间变化触发等。</font>\n\n<font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\"><strong>Service</strong></font>（服务）也是无界面的组件，它通过后台长时间的运行来进行运行一些监测程序，例如后台听歌单曲循环等，后台轮询查询最新消息的微博。配合BroadCastReceiver使用效果极佳耗电也极棒。一个App很可能有相当多的Service在后台挂着，同时一个流氓集团的Service也会相互唤醒保证一个被杀掉的时候又自启动。但乱杀也会造成严重的后果，一些闹钟，一些天气，一些消息软件误杀后没有了后台Service做消息推送，就会错过重要的事情。</font></font></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">一个Service不能自己运行。首次启动需要create再start，第二次之后就只用start需要别的启动或触发。但Service一旦启动，就与调用者无关了。需要停止service需要调用stop方法同时销毁destroy。可以使用bindservice让service随着调用者关闭而终止。</font>\n\n<font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\"><strong>ContentProvider</strong></font>(内容提供者)一个应用程序的指定数据集提供给其他应用程序。这些数据可以存储在文件系统中、在一个SQLite数据库、或以任何其他合理的方式。其他应用可以通过ContentResolver类(见ContentProviderAccessApp例子)从该内容提供者中获取或存入数据.(相当于在应用外包了一层壳),最常见的就是支付婊在别的应用中的调用，它提供了一个统一的支付接口，写在一个内部路径URL里。</font></font></font>\n\n<font color=\"#ff0000\" size=\"4\" face=\"微软雅黑 Light\">四大组件启动，</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">除了ContentProvider是通过别的应用程序调用ContentResolver 发出内容请求后激活外，其他三个都是通过Intent异步消息激活。<br>Activity的激活通过传递一个Intent 对象至<font color=\"#ff0000\">Context.startActivity()或Activity.startActivityForResult()</font>以载入（或指定新工作给）一个activity。 前面的函数直接启动的Activity，可以查看Intent中传入的参数。若期待新启动的Activity返回一个值（例如填写个人信息提交返回是否成功）就调用后面那个函数，并调用onActivityResult() 查询返回结果.<br>Service的激活可以通过传递一个Intent 对象至<font color=\"#ff0000\">Context.startService()或Context.bindService()</font>前者Android 调用服务的onStart()方法并将Intent 对象传递给它，后者Android 调用服务的onBind()方法将这个Intent 对象传递给它<br>发送广播可以通过传递一个Intent 对象至给<font color=\"#ff0000\">Context.sendBroadcast() 、Context.sendOrderedBroadcast()或Context.sendStickyBroadcast()。</font>Android 会调用所有对此广播有兴趣的广播接收器的onReceive()方法，将intent 传递给它们</font><br><br><font color=\"#ff0000\" size=\"4\" face=\"微软雅黑 Light\">四大组件销毁时，</font>\n\n<font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\"><strong>ContentProvider</strong></font>通过别的应用程序调用，消息处理完毕即销毁（如调用图片viewer看图，调用支付接口付款）。<font color=\"#ff0000\"><strong>BroadCastReceiver</strong></font>则注册在系统中监听，这两者都无需主动人为关闭，可以直接在权限中限制。其中BroadCastReceiver的生命周期只有十秒，否则就会报ANR(Application No Response)程序无响应的消息。<br><strong><font color=\"#ff0000\">Activity</font></strong>则通过finish()函数退出。一般情况下，按下返回退出键，或在多任务窗口杀掉都能直接关闭显式的Activity。有时直接按下Home键则会在后台缓存（Process），当切换过多个应用后，切回来时还能完整的保留原先打开时候的数据和窗口。当然，这样的过程会占用内存空间（RAM），同时也消耗一定的电量（比较少）。当后台运行过多缓存时，部分低内存手机会出现明显的卡顿。Android5.0之后的系统做的不错，能够按照优先级杀掉缓存应用。<br><strong><font color=\"#ff0000\">Service</font></strong>是个比较头疼的东西。尽管App可以调用<font color=\"#ff0000\">Context.stopService()</font>方法关闭服务，或使用<font color=\"#ff0000\">bindService()</font>绑定调用的组件关闭，但，流氓才不会这么做。<br>通常，手机应用中都看到正在运行的x个进程和y个服务。进程由多个线程组成，其中，主线程主要负责全局的参数传递，一些核心启动器及主界面的显示。而一些时间较长的函数，如获取多个图片，获取大量的数据，可以写在一个子线程，对主界面交互可以进行异步刷新，否则会造成主界面的卡顿。而当程序退居后台后，子线程依然处理数据，但没有了Activity进行联系，因此可以通过Service进行管理。由于Service并不负责应用层面的复杂操作，只对数据进行处理传递，同时可以写进单独的进程中，因而更为便利。</font></font></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">这里总结一下Service能被启动&amp;被守护的各种方式。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">1.打开应用后，直接显而易见的调用它想要完成的Service，此时按照一般的逻辑，理应是退出App关闭Activity后就会stopservice.</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">2.注册一个广播，可以按时钟、按网络变化、屏幕变化等，每次触发这些广播，就会检查一次Service的状况。遇到杀掉就重启。此时应当关注app的权限及其注册的广播。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">3.重写Service里的函数，在被杀时自动重启；配置到单独的进程中；配置安卓persistent=true；设置前台foreground=true.这些情况，在root情况下很容易被进程管理的杀掉</font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">4.双Service或多Service守护，在AndroidManifest.xml里面定义Service时加入android:process=”:service1”</font><br></font></font>\n\n<pre class=\"brush: xml; gutter: true; first-line: 1; highlight: []; html-script: false\">&lt;service android:enabled=\"true\" \nandroid:name=\"com.service.demo.Service1\" \nandroid:process=\":service1\"&gt;\n&lt;service&gt;\n&lt;service android:enabled=\"true\" \nandroid:name=\"com.service.demo.Service2\" \nandroid:process=\":service2\"&gt;\n&lt;service&gt;  \n</pre>\n\n<p>&lt;</p>\n<p>p align=”left”&gt;<span><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">关键的Point是触发了service的onTrimMemory()函数。又分别重新启动。</font></span></span></p>\n<p><span><span><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\"></font></font></font></span></span>&nbsp;</p>\n<p><span><span><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">5.Wakelock。Android机制下有一个唤醒锁，可以唤醒休眠中的手机。</font><font color=\"#000000\">WakeLock阻止应用处理器（Application <wbr>Processor）挂起</font><font color=\"#000000\">，确保关键代码的运行，通过中断唤起应用处理器（Application <wbr>Processor），可以阻止屏幕变暗。一旦有有效的wakelock，系统就不能进入深度睡眠（Deep Sleep）。一般在熄屏传输文件、下歌中使用。被滥用后，后果不堪设想。</font></font></font></span></span></p>\n<p><span><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">AlarmManage有一个AlarmManagerService,该服务程序主要维护app注册下来的各类Alarm,并且一直监听 Alarm设备，一旦有Alarm触发，或者是Alarm事件发生，AlarmManagerService就会遍历Alarm列表，找到相应的注册 Alarm并发出广播。Alarm <wbr>Manager会维持一个cpu的wake <wbr>lock。这样能保证电话休眠时，也能处理alarm的广播。一旦alarm <wbr>receiver的onReceive() <wbr>方法执行完，wake <wbr>lock会迅速被释放。如果在receiver中开启一个service，有可能service还没启动，wake <wbr>lock已经被释放了。所以此时要实现单独的wake <wbr>lock策略。</font></span></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">这也是一般不root不能根治的唤醒service的手段。App通过反复注册系统应用，调用级别高的Wakelock使得手机很难进入低频率的待机状态。</font></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">6.注册成为系统app同时包名混乱的编写。隐藏需要调用的service。一般没root的做不到。</font></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">所以，杀进程很容易，杀会自启的service也不难，难的是杀各种唤醒。</font></span></p>\n<font size=\"4\" face=\"微软雅黑 Light\"></font>\n\n<font size=\"4\" face=\"微软雅黑 Light\"><br><br><div align=\"left\"><br><br><em> </em> <em><br><br></em></div><br><br></font><br><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">这里提到两个重要概念：</font></span><br><br><span><font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\"><strong>Wakelock</strong></font>。唤醒锁；<font color=\"#ff0000\"><strong>Alarm</strong></font>。定时器</font></font></font></span><br><br><span><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\"><em>*Wakelock</em></font><font color=\"#000000\">定义了一个接口，能让App有权限，在停止交互、黑屏状况下</font><font color=\"#ff0000\">阻止手机休眠</font><font color=\"#000000\">，运行关键而必要的一些代码，通常是账户同步、消息推送。<span>Android手机有两个处理器，一个叫Application Processor（AP），一个叫Baseband Processor（BP）。AP是ARM架构的处理器，用于运行Linux+Android系统；BP用于运行实时操作系统（RTOS），通讯协议栈运行于BP的RTOS之上。非通话时间，BP的能耗基本上在5mA左右，而AP只要处于非休眠状态，能耗至少在50mA以上，执行图形运算时会更高 。此外耗电大户wifi在100mA左右，LCD灯也在100mA左右。而进入休眠的手机大部分代码会停止运行。但，并不是很容易进入深度休眠的状态。</span></font></font></font></span><br><br><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\"><span>wakelock针对的是<font color=\"#ff0000\">某个Activity，而不是整个app</font>。因此，获取和释放wakelock在单个Activity中进行。</span></font></span><br><br><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\"><span>对于唤醒锁，官方文档中的解释是：</span></font></span><br><br><a href=\"http://developer.android.com/reference/android/os/PowerManager.html#goToSleep(long\"><font color=\"#000000\" size=\"4\" face=\"华文中宋\">PowerManager</font></a>)<font color=\"#000000\" size=\"4\" face=\"华文中宋\">:This class gives you control of the power state of the device.</font>\n\n<p><a href=\"http://developer.android.com/reference/android/os/PowerManager.WakeLock.html\"><font color=\"#000000\" size=\"4\" face=\"华文中宋\">PowerManager.WakeLock</font></a><font color=\"#000000\" size=\"4\" face=\"华文中宋\">: lets you say that you need to have the device on.</font></p>\n<font color=\"#ff0000\" size=\"4\" face=\"微软雅黑 Light\">只要系统中存在任一有效的wake_lock，系统就不能进入深度休眠，但可以进行设备的浅度休眠操作。</font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">Android定义了几种低功耗状态，</font>：<strong><font color=\"#ff0000\">earlysuspend、suspend、hibernation.</font></strong></font></font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\">1) <font color=\"#ff0000\"><strong>earlysuspend</strong></font><font color=\"#000000\">（浅度休眠），</font><font color=\"#000000\">也有称standby</font></font></font><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">: 是一种低功耗的状态,某些设备可以选择进入某种功耗较低的状态,比如 LCD可以降低亮度或灭掉;它不会受到wakelock阻止。例如接收黑屏手势。<br></font>2) <font color=\"#ff0000\"><strong>suspend</strong></font><font color=\"#000000\">（休眠），也有称sleep（bad nomenclature）: 是指除电源管理以外的其他外围模块以及cpu均不工作,只有内存保持自刷新的状态; 一般休眠到RAM</font></font></font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\">3) <font color=\"#ff0000\"><strong>hibernation</strong></font><font color=\"#000000\">（冬眠）是指所有内存镜像都被写入磁盘（disk）中,然后系统关机,恢复后系统将能恢复到“关机”之前的状态。是最彻底的低功耗模式，它把所有内存镜像都写入磁盘中，然后系统关机，是Linux内核系统级的休眠。</font></font></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\"><br><br>PowerManager.WakeLock有加锁与解锁两种状态，而加锁的形式有两种:<br><br>①永久锁住，这种锁除非显式的放开，否则是不会解锁的，所以用起来需要非常小心！<br><br>②超时锁，到时间后就会解锁，而创建WakeLock后，有两种加锁机制: ①不计数锁机制，②计数锁机制(默认)可通过setReferenceCounted(boolean value)来指定,区别在于: 前者无论acquire( )多少次，一次release( )就可以解开锁。 而后者则需要(–count == 0)的时候，同样当(count == 0)才会去申请锁 所以，WakeLock的计数机制并不是正真意义上对每次请求进行申请/释放一个锁; 只是对同一把锁被申请/释放的次数来进行统计，然后再去操作！</font><font face=\"微软雅黑 Light\"><font color=\"#000000\"><font size=\"4\">该操作可通过setReferenceCounted(boolean value)设置。</font></font></font>\n\n<font color=\"#000000\" face=\"微软雅黑 Light\">当然，需要用到权限<pre>&lt;uses-permission android:name=”android.permission.WAKE_LOCK”/&gt;</pre><pre>&lt;uses-permission android:name=”android.permission.DEVICE_POWER”/&gt;</pre></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">锁有两种类型：</font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">WAKE_LOCK_SUSPEND：这种锁会防止系统进入睡眠(suspend)。<br>WAKE_LOCK_IDLE：这种锁不会影响系统的休眠，用于阻止系统在持有锁的过程中进入低功耗状态。即直到wake_lock被释放，系统才会从idle状态进入低功耗状态，此低功耗状态将使中断延迟或禁用一组中断</font> </font></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">有3个地方让<font color=\"#ff0000\">系统直接开始挂起</font>suspend()， 分别是:</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">&nbsp;&nbsp;&nbsp; • 在wake_unlock()中， 如果发现解锁以后没有任何其他的wake lock了，就开始休眠<br>&nbsp;&nbsp;&nbsp; • 在定时器都到时间以后，定时器的回调函数会查看是否有其他的wake lock，如果没有，就在这里让系统进入睡眠。<br>&nbsp;&nbsp;&nbsp; • 在wake_lock() 中，对一个wake lock加锁以后，会再次检查一下有没有锁， 这里的检查是没有必要的， 更好的方法是使加锁的这个操作原子化，而不是繁冗的检查，而且这样的检查也有可能漏掉。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">如下是一些常见的调用wakelock的操作<br><br></font>\n\n<table width=\"80%\" border=\"0\"><br><tbody><br><tr><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">应用</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">操作</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">唤醒锁的服务</font><br></td><br><td width=\"20%\" align=\"center\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">运行状态</font></td></tr><br><tr><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">任意</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">按下UI中的button或listview</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">PowerManagerService</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">启用并在5秒后释放锁定</font><br></td></tr><br><tr><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">地图/导航</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">启用地图或进入导航</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">gps-lock</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">锁定并使用GPS直到退出应用或手动设置取消GPS</font><br></td></tr><br><tr><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">视频软件</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">观看视频流</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">PowerManagerService</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">视频播放过程中一直启用唤醒锁</font><br></td></tr><br><tr><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">音乐软件</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">听歌</font><br></td><br><td width=\"20%\"><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">PowerManagerService</font><br></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">音乐播放过程中一直启用唤醒锁</font></td></tr></tbody></table>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">Video和 Music 应用能够很好地展示不同级别的唤醒锁。 用户播放视频时，Video应用将会启用唤醒锁。 在播放视频的整个过程中，显示器会保持开启状态（忽略系统的显示设置）。 但是，如果用户在播放过程中按下了电源按钮，设备将会挂起，这会导致显示器关闭以及音频/视频停止播放。 Music 应用在播放音频时使用不同的唤醒锁。 显示设置无法更改，因此设备的屏幕将会根据用户的显示设置来关闭。 显示器关闭后，唤醒锁会让 CPU 保持活动状态以便音频能够继续播放 — 即使用户按下了电源按钮。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">上图可见，<font color=\"#ff0000\">PowerManagerService</font>是一项使用率非常高的wakelock调用的操作，它是Android上层电源管理服务，属于<font color=\"#ff0000\">内核唤醒锁,适用于所有局部唤醒锁（partial wakelock 后文提到）的容器</font>。主要负责系统待机、屏幕背光、按键背光、键盘背光以及用户事件的处理。这些可在后文的wakelock detector软件中看到。通过锁的申请和释放以及默认待机时间来控制系统的待机状态，通过系统的灭屏时间及用户操作的事件状态来控制背光暗亮。此外该服务还包括了光线、距离传感器上层查询与控制、LCD灯控制。</font>\n\n<font color=\"#000000\" face=\"微软雅黑 Light\">其他的内核唤醒锁有：</font>\n\n<font color=\"#000000\">Wlan_rx： 当通过 Wi-Fi* 发送或接收数据时由内核控制。</font>\n\n<font color=\"#000000\">Sync： 在同步流程运行时启用。</font>\n\n<font color=\"#000000\">Alarm_rtc： 控制告警（当应用或流程执行定期检查时使用）。</font>\n\n<font color=\"#000000\">Main： 保持内核处于唤醒状态。 系统进入挂起模式时，这是最后一个被释放的唤醒锁。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">自最初版本的Android OS 的API中就设置了Android.OS.PowerManager.WakeLock类 </font><a href=\"https://developer.xamarin.com/api/type/Android.OS.PowerManager+WakeLock/\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">https://developer.xamarin.com/api/type/Android.OS.PowerManager+WakeLock/</font></a><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">一下为Java代码应用层的操作。</font>&nbsp;<br><br><pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">PowerManager pm = (PowerManager) getSystemService(Context.POWER_SERVICE);//创建pm对象<br>PowerManager.WakeLock wl = pm.newWakeLock(PowerManager.SCREEN_DIM_WAKE_LOCK, “Tag”);<br>//第一个参数为flag,即后文提到的六个标记；最后一个参数为实例名，可以换成其他的<br>wl.acquire(); //唤醒点亮屏幕 获取wakelock<br>wl.release(); //恢复屏幕到黑暗 释放wakelock</pre><br><br>&nbsp;<br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">2.1 API Level7开始增加了一个判断屏幕是否处于点亮状态可以使用public boolean isScreenOn ()这个方法，代码为</font>\n\n<pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">PowerManager pm = (PowerManager) getSystemService(Context.POWER_SERVICE);\nboolean isScreenOn = pm.isScreenOn();\n</pre>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">对它进行实例化。</font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">Wakelock源码简介</font>&nbsp; </font></font><a href=\"http://www.07net01.com/2015/07/870479.html\"><font size=\"4\" face=\"微软雅黑 Light\">http://www.07net01.com/2015/07/870479.html</font></a><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">PowerManager和Wakelock申请 <a href=\"http://blog.csdn.net/wh_19910525/article/details/8287202\">http://blog.csdn.net/wh_19910525/article/details/8287202</a></font><br><p align=\"left\"><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">Android PowerManager API 介绍了4种用于更改设备电源状态的<font color=\"#ff0000\">唤醒锁标记</font>：<br><br></font></span><br><table width=\"80%\" border=\"0\"><br><tbody><br><tr><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">标记值</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">CPU/场景</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">屏幕</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">键盘</font></td></tr><br><tr><br><td width=\"20%\"><font color=\"#ff0000\" size=\"4\" face=\"微软雅黑 Light\">PARTIAL_WAKE_LOCK</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">开启-长时间运行的后台service</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">关闭</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">关闭</font></td></tr><br><tr><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">SCREEN_DIM_WAKE_LOCK</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">开启-除非必须保持CPU运行至运算完成，否则尽量使用FLAG_KEEP_SCREEN_ON</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">低亮度</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">关闭</font></td></tr><br><tr><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">SCREEN_BRIGHT_WAKE_LOCK</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">同上</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">高亮度</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">关闭</font></td></tr><br><tr><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">FULL_WAKE_LOCK</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">同上</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">高亮度</font></td><br><td width=\"20%\"><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">调亮</font></td></tr></tbody></table><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">需要注意的是 API17开始，FULL_WAKE_LOCK将被弃用，取而代之的是FLAG_KEEP_SCREEN_ON 因此有的检测软件也将屏幕亮屏所单独提出来，表明调用该锁时目的是保证屏幕不会超时熄灭。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">除了四个标记值外，还提供了两个Flag配合使用。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">ACQUIRE_CAUSES_WAKEUP：默认情况下唤醒锁并不是马上开启CPU、屏幕或者调整键盘的亮度（对于屏幕处于低亮度或高亮度、键盘处于高亮，唤醒锁只是在被开启后，延续这一状态）但如果加上这一标记，就可让屏幕或键盘亮度未开启的状态下，马上开启它们。典型的例子就是受到一个重要的notification时（短信、邮件等），需要马上点亮屏幕。</font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">ON_AFTER_RELEASE：当wake lock被释放的时候，当前调用wake lock的activity的计数器会被重置，所以屏幕会继续亮一段时间。</font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#000000\">因此，Android中通常是这么写。</font><br></font></font><br><div align=\"center\"><pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">PowerManager pm = (PowerManager) context.getSystemService(Context.POWER_SERVICE);<br><br> WakeLock sCpuWakeLock = pm.newWakeLock(<br>                PowerManager.FULL_WAKE_LOCK |<br>                PowerManager.ACQUIRE_CAUSES_WAKEUP,”okTag”);<br> if (sCpuWakeLock!= null) {<br> sCpuWakeLock.release();<br>          sCpuWakeLock = null;<br><br>}<br></pre></div><br><br><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\"></font>&nbsp;<br><br><strong><font color=\"#ff0000\">注意</font></strong>：如果申请了<font color=\"#ff0000\">partial wakelock</font>,那么即使按Power键,系统也不会进Sleep,如Music播放时。所有的锁必须成对的使用, 如果申请了而没有及时释放，会造成系统故障。如申请了partial wakelock,而没有及时释放, 那系统就永远进不了Sleep模式.<br><br>因此，partial wakelock作为6中标识中，需最为谨慎使用的一个。BBS也专门指出了partial wakelock造成的电量损耗及待机时长。其余的则可标记为屏幕锁，辅助标记CPU锁。<br><br><font color=\"#000000\" face=\"微软雅黑 Light\"><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1eztpciku00j20de0bjjsd.jpg\" alt=\"\"></font>\n\n<font size=\"4\"><font color=\"#000000\" face=\"微软雅黑 Light\"><strong>上图表明了App内部、Android框架及内核硬件在唤醒锁交互中的流程。</strong></font></font>\n\n<font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\"><strong>AlarmManager</strong></font><font color=\"#000000\">，有一个AlarmManagerService,该服务程序主要维护app注册下来的各类Alarm,并且一直监听Alarm设备，一旦有Alarm触发，或者是Alarm事件发生，AlarmManagerService就会遍历Alarm列表，找到相应的注册Alarm并发出广播，是Android中常用的一种<font color=\"#ff0000\">系统级别的提示服务</font>，在特定的时刻为我们广播一个指定的Intent。通常我们使用 PendingIntent，可以理解为Intent的封装包，在Intent上在加个指定的动作。在使用Intent的时候，我们还需要在执行startActivity、startService或sendBroadcast才能使Intent有用。而PendingIntent的话就是将这个动作包含在内了。</font></font></font>\n\n<font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">闹钟响起，实际上是系统发出了为这个<font color=\"#ff0000\">闹钟注册的广播</font>，会自动开启目标应用。这种做法可以在某一时刻当做唤醒应用。注册的闹钟在设备睡眠的时候仍然会保留，可以选择性地设置是否唤醒设备，但是当设备关机和重启后，闹钟将会被清除。在alarm的receiver的onReceive()方法被执行的时候，Alarm Manager持有一个CPU唤醒锁，这样就保证了设备在处理完广播之前不会sleep。</font>\n\n</p><p><span><font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\">有4种Alarm类型： <wbr></font></font></font></span></p>\n<font color=\"#000000\"><font size=\"4\" face=\"微软雅黑 Light\">1)</font><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">RTC_WAKEUP <wbr><br></font>在指定的时刻（设置Alarm的时候），唤醒设备来触发Intent。（闹钟）</font></font></font><font size=\"4\" face=\"微软雅黑 Light\"> </font>\n\n<p><span></span><span><font color=\"#000000\"><font size=\"4\" face=\"微软雅黑 Light\">2)<font color=\"#ff0000\">RTC</font> <wbr><br>在一个显式的时间触发Intent，但不唤醒设备。<wbr><wbr><wbr><br>3)</font><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">ELAPSED_REALTIME <wbr><br></font>从设备启动后，如果流逝的时间达到总时间，那么触发Intent，但不唤醒设备。流逝的时间包括设备睡眠的任何时间。注意一点的是，时间流逝的计算点是自从它最后一次启动算起。 <wbr>&nbsp;<wbr>&nbsp;<wbr><br>4)<font color=\"#ff0000\">ELAPSED_REALTIME_WAKEUP</font> <wbr><br>从设备启动后，达到流逝的总时间后，如果需要将唤醒设备并触发Intent。</font></font></font></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">这样，唤醒对齐的方案就显得相当便捷，让唤醒次数大大降低。把允许唤醒的应用，按照某一合理的时刻进行排序和对齐，不会凌乱的唤醒手机而出现过度的cpu变频造成的耗电。</font></span></p>\n<p><span><font color=\"#000000\"><font size=\"4\"><font face=\"微软雅黑 Light\"><font color=\"#ff0000\">软节电</font>方案：</font></font></font></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">1、对不需要联网、不需要通知的 限制权限&amp;App自调 取消通知、联网等权限 杀注册广播</font></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">2、限制通知和自启动、互相启动、相互守护的service 禁启动</font></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">3、（千万少做）安全软件狂杀进程process和service</font></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">4、限制唤醒时长和对齐唤醒</font></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">5、对可识别的Activity禁止</font></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">6、对不需要通知、自升级、关闭软件啥也不想让他做的 结晶 禁止、半禁止一切后台</font></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">7、争取多冬眠service</font></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">8、在合理的时间重启并FQ</font></span></p>\n<p><span><font color=\"#000000\" size=\"4\" face=\"微软雅黑 Light\">So 开搞</font></span></p>\n<p><span><font color=\"#000000\" face=\"微软雅黑 Light\"></font></span>参考</p>\n<p><span><a href=\"http://www.runoob.com/w3cnote/android-tutorial-powermanager.html\">http://www.runoob.com/w3cnote/android-tutorial-powermanager.html</a>&nbsp; PowerManager(电源服务)</span></p>\n<p><a href=\"http://www.kancloud.cn/kancloud/android-tutorial/87277\" title=\"http://www.kancloud.cn/kancloud/android-tutorial/87277\">http://www.kancloud.cn/kancloud/android-tutorial/87277</a> 这俩好像一样、</p>\n<p><a href=\"http://forum.xda-developers.com/galaxy-s2/general/guide-complete-guide-maximum-battery-t1909996\" title=\"http://forum.xda-developers.com/galaxy-s2/general/guide-complete-guide-maximum-battery-t1909996\">http://forum.xda-developers.com/galaxy-s2/general/guide-complete-guide-maximum-battery-t1909996</a> 真的是能关的全给关了的大全</p>\n<font size=\"4\" face=\"微软雅黑 Light\"></font>\n\n<font size=\"4\" face=\"微软雅黑 Light\"></font>\n\n<font size=\"4\" face=\"微软雅黑 Light\"></font>\n\n<p><a href=\"http://lockekk.github.io/jekyll-bootstrap/2014/07/22/Android-Standby/\" title=\"http://lockekk.github.io/jekyll-bootstrap/2014/07/22/Android-Standby/\">http://lockekk.github.io/jekyll-bootstrap/2014/07/22/Android-Standby/</a> Android Standby 解析查杀软件的弊病</p>"},{"title":"Android常用控件及其使用方法","id":"191","date":"2013-05-17T08:50:07.000Z","_content":"\nandroid初学成长记--\n[Android常用控件及其使用方法](http://www.itzhai.com/android-and-its-basic-usage-of-the-common-control.html)","source":"_posts/Android常用控件及其使用方法.md","raw":"---\ntitle: 'Android常用控件及其使用方法'\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - Android\n  - mark\nid: 191\ndate: 2013-05-17 16:50:07\n---\n\nandroid初学成长记--\n[Android常用控件及其使用方法](http://www.itzhai.com/android-and-its-basic-usage-of-the-common-control.html)","slug":"Android常用控件及其使用方法","published":1,"updated":"2016-04-13T09:08:26.741Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7kn000fuco4zuspf6ql","content":"<p>android初学成长记–<br><a href=\"http://www.itzhai.com/android-and-its-basic-usage-of-the-common-control.html\" target=\"_blank\" rel=\"external\">Android常用控件及其使用方法</a></p>","excerpt":"","more":"<p>android初学成长记–<br><a href=\"http://www.itzhai.com/android-and-its-basic-usage-of-the-common-control.html\">Android常用控件及其使用方法</a></p>"},{"title":"Android为毛耗电[2]","id":"899","date":"2016-01-01T15:32:08.000Z","_content":"\n**<font size=\"4\" face=\"华文中宋\">本文只讨论安卓手机软节电，不负责推荐底包、rom、调频调压方案，刷机root<font color=\"#ff0000\">后果自负</font>。</font>**</p>\n\n<font size=\"4\" face=\"华文中宋\">本小节只讨论干货。在root及xposed框架下。同时兼顾不能肉身翻墙又想用google服务的小狗们。本人的使用情况是正常功能照开，google需要gmail和google photo及部分gcm，黑屏开启手势和解锁，正常收微信、闹钟、短信电话外熄屏一切不开，后台常开应用有snap锁屏、grenntify绿色守护、调音的audio mix、天气插件、BBS、输入法、Nova Launcher。测试的环境为Android L 5.1.1</font>\n\n<font size=\"4\" face=\"华文中宋\">&nbsp;\n<!-- more -->\n* * *\n\n<font color=\"#ff0000\">App干货推荐</font></font>\n\n&nbsp;[http://coolapk.com/apk/com.oasisfeng.greenify](http://coolapk.com/apk/com.oasisfeng.greenify) 绿色守护（评论好多捐赠包）国内优秀开发者--唤醒对其 深度休眠hibernateservice \n\n[http://coolapk.com/apk/com.asksven.betterbatterystats](http://coolapk.com/apk/com.asksven.betterbatterystats)BetterBatteryStats（捐赠包只多了小插件和知识库） 国外应用（使用稳定后可删，留着也不费电）--查看耗电最多的程序 资源 频率占比 [http://coolapk.com/apk/com.uzumapps.wakelockdetector](http://coolapk.com/apk/com.uzumapps.wakelockdetector) wakelock detector（使用后可删，被注册为系统程序，留着不太费电）--查看被CPU 屏幕 时钟唤醒的程序以便将其控制 可以便利的<font color=\"#ff0000\">结合绿色守护使用</font>\n\n[http://coolapk.com/apk/ccc71.at](http://coolapk.com/apk/ccc71.at) 安卓调谐器:3C Toolbox（Android Tuner）--系统调节<font color=\"#ff0000\">神器</font> 控制自启 控制软件权限 自大组件控制 cpu调节 自动内存调节\n\n一张图解释大部分唤醒、杀进程软件的思路\n\n![](http://ww2.sinaimg.cn/large/68eb7c93gw1ezs65djw3nj20tx0pn0xp.jpg)\n\n————————喂下面几个是一类 看清楚需求———————————\n\n[http://coolapk.com/apk/com.linangran.nowakelock](http://coolapk.com/apk/com.linangran.nowakelock) 禁止唤醒1.2.1 （国内开发者）--只能禁5个 暂未发现捐献包 主程序调用捐助包需要与play验证。但也不贵才十几块。 但是禁止效果良好 百度 阿里 系的随便禁一两个就发现效果超级棒 就是挺贵 \n\n[http://coolapk.com/apk/me.piebridge.forcestopgb](http://coolapk.com/apk/me.piebridge.forcestopgb) 阻止运行 国内开发者，免费!--阻止后台、前台、服务及可见的各种组件 不限数目 限制谷歌服务效果良好 \n\n[http://coolapk.com/apk/com.ryansteckler.nlpunbounce](http://coolapk.com/apk/com.ryansteckler.nlpunbounce) 唤醒控制amplify3.3.4--可以查看唤醒次数&nbsp;&nbsp;&nbsp; \n\n&nbsp;\n\n* * *\n\n<font color=\"#ff0000\">电量消耗结构总结</font>\n\n对于电量，总有一些是必然会消耗的，一些是可以减少的，而一些是可以避免的。那么，对于不同状态下那些成分占的比例会占比略高呢？\n\n1.正常使用状态下（Screen on）：无容置疑的是屏幕的发亮，因而合适的调低亮度能更大的省电，尤其是主动发光的amoled使用深色主题会更省电。当然，大部分使用状态，需要更多的网络连接，4G&gt;3G&gt;2G&gt;wifi是显而易见的。同时使用不同类型的App也会让CPU频率相应的上升，尤其是大型3D网游和功放影音体验。\n\n正常开机使用，耗电排行一般为：\n\n*   屏幕发亮  <li>高CPU占用的App ，包括某些情况下刷帖、浏览网页等长时间交互行为  <li>手机通信（联网、移动通话、视频通话）  <li>Android系统  <li>手机待机 ，即Android OS 之类\n\n2.正常待机状态下（Screen off）包括唤醒和睡眠、深睡眠。当然，大部分人都希望手机进入Idle正常无唤醒的状态，达到hibernate。但国产App可不会这么干。对于待机来说两大耗电来源就是alarm计时器唤醒各类监听进行后台操作、偷跑流量、不必要的消息推送；wakelock把持唤醒锁让手机无法进入深睡眠从而维持后台服务。\n\n正常待机状况下，不飞行，不关闭数据网络，关闭GPS、wifi、蓝牙等，耗电排行是：\n\n*   手机通信 Cell Standy之类。这一块比较大，依赖数据网络的制式  <li>Android OS（即BBS的Kernel wakelock或partial wakelock标记为Android的）  <li>手机待机 （PowerManagerService 及Device Idle之类的）处理休眠状态下设备监听及唤醒锁的管理\n\n&nbsp;\n\n* * *\n\n开启wld和bbs的实时监控，把该装的常用软件装上<font color=\"#ff0000\">先用着那么一段时间。</font>\n\n1.\n\n①利用这段时间 把权限都给干了 装软件给你显示了一list的权限然并卵 不同意没法装 装了也没几个需要的&nbsp; 在【应用程序权限】的设置框中把权限悉心的扫个遍 曾经启用过的权限会有提示何时使用过 例如我把美团外卖的权限全禁了 然而还是可以正常使用\n\n目标是：给app只留必要的权限 像读取短信直接get验证码那些权限就不必了，重点关注权限里的【<font color=\"#ff0000\">保持唤醒</font>】。这个权限意味着能在熄屏时候对手机进行唤醒操作，在亮屏时能够保证数据一致性。没有必要进行推送和同步的应用就应该关闭。\n\n②利用小汽车autostat或者3c toolbox自带的自启动控制器 控制不需要自行启动的项目 除了launcher greentify 3c tool box类似物 等系统框架 其余全都不需要 不需要不需要\n\n目标是：启动速度棒 未启动的应用不会推送任何消息 （微信 微博 GMail等可以排除）\n\n③给app一点微弱的信任，试着在app的设置中，关掉消息推送、wifi下自动更新、wifi下同步等设置，稍微有点技术含量的程序猿都会在设置取消时cut掉后台进程。\n\n④对于各种传感器，依据需求关闭能很好的节约电量（这一块和rom的优化很大关系）例如黑屏手势、人脸解锁、黑屏解锁、口袋检测等。\n\n⑤利用系统的电量统计和后台开启程序大致了解本机运行的大消耗后台。例如本机待机时系统消耗的比例想当高。同时保持着很高的唤醒状态。。\n\n**<font color=\"#ff0000\">系统的电量统计</font>**\n\n![](http://ww2.sinaimg.cn/large/68eb7c93gw1ezrv30mvwcj20u01hc435.jpg)![](http://ww1.sinaimg.cn/large/68eb7c93gw1ezrv0fux6ej20u01hc0x7.jpg)\n\n点开正在运行的后台，可以看本机Android系统和Android操作系统电量消耗高的原因是高通CPU的定位服务。经过调校后的曲线，可以看到中度使用后，待机超过了一个天。同时待机时休眠比例也超过了8成。\n\n![](http://ooo.0o0.ooo/2016/01/10/5693136395d1a.png)![](http://ooo.0o0.ooo/2016/01/10/569313c0b6950.png)\n\n2.使用过后 开启betterbatterystats和wakelock detector\n\nD1 2016/1/6\n\n①<font color=\"#ff0000\">**betterbatterystats BBS**</font>查看耗电大户 一般来说googleservice由于不能随时翻 会造成gmail keep backup contacts 都会发送心跳包不停的连接 此外 除了显而易见的三大流氓滥用唤醒锁 相互唤醒 外 还有奇形怪状的耗电大户 如location定位 微信 \n\n官方帮助指南：[http://better.asksven.org/bbs-how-to/](http://better.asksven.org/bbs-how-to/)\n\n应用beta版及正式版更新日志 [http://forum.xda-developers.com/showthread.php?t=1179809](http://forum.xda-developers.com/showthread.php?t=1179809 \"http://forum.xda-developers.com/showthread.php?t=1179809\")&nbsp; 包含apk下载。捐助包多了知识库和小控件。\n\n它承诺不在后台记录电量，只在开机、断开充电器、插上充电器、亮屏、熄屏。custom是自定义的操作记录，current是当前时间截止的电量消耗的样本。它提供了后台电量实时监控，这会消耗一定的电量；同时提供了进程监控，并对唤醒次数超过阈值的进行提示。<font color=\"#ff0000\">右侧的圈圈一律代表该应用、该服务、该定时器在所选时间段的使用时间比例</font>\n\nEntries：\n\n![](http://ww4.sinaimg.cn/large/68eb7c93gw1ezp07m935cj20u012saci.jpg)\n\n&nbsp;\n\n<font color=\"#ff0000\">other</font>——睡眠、唤醒、亮屏等其他重要时间节点的电量消耗数据【深睡眠、熄屏唤醒、亮屏、通话时间、wifi开启时长、wifi连上时长、蓝牙开启时长】\n\n*   一般选择unplugged-current 即断电后到现在 一般熄屏情况下 要么deep sleep要么awake，所以两者相加应该是100%。  <li>（Awake）Screen off显示了熄屏时被唤醒所占比例 可以很直观的感受手机离开操作后后台运作的程度 最优的情况当然是0%，手机处于最节能的状态（之前的版本将awake&amp;screen off分开计时 需要两个数据一起对比）  <li>此外，还有wifi 启动、wifi运行与唤醒的关系，很明显，在晚上断开wifi会给手机更好的进入休眠\n\n<font color=\"#ff0000\">kernel wakelocks</font>——使手机唤醒的内核操作【大量的短暂唤醒会严重影响唤醒时间导致手机消耗更多的时间返回睡眠】\n\n*   重点关注项目-PowerManagerService wakelock和multipdp、svnet-dormancy wakelock。前者是激活大部分app的唤醒锁服务，如果它占第一位，则取partial wakelocks关注唤醒时间较多的项目；后者是网络使用量，若存在后台偷跑流量的软件，可以很明显的发现异常，到network数据栏中看一下。  <li>kernel wakelock中的alarm是所有定时器的总和 基本不耗电 但如有异常 可到alarms或amplify中查看详细的计时器项目。  <li>*sync* *backup* *job*很明显是系统的操作 同步 备份 消息推送 如果不需要就禁了吧\n\n<font color=\"#ff0000\">partial wakelocks</font>——是大部分app把持的唤醒锁。（PowerManagerService高的可以关注这项）\n\n*   根据使用频率来限制大耗电partial wakelock 如ig tw fb wb wx等。可以在后文自行设置后台计时器时间。  <li>卸载/冻结/不可用 这些做法有些极端 但实在忍无何忍下还是放弃这个app吧。钛备份下的冻结就比较好用 对google系的后文提到。  <li>主动手动开关GPS。使用时才打开。  <li>根据需要使用后退键退出还是home键退出  <li>wifi是个奇葩 晚上记得关（If you don't need Wifi turn it off: in some cases Wifi is known to cause wakeups and an overhead in e.g. location services）  <li>一次不要改太多，一次一次改 能对手机每个app和每个设置有直观的体验和感受\n\n<font color=\"#ff0000\">alarms</font>——由于应用及服务的定时器唤醒手机【apps设定的触发器在某个时间节点唤醒手机，某些alarms只在唤醒时执行、另一些则直接唤醒手机。通常一个alarm绑定一个intent】\n\n*   长时间和过高次数的alarm都是不正常的。一定要及时纠出。例如微信这狗。  <li>更多的alarm应该在手机亮屏时启动 除了闹钟、微信等必要的消息之外 如知乎提醒、百度外卖提醒等应用，按照使用习惯，更应该是熄屏时完全关闭计时器。\n\n<font color=\"#ff0000\">network</font>——app的网络使用率【区分3G和wifi的网络连接数据】\n\n*   相当多的工具都能查看网络传输的状态。系统自带的也不错。  <li>信号较弱的wifi或窝蜂数据会频繁的连接并唤醒手机\n\n<font color=\"#ff0000\">CPU states</font>——不同CPU频率所占用的时间【包括深度睡眠时的CPU频率占用时间】\n\n<font color=\"#ff0000\">Processes</font>——用户及系统进程消耗的CPU时间【进程CPU消耗，分为用户及系统，以不同颜色标识】\n\n进阶功能：\n\n【<font color=\"#ff0000\">Watchdog</font>】——熄屏分析功能，可自定义亮屏、解锁等。对唤醒超过阈值的app和service进行提示，可在熄屏后一定时间对watchdog关闭。\n\n【<font color=\"#ff0000\">Active Monitoring</font>】——后台运行的一定时间间隔的数据采集，可能会造成额外耗电。\n\n观察一下本机的耗电比例，首先看到other中，Awake(Screen Off)的比例相当高，在其他人的截图是有deep sleep的！！！我安的软件已经炸裂了。尽管开启了wifi会消耗更多的电量，但大量的唤醒让手机不能正常进入休眠。\n\n![](http://ww1.sinaimg.cn/large/68eb7c93gw1ezrv6kd1wgj20u01hcaep.jpg)\n\n再观察partial wakelock ，除了gmail可能不顺利的同步导致消耗略多外，其余app都还算正常的耗电（注意关注连接时间，最多的也才3m35s，这在8h14m11s里来说是相当小的比例，同时消耗的电量也只有0.7%，还可以接受。当然是提前锁过了一部分app的后台）\n\n![](http://ww3.sinaimg.cn/large/68eb7c93gw1ezrv97d35sj20u01hc7ci.jpg)\n\n注意力关注到kernel wakelock，可以看到，核心的耗电量还是比较大的（由于之前的耗电太过大已经关闭了锁屏手势和黑屏解锁）。可以明显的看到，wlan联网在熄屏时间一直连接，qpnp_fg_memaccess qpnp_fg_update_temp qpnp_fg_update_sram是内核的操作。和rom有关。![](http://ww3.sinaimg.cn/large/68eb7c93gw1ezrvef5tykj20u01hctff.jpg)\n\n最后发现。。其实是rom的锅。我的other居然没有出现deep sleep。这是相当可怕的事情。经过调优和整理唤醒后，得到如下相当爽快的数据。接近70%的深睡眠还可以让人接受。毕竟还开启了微信。微博。邮件的消息推送。\n\n![](http://ww4.sinaimg.cn/large/006fVPCvjw1ezvcpamb0bj30u01hcgrd.jpg)\n\n![](http://ww3.sinaimg.cn/large/006fVPCvjw1ezvconkjs5j30u01hctfb.jpg)![](http://ww2.sinaimg.cn/large/006fVPCvjw1ezvcqv63zoj30u01hcah1.jpg)\n\n②<font color=\"#ff0000\">**wakelock detector WLD**</font>查看流氓唤醒大户 这里要提到微信。千万不要手欠在应用内使用它的升级。最好在play或者cool市场升级。官方提供的流氓唤醒一个晚上唤醒好几千次。从未进入过休眠状态。一进入唤醒状态又有很多应用跟着启动。 微信的消息是利用同步，而CPU唤醒锁则是被滥用了的。\n\nTest1 2016.01.06\n\n![](http://ww4.sinaimg.cn/large/68eb7c93gw1ezp096st0oj20u01hcwlt.jpg)![](http://ww4.sinaimg.cn/large/68eb7c93gw1ezp0akfqdzj20u01hcgrl.jpg)![](http://ww4.sinaimg.cn/large/68eb7c93gw1ezp09t72gcj20u01hcwja.jpg)![](http://ww3.sinaimg.cn/large/68eb7c93gw1ezp0a61g8yj20u01hcgt8.jpg)\n\n上图分别是WLD四个视图-CPU唤醒锁时间、Kernel唤醒锁时间、屏幕唤醒锁触发次数、Alarm触发器次数.\n\nCPU锁实际上就是用户app的持有wakelock的时间。可以看到由于需要同步相册里的图片，本次测试中google photo占用了极大部分的唤醒锁时间，其余的应用则比较正常；内核持有wakelock一般与rom的品质有关，由于po主使用的是第三方精简rom，出现了一些奇特的bug，例如第一项qcom_rx_wakelock高通的cpu在5.1的bug，在熄屏状态下仍在进行不停的wifi连接，持有唤醒锁对应用进行超负荷的运算，这也是比较不容易控制也难以改善的方面；屏幕唤醒则和用户使用的点亮次数有关，可以看到，每次启动SU超级root、微信、QQ、BBS都进行了短暂的唤醒，而视频软件如果在播放中熄屏，亮屏后也会唤醒屏幕锁（持久保有）；最后一项则是需要重点关注的，定时器启动唤醒锁，2个多小时内，google服务、微信、微博、日历、输入法都进行了大量的唤醒，导致80%的时间都难以进入deep sleep。\n\nTest2 2016.01.08\n\nCPU唤醒锁：本次测试google相册已经不进行同步，更多的是Gmail的同步操作。由于输入了7个邮件，不可避免的会进行更多频次的操作。除了gmail能利用谷歌框架同步外，其他邮件都应该设置比较合理的同步时间。而微信（后文提及）设置了封锁CPU锁后同步的频次也有所减少。\n\nkernel wakelock：qcom_rx_wakelock已经减少了很多，这是关闭黑屏手势的减少唤醒次数的效果。两次测试中，PowerManagerService.WakeLocks、qcom_rx_wakelock、PowerManagerService.Broadcasts、NETLINK四个核心服务占据的时间远远超过其他的服务。这也是需要优化的部分。\n\n屏幕唤醒锁触发：\n\nAlarm计时器触发：可以看到QQ、微信在夜晚的唤醒次数有些多，其实在qq、微信中都可以设置免打扰时间段，主动的消除在夜间待机时的计时器唤醒推送。\n\n![](http://ww4.sinaimg.cn/large/68eb7c93gw1ezrvmr0wr2j20u01hcqaa.jpg)![](http://ww3.sinaimg.cn/large/68eb7c93gw1ezrvnilpewj20u01hc7ai.jpg)\n\n![](http://ww1.sinaimg.cn/large/68eb7c93gw1ezrvjeovxej20u01hcahy.jpg)![](http://ww3.sinaimg.cn/large/68eb7c93gw1ezrvlj75wdj20u01hcn5a.jpg)\n\n&nbsp;\n\n4.绿色守护、3C ToolBox、Amplify的使用。\n\n①.<font color=\"#ff0000\">**绿色守护**</font>\n\n<font color=\"#ff0000\">思路</font>：熄屏清掉所有被勾选的app的服务和缓存进程，同时阻止所有可唤醒包含服务的监听receiver&amp;释放所有包含服务的相互唤醒wakelock，达到相对休眠状态。主要运作在熄屏后不希望后台运作的程序（<font color=\"#ff0000\">无法在前台操作切断应用间唤醒</font>）。捐助版的亮点是可以在休眠状态下使用GCM服务。\n\n绿色守护在xda的讨论贴 开发者oisisfeng也在。\n\n[http://forum.xda-developers.com/showthread.php?t=2155737](http://forum.xda-developers.com/showthread.php?t=2155737 \"http://forum.xda-developers.com/showthread.php?t=2155737\")\n\n绿守作者在知乎的问答\n\n[https://www.zhihu.com/question/38311793/answer/75897889](https://www.zhihu.com/question/38311793/answer/75897889 \"https://www.zhihu.com/question/38311793/answer/75897889\")\n\n由于测试机在5.1.1,还未升级到Android M，因此没有享受到doze mode和app standby带来的福利。\n\n一张图看到就算不是 百度阿里疼腾讯系 从某个市场出来的app也会相互唤醒。这锅到底谁来背。以后反编译源码看一看。即刻-豆瓣-虎皮体育-同花顺-航旅纵横-什么值得买是什么关系。更不用说百度及包含百度字样的app-爱奇艺-去哪儿-uber-乐视-91-多米-音悦台-穷游途牛-汽车之家&nbsp; 腾讯及包含qq字样-京东-大众-美团-饿了么-58-猎豹-搜狗-同城 阿里及UC-微博-优酷土豆-陌陌-滴滴快的-小米魅族\n\n![](http://ww2.sinaimg.cn/large/68eb7c93gw1ezs6frg1q4j20u01hc461.jpg)\n\n使用方法：主界面显示正在运行的服务及已经绿色化的应用。点击上方【+】号对所有潜在威胁进行评估，勾选的应用会在熄屏数分钟后清空缓存、杀死服务、抑制app唤醒及alarm的唤醒。root及xposed模式下效果更佳。支持gcm的应用会有小图标，能在绿色化的情况下还可收发消息。\n\n②.<font color=\"#ff0000\">**3C tool box**</font>\n\n<font color=\"#ff0000\">思路</font>：封杀选定的activity receiver service。结晶化应用（无论前台后台，需要更多的测试，容易出现应用fc 可以实现前台界面退出后直接清缓存 <font color=\"#ff0000\">可直接在应用使用中禁止广告、介绍、推荐app的activity和service</font>）（本篇不涉及3c的调频调压 内存管理设置）\n\n例如：杀错了谷歌的邮件提醒，即便能实时接收邮件，但系统不做出提醒通知。\n\n![](http://ww4.sinaimg.cn/large/68eb7c93gw1ezrulsjoalj20u01hcgt5.jpg)\n\n又例如：杀错了QQi的消息消息提示核心，虽然在后台能看到QQ的进程，但新消息通知会出现不同步（极有可能是阻止了开机自启杀掉的，但这个receiver需要的权限相当多，网络改变、时间改变等乱七八糟的）\n\n![](http://ww1.sinaimg.cn/large/68eb7c93gw1ezrusb4h51j20u01hctf7.jpg)\n\n再比如杀掉了随手记的通知权限，居然能把自己的同步服务给搞挂了。。这代码写的。此外几个应用，饿了么，大众点评，都有不同程度的易fc但后台又唤醒个不停的问题。\n\n使用方法：对四大组件中那三个进行轮番排查，限制自启动，限制唤醒路径，冻结后台。（主要操作在应用管理里）\n\n③**<font color=\"#ff0000\">唤醒控制Amplify</font>**的使用\n\n思路：对Alarm计时器的时间进行限制重设、对Service进行屏蔽、限制同步，可使用进阶的正则表达式过滤。\n\n使用方法：对在wld找到的唤醒次数多的详细分析，对alarm中唤醒频次高的限制更长的时间，对显见的服务停用，先做完这两者再对wakelock进行限制。\n\n![](http://ooo.0o0.ooo/2016/01/10/569322dfc0422.png)\n\n④**<font color=\"#ff0000\">禁止唤醒</font>**的使用(非捐助版只能对5个app进行限制，入正也就十几块)\n\n思路：在前台就主动把各类唤醒锁进行封闭、定时器对齐、对同步进行限制\n\n作者曾提到了<font color=\"#ff0000\">唤醒锁的危害</font><font color=\"#000000\">及禁止唤醒对这些危害的防范</font>\n\n**CPU唤醒锁**: 这是在息屏后阻止你的设备进入休眠状态的唤醒锁, 禁用它通常不会有任何问题.\n\n**所有其它唤醒锁**: 除了CPU唤醒锁之外, 还有一些唤醒锁可以阻止设备休眠, 甚至阻止设备息屏. 开启这个选项以禁用这些唤醒锁.\n\n**同步**: 同步也可以唤醒设备, 如果你不需要应用的同步功能, 使用这个选项来禁用掉它.\n\n**对齐定时器:** (&gt;= Android 4.4) AlarmManager可以使用定时器来周期性的唤醒设备, 阻止CPU进入长期休眠状态. 启用这个选项来强制对齐定时器, 让它们尽量在同一时间触发以节省电量. 请注意: 对于设计不良的应用, 启用此选项有可能会引发推送消息延迟.\n\n[https://www.linangran.com/?p=611](https://www.linangran.com/?p=611) 作者使用指南\n\n![](http://ooo.0o0.ooo/2016/01/10/569323251d9ce.png)\n\n⑤阻止运行的使用\n\n[https://github.com/liudongmiao/ForceStopGB](https://github.com/liudongmiao/ForceStopGB \"https://github.com/liudongmiao/ForceStopGB\") 开源项目地址 免费\n\n相当推荐的一款软件，无论前后台，通过劫持系统api，直接禁止非需求service的启动。精简版的3c tool box，保证应用只在需要时启动。添加到阻止列表的应用只在以下情况开启：\n\n*   启动器直接或第三方provider，如手动点button、分享、支付  <li>桌面小部件定时更新、但只维持30秒（这个好顶赞）  <li>同步开启时的定时同步，也只能维持30秒  <li>除谷歌服务外的系统服务、支付宝的支付服务  <li>其他可能的用户行为引起的启动\n\n同时，谷歌服务在阻止列表时，可以支持gcm和谷歌家族应用的使用。但当任何一个谷歌家族应用没有退出时，都不会退出谷歌服务。\n\n![](http://ooo.0o0.ooo/2016/01/10/569322a0e590e.png)\n\n5.针对微信的方案\n\n微信最近从良而加入gcm的推送方案，能在有谷歌框架的手机在hibernate休眠状况下直接推送消息！既不用随时拿着唤醒锁又不唤醒其他乱七八糟的应用！但原先保留的wakelock模式依旧存在，握着各种随机数的锁禁都不知道禁哪些。但大神出现了。 \n\n[https://www.zhihu.com/question/31136645](https://www.zhihu.com/question/31136645) 知乎高票的正则表达式杀wakerlock方案\n\n[http://bbs.gfan.com/android-7963258-1-1.html](http://bbs.gfan.com/android-7963258-1-1.html) gfan精华帖\n\n上面是一种方案，但微信更改了wakelock的命名方式就会得不偿失错杀唤醒锁了。最近发现单独使用【 禁止唤醒】中的CPU唤醒锁，也能阻止微信胡乱的唤醒，同时不影响推送；但相同的情况下使用绿色守护对微信绿色化却不能及时收到消息。\n\n6.针对gms的方案 考虑到gms 的复杂性 提一下它涉及到google账户的同步*sync* 备份 keep photo gmail(分为对被墙的不被墙的) 三个文档&nbsp; play软件升级等等 google service包含了N个心跳包的alarm 各种硬件CPU唤醒锁\n\n①完全禁掉是一个办法（当然这需要框架 service play一起禁 不然各种报错）这种方式最省电 但是又想使用google收国内账户 或者时不时FQ看看FB TW IG使用其中一些\n\n②不停更换host文件。这个方式能保证随时上墙又不会因为vpn挂着长期费电。测试几天发现耗电稳定，gmail是不是抽风但效果拔群。（推荐神站load.cn）\n\n③长时间挂载稳定vpn。该方式同样能随时保证上墙接收同步和推送。同时配合now能享受到肉身翻墙的欢喜效果。但vpn的开发良莠不齐，耗电状况不一。\n\n④不需要google家族的直接装无gms版的精简rom或国内大部分融都会删掉——————这个方法纯天然摒除了谷歌的抽风状况，但，滚粗。\n\n⑤久不久上墙。gms耗电的问题就是连接不上google而大量地进行重连接。所以希望使用google服务又不想随时耗电使用vpn的一个便捷方案就是每天保证登录一次，并在amplify对google框架进行限制时间，每隔一天敲醒alarm一次，但不能阻止cpu唤醒锁对gms想要获取推送的影响。\n\n参考：\n\n【2013.04.14】绿守作者 微信收费事件背后被广泛忽略的技术细节\n\n[http://blog.oasisfeng.com/2013/04/14/dirty-secret-behind-weixin-charge-gate/](http://blog.oasisfeng.com/2013/04/14/dirty-secret-behind-weixin-charge-gate/ \"http://blog.oasisfeng.com/2013/04/14/dirty-secret-behind-weixin-charge-gate/\")\n\n【2013.06.19】PC Online 的省电优化方案介绍\n\n[http://pcedu.pconline.com.cn/334/3345895_all.html](http://pcedu.pconline.com.cn/334/3345895_all.html \"http://pcedu.pconline.com.cn/334/3345895_all.html\")\n\n【2014.02.16】唤醒锁: 检测 Android* 应用中的 No-Sleep（无法进入睡眠）问题\n\n[https://software.intel.com/zh-cn/android/articles/wakelocks-detect-no-sleep-issues-in-android-applications?language=es](https://software.intel.com/zh-cn/android/articles/wakelocks-detect-no-sleep-issues-in-android-applications?language=es \"https://software.intel.com/zh-cn/android/articles/wakelocks-detect-no-sleep-issues-in-android-applications?language=es\")\n\n【2014.06.05】wakelock alarm wifi 详细数据测评 唤醒锁: 检测 Android* 应用中的 No-Sleep（无法进入睡眠）问题[http://www.oneplusbbs.com/forum.php?mod=viewthread&amp;tid=366390](http://www.oneplusbbs.com/forum.php?mod=viewthread&amp;tid=366390)\n\n【2014.07.22】Android Standby 对于绿色守护唤醒对其 进入深睡眠的一些思考\n\n[http://lockekk.github.io/jekyll-bootstrap/2014/07/22/Android-Standby/](http://lockekk.github.io/jekyll-bootstrap/2014/07/22/Android-Standby/ \"http://lockekk.github.io/jekyll-bootstrap/2014/07/22/Android-Standby/\")\n\n&nbsp;\n\nandroid论坛关于ba保持屏幕唤醒和cpu唤醒\n\n[http://developer.android.com/training/scheduling/wakelock.html](http://developer.android.com/training/scheduling/wakelock.html \"http://developer.android.com/training/scheduling/wakelock.html\")\n\n此外 几个app的酷市场下评论都很精彩。\n\n例如Amplify的评论 [http://coolapk.com/feed/1201169](http://coolapk.com/feed/1201169 \"http://coolapk.com/feed/1201169\")\n\n例如Google Play Service 的评论 [http://coolapk.com/feed/1196656](http://coolapk.com/feed/1196656 \"http://coolapk.com/feed/1196656\")","source":"_posts/Android为毛耗电[2].md","raw":"---\ntitle: 'Android为毛耗电[2]'\ncategories:\n  - App强推\n  - 软文\ntags:\n  - Android\nid: 899\ndate: 2016-01-01 23:32:08\n---\n\n**<font size=\"4\" face=\"华文中宋\">本文只讨论安卓手机软节电，不负责推荐底包、rom、调频调压方案，刷机root<font color=\"#ff0000\">后果自负</font>。</font>**</p>\n\n<font size=\"4\" face=\"华文中宋\">本小节只讨论干货。在root及xposed框架下。同时兼顾不能肉身翻墙又想用google服务的小狗们。本人的使用情况是正常功能照开，google需要gmail和google photo及部分gcm，黑屏开启手势和解锁，正常收微信、闹钟、短信电话外熄屏一切不开，后台常开应用有snap锁屏、grenntify绿色守护、调音的audio mix、天气插件、BBS、输入法、Nova Launcher。测试的环境为Android L 5.1.1</font>\n\n<font size=\"4\" face=\"华文中宋\">&nbsp;\n<!-- more -->\n* * *\n\n<font color=\"#ff0000\">App干货推荐</font></font>\n\n&nbsp;[http://coolapk.com/apk/com.oasisfeng.greenify](http://coolapk.com/apk/com.oasisfeng.greenify) 绿色守护（评论好多捐赠包）国内优秀开发者--唤醒对其 深度休眠hibernateservice \n\n[http://coolapk.com/apk/com.asksven.betterbatterystats](http://coolapk.com/apk/com.asksven.betterbatterystats)BetterBatteryStats（捐赠包只多了小插件和知识库） 国外应用（使用稳定后可删，留着也不费电）--查看耗电最多的程序 资源 频率占比 [http://coolapk.com/apk/com.uzumapps.wakelockdetector](http://coolapk.com/apk/com.uzumapps.wakelockdetector) wakelock detector（使用后可删，被注册为系统程序，留着不太费电）--查看被CPU 屏幕 时钟唤醒的程序以便将其控制 可以便利的<font color=\"#ff0000\">结合绿色守护使用</font>\n\n[http://coolapk.com/apk/ccc71.at](http://coolapk.com/apk/ccc71.at) 安卓调谐器:3C Toolbox（Android Tuner）--系统调节<font color=\"#ff0000\">神器</font> 控制自启 控制软件权限 自大组件控制 cpu调节 自动内存调节\n\n一张图解释大部分唤醒、杀进程软件的思路\n\n![](http://ww2.sinaimg.cn/large/68eb7c93gw1ezs65djw3nj20tx0pn0xp.jpg)\n\n————————喂下面几个是一类 看清楚需求———————————\n\n[http://coolapk.com/apk/com.linangran.nowakelock](http://coolapk.com/apk/com.linangran.nowakelock) 禁止唤醒1.2.1 （国内开发者）--只能禁5个 暂未发现捐献包 主程序调用捐助包需要与play验证。但也不贵才十几块。 但是禁止效果良好 百度 阿里 系的随便禁一两个就发现效果超级棒 就是挺贵 \n\n[http://coolapk.com/apk/me.piebridge.forcestopgb](http://coolapk.com/apk/me.piebridge.forcestopgb) 阻止运行 国内开发者，免费!--阻止后台、前台、服务及可见的各种组件 不限数目 限制谷歌服务效果良好 \n\n[http://coolapk.com/apk/com.ryansteckler.nlpunbounce](http://coolapk.com/apk/com.ryansteckler.nlpunbounce) 唤醒控制amplify3.3.4--可以查看唤醒次数&nbsp;&nbsp;&nbsp; \n\n&nbsp;\n\n* * *\n\n<font color=\"#ff0000\">电量消耗结构总结</font>\n\n对于电量，总有一些是必然会消耗的，一些是可以减少的，而一些是可以避免的。那么，对于不同状态下那些成分占的比例会占比略高呢？\n\n1.正常使用状态下（Screen on）：无容置疑的是屏幕的发亮，因而合适的调低亮度能更大的省电，尤其是主动发光的amoled使用深色主题会更省电。当然，大部分使用状态，需要更多的网络连接，4G&gt;3G&gt;2G&gt;wifi是显而易见的。同时使用不同类型的App也会让CPU频率相应的上升，尤其是大型3D网游和功放影音体验。\n\n正常开机使用，耗电排行一般为：\n\n*   屏幕发亮  <li>高CPU占用的App ，包括某些情况下刷帖、浏览网页等长时间交互行为  <li>手机通信（联网、移动通话、视频通话）  <li>Android系统  <li>手机待机 ，即Android OS 之类\n\n2.正常待机状态下（Screen off）包括唤醒和睡眠、深睡眠。当然，大部分人都希望手机进入Idle正常无唤醒的状态，达到hibernate。但国产App可不会这么干。对于待机来说两大耗电来源就是alarm计时器唤醒各类监听进行后台操作、偷跑流量、不必要的消息推送；wakelock把持唤醒锁让手机无法进入深睡眠从而维持后台服务。\n\n正常待机状况下，不飞行，不关闭数据网络，关闭GPS、wifi、蓝牙等，耗电排行是：\n\n*   手机通信 Cell Standy之类。这一块比较大，依赖数据网络的制式  <li>Android OS（即BBS的Kernel wakelock或partial wakelock标记为Android的）  <li>手机待机 （PowerManagerService 及Device Idle之类的）处理休眠状态下设备监听及唤醒锁的管理\n\n&nbsp;\n\n* * *\n\n开启wld和bbs的实时监控，把该装的常用软件装上<font color=\"#ff0000\">先用着那么一段时间。</font>\n\n1.\n\n①利用这段时间 把权限都给干了 装软件给你显示了一list的权限然并卵 不同意没法装 装了也没几个需要的&nbsp; 在【应用程序权限】的设置框中把权限悉心的扫个遍 曾经启用过的权限会有提示何时使用过 例如我把美团外卖的权限全禁了 然而还是可以正常使用\n\n目标是：给app只留必要的权限 像读取短信直接get验证码那些权限就不必了，重点关注权限里的【<font color=\"#ff0000\">保持唤醒</font>】。这个权限意味着能在熄屏时候对手机进行唤醒操作，在亮屏时能够保证数据一致性。没有必要进行推送和同步的应用就应该关闭。\n\n②利用小汽车autostat或者3c toolbox自带的自启动控制器 控制不需要自行启动的项目 除了launcher greentify 3c tool box类似物 等系统框架 其余全都不需要 不需要不需要\n\n目标是：启动速度棒 未启动的应用不会推送任何消息 （微信 微博 GMail等可以排除）\n\n③给app一点微弱的信任，试着在app的设置中，关掉消息推送、wifi下自动更新、wifi下同步等设置，稍微有点技术含量的程序猿都会在设置取消时cut掉后台进程。\n\n④对于各种传感器，依据需求关闭能很好的节约电量（这一块和rom的优化很大关系）例如黑屏手势、人脸解锁、黑屏解锁、口袋检测等。\n\n⑤利用系统的电量统计和后台开启程序大致了解本机运行的大消耗后台。例如本机待机时系统消耗的比例想当高。同时保持着很高的唤醒状态。。\n\n**<font color=\"#ff0000\">系统的电量统计</font>**\n\n![](http://ww2.sinaimg.cn/large/68eb7c93gw1ezrv30mvwcj20u01hc435.jpg)![](http://ww1.sinaimg.cn/large/68eb7c93gw1ezrv0fux6ej20u01hc0x7.jpg)\n\n点开正在运行的后台，可以看本机Android系统和Android操作系统电量消耗高的原因是高通CPU的定位服务。经过调校后的曲线，可以看到中度使用后，待机超过了一个天。同时待机时休眠比例也超过了8成。\n\n![](http://ooo.0o0.ooo/2016/01/10/5693136395d1a.png)![](http://ooo.0o0.ooo/2016/01/10/569313c0b6950.png)\n\n2.使用过后 开启betterbatterystats和wakelock detector\n\nD1 2016/1/6\n\n①<font color=\"#ff0000\">**betterbatterystats BBS**</font>查看耗电大户 一般来说googleservice由于不能随时翻 会造成gmail keep backup contacts 都会发送心跳包不停的连接 此外 除了显而易见的三大流氓滥用唤醒锁 相互唤醒 外 还有奇形怪状的耗电大户 如location定位 微信 \n\n官方帮助指南：[http://better.asksven.org/bbs-how-to/](http://better.asksven.org/bbs-how-to/)\n\n应用beta版及正式版更新日志 [http://forum.xda-developers.com/showthread.php?t=1179809](http://forum.xda-developers.com/showthread.php?t=1179809 \"http://forum.xda-developers.com/showthread.php?t=1179809\")&nbsp; 包含apk下载。捐助包多了知识库和小控件。\n\n它承诺不在后台记录电量，只在开机、断开充电器、插上充电器、亮屏、熄屏。custom是自定义的操作记录，current是当前时间截止的电量消耗的样本。它提供了后台电量实时监控，这会消耗一定的电量；同时提供了进程监控，并对唤醒次数超过阈值的进行提示。<font color=\"#ff0000\">右侧的圈圈一律代表该应用、该服务、该定时器在所选时间段的使用时间比例</font>\n\nEntries：\n\n![](http://ww4.sinaimg.cn/large/68eb7c93gw1ezp07m935cj20u012saci.jpg)\n\n&nbsp;\n\n<font color=\"#ff0000\">other</font>——睡眠、唤醒、亮屏等其他重要时间节点的电量消耗数据【深睡眠、熄屏唤醒、亮屏、通话时间、wifi开启时长、wifi连上时长、蓝牙开启时长】\n\n*   一般选择unplugged-current 即断电后到现在 一般熄屏情况下 要么deep sleep要么awake，所以两者相加应该是100%。  <li>（Awake）Screen off显示了熄屏时被唤醒所占比例 可以很直观的感受手机离开操作后后台运作的程度 最优的情况当然是0%，手机处于最节能的状态（之前的版本将awake&amp;screen off分开计时 需要两个数据一起对比）  <li>此外，还有wifi 启动、wifi运行与唤醒的关系，很明显，在晚上断开wifi会给手机更好的进入休眠\n\n<font color=\"#ff0000\">kernel wakelocks</font>——使手机唤醒的内核操作【大量的短暂唤醒会严重影响唤醒时间导致手机消耗更多的时间返回睡眠】\n\n*   重点关注项目-PowerManagerService wakelock和multipdp、svnet-dormancy wakelock。前者是激活大部分app的唤醒锁服务，如果它占第一位，则取partial wakelocks关注唤醒时间较多的项目；后者是网络使用量，若存在后台偷跑流量的软件，可以很明显的发现异常，到network数据栏中看一下。  <li>kernel wakelock中的alarm是所有定时器的总和 基本不耗电 但如有异常 可到alarms或amplify中查看详细的计时器项目。  <li>*sync* *backup* *job*很明显是系统的操作 同步 备份 消息推送 如果不需要就禁了吧\n\n<font color=\"#ff0000\">partial wakelocks</font>——是大部分app把持的唤醒锁。（PowerManagerService高的可以关注这项）\n\n*   根据使用频率来限制大耗电partial wakelock 如ig tw fb wb wx等。可以在后文自行设置后台计时器时间。  <li>卸载/冻结/不可用 这些做法有些极端 但实在忍无何忍下还是放弃这个app吧。钛备份下的冻结就比较好用 对google系的后文提到。  <li>主动手动开关GPS。使用时才打开。  <li>根据需要使用后退键退出还是home键退出  <li>wifi是个奇葩 晚上记得关（If you don't need Wifi turn it off: in some cases Wifi is known to cause wakeups and an overhead in e.g. location services）  <li>一次不要改太多，一次一次改 能对手机每个app和每个设置有直观的体验和感受\n\n<font color=\"#ff0000\">alarms</font>——由于应用及服务的定时器唤醒手机【apps设定的触发器在某个时间节点唤醒手机，某些alarms只在唤醒时执行、另一些则直接唤醒手机。通常一个alarm绑定一个intent】\n\n*   长时间和过高次数的alarm都是不正常的。一定要及时纠出。例如微信这狗。  <li>更多的alarm应该在手机亮屏时启动 除了闹钟、微信等必要的消息之外 如知乎提醒、百度外卖提醒等应用，按照使用习惯，更应该是熄屏时完全关闭计时器。\n\n<font color=\"#ff0000\">network</font>——app的网络使用率【区分3G和wifi的网络连接数据】\n\n*   相当多的工具都能查看网络传输的状态。系统自带的也不错。  <li>信号较弱的wifi或窝蜂数据会频繁的连接并唤醒手机\n\n<font color=\"#ff0000\">CPU states</font>——不同CPU频率所占用的时间【包括深度睡眠时的CPU频率占用时间】\n\n<font color=\"#ff0000\">Processes</font>——用户及系统进程消耗的CPU时间【进程CPU消耗，分为用户及系统，以不同颜色标识】\n\n进阶功能：\n\n【<font color=\"#ff0000\">Watchdog</font>】——熄屏分析功能，可自定义亮屏、解锁等。对唤醒超过阈值的app和service进行提示，可在熄屏后一定时间对watchdog关闭。\n\n【<font color=\"#ff0000\">Active Monitoring</font>】——后台运行的一定时间间隔的数据采集，可能会造成额外耗电。\n\n观察一下本机的耗电比例，首先看到other中，Awake(Screen Off)的比例相当高，在其他人的截图是有deep sleep的！！！我安的软件已经炸裂了。尽管开启了wifi会消耗更多的电量，但大量的唤醒让手机不能正常进入休眠。\n\n![](http://ww1.sinaimg.cn/large/68eb7c93gw1ezrv6kd1wgj20u01hcaep.jpg)\n\n再观察partial wakelock ，除了gmail可能不顺利的同步导致消耗略多外，其余app都还算正常的耗电（注意关注连接时间，最多的也才3m35s，这在8h14m11s里来说是相当小的比例，同时消耗的电量也只有0.7%，还可以接受。当然是提前锁过了一部分app的后台）\n\n![](http://ww3.sinaimg.cn/large/68eb7c93gw1ezrv97d35sj20u01hc7ci.jpg)\n\n注意力关注到kernel wakelock，可以看到，核心的耗电量还是比较大的（由于之前的耗电太过大已经关闭了锁屏手势和黑屏解锁）。可以明显的看到，wlan联网在熄屏时间一直连接，qpnp_fg_memaccess qpnp_fg_update_temp qpnp_fg_update_sram是内核的操作。和rom有关。![](http://ww3.sinaimg.cn/large/68eb7c93gw1ezrvef5tykj20u01hctff.jpg)\n\n最后发现。。其实是rom的锅。我的other居然没有出现deep sleep。这是相当可怕的事情。经过调优和整理唤醒后，得到如下相当爽快的数据。接近70%的深睡眠还可以让人接受。毕竟还开启了微信。微博。邮件的消息推送。\n\n![](http://ww4.sinaimg.cn/large/006fVPCvjw1ezvcpamb0bj30u01hcgrd.jpg)\n\n![](http://ww3.sinaimg.cn/large/006fVPCvjw1ezvconkjs5j30u01hctfb.jpg)![](http://ww2.sinaimg.cn/large/006fVPCvjw1ezvcqv63zoj30u01hcah1.jpg)\n\n②<font color=\"#ff0000\">**wakelock detector WLD**</font>查看流氓唤醒大户 这里要提到微信。千万不要手欠在应用内使用它的升级。最好在play或者cool市场升级。官方提供的流氓唤醒一个晚上唤醒好几千次。从未进入过休眠状态。一进入唤醒状态又有很多应用跟着启动。 微信的消息是利用同步，而CPU唤醒锁则是被滥用了的。\n\nTest1 2016.01.06\n\n![](http://ww4.sinaimg.cn/large/68eb7c93gw1ezp096st0oj20u01hcwlt.jpg)![](http://ww4.sinaimg.cn/large/68eb7c93gw1ezp0akfqdzj20u01hcgrl.jpg)![](http://ww4.sinaimg.cn/large/68eb7c93gw1ezp09t72gcj20u01hcwja.jpg)![](http://ww3.sinaimg.cn/large/68eb7c93gw1ezp0a61g8yj20u01hcgt8.jpg)\n\n上图分别是WLD四个视图-CPU唤醒锁时间、Kernel唤醒锁时间、屏幕唤醒锁触发次数、Alarm触发器次数.\n\nCPU锁实际上就是用户app的持有wakelock的时间。可以看到由于需要同步相册里的图片，本次测试中google photo占用了极大部分的唤醒锁时间，其余的应用则比较正常；内核持有wakelock一般与rom的品质有关，由于po主使用的是第三方精简rom，出现了一些奇特的bug，例如第一项qcom_rx_wakelock高通的cpu在5.1的bug，在熄屏状态下仍在进行不停的wifi连接，持有唤醒锁对应用进行超负荷的运算，这也是比较不容易控制也难以改善的方面；屏幕唤醒则和用户使用的点亮次数有关，可以看到，每次启动SU超级root、微信、QQ、BBS都进行了短暂的唤醒，而视频软件如果在播放中熄屏，亮屏后也会唤醒屏幕锁（持久保有）；最后一项则是需要重点关注的，定时器启动唤醒锁，2个多小时内，google服务、微信、微博、日历、输入法都进行了大量的唤醒，导致80%的时间都难以进入deep sleep。\n\nTest2 2016.01.08\n\nCPU唤醒锁：本次测试google相册已经不进行同步，更多的是Gmail的同步操作。由于输入了7个邮件，不可避免的会进行更多频次的操作。除了gmail能利用谷歌框架同步外，其他邮件都应该设置比较合理的同步时间。而微信（后文提及）设置了封锁CPU锁后同步的频次也有所减少。\n\nkernel wakelock：qcom_rx_wakelock已经减少了很多，这是关闭黑屏手势的减少唤醒次数的效果。两次测试中，PowerManagerService.WakeLocks、qcom_rx_wakelock、PowerManagerService.Broadcasts、NETLINK四个核心服务占据的时间远远超过其他的服务。这也是需要优化的部分。\n\n屏幕唤醒锁触发：\n\nAlarm计时器触发：可以看到QQ、微信在夜晚的唤醒次数有些多，其实在qq、微信中都可以设置免打扰时间段，主动的消除在夜间待机时的计时器唤醒推送。\n\n![](http://ww4.sinaimg.cn/large/68eb7c93gw1ezrvmr0wr2j20u01hcqaa.jpg)![](http://ww3.sinaimg.cn/large/68eb7c93gw1ezrvnilpewj20u01hc7ai.jpg)\n\n![](http://ww1.sinaimg.cn/large/68eb7c93gw1ezrvjeovxej20u01hcahy.jpg)![](http://ww3.sinaimg.cn/large/68eb7c93gw1ezrvlj75wdj20u01hcn5a.jpg)\n\n&nbsp;\n\n4.绿色守护、3C ToolBox、Amplify的使用。\n\n①.<font color=\"#ff0000\">**绿色守护**</font>\n\n<font color=\"#ff0000\">思路</font>：熄屏清掉所有被勾选的app的服务和缓存进程，同时阻止所有可唤醒包含服务的监听receiver&amp;释放所有包含服务的相互唤醒wakelock，达到相对休眠状态。主要运作在熄屏后不希望后台运作的程序（<font color=\"#ff0000\">无法在前台操作切断应用间唤醒</font>）。捐助版的亮点是可以在休眠状态下使用GCM服务。\n\n绿色守护在xda的讨论贴 开发者oisisfeng也在。\n\n[http://forum.xda-developers.com/showthread.php?t=2155737](http://forum.xda-developers.com/showthread.php?t=2155737 \"http://forum.xda-developers.com/showthread.php?t=2155737\")\n\n绿守作者在知乎的问答\n\n[https://www.zhihu.com/question/38311793/answer/75897889](https://www.zhihu.com/question/38311793/answer/75897889 \"https://www.zhihu.com/question/38311793/answer/75897889\")\n\n由于测试机在5.1.1,还未升级到Android M，因此没有享受到doze mode和app standby带来的福利。\n\n一张图看到就算不是 百度阿里疼腾讯系 从某个市场出来的app也会相互唤醒。这锅到底谁来背。以后反编译源码看一看。即刻-豆瓣-虎皮体育-同花顺-航旅纵横-什么值得买是什么关系。更不用说百度及包含百度字样的app-爱奇艺-去哪儿-uber-乐视-91-多米-音悦台-穷游途牛-汽车之家&nbsp; 腾讯及包含qq字样-京东-大众-美团-饿了么-58-猎豹-搜狗-同城 阿里及UC-微博-优酷土豆-陌陌-滴滴快的-小米魅族\n\n![](http://ww2.sinaimg.cn/large/68eb7c93gw1ezs6frg1q4j20u01hc461.jpg)\n\n使用方法：主界面显示正在运行的服务及已经绿色化的应用。点击上方【+】号对所有潜在威胁进行评估，勾选的应用会在熄屏数分钟后清空缓存、杀死服务、抑制app唤醒及alarm的唤醒。root及xposed模式下效果更佳。支持gcm的应用会有小图标，能在绿色化的情况下还可收发消息。\n\n②.<font color=\"#ff0000\">**3C tool box**</font>\n\n<font color=\"#ff0000\">思路</font>：封杀选定的activity receiver service。结晶化应用（无论前台后台，需要更多的测试，容易出现应用fc 可以实现前台界面退出后直接清缓存 <font color=\"#ff0000\">可直接在应用使用中禁止广告、介绍、推荐app的activity和service</font>）（本篇不涉及3c的调频调压 内存管理设置）\n\n例如：杀错了谷歌的邮件提醒，即便能实时接收邮件，但系统不做出提醒通知。\n\n![](http://ww4.sinaimg.cn/large/68eb7c93gw1ezrulsjoalj20u01hcgt5.jpg)\n\n又例如：杀错了QQi的消息消息提示核心，虽然在后台能看到QQ的进程，但新消息通知会出现不同步（极有可能是阻止了开机自启杀掉的，但这个receiver需要的权限相当多，网络改变、时间改变等乱七八糟的）\n\n![](http://ww1.sinaimg.cn/large/68eb7c93gw1ezrusb4h51j20u01hctf7.jpg)\n\n再比如杀掉了随手记的通知权限，居然能把自己的同步服务给搞挂了。。这代码写的。此外几个应用，饿了么，大众点评，都有不同程度的易fc但后台又唤醒个不停的问题。\n\n使用方法：对四大组件中那三个进行轮番排查，限制自启动，限制唤醒路径，冻结后台。（主要操作在应用管理里）\n\n③**<font color=\"#ff0000\">唤醒控制Amplify</font>**的使用\n\n思路：对Alarm计时器的时间进行限制重设、对Service进行屏蔽、限制同步，可使用进阶的正则表达式过滤。\n\n使用方法：对在wld找到的唤醒次数多的详细分析，对alarm中唤醒频次高的限制更长的时间，对显见的服务停用，先做完这两者再对wakelock进行限制。\n\n![](http://ooo.0o0.ooo/2016/01/10/569322dfc0422.png)\n\n④**<font color=\"#ff0000\">禁止唤醒</font>**的使用(非捐助版只能对5个app进行限制，入正也就十几块)\n\n思路：在前台就主动把各类唤醒锁进行封闭、定时器对齐、对同步进行限制\n\n作者曾提到了<font color=\"#ff0000\">唤醒锁的危害</font><font color=\"#000000\">及禁止唤醒对这些危害的防范</font>\n\n**CPU唤醒锁**: 这是在息屏后阻止你的设备进入休眠状态的唤醒锁, 禁用它通常不会有任何问题.\n\n**所有其它唤醒锁**: 除了CPU唤醒锁之外, 还有一些唤醒锁可以阻止设备休眠, 甚至阻止设备息屏. 开启这个选项以禁用这些唤醒锁.\n\n**同步**: 同步也可以唤醒设备, 如果你不需要应用的同步功能, 使用这个选项来禁用掉它.\n\n**对齐定时器:** (&gt;= Android 4.4) AlarmManager可以使用定时器来周期性的唤醒设备, 阻止CPU进入长期休眠状态. 启用这个选项来强制对齐定时器, 让它们尽量在同一时间触发以节省电量. 请注意: 对于设计不良的应用, 启用此选项有可能会引发推送消息延迟.\n\n[https://www.linangran.com/?p=611](https://www.linangran.com/?p=611) 作者使用指南\n\n![](http://ooo.0o0.ooo/2016/01/10/569323251d9ce.png)\n\n⑤阻止运行的使用\n\n[https://github.com/liudongmiao/ForceStopGB](https://github.com/liudongmiao/ForceStopGB \"https://github.com/liudongmiao/ForceStopGB\") 开源项目地址 免费\n\n相当推荐的一款软件，无论前后台，通过劫持系统api，直接禁止非需求service的启动。精简版的3c tool box，保证应用只在需要时启动。添加到阻止列表的应用只在以下情况开启：\n\n*   启动器直接或第三方provider，如手动点button、分享、支付  <li>桌面小部件定时更新、但只维持30秒（这个好顶赞）  <li>同步开启时的定时同步，也只能维持30秒  <li>除谷歌服务外的系统服务、支付宝的支付服务  <li>其他可能的用户行为引起的启动\n\n同时，谷歌服务在阻止列表时，可以支持gcm和谷歌家族应用的使用。但当任何一个谷歌家族应用没有退出时，都不会退出谷歌服务。\n\n![](http://ooo.0o0.ooo/2016/01/10/569322a0e590e.png)\n\n5.针对微信的方案\n\n微信最近从良而加入gcm的推送方案，能在有谷歌框架的手机在hibernate休眠状况下直接推送消息！既不用随时拿着唤醒锁又不唤醒其他乱七八糟的应用！但原先保留的wakelock模式依旧存在，握着各种随机数的锁禁都不知道禁哪些。但大神出现了。 \n\n[https://www.zhihu.com/question/31136645](https://www.zhihu.com/question/31136645) 知乎高票的正则表达式杀wakerlock方案\n\n[http://bbs.gfan.com/android-7963258-1-1.html](http://bbs.gfan.com/android-7963258-1-1.html) gfan精华帖\n\n上面是一种方案，但微信更改了wakelock的命名方式就会得不偿失错杀唤醒锁了。最近发现单独使用【 禁止唤醒】中的CPU唤醒锁，也能阻止微信胡乱的唤醒，同时不影响推送；但相同的情况下使用绿色守护对微信绿色化却不能及时收到消息。\n\n6.针对gms的方案 考虑到gms 的复杂性 提一下它涉及到google账户的同步*sync* 备份 keep photo gmail(分为对被墙的不被墙的) 三个文档&nbsp; play软件升级等等 google service包含了N个心跳包的alarm 各种硬件CPU唤醒锁\n\n①完全禁掉是一个办法（当然这需要框架 service play一起禁 不然各种报错）这种方式最省电 但是又想使用google收国内账户 或者时不时FQ看看FB TW IG使用其中一些\n\n②不停更换host文件。这个方式能保证随时上墙又不会因为vpn挂着长期费电。测试几天发现耗电稳定，gmail是不是抽风但效果拔群。（推荐神站load.cn）\n\n③长时间挂载稳定vpn。该方式同样能随时保证上墙接收同步和推送。同时配合now能享受到肉身翻墙的欢喜效果。但vpn的开发良莠不齐，耗电状况不一。\n\n④不需要google家族的直接装无gms版的精简rom或国内大部分融都会删掉——————这个方法纯天然摒除了谷歌的抽风状况，但，滚粗。\n\n⑤久不久上墙。gms耗电的问题就是连接不上google而大量地进行重连接。所以希望使用google服务又不想随时耗电使用vpn的一个便捷方案就是每天保证登录一次，并在amplify对google框架进行限制时间，每隔一天敲醒alarm一次，但不能阻止cpu唤醒锁对gms想要获取推送的影响。\n\n参考：\n\n【2013.04.14】绿守作者 微信收费事件背后被广泛忽略的技术细节\n\n[http://blog.oasisfeng.com/2013/04/14/dirty-secret-behind-weixin-charge-gate/](http://blog.oasisfeng.com/2013/04/14/dirty-secret-behind-weixin-charge-gate/ \"http://blog.oasisfeng.com/2013/04/14/dirty-secret-behind-weixin-charge-gate/\")\n\n【2013.06.19】PC Online 的省电优化方案介绍\n\n[http://pcedu.pconline.com.cn/334/3345895_all.html](http://pcedu.pconline.com.cn/334/3345895_all.html \"http://pcedu.pconline.com.cn/334/3345895_all.html\")\n\n【2014.02.16】唤醒锁: 检测 Android* 应用中的 No-Sleep（无法进入睡眠）问题\n\n[https://software.intel.com/zh-cn/android/articles/wakelocks-detect-no-sleep-issues-in-android-applications?language=es](https://software.intel.com/zh-cn/android/articles/wakelocks-detect-no-sleep-issues-in-android-applications?language=es \"https://software.intel.com/zh-cn/android/articles/wakelocks-detect-no-sleep-issues-in-android-applications?language=es\")\n\n【2014.06.05】wakelock alarm wifi 详细数据测评 唤醒锁: 检测 Android* 应用中的 No-Sleep（无法进入睡眠）问题[http://www.oneplusbbs.com/forum.php?mod=viewthread&amp;tid=366390](http://www.oneplusbbs.com/forum.php?mod=viewthread&amp;tid=366390)\n\n【2014.07.22】Android Standby 对于绿色守护唤醒对其 进入深睡眠的一些思考\n\n[http://lockekk.github.io/jekyll-bootstrap/2014/07/22/Android-Standby/](http://lockekk.github.io/jekyll-bootstrap/2014/07/22/Android-Standby/ \"http://lockekk.github.io/jekyll-bootstrap/2014/07/22/Android-Standby/\")\n\n&nbsp;\n\nandroid论坛关于ba保持屏幕唤醒和cpu唤醒\n\n[http://developer.android.com/training/scheduling/wakelock.html](http://developer.android.com/training/scheduling/wakelock.html \"http://developer.android.com/training/scheduling/wakelock.html\")\n\n此外 几个app的酷市场下评论都很精彩。\n\n例如Amplify的评论 [http://coolapk.com/feed/1201169](http://coolapk.com/feed/1201169 \"http://coolapk.com/feed/1201169\")\n\n例如Google Play Service 的评论 [http://coolapk.com/feed/1196656](http://coolapk.com/feed/1196656 \"http://coolapk.com/feed/1196656\")","slug":"Android为毛耗电[2]","published":1,"updated":"2016-04-29T09:13:23.589Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7kr000iuco4yqrmodi0","content":"<p><strong><font size=\"4\" face=\"华文中宋\">本文只讨论安卓手机软节电，不负责推荐底包、rom、调频调压方案，刷机root<font color=\"#ff0000\">后果自负</font>。</font></strong></p>\n<font size=\"4\" face=\"华文中宋\">本小节只讨论干货。在root及xposed框架下。同时兼顾不能肉身翻墙又想用google服务的小狗们。本人的使用情况是正常功能照开，google需要gmail和google photo及部分gcm，黑屏开启手势和解锁，正常收微信、闹钟、短信电话外熄屏一切不开，后台常开应用有snap锁屏、grenntify绿色守护、调音的audio mix、天气插件、BBS、输入法、Nova Launcher。测试的环境为Android L 5.1.1</font>\n\n<font size=\"4\" face=\"华文中宋\">&nbsp;<br><a id=\"more\"></a><br><em> </em> *<br><br><font color=\"#ff0000\">App干货推荐</font></font>\n\n<p>&nbsp;<a href=\"http://coolapk.com/apk/com.oasisfeng.greenify\" target=\"_blank\" rel=\"external\">http://coolapk.com/apk/com.oasisfeng.greenify</a> 绿色守护（评论好多捐赠包）国内优秀开发者–唤醒对其 深度休眠hibernateservice </p>\n<p><a href=\"http://coolapk.com/apk/com.asksven.betterbatterystats\" target=\"_blank\" rel=\"external\">http://coolapk.com/apk/com.asksven.betterbatterystats</a>BetterBatteryStats（捐赠包只多了小插件和知识库） 国外应用（使用稳定后可删，留着也不费电）–查看耗电最多的程序 资源 频率占比 <a href=\"http://coolapk.com/apk/com.uzumapps.wakelockdetector\" target=\"_blank\" rel=\"external\">http://coolapk.com/apk/com.uzumapps.wakelockdetector</a> wakelock detector（使用后可删，被注册为系统程序，留着不太费电）–查看被CPU 屏幕 时钟唤醒的程序以便将其控制 可以便利的<font color=\"#ff0000\">结合绿色守护使用</font></p>\n<p><a href=\"http://coolapk.com/apk/ccc71.at\" target=\"_blank\" rel=\"external\">http://coolapk.com/apk/ccc71.at</a> 安卓调谐器:3C Toolbox（Android Tuner）–系统调节<font color=\"#ff0000\">神器</font> 控制自启 控制软件权限 自大组件控制 cpu调节 自动内存调节</p>\n<p>一张图解释大部分唤醒、杀进程软件的思路</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93gw1ezs65djw3nj20tx0pn0xp.jpg\" alt=\"\"></p>\n<p>————————喂下面几个是一类 看清楚需求———————————</p>\n<p><a href=\"http://coolapk.com/apk/com.linangran.nowakelock\" target=\"_blank\" rel=\"external\">http://coolapk.com/apk/com.linangran.nowakelock</a> 禁止唤醒1.2.1 （国内开发者）–只能禁5个 暂未发现捐献包 主程序调用捐助包需要与play验证。但也不贵才十几块。 但是禁止效果良好 百度 阿里 系的随便禁一两个就发现效果超级棒 就是挺贵 </p>\n<p><a href=\"http://coolapk.com/apk/me.piebridge.forcestopgb\" target=\"_blank\" rel=\"external\">http://coolapk.com/apk/me.piebridge.forcestopgb</a> 阻止运行 国内开发者，免费!–阻止后台、前台、服务及可见的各种组件 不限数目 限制谷歌服务效果良好 </p>\n<p><a href=\"http://coolapk.com/apk/com.ryansteckler.nlpunbounce\" target=\"_blank\" rel=\"external\">http://coolapk.com/apk/com.ryansteckler.nlpunbounce</a> 唤醒控制amplify3.3.4–可以查看唤醒次数&nbsp;&nbsp;&nbsp; </p>\n<p>&nbsp;</p>\n<hr>\n<font color=\"#ff0000\">电量消耗结构总结</font>\n\n<p>对于电量，总有一些是必然会消耗的，一些是可以减少的，而一些是可以避免的。那么，对于不同状态下那些成分占的比例会占比略高呢？</p>\n<p>1.正常使用状态下（Screen on）：无容置疑的是屏幕的发亮，因而合适的调低亮度能更大的省电，尤其是主动发光的amoled使用深色主题会更省电。当然，大部分使用状态，需要更多的网络连接，4G&gt;3G&gt;2G&gt;wifi是显而易见的。同时使用不同类型的App也会让CPU频率相应的上升，尤其是大型3D网游和功放影音体验。</p>\n<p>正常开机使用，耗电排行一般为：</p>\n<ul>\n<li>屏幕发亮  </li><li>高CPU占用的App ，包括某些情况下刷帖、浏览网页等长时间交互行为  </li><li>手机通信（联网、移动通话、视频通话）  </li><li>Android系统  </li><li>手机待机 ，即Android OS 之类</li>\n</ul>\n<p>2.正常待机状态下（Screen off）包括唤醒和睡眠、深睡眠。当然，大部分人都希望手机进入Idle正常无唤醒的状态，达到hibernate。但国产App可不会这么干。对于待机来说两大耗电来源就是alarm计时器唤醒各类监听进行后台操作、偷跑流量、不必要的消息推送；wakelock把持唤醒锁让手机无法进入深睡眠从而维持后台服务。</p>\n<p>正常待机状况下，不飞行，不关闭数据网络，关闭GPS、wifi、蓝牙等，耗电排行是：</p>\n<ul>\n<li>手机通信 Cell Standy之类。这一块比较大，依赖数据网络的制式  </li><li>Android OS（即BBS的Kernel wakelock或partial wakelock标记为Android的）  </li><li>手机待机 （PowerManagerService 及Device Idle之类的）处理休眠状态下设备监听及唤醒锁的管理</li>\n</ul>\n<p>&nbsp;</p>\n<hr>\n<p>开启wld和bbs的实时监控，把该装的常用软件装上<font color=\"#ff0000\">先用着那么一段时间。</font></p>\n<p>1.</p>\n<p>①利用这段时间 把权限都给干了 装软件给你显示了一list的权限然并卵 不同意没法装 装了也没几个需要的&nbsp; 在【应用程序权限】的设置框中把权限悉心的扫个遍 曾经启用过的权限会有提示何时使用过 例如我把美团外卖的权限全禁了 然而还是可以正常使用</p>\n<p>目标是：给app只留必要的权限 像读取短信直接get验证码那些权限就不必了，重点关注权限里的【<font color=\"#ff0000\">保持唤醒</font>】。这个权限意味着能在熄屏时候对手机进行唤醒操作，在亮屏时能够保证数据一致性。没有必要进行推送和同步的应用就应该关闭。</p>\n<p>②利用小汽车autostat或者3c toolbox自带的自启动控制器 控制不需要自行启动的项目 除了launcher greentify 3c tool box类似物 等系统框架 其余全都不需要 不需要不需要</p>\n<p>目标是：启动速度棒 未启动的应用不会推送任何消息 （微信 微博 GMail等可以排除）</p>\n<p>③给app一点微弱的信任，试着在app的设置中，关掉消息推送、wifi下自动更新、wifi下同步等设置，稍微有点技术含量的程序猿都会在设置取消时cut掉后台进程。</p>\n<p>④对于各种传感器，依据需求关闭能很好的节约电量（这一块和rom的优化很大关系）例如黑屏手势、人脸解锁、黑屏解锁、口袋检测等。</p>\n<p>⑤利用系统的电量统计和后台开启程序大致了解本机运行的大消耗后台。例如本机待机时系统消耗的比例想当高。同时保持着很高的唤醒状态。。</p>\n<p><strong><font color=\"#ff0000\">系统的电量统计</font></strong></p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93gw1ezrv30mvwcj20u01hc435.jpg\" alt=\"\"><img src=\"http://ww1.sinaimg.cn/large/68eb7c93gw1ezrv0fux6ej20u01hc0x7.jpg\" alt=\"\"></p>\n<p>点开正在运行的后台，可以看本机Android系统和Android操作系统电量消耗高的原因是高通CPU的定位服务。经过调校后的曲线，可以看到中度使用后，待机超过了一个天。同时待机时休眠比例也超过了8成。</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/10/5693136395d1a.png\" alt=\"\"><img src=\"http://ooo.0o0.ooo/2016/01/10/569313c0b6950.png\" alt=\"\"></p>\n<p>2.使用过后 开启betterbatterystats和wakelock detector</p>\n<p>D1 2016/1/6</p>\n<p>①<font color=\"#ff0000\"><strong>betterbatterystats BBS</strong></font>查看耗电大户 一般来说googleservice由于不能随时翻 会造成gmail keep backup contacts 都会发送心跳包不停的连接 此外 除了显而易见的三大流氓滥用唤醒锁 相互唤醒 外 还有奇形怪状的耗电大户 如location定位 微信 </p>\n<p>官方帮助指南：<a href=\"http://better.asksven.org/bbs-how-to/\" target=\"_blank\" rel=\"external\">http://better.asksven.org/bbs-how-to/</a></p>\n<p>应用beta版及正式版更新日志 <a href=\"http://forum.xda-developers.com/showthread.php?t=1179809\" title=\"http://forum.xda-developers.com/showthread.php?t=1179809\" target=\"_blank\" rel=\"external\">http://forum.xda-developers.com/showthread.php?t=1179809</a>&nbsp; 包含apk下载。捐助包多了知识库和小控件。</p>\n<p>它承诺不在后台记录电量，只在开机、断开充电器、插上充电器、亮屏、熄屏。custom是自定义的操作记录，current是当前时间截止的电量消耗的样本。它提供了后台电量实时监控，这会消耗一定的电量；同时提供了进程监控，并对唤醒次数超过阈值的进行提示。<font color=\"#ff0000\">右侧的圈圈一律代表该应用、该服务、该定时器在所选时间段的使用时间比例</font></p>\n<p>Entries：</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1ezp07m935cj20u012saci.jpg\" alt=\"\"></p>\n<p>&nbsp;</p>\n<font color=\"#ff0000\">other</font>——睡眠、唤醒、亮屏等其他重要时间节点的电量消耗数据【深睡眠、熄屏唤醒、亮屏、通话时间、wifi开启时长、wifi连上时长、蓝牙开启时长】<br><br><em>   一般选择unplugged-current 即断电后到现在 一般熄屏情况下 要么deep sleep要么awake，所以两者相加应该是100%。  <li>（Awake）Screen off显示了熄屏时被唤醒所占比例 可以很直观的感受手机离开操作后后台运作的程度 最优的情况当然是0%，手机处于最节能的状态（之前的版本将awake&amp;screen off分开计时 需要两个数据一起对比）  </li><li>此外，还有wifi 启动、wifi运行与唤醒的关系，很明显，在晚上断开wifi会给手机更好的进入休眠<br><br><font color=\"#ff0000\">kernel wakelocks</font>——使手机唤醒的内核操作【大量的短暂唤醒会严重影响唤醒时间导致手机消耗更多的时间返回睡眠】\n\n</li></em>   重点关注项目-PowerManagerService wakelock和multipdp、svnet-dormancy wakelock。前者是激活大部分app的唤醒锁服务，如果它占第一位，则取partial wakelocks关注唤醒时间较多的项目；后者是网络使用量，若存在后台偷跑流量的软件，可以很明显的发现异常，到network数据栏中看一下。  <li>kernel wakelock中的alarm是所有定时器的总和 基本不耗电 但如有异常 可到alarms或amplify中查看详细的计时器项目。  </li><li><em>sync</em> <em>backup</em> <em>job</em>很明显是系统的操作 同步 备份 消息推送 如果不需要就禁了吧<br><br><font color=\"#ff0000\">partial wakelocks</font>——是大部分app把持的唤醒锁。（PowerManagerService高的可以关注这项）<br><br><em>   根据使用频率来限制大耗电partial wakelock 如ig tw fb wb wx等。可以在后文自行设置后台计时器时间。  <li>卸载/冻结/不可用 这些做法有些极端 但实在忍无何忍下还是放弃这个app吧。钛备份下的冻结就比较好用 对google系的后文提到。  </li><li>主动手动开关GPS。使用时才打开。  </li><li>根据需要使用后退键退出还是home键退出  </li><li>wifi是个奇葩 晚上记得关（If you don’t need Wifi turn it off: in some cases Wifi is known to cause wakeups and an overhead in e.g. location services）  </li><li>一次不要改太多，一次一次改 能对手机每个app和每个设置有直观的体验和感受<br><br><font color=\"#ff0000\">alarms</font>——由于应用及服务的定时器唤醒手机【apps设定的触发器在某个时间节点唤醒手机，某些alarms只在唤醒时执行、另一些则直接唤醒手机。通常一个alarm绑定一个intent】\n\n</li></em>   长时间和过高次数的alarm都是不正常的。一定要及时纠出。例如微信这狗。  </li><li>更多的alarm应该在手机亮屏时启动 除了闹钟、微信等必要的消息之外 如知乎提醒、百度外卖提醒等应用，按照使用习惯，更应该是熄屏时完全关闭计时器。<br><br><font color=\"#ff0000\">network</font>——app的网络使用率【区分3G和wifi的网络连接数据】<br><br><em>   相当多的工具都能查看网络传输的状态。系统自带的也不错。  <li>信号较弱的wifi或窝蜂数据会频繁的连接并唤醒手机<br><br><font color=\"#ff0000\">CPU states</font>——不同CPU频率所占用的时间【包括深度睡眠时的CPU频率占用时间】<br><br><font color=\"#ff0000\">Processes</font>——用户及系统进程消耗的CPU时间【进程CPU消耗，分为用户及系统，以不同颜色标识】<br><br>进阶功能：<br><br>【<font color=\"#ff0000\">Watchdog</font>】——熄屏分析功能，可自定义亮屏、解锁等。对唤醒超过阈值的app和service进行提示，可在熄屏后一定时间对watchdog关闭。<br><br>【<font color=\"#ff0000\">Active Monitoring</font>】——后台运行的一定时间间隔的数据采集，可能会造成额外耗电。<br><br>观察一下本机的耗电比例，首先看到other中，Awake(Screen Off)的比例相当高，在其他人的截图是有deep sleep的！！！我安的软件已经炸裂了。尽管开启了wifi会消耗更多的电量，但大量的唤醒让手机不能正常进入休眠。<br><br><img src=\"http://ww1.sinaimg.cn/large/68eb7c93gw1ezrv6kd1wgj20u01hcaep.jpg\" alt=\"\"><br><br>再观察partial wakelock ，除了gmail可能不顺利的同步导致消耗略多外，其余app都还算正常的耗电（注意关注连接时间，最多的也才3m35s，这在8h14m11s里来说是相当小的比例，同时消耗的电量也只有0.7%，还可以接受。当然是提前锁过了一部分app的后台）<br><br><img src=\"http://ww3.sinaimg.cn/large/68eb7c93gw1ezrv97d35sj20u01hc7ci.jpg\" alt=\"\"><br><br>注意力关注到kernel wakelock，可以看到，核心的耗电量还是比较大的（由于之前的耗电太过大已经关闭了锁屏手势和黑屏解锁）。可以明显的看到，wlan联网在熄屏时间一直连接，qpnp_fg_memaccess qpnp_fg_update_temp qpnp_fg_update_sram是内核的操作。和rom有关。<img src=\"http://ww3.sinaimg.cn/large/68eb7c93gw1ezrvef5tykj20u01hctff.jpg\" alt=\"\"><br><br>最后发现。。其实是rom的锅。我的other居然没有出现deep sleep。这是相当可怕的事情。经过调优和整理唤醒后，得到如下相当爽快的数据。接近70%的深睡眠还可以让人接受。毕竟还开启了微信。微博。邮件的消息推送。<br><br><img src=\"http://ww4.sinaimg.cn/large/006fVPCvjw1ezvcpamb0bj30u01hcgrd.jpg\" alt=\"\"><br><br><img src=\"http://ww3.sinaimg.cn/large/006fVPCvjw1ezvconkjs5j30u01hctfb.jpg\" alt=\"\"><img src=\"http://ww2.sinaimg.cn/large/006fVPCvjw1ezvcqv63zoj30u01hcah1.jpg\" alt=\"\"><br><br>②<font color=\"#ff0000\"><strong>wakelock detector WLD</strong></font>查看流氓唤醒大户 这里要提到微信。千万不要手欠在应用内使用它的升级。最好在play或者cool市场升级。官方提供的流氓唤醒一个晚上唤醒好几千次。从未进入过休眠状态。一进入唤醒状态又有很多应用跟着启动。 微信的消息是利用同步，而CPU唤醒锁则是被滥用了的。<br><br>Test1 2016.01.06<br><br><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1ezp096st0oj20u01hcwlt.jpg\" alt=\"\"><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1ezp0akfqdzj20u01hcgrl.jpg\" alt=\"\"><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1ezp09t72gcj20u01hcwja.jpg\" alt=\"\"><img src=\"http://ww3.sinaimg.cn/large/68eb7c93gw1ezp0a61g8yj20u01hcgt8.jpg\" alt=\"\"><br><br>上图分别是WLD四个视图-CPU唤醒锁时间、Kernel唤醒锁时间、屏幕唤醒锁触发次数、Alarm触发器次数.<br><br>CPU锁实际上就是用户app的持有wakelock的时间。可以看到由于需要同步相册里的图片，本次测试中google photo占用了极大部分的唤醒锁时间，其余的应用则比较正常；内核持有wakelock一般与rom的品质有关，由于po主使用的是第三方精简rom，出现了一些奇特的bug，例如第一项qcom_rx_wakelock高通的cpu在5.1的bug，在熄屏状态下仍在进行不停的wifi连接，持有唤醒锁对应用进行超负荷的运算，这也是比较不容易控制也难以改善的方面；屏幕唤醒则和用户使用的点亮次数有关，可以看到，每次启动SU超级root、微信、QQ、BBS都进行了短暂的唤醒，而视频软件如果在播放中熄屏，亮屏后也会唤醒屏幕锁（持久保有）；最后一项则是需要重点关注的，定时器启动唤醒锁，2个多小时内，google服务、微信、微博、日历、输入法都进行了大量的唤醒，导致80%的时间都难以进入deep sleep。<br><br>Test2 2016.01.08<br><br>CPU唤醒锁：本次测试google相册已经不进行同步，更多的是Gmail的同步操作。由于输入了7个邮件，不可避免的会进行更多频次的操作。除了gmail能利用谷歌框架同步外，其他邮件都应该设置比较合理的同步时间。而微信（后文提及）设置了封锁CPU锁后同步的频次也有所减少。<br><br>kernel wakelock：qcom_rx_wakelock已经减少了很多，这是关闭黑屏手势的减少唤醒次数的效果。两次测试中，PowerManagerService.WakeLocks、qcom_rx_wakelock、PowerManagerService.Broadcasts、NETLINK四个核心服务占据的时间远远超过其他的服务。这也是需要优化的部分。<br><br>屏幕唤醒锁触发：<br><br>Alarm计时器触发：可以看到QQ、微信在夜晚的唤醒次数有些多，其实在qq、微信中都可以设置免打扰时间段，主动的消除在夜间待机时的计时器唤醒推送。<br><br><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1ezrvmr0wr2j20u01hcqaa.jpg\" alt=\"\"><img src=\"http://ww3.sinaimg.cn/large/68eb7c93gw1ezrvnilpewj20u01hc7ai.jpg\" alt=\"\"><br><br><img src=\"http://ww1.sinaimg.cn/large/68eb7c93gw1ezrvjeovxej20u01hcahy.jpg\" alt=\"\"><img src=\"http://ww3.sinaimg.cn/large/68eb7c93gw1ezrvlj75wdj20u01hcn5a.jpg\" alt=\"\"><br><br>&nbsp;<br><br>4.绿色守护、3C ToolBox、Amplify的使用。<br><br>①.<font color=\"#ff0000\"><em>*绿色守护</em></font></li></em>\n\n<font color=\"#ff0000\">思路</font>：熄屏清掉所有被勾选的app的服务和缓存进程，同时阻止所有可唤醒包含服务的监听receiver&amp;释放所有包含服务的相互唤醒wakelock，达到相对休眠状态。主要运作在熄屏后不希望后台运作的程序（<font color=\"#ff0000\">无法在前台操作切断应用间唤醒</font>）。捐助版的亮点是可以在休眠状态下使用GCM服务。<br><br>绿色守护在xda的讨论贴 开发者oisisfeng也在。<br><br><a href=\"http://forum.xda-developers.com/showthread.php?t=2155737\" title=\"http://forum.xda-developers.com/showthread.php?t=2155737\" target=\"_blank\" rel=\"external\">http://forum.xda-developers.com/showthread.php?t=2155737</a><br><br>绿守作者在知乎的问答<br><br><a href=\"https://www.zhihu.com/question/38311793/answer/75897889\" title=\"https://www.zhihu.com/question/38311793/answer/75897889\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/38311793/answer/75897889</a><br><br>由于测试机在5.1.1,还未升级到Android M，因此没有享受到doze mode和app standby带来的福利。<br><br>一张图看到就算不是 百度阿里疼腾讯系 从某个市场出来的app也会相互唤醒。这锅到底谁来背。以后反编译源码看一看。即刻-豆瓣-虎皮体育-同花顺-航旅纵横-什么值得买是什么关系。更不用说百度及包含百度字样的app-爱奇艺-去哪儿-uber-乐视-91-多米-音悦台-穷游途牛-汽车之家&nbsp; 腾讯及包含qq字样-京东-大众-美团-饿了么-58-猎豹-搜狗-同城 阿里及UC-微博-优酷土豆-陌陌-滴滴快的-小米魅族<br><br><img src=\"http://ww2.sinaimg.cn/large/68eb7c93gw1ezs6frg1q4j20u01hc461.jpg\" alt=\"\"><br><br>使用方法：主界面显示正在运行的服务及已经绿色化的应用。点击上方【+】号对所有潜在威胁进行评估，勾选的应用会在熄屏数分钟后清空缓存、杀死服务、抑制app唤醒及alarm的唤醒。root及xposed模式下效果更佳。支持gcm的应用会有小图标，能在绿色化的情况下还可收发消息。<br><br>②.<font color=\"#ff0000\"><strong>3C tool box</strong></font>\n\n<font color=\"#ff0000\">思路</font>：封杀选定的activity receiver service。结晶化应用（无论前台后台，需要更多的测试，容易出现应用fc 可以实现前台界面退出后直接清缓存 <font color=\"#ff0000\">可直接在应用使用中禁止广告、介绍、推荐app的activity和service</font>）（本篇不涉及3c的调频调压 内存管理设置）<br><br>例如：杀错了谷歌的邮件提醒，即便能实时接收邮件，但系统不做出提醒通知。<br><br><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1ezrulsjoalj20u01hcgt5.jpg\" alt=\"\"><br><br>又例如：杀错了QQi的消息消息提示核心，虽然在后台能看到QQ的进程，但新消息通知会出现不同步（极有可能是阻止了开机自启杀掉的，但这个receiver需要的权限相当多，网络改变、时间改变等乱七八糟的）<br><br><img src=\"http://ww1.sinaimg.cn/large/68eb7c93gw1ezrusb4h51j20u01hctf7.jpg\" alt=\"\"><br><br>再比如杀掉了随手记的通知权限，居然能把自己的同步服务给搞挂了。。这代码写的。此外几个应用，饿了么，大众点评，都有不同程度的易fc但后台又唤醒个不停的问题。<br><br>使用方法：对四大组件中那三个进行轮番排查，限制自启动，限制唤醒路径，冻结后台。（主要操作在应用管理里）<br><br>③<strong><font color=\"#ff0000\">唤醒控制Amplify</font></strong>的使用<br><br>思路：对Alarm计时器的时间进行限制重设、对Service进行屏蔽、限制同步，可使用进阶的正则表达式过滤。<br><br>使用方法：对在wld找到的唤醒次数多的详细分析，对alarm中唤醒频次高的限制更长的时间，对显见的服务停用，先做完这两者再对wakelock进行限制。<br><br><img src=\"http://ooo.0o0.ooo/2016/01/10/569322dfc0422.png\" alt=\"\"><br><br>④<strong><font color=\"#ff0000\">禁止唤醒</font></strong>的使用(非捐助版只能对5个app进行限制，入正也就十几块)<br><br>思路：在前台就主动把各类唤醒锁进行封闭、定时器对齐、对同步进行限制<br><br>作者曾提到了<font color=\"#ff0000\">唤醒锁的危害</font><font color=\"#000000\">及禁止唤醒对这些危害的防范</font>\n\n<p><strong>CPU唤醒锁</strong>: 这是在息屏后阻止你的设备进入休眠状态的唤醒锁, 禁用它通常不会有任何问题.</p>\n<p><strong>所有其它唤醒锁</strong>: 除了CPU唤醒锁之外, 还有一些唤醒锁可以阻止设备休眠, 甚至阻止设备息屏. 开启这个选项以禁用这些唤醒锁.</p>\n<p><strong>同步</strong>: 同步也可以唤醒设备, 如果你不需要应用的同步功能, 使用这个选项来禁用掉它.</p>\n<p><strong>对齐定时器:</strong> (&gt;= Android 4.4) AlarmManager可以使用定时器来周期性的唤醒设备, 阻止CPU进入长期休眠状态. 启用这个选项来强制对齐定时器, 让它们尽量在同一时间触发以节省电量. 请注意: 对于设计不良的应用, 启用此选项有可能会引发推送消息延迟.</p>\n<p><a href=\"https://www.linangran.com/?p=611\" target=\"_blank\" rel=\"external\">https://www.linangran.com/?p=611</a> 作者使用指南</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/10/569323251d9ce.png\" alt=\"\"></p>\n<p>⑤阻止运行的使用</p>\n<p><a href=\"https://github.com/liudongmiao/ForceStopGB\" title=\"https://github.com/liudongmiao/ForceStopGB\" target=\"_blank\" rel=\"external\">https://github.com/liudongmiao/ForceStopGB</a> 开源项目地址 免费</p>\n<p>相当推荐的一款软件，无论前后台，通过劫持系统api，直接禁止非需求service的启动。精简版的3c tool box，保证应用只在需要时启动。添加到阻止列表的应用只在以下情况开启：</p>\n<ul>\n<li>启动器直接或第三方provider，如手动点button、分享、支付  </li><li>桌面小部件定时更新、但只维持30秒（这个好顶赞）  </li><li>同步开启时的定时同步，也只能维持30秒  </li><li>除谷歌服务外的系统服务、支付宝的支付服务  </li><li>其他可能的用户行为引起的启动</li>\n</ul>\n<p>同时，谷歌服务在阻止列表时，可以支持gcm和谷歌家族应用的使用。但当任何一个谷歌家族应用没有退出时，都不会退出谷歌服务。</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/10/569322a0e590e.png\" alt=\"\"></p>\n<p>5.针对微信的方案</p>\n<p>微信最近从良而加入gcm的推送方案，能在有谷歌框架的手机在hibernate休眠状况下直接推送消息！既不用随时拿着唤醒锁又不唤醒其他乱七八糟的应用！但原先保留的wakelock模式依旧存在，握着各种随机数的锁禁都不知道禁哪些。但大神出现了。 </p>\n<p><a href=\"https://www.zhihu.com/question/31136645\" target=\"_blank\" rel=\"external\">https://www.zhihu.com/question/31136645</a> 知乎高票的正则表达式杀wakerlock方案</p>\n<p><a href=\"http://bbs.gfan.com/android-7963258-1-1.html\" target=\"_blank\" rel=\"external\">http://bbs.gfan.com/android-7963258-1-1.html</a> gfan精华帖</p>\n<p>上面是一种方案，但微信更改了wakelock的命名方式就会得不偿失错杀唤醒锁了。最近发现单独使用【 禁止唤醒】中的CPU唤醒锁，也能阻止微信胡乱的唤醒，同时不影响推送；但相同的情况下使用绿色守护对微信绿色化却不能及时收到消息。</p>\n<p>6.针对gms的方案 考虑到gms 的复杂性 提一下它涉及到google账户的同步<em>sync</em> 备份 keep photo gmail(分为对被墙的不被墙的) 三个文档&nbsp; play软件升级等等 google service包含了N个心跳包的alarm 各种硬件CPU唤醒锁</p>\n<p>①完全禁掉是一个办法（当然这需要框架 service play一起禁 不然各种报错）这种方式最省电 但是又想使用google收国内账户 或者时不时FQ看看FB TW IG使用其中一些</p>\n<p>②不停更换host文件。这个方式能保证随时上墙又不会因为vpn挂着长期费电。测试几天发现耗电稳定，gmail是不是抽风但效果拔群。（推荐神站load.cn）</p>\n<p>③长时间挂载稳定vpn。该方式同样能随时保证上墙接收同步和推送。同时配合now能享受到肉身翻墙的欢喜效果。但vpn的开发良莠不齐，耗电状况不一。</p>\n<p>④不需要google家族的直接装无gms版的精简rom或国内大部分融都会删掉——————这个方法纯天然摒除了谷歌的抽风状况，但，滚粗。</p>\n<p>⑤久不久上墙。gms耗电的问题就是连接不上google而大量地进行重连接。所以希望使用google服务又不想随时耗电使用vpn的一个便捷方案就是每天保证登录一次，并在amplify对google框架进行限制时间，每隔一天敲醒alarm一次，但不能阻止cpu唤醒锁对gms想要获取推送的影响。</p>\n<p>参考：</p>\n<p>【2013.04.14】绿守作者 微信收费事件背后被广泛忽略的技术细节</p>\n<p><a href=\"http://blog.oasisfeng.com/2013/04/14/dirty-secret-behind-weixin-charge-gate/\" title=\"http://blog.oasisfeng.com/2013/04/14/dirty-secret-behind-weixin-charge-gate/\" target=\"_blank\" rel=\"external\">http://blog.oasisfeng.com/2013/04/14/dirty-secret-behind-weixin-charge-gate/</a></p>\n<p>【2013.06.19】PC Online 的省电优化方案介绍</p>\n<p><a href=\"http://pcedu.pconline.com.cn/334/3345895_all.html\" title=\"http://pcedu.pconline.com.cn/334/3345895_all.html\" target=\"_blank\" rel=\"external\">http://pcedu.pconline.com.cn/334/3345895_all.html</a></p>\n<p>【2014.02.16】唤醒锁: 检测 Android* 应用中的 No-Sleep（无法进入睡眠）问题</p>\n<p><a href=\"https://software.intel.com/zh-cn/android/articles/wakelocks-detect-no-sleep-issues-in-android-applications?language=es\" title=\"https://software.intel.com/zh-cn/android/articles/wakelocks-detect-no-sleep-issues-in-android-applications?language=es\" target=\"_blank\" rel=\"external\">https://software.intel.com/zh-cn/android/articles/wakelocks-detect-no-sleep-issues-in-android-applications?language=es</a></p>\n<p>【2014.06.05】wakelock alarm wifi 详细数据测评 唤醒锁: 检测 Android* 应用中的 No-Sleep（无法进入睡眠）问题<a href=\"http://www.oneplusbbs.com/forum.php?mod=viewthread&amp;tid=366390\" target=\"_blank\" rel=\"external\">http://www.oneplusbbs.com/forum.php?mod=viewthread&amp;tid=366390</a></p>\n<p>【2014.07.22】Android Standby 对于绿色守护唤醒对其 进入深睡眠的一些思考</p>\n<p><a href=\"http://lockekk.github.io/jekyll-bootstrap/2014/07/22/Android-Standby/\" title=\"http://lockekk.github.io/jekyll-bootstrap/2014/07/22/Android-Standby/\" target=\"_blank\" rel=\"external\">http://lockekk.github.io/jekyll-bootstrap/2014/07/22/Android-Standby/</a></p>\n<p>&nbsp;</p>\n<p>android论坛关于ba保持屏幕唤醒和cpu唤醒</p>\n<p><a href=\"http://developer.android.com/training/scheduling/wakelock.html\" title=\"http://developer.android.com/training/scheduling/wakelock.html\" target=\"_blank\" rel=\"external\">http://developer.android.com/training/scheduling/wakelock.html</a></p>\n<p>此外 几个app的酷市场下评论都很精彩。</p>\n<p>例如Amplify的评论 <a href=\"http://coolapk.com/feed/1201169\" title=\"http://coolapk.com/feed/1201169\" target=\"_blank\" rel=\"external\">http://coolapk.com/feed/1201169</a></p>\n<p>例如Google Play Service 的评论 <a href=\"http://coolapk.com/feed/1196656\" title=\"http://coolapk.com/feed/1196656\" target=\"_blank\" rel=\"external\">http://coolapk.com/feed/1196656</a></p></li>","excerpt":"<p><strong><font size=\"4\" face=\"华文中宋\">本文只讨论安卓手机软节电，不负责推荐底包、rom、调频调压方案，刷机root<font color=\"#ff0000\">后果自负</font>。</font></strong></p>\n<font size=\"4\" face=\"华文中宋\">本小节只讨论干货。在root及xposed框架下。同时兼顾不能肉身翻墙又想用google服务的小狗们。本人的使用情况是正常功能照开，google需要gmail和google photo及部分gcm，黑屏开启手势和解锁，正常收微信、闹钟、短信电话外熄屏一切不开，后台常开应用有snap锁屏、grenntify绿色守护、调音的audio mix、天气插件、BBS、输入法、Nova Launcher。测试的环境为Android L 5.1.1</font>\n\n<font size=\"4\" face=\"华文中宋\">&nbsp;<br>","more":"<br><em> </em> *<br><br><font color=\"#ff0000\">App干货推荐</font></font>\n\n<p>&nbsp;<a href=\"http://coolapk.com/apk/com.oasisfeng.greenify\">http://coolapk.com/apk/com.oasisfeng.greenify</a> 绿色守护（评论好多捐赠包）国内优秀开发者–唤醒对其 深度休眠hibernateservice </p>\n<p><a href=\"http://coolapk.com/apk/com.asksven.betterbatterystats\">http://coolapk.com/apk/com.asksven.betterbatterystats</a>BetterBatteryStats（捐赠包只多了小插件和知识库） 国外应用（使用稳定后可删，留着也不费电）–查看耗电最多的程序 资源 频率占比 <a href=\"http://coolapk.com/apk/com.uzumapps.wakelockdetector\">http://coolapk.com/apk/com.uzumapps.wakelockdetector</a> wakelock detector（使用后可删，被注册为系统程序，留着不太费电）–查看被CPU 屏幕 时钟唤醒的程序以便将其控制 可以便利的<font color=\"#ff0000\">结合绿色守护使用</font></p>\n<p><a href=\"http://coolapk.com/apk/ccc71.at\">http://coolapk.com/apk/ccc71.at</a> 安卓调谐器:3C Toolbox（Android Tuner）–系统调节<font color=\"#ff0000\">神器</font> 控制自启 控制软件权限 自大组件控制 cpu调节 自动内存调节</p>\n<p>一张图解释大部分唤醒、杀进程软件的思路</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93gw1ezs65djw3nj20tx0pn0xp.jpg\" alt=\"\"></p>\n<p>————————喂下面几个是一类 看清楚需求———————————</p>\n<p><a href=\"http://coolapk.com/apk/com.linangran.nowakelock\">http://coolapk.com/apk/com.linangran.nowakelock</a> 禁止唤醒1.2.1 （国内开发者）–只能禁5个 暂未发现捐献包 主程序调用捐助包需要与play验证。但也不贵才十几块。 但是禁止效果良好 百度 阿里 系的随便禁一两个就发现效果超级棒 就是挺贵 </p>\n<p><a href=\"http://coolapk.com/apk/me.piebridge.forcestopgb\">http://coolapk.com/apk/me.piebridge.forcestopgb</a> 阻止运行 国内开发者，免费!–阻止后台、前台、服务及可见的各种组件 不限数目 限制谷歌服务效果良好 </p>\n<p><a href=\"http://coolapk.com/apk/com.ryansteckler.nlpunbounce\">http://coolapk.com/apk/com.ryansteckler.nlpunbounce</a> 唤醒控制amplify3.3.4–可以查看唤醒次数&nbsp;&nbsp;&nbsp; </p>\n<p>&nbsp;</p>\n<hr>\n<font color=\"#ff0000\">电量消耗结构总结</font>\n\n<p>对于电量，总有一些是必然会消耗的，一些是可以减少的，而一些是可以避免的。那么，对于不同状态下那些成分占的比例会占比略高呢？</p>\n<p>1.正常使用状态下（Screen on）：无容置疑的是屏幕的发亮，因而合适的调低亮度能更大的省电，尤其是主动发光的amoled使用深色主题会更省电。当然，大部分使用状态，需要更多的网络连接，4G&gt;3G&gt;2G&gt;wifi是显而易见的。同时使用不同类型的App也会让CPU频率相应的上升，尤其是大型3D网游和功放影音体验。</p>\n<p>正常开机使用，耗电排行一般为：</p>\n<ul>\n<li>屏幕发亮  </li><li>高CPU占用的App ，包括某些情况下刷帖、浏览网页等长时间交互行为  </li><li>手机通信（联网、移动通话、视频通话）  </li><li>Android系统  </li><li>手机待机 ，即Android OS 之类</li>\n</ul>\n<p>2.正常待机状态下（Screen off）包括唤醒和睡眠、深睡眠。当然，大部分人都希望手机进入Idle正常无唤醒的状态，达到hibernate。但国产App可不会这么干。对于待机来说两大耗电来源就是alarm计时器唤醒各类监听进行后台操作、偷跑流量、不必要的消息推送；wakelock把持唤醒锁让手机无法进入深睡眠从而维持后台服务。</p>\n<p>正常待机状况下，不飞行，不关闭数据网络，关闭GPS、wifi、蓝牙等，耗电排行是：</p>\n<ul>\n<li>手机通信 Cell Standy之类。这一块比较大，依赖数据网络的制式  </li><li>Android OS（即BBS的Kernel wakelock或partial wakelock标记为Android的）  </li><li>手机待机 （PowerManagerService 及Device Idle之类的）处理休眠状态下设备监听及唤醒锁的管理</li>\n</ul>\n<p>&nbsp;</p>\n<hr>\n<p>开启wld和bbs的实时监控，把该装的常用软件装上<font color=\"#ff0000\">先用着那么一段时间。</font></p>\n<p>1.</p>\n<p>①利用这段时间 把权限都给干了 装软件给你显示了一list的权限然并卵 不同意没法装 装了也没几个需要的&nbsp; 在【应用程序权限】的设置框中把权限悉心的扫个遍 曾经启用过的权限会有提示何时使用过 例如我把美团外卖的权限全禁了 然而还是可以正常使用</p>\n<p>目标是：给app只留必要的权限 像读取短信直接get验证码那些权限就不必了，重点关注权限里的【<font color=\"#ff0000\">保持唤醒</font>】。这个权限意味着能在熄屏时候对手机进行唤醒操作，在亮屏时能够保证数据一致性。没有必要进行推送和同步的应用就应该关闭。</p>\n<p>②利用小汽车autostat或者3c toolbox自带的自启动控制器 控制不需要自行启动的项目 除了launcher greentify 3c tool box类似物 等系统框架 其余全都不需要 不需要不需要</p>\n<p>目标是：启动速度棒 未启动的应用不会推送任何消息 （微信 微博 GMail等可以排除）</p>\n<p>③给app一点微弱的信任，试着在app的设置中，关掉消息推送、wifi下自动更新、wifi下同步等设置，稍微有点技术含量的程序猿都会在设置取消时cut掉后台进程。</p>\n<p>④对于各种传感器，依据需求关闭能很好的节约电量（这一块和rom的优化很大关系）例如黑屏手势、人脸解锁、黑屏解锁、口袋检测等。</p>\n<p>⑤利用系统的电量统计和后台开启程序大致了解本机运行的大消耗后台。例如本机待机时系统消耗的比例想当高。同时保持着很高的唤醒状态。。</p>\n<p><strong><font color=\"#ff0000\">系统的电量统计</font></strong></p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93gw1ezrv30mvwcj20u01hc435.jpg\" alt=\"\"><img src=\"http://ww1.sinaimg.cn/large/68eb7c93gw1ezrv0fux6ej20u01hc0x7.jpg\" alt=\"\"></p>\n<p>点开正在运行的后台，可以看本机Android系统和Android操作系统电量消耗高的原因是高通CPU的定位服务。经过调校后的曲线，可以看到中度使用后，待机超过了一个天。同时待机时休眠比例也超过了8成。</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/10/5693136395d1a.png\" alt=\"\"><img src=\"http://ooo.0o0.ooo/2016/01/10/569313c0b6950.png\" alt=\"\"></p>\n<p>2.使用过后 开启betterbatterystats和wakelock detector</p>\n<p>D1 2016/1/6</p>\n<p>①<font color=\"#ff0000\"><strong>betterbatterystats BBS</strong></font>查看耗电大户 一般来说googleservice由于不能随时翻 会造成gmail keep backup contacts 都会发送心跳包不停的连接 此外 除了显而易见的三大流氓滥用唤醒锁 相互唤醒 外 还有奇形怪状的耗电大户 如location定位 微信 </p>\n<p>官方帮助指南：<a href=\"http://better.asksven.org/bbs-how-to/\">http://better.asksven.org/bbs-how-to/</a></p>\n<p>应用beta版及正式版更新日志 <a href=\"http://forum.xda-developers.com/showthread.php?t=1179809\" title=\"http://forum.xda-developers.com/showthread.php?t=1179809\">http://forum.xda-developers.com/showthread.php?t=1179809</a>&nbsp; 包含apk下载。捐助包多了知识库和小控件。</p>\n<p>它承诺不在后台记录电量，只在开机、断开充电器、插上充电器、亮屏、熄屏。custom是自定义的操作记录，current是当前时间截止的电量消耗的样本。它提供了后台电量实时监控，这会消耗一定的电量；同时提供了进程监控，并对唤醒次数超过阈值的进行提示。<font color=\"#ff0000\">右侧的圈圈一律代表该应用、该服务、该定时器在所选时间段的使用时间比例</font></p>\n<p>Entries：</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1ezp07m935cj20u012saci.jpg\" alt=\"\"></p>\n<p>&nbsp;</p>\n<font color=\"#ff0000\">other</font>——睡眠、唤醒、亮屏等其他重要时间节点的电量消耗数据【深睡眠、熄屏唤醒、亮屏、通话时间、wifi开启时长、wifi连上时长、蓝牙开启时长】<br><br><em>   一般选择unplugged-current 即断电后到现在 一般熄屏情况下 要么deep sleep要么awake，所以两者相加应该是100%。  <li>（Awake）Screen off显示了熄屏时被唤醒所占比例 可以很直观的感受手机离开操作后后台运作的程度 最优的情况当然是0%，手机处于最节能的状态（之前的版本将awake&amp;screen off分开计时 需要两个数据一起对比）  </li><li>此外，还有wifi 启动、wifi运行与唤醒的关系，很明显，在晚上断开wifi会给手机更好的进入休眠<br><br><font color=\"#ff0000\">kernel wakelocks</font>——使手机唤醒的内核操作【大量的短暂唤醒会严重影响唤醒时间导致手机消耗更多的时间返回睡眠】\n\n</li></em>   重点关注项目-PowerManagerService wakelock和multipdp、svnet-dormancy wakelock。前者是激活大部分app的唤醒锁服务，如果它占第一位，则取partial wakelocks关注唤醒时间较多的项目；后者是网络使用量，若存在后台偷跑流量的软件，可以很明显的发现异常，到network数据栏中看一下。  <li>kernel wakelock中的alarm是所有定时器的总和 基本不耗电 但如有异常 可到alarms或amplify中查看详细的计时器项目。  </li><li><em>sync</em> <em>backup</em> <em>job</em>很明显是系统的操作 同步 备份 消息推送 如果不需要就禁了吧<br><br><font color=\"#ff0000\">partial wakelocks</font>——是大部分app把持的唤醒锁。（PowerManagerService高的可以关注这项）<br><br><em>   根据使用频率来限制大耗电partial wakelock 如ig tw fb wb wx等。可以在后文自行设置后台计时器时间。  <li>卸载/冻结/不可用 这些做法有些极端 但实在忍无何忍下还是放弃这个app吧。钛备份下的冻结就比较好用 对google系的后文提到。  </li><li>主动手动开关GPS。使用时才打开。  </li><li>根据需要使用后退键退出还是home键退出  </li><li>wifi是个奇葩 晚上记得关（If you don’t need Wifi turn it off: in some cases Wifi is known to cause wakeups and an overhead in e.g. location services）  </li><li>一次不要改太多，一次一次改 能对手机每个app和每个设置有直观的体验和感受<br><br><font color=\"#ff0000\">alarms</font>——由于应用及服务的定时器唤醒手机【apps设定的触发器在某个时间节点唤醒手机，某些alarms只在唤醒时执行、另一些则直接唤醒手机。通常一个alarm绑定一个intent】\n\n</li></em>   长时间和过高次数的alarm都是不正常的。一定要及时纠出。例如微信这狗。  </li><li>更多的alarm应该在手机亮屏时启动 除了闹钟、微信等必要的消息之外 如知乎提醒、百度外卖提醒等应用，按照使用习惯，更应该是熄屏时完全关闭计时器。<br><br><font color=\"#ff0000\">network</font>——app的网络使用率【区分3G和wifi的网络连接数据】<br><br><em>   相当多的工具都能查看网络传输的状态。系统自带的也不错。  <li>信号较弱的wifi或窝蜂数据会频繁的连接并唤醒手机<br><br><font color=\"#ff0000\">CPU states</font>——不同CPU频率所占用的时间【包括深度睡眠时的CPU频率占用时间】<br><br><font color=\"#ff0000\">Processes</font>——用户及系统进程消耗的CPU时间【进程CPU消耗，分为用户及系统，以不同颜色标识】<br><br>进阶功能：<br><br>【<font color=\"#ff0000\">Watchdog</font>】——熄屏分析功能，可自定义亮屏、解锁等。对唤醒超过阈值的app和service进行提示，可在熄屏后一定时间对watchdog关闭。<br><br>【<font color=\"#ff0000\">Active Monitoring</font>】——后台运行的一定时间间隔的数据采集，可能会造成额外耗电。<br><br>观察一下本机的耗电比例，首先看到other中，Awake(Screen Off)的比例相当高，在其他人的截图是有deep sleep的！！！我安的软件已经炸裂了。尽管开启了wifi会消耗更多的电量，但大量的唤醒让手机不能正常进入休眠。<br><br><img src=\"http://ww1.sinaimg.cn/large/68eb7c93gw1ezrv6kd1wgj20u01hcaep.jpg\" alt=\"\"><br><br>再观察partial wakelock ，除了gmail可能不顺利的同步导致消耗略多外，其余app都还算正常的耗电（注意关注连接时间，最多的也才3m35s，这在8h14m11s里来说是相当小的比例，同时消耗的电量也只有0.7%，还可以接受。当然是提前锁过了一部分app的后台）<br><br><img src=\"http://ww3.sinaimg.cn/large/68eb7c93gw1ezrv97d35sj20u01hc7ci.jpg\" alt=\"\"><br><br>注意力关注到kernel wakelock，可以看到，核心的耗电量还是比较大的（由于之前的耗电太过大已经关闭了锁屏手势和黑屏解锁）。可以明显的看到，wlan联网在熄屏时间一直连接，qpnp_fg_memaccess qpnp_fg_update_temp qpnp_fg_update_sram是内核的操作。和rom有关。<img src=\"http://ww3.sinaimg.cn/large/68eb7c93gw1ezrvef5tykj20u01hctff.jpg\" alt=\"\"><br><br>最后发现。。其实是rom的锅。我的other居然没有出现deep sleep。这是相当可怕的事情。经过调优和整理唤醒后，得到如下相当爽快的数据。接近70%的深睡眠还可以让人接受。毕竟还开启了微信。微博。邮件的消息推送。<br><br><img src=\"http://ww4.sinaimg.cn/large/006fVPCvjw1ezvcpamb0bj30u01hcgrd.jpg\" alt=\"\"><br><br><img src=\"http://ww3.sinaimg.cn/large/006fVPCvjw1ezvconkjs5j30u01hctfb.jpg\" alt=\"\"><img src=\"http://ww2.sinaimg.cn/large/006fVPCvjw1ezvcqv63zoj30u01hcah1.jpg\" alt=\"\"><br><br>②<font color=\"#ff0000\"><strong>wakelock detector WLD</strong></font>查看流氓唤醒大户 这里要提到微信。千万不要手欠在应用内使用它的升级。最好在play或者cool市场升级。官方提供的流氓唤醒一个晚上唤醒好几千次。从未进入过休眠状态。一进入唤醒状态又有很多应用跟着启动。 微信的消息是利用同步，而CPU唤醒锁则是被滥用了的。<br><br>Test1 2016.01.06<br><br><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1ezp096st0oj20u01hcwlt.jpg\" alt=\"\"><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1ezp0akfqdzj20u01hcgrl.jpg\" alt=\"\"><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1ezp09t72gcj20u01hcwja.jpg\" alt=\"\"><img src=\"http://ww3.sinaimg.cn/large/68eb7c93gw1ezp0a61g8yj20u01hcgt8.jpg\" alt=\"\"><br><br>上图分别是WLD四个视图-CPU唤醒锁时间、Kernel唤醒锁时间、屏幕唤醒锁触发次数、Alarm触发器次数.<br><br>CPU锁实际上就是用户app的持有wakelock的时间。可以看到由于需要同步相册里的图片，本次测试中google photo占用了极大部分的唤醒锁时间，其余的应用则比较正常；内核持有wakelock一般与rom的品质有关，由于po主使用的是第三方精简rom，出现了一些奇特的bug，例如第一项qcom_rx_wakelock高通的cpu在5.1的bug，在熄屏状态下仍在进行不停的wifi连接，持有唤醒锁对应用进行超负荷的运算，这也是比较不容易控制也难以改善的方面；屏幕唤醒则和用户使用的点亮次数有关，可以看到，每次启动SU超级root、微信、QQ、BBS都进行了短暂的唤醒，而视频软件如果在播放中熄屏，亮屏后也会唤醒屏幕锁（持久保有）；最后一项则是需要重点关注的，定时器启动唤醒锁，2个多小时内，google服务、微信、微博、日历、输入法都进行了大量的唤醒，导致80%的时间都难以进入deep sleep。<br><br>Test2 2016.01.08<br><br>CPU唤醒锁：本次测试google相册已经不进行同步，更多的是Gmail的同步操作。由于输入了7个邮件，不可避免的会进行更多频次的操作。除了gmail能利用谷歌框架同步外，其他邮件都应该设置比较合理的同步时间。而微信（后文提及）设置了封锁CPU锁后同步的频次也有所减少。<br><br>kernel wakelock：qcom_rx_wakelock已经减少了很多，这是关闭黑屏手势的减少唤醒次数的效果。两次测试中，PowerManagerService.WakeLocks、qcom_rx_wakelock、PowerManagerService.Broadcasts、NETLINK四个核心服务占据的时间远远超过其他的服务。这也是需要优化的部分。<br><br>屏幕唤醒锁触发：<br><br>Alarm计时器触发：可以看到QQ、微信在夜晚的唤醒次数有些多，其实在qq、微信中都可以设置免打扰时间段，主动的消除在夜间待机时的计时器唤醒推送。<br><br><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1ezrvmr0wr2j20u01hcqaa.jpg\" alt=\"\"><img src=\"http://ww3.sinaimg.cn/large/68eb7c93gw1ezrvnilpewj20u01hc7ai.jpg\" alt=\"\"><br><br><img src=\"http://ww1.sinaimg.cn/large/68eb7c93gw1ezrvjeovxej20u01hcahy.jpg\" alt=\"\"><img src=\"http://ww3.sinaimg.cn/large/68eb7c93gw1ezrvlj75wdj20u01hcn5a.jpg\" alt=\"\"><br><br>&nbsp;<br><br>4.绿色守护、3C ToolBox、Amplify的使用。<br><br>①.<font color=\"#ff0000\"><em>*绿色守护</em></font></li></em>\n\n<font color=\"#ff0000\">思路</font>：熄屏清掉所有被勾选的app的服务和缓存进程，同时阻止所有可唤醒包含服务的监听receiver&amp;释放所有包含服务的相互唤醒wakelock，达到相对休眠状态。主要运作在熄屏后不希望后台运作的程序（<font color=\"#ff0000\">无法在前台操作切断应用间唤醒</font>）。捐助版的亮点是可以在休眠状态下使用GCM服务。<br><br>绿色守护在xda的讨论贴 开发者oisisfeng也在。<br><br><a href=\"http://forum.xda-developers.com/showthread.php?t=2155737\" title=\"http://forum.xda-developers.com/showthread.php?t=2155737\">http://forum.xda-developers.com/showthread.php?t=2155737</a><br><br>绿守作者在知乎的问答<br><br><a href=\"https://www.zhihu.com/question/38311793/answer/75897889\" title=\"https://www.zhihu.com/question/38311793/answer/75897889\">https://www.zhihu.com/question/38311793/answer/75897889</a><br><br>由于测试机在5.1.1,还未升级到Android M，因此没有享受到doze mode和app standby带来的福利。<br><br>一张图看到就算不是 百度阿里疼腾讯系 从某个市场出来的app也会相互唤醒。这锅到底谁来背。以后反编译源码看一看。即刻-豆瓣-虎皮体育-同花顺-航旅纵横-什么值得买是什么关系。更不用说百度及包含百度字样的app-爱奇艺-去哪儿-uber-乐视-91-多米-音悦台-穷游途牛-汽车之家&nbsp; 腾讯及包含qq字样-京东-大众-美团-饿了么-58-猎豹-搜狗-同城 阿里及UC-微博-优酷土豆-陌陌-滴滴快的-小米魅族<br><br><img src=\"http://ww2.sinaimg.cn/large/68eb7c93gw1ezs6frg1q4j20u01hc461.jpg\" alt=\"\"><br><br>使用方法：主界面显示正在运行的服务及已经绿色化的应用。点击上方【+】号对所有潜在威胁进行评估，勾选的应用会在熄屏数分钟后清空缓存、杀死服务、抑制app唤醒及alarm的唤醒。root及xposed模式下效果更佳。支持gcm的应用会有小图标，能在绿色化的情况下还可收发消息。<br><br>②.<font color=\"#ff0000\"><strong>3C tool box</strong></font>\n\n<font color=\"#ff0000\">思路</font>：封杀选定的activity receiver service。结晶化应用（无论前台后台，需要更多的测试，容易出现应用fc 可以实现前台界面退出后直接清缓存 <font color=\"#ff0000\">可直接在应用使用中禁止广告、介绍、推荐app的activity和service</font>）（本篇不涉及3c的调频调压 内存管理设置）<br><br>例如：杀错了谷歌的邮件提醒，即便能实时接收邮件，但系统不做出提醒通知。<br><br><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1ezrulsjoalj20u01hcgt5.jpg\" alt=\"\"><br><br>又例如：杀错了QQi的消息消息提示核心，虽然在后台能看到QQ的进程，但新消息通知会出现不同步（极有可能是阻止了开机自启杀掉的，但这个receiver需要的权限相当多，网络改变、时间改变等乱七八糟的）<br><br><img src=\"http://ww1.sinaimg.cn/large/68eb7c93gw1ezrusb4h51j20u01hctf7.jpg\" alt=\"\"><br><br>再比如杀掉了随手记的通知权限，居然能把自己的同步服务给搞挂了。。这代码写的。此外几个应用，饿了么，大众点评，都有不同程度的易fc但后台又唤醒个不停的问题。<br><br>使用方法：对四大组件中那三个进行轮番排查，限制自启动，限制唤醒路径，冻结后台。（主要操作在应用管理里）<br><br>③<strong><font color=\"#ff0000\">唤醒控制Amplify</font></strong>的使用<br><br>思路：对Alarm计时器的时间进行限制重设、对Service进行屏蔽、限制同步，可使用进阶的正则表达式过滤。<br><br>使用方法：对在wld找到的唤醒次数多的详细分析，对alarm中唤醒频次高的限制更长的时间，对显见的服务停用，先做完这两者再对wakelock进行限制。<br><br><img src=\"http://ooo.0o0.ooo/2016/01/10/569322dfc0422.png\" alt=\"\"><br><br>④<strong><font color=\"#ff0000\">禁止唤醒</font></strong>的使用(非捐助版只能对5个app进行限制，入正也就十几块)<br><br>思路：在前台就主动把各类唤醒锁进行封闭、定时器对齐、对同步进行限制<br><br>作者曾提到了<font color=\"#ff0000\">唤醒锁的危害</font><font color=\"#000000\">及禁止唤醒对这些危害的防范</font>\n\n<p><strong>CPU唤醒锁</strong>: 这是在息屏后阻止你的设备进入休眠状态的唤醒锁, 禁用它通常不会有任何问题.</p>\n<p><strong>所有其它唤醒锁</strong>: 除了CPU唤醒锁之外, 还有一些唤醒锁可以阻止设备休眠, 甚至阻止设备息屏. 开启这个选项以禁用这些唤醒锁.</p>\n<p><strong>同步</strong>: 同步也可以唤醒设备, 如果你不需要应用的同步功能, 使用这个选项来禁用掉它.</p>\n<p><strong>对齐定时器:</strong> (&gt;= Android 4.4) AlarmManager可以使用定时器来周期性的唤醒设备, 阻止CPU进入长期休眠状态. 启用这个选项来强制对齐定时器, 让它们尽量在同一时间触发以节省电量. 请注意: 对于设计不良的应用, 启用此选项有可能会引发推送消息延迟.</p>\n<p><a href=\"https://www.linangran.com/?p=611\">https://www.linangran.com/?p=611</a> 作者使用指南</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/10/569323251d9ce.png\" alt=\"\"></p>\n<p>⑤阻止运行的使用</p>\n<p><a href=\"https://github.com/liudongmiao/ForceStopGB\" title=\"https://github.com/liudongmiao/ForceStopGB\">https://github.com/liudongmiao/ForceStopGB</a> 开源项目地址 免费</p>\n<p>相当推荐的一款软件，无论前后台，通过劫持系统api，直接禁止非需求service的启动。精简版的3c tool box，保证应用只在需要时启动。添加到阻止列表的应用只在以下情况开启：</p>\n<ul>\n<li>启动器直接或第三方provider，如手动点button、分享、支付  </li><li>桌面小部件定时更新、但只维持30秒（这个好顶赞）  </li><li>同步开启时的定时同步，也只能维持30秒  </li><li>除谷歌服务外的系统服务、支付宝的支付服务  </li><li>其他可能的用户行为引起的启动</li>\n</ul>\n<p>同时，谷歌服务在阻止列表时，可以支持gcm和谷歌家族应用的使用。但当任何一个谷歌家族应用没有退出时，都不会退出谷歌服务。</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/10/569322a0e590e.png\" alt=\"\"></p>\n<p>5.针对微信的方案</p>\n<p>微信最近从良而加入gcm的推送方案，能在有谷歌框架的手机在hibernate休眠状况下直接推送消息！既不用随时拿着唤醒锁又不唤醒其他乱七八糟的应用！但原先保留的wakelock模式依旧存在，握着各种随机数的锁禁都不知道禁哪些。但大神出现了。 </p>\n<p><a href=\"https://www.zhihu.com/question/31136645\">https://www.zhihu.com/question/31136645</a> 知乎高票的正则表达式杀wakerlock方案</p>\n<p><a href=\"http://bbs.gfan.com/android-7963258-1-1.html\">http://bbs.gfan.com/android-7963258-1-1.html</a> gfan精华帖</p>\n<p>上面是一种方案，但微信更改了wakelock的命名方式就会得不偿失错杀唤醒锁了。最近发现单独使用【 禁止唤醒】中的CPU唤醒锁，也能阻止微信胡乱的唤醒，同时不影响推送；但相同的情况下使用绿色守护对微信绿色化却不能及时收到消息。</p>\n<p>6.针对gms的方案 考虑到gms 的复杂性 提一下它涉及到google账户的同步<em>sync</em> 备份 keep photo gmail(分为对被墙的不被墙的) 三个文档&nbsp; play软件升级等等 google service包含了N个心跳包的alarm 各种硬件CPU唤醒锁</p>\n<p>①完全禁掉是一个办法（当然这需要框架 service play一起禁 不然各种报错）这种方式最省电 但是又想使用google收国内账户 或者时不时FQ看看FB TW IG使用其中一些</p>\n<p>②不停更换host文件。这个方式能保证随时上墙又不会因为vpn挂着长期费电。测试几天发现耗电稳定，gmail是不是抽风但效果拔群。（推荐神站load.cn）</p>\n<p>③长时间挂载稳定vpn。该方式同样能随时保证上墙接收同步和推送。同时配合now能享受到肉身翻墙的欢喜效果。但vpn的开发良莠不齐，耗电状况不一。</p>\n<p>④不需要google家族的直接装无gms版的精简rom或国内大部分融都会删掉——————这个方法纯天然摒除了谷歌的抽风状况，但，滚粗。</p>\n<p>⑤久不久上墙。gms耗电的问题就是连接不上google而大量地进行重连接。所以希望使用google服务又不想随时耗电使用vpn的一个便捷方案就是每天保证登录一次，并在amplify对google框架进行限制时间，每隔一天敲醒alarm一次，但不能阻止cpu唤醒锁对gms想要获取推送的影响。</p>\n<p>参考：</p>\n<p>【2013.04.14】绿守作者 微信收费事件背后被广泛忽略的技术细节</p>\n<p><a href=\"http://blog.oasisfeng.com/2013/04/14/dirty-secret-behind-weixin-charge-gate/\" title=\"http://blog.oasisfeng.com/2013/04/14/dirty-secret-behind-weixin-charge-gate/\">http://blog.oasisfeng.com/2013/04/14/dirty-secret-behind-weixin-charge-gate/</a></p>\n<p>【2013.06.19】PC Online 的省电优化方案介绍</p>\n<p><a href=\"http://pcedu.pconline.com.cn/334/3345895_all.html\" title=\"http://pcedu.pconline.com.cn/334/3345895_all.html\">http://pcedu.pconline.com.cn/334/3345895_all.html</a></p>\n<p>【2014.02.16】唤醒锁: 检测 Android* 应用中的 No-Sleep（无法进入睡眠）问题</p>\n<p><a href=\"https://software.intel.com/zh-cn/android/articles/wakelocks-detect-no-sleep-issues-in-android-applications?language=es\" title=\"https://software.intel.com/zh-cn/android/articles/wakelocks-detect-no-sleep-issues-in-android-applications?language=es\">https://software.intel.com/zh-cn/android/articles/wakelocks-detect-no-sleep-issues-in-android-applications?language=es</a></p>\n<p>【2014.06.05】wakelock alarm wifi 详细数据测评 唤醒锁: 检测 Android* 应用中的 No-Sleep（无法进入睡眠）问题<a href=\"http://www.oneplusbbs.com/forum.php?mod=viewthread&amp;tid=366390\">http://www.oneplusbbs.com/forum.php?mod=viewthread&amp;tid=366390</a></p>\n<p>【2014.07.22】Android Standby 对于绿色守护唤醒对其 进入深睡眠的一些思考</p>\n<p><a href=\"http://lockekk.github.io/jekyll-bootstrap/2014/07/22/Android-Standby/\" title=\"http://lockekk.github.io/jekyll-bootstrap/2014/07/22/Android-Standby/\">http://lockekk.github.io/jekyll-bootstrap/2014/07/22/Android-Standby/</a></p>\n<p>&nbsp;</p>\n<p>android论坛关于ba保持屏幕唤醒和cpu唤醒</p>\n<p><a href=\"http://developer.android.com/training/scheduling/wakelock.html\" title=\"http://developer.android.com/training/scheduling/wakelock.html\">http://developer.android.com/training/scheduling/wakelock.html</a></p>\n<p>此外 几个app的酷市场下评论都很精彩。</p>\n<p>例如Amplify的评论 <a href=\"http://coolapk.com/feed/1201169\" title=\"http://coolapk.com/feed/1201169\">http://coolapk.com/feed/1201169</a></p>\n<p>例如Google Play Service 的评论 <a href=\"http://coolapk.com/feed/1196656\" title=\"http://coolapk.com/feed/1196656\">http://coolapk.com/feed/1196656</a></p></li>"},{"title":"AsyncTask 很好","id":"232","date":"2013-06-10T21:27:28.000Z","_content":"\n[AsyncTask 很好](http://4610653.blog.51cto.com/4600653/840370)","source":"_posts/AsyncTask 很好.md","raw":"---\ntitle: AsyncTask 很好\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - Android\nid: 232\ndate: 2013-06-11 05:27:28\n---\n\n[AsyncTask 很好](http://4610653.blog.51cto.com/4600653/840370)","slug":"AsyncTask 很好","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7ku000kuco4i0nq45a5","content":"<p><a href=\"http://4610653.blog.51cto.com/4600653/840370\" target=\"_blank\" rel=\"external\">AsyncTask 很好</a></p>","excerpt":"","more":"<p><a href=\"http://4610653.blog.51cto.com/4600653/840370\">AsyncTask 很好</a></p>"},{"title":"Conversion to Dalvik format failed with error 1解决方法：","id":"212","date":"2013-05-24T16:15:52.000Z","_content":"\nAndroid 中出现Conversion to Dalvik format failed with error 1这个错误但是却没有错误提示...90%的原因是包的冲突 \n检查一下是否有版本不同的jar包\n第一种情况包导入错误.点击工程-->build path-->libraries-->选中android1.x 或者android2.x ，点击remove。\n然后再点击add library-->User Library -->next-->User Libraries-->new 你取一个名字 比如android2.1 点击OK，\n选中android2.1-->add jars-->\\android-sdk-windows\\platforms\\android-7\\android.jar 点击打开，点击ok-->finish.\n第二种情况签名时没有成功。签名：java -jar signapk.jar platform.x509.pem platform.pk8 e:huaworkspace\\hua\\bin\\hua.apk e:huaworkspace\\hua\\bin\\hua_signaed.apk ，\n如果hua_signaed.apk签名失败，那么请到你的工作目录中将hua_signaed.apk delete掉。\n第三种情况包冲突，请到工程目录下将相同的包删除，重新导入一个，这一点和第一种情况类似，不过这是针对其他包，不是android包 ","source":"_posts/Conversion to Dalvik format failed with error 1解决方法.md","raw":"---\ntitle: Conversion to Dalvik format failed with error 1解决方法：\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - Android\nid: 212\ndate: 2013-05-25 00:15:52\n---\n\nAndroid 中出现Conversion to Dalvik format failed with error 1这个错误但是却没有错误提示...90%的原因是包的冲突 \n检查一下是否有版本不同的jar包\n第一种情况包导入错误.点击工程-->build path-->libraries-->选中android1.x 或者android2.x ，点击remove。\n然后再点击add library-->User Library -->next-->User Libraries-->new 你取一个名字 比如android2.1 点击OK，\n选中android2.1-->add jars-->\\android-sdk-windows\\platforms\\android-7\\android.jar 点击打开，点击ok-->finish.\n第二种情况签名时没有成功。签名：java -jar signapk.jar platform.x509.pem platform.pk8 e:huaworkspace\\hua\\bin\\hua.apk e:huaworkspace\\hua\\bin\\hua_signaed.apk ，\n如果hua_signaed.apk签名失败，那么请到你的工作目录中将hua_signaed.apk delete掉。\n第三种情况包冲突，请到工程目录下将相同的包删除，重新导入一个，这一点和第一种情况类似，不过这是针对其他包，不是android包 ","slug":"Conversion to Dalvik format failed with error 1解决方法","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7kx000ouco4yssbow2c","content":"<p>Android 中出现Conversion to Dalvik format failed with error 1这个错误但是却没有错误提示…90%的原因是包的冲突<br>检查一下是否有版本不同的jar包<br>第一种情况包导入错误.点击工程–&gt;build path–&gt;libraries–&gt;选中android1.x 或者android2.x ，点击remove。<br>然后再点击add library–&gt;User Library –&gt;next–&gt;User Libraries–&gt;new 你取一个名字 比如android2.1 点击OK，<br>选中android2.1–&gt;add jars–&gt;\\android-sdk-windows\\platforms\\android-7\\android.jar 点击打开，点击ok–&gt;finish.<br>第二种情况签名时没有成功。签名：java -jar signapk.jar platform.x509.pem platform.pk8 e:huaworkspace\\hua\\bin\\hua.apk e:huaworkspace\\hua\\bin\\hua_signaed.apk ，<br>如果hua_signaed.apk签名失败，那么请到你的工作目录中将hua_signaed.apk delete掉。<br>第三种情况包冲突，请到工程目录下将相同的包删除，重新导入一个，这一点和第一种情况类似，不过这是针对其他包，不是android包 </p>","excerpt":"","more":"<p>Android 中出现Conversion to Dalvik format failed with error 1这个错误但是却没有错误提示…90%的原因是包的冲突<br>检查一下是否有版本不同的jar包<br>第一种情况包导入错误.点击工程–&gt;build path–&gt;libraries–&gt;选中android1.x 或者android2.x ，点击remove。<br>然后再点击add library–&gt;User Library –&gt;next–&gt;User Libraries–&gt;new 你取一个名字 比如android2.1 点击OK，<br>选中android2.1–&gt;add jars–&gt;\\android-sdk-windows\\platforms\\android-7\\android.jar 点击打开，点击ok–&gt;finish.<br>第二种情况签名时没有成功。签名：java -jar signapk.jar platform.x509.pem platform.pk8 e:huaworkspace\\hua\\bin\\hua.apk e:huaworkspace\\hua\\bin\\hua_signaed.apk ，<br>如果hua_signaed.apk签名失败，那么请到你的工作目录中将hua_signaed.apk delete掉。<br>第三种情况包冲突，请到工程目录下将相同的包删除，重新导入一个，这一点和第一种情况类似，不过这是针对其他包，不是android包 </p>"},{"title":"GitHub上最受欢迎的Android开源项目TOP20","id":"85","date":"2013-05-07T11:06:20.000Z","_content":"\n[GitHub上最受欢迎的Android开源项目TOP20](http://www.apkbus.com/android-115353-1-1.html \"http://www.apkbus.com/android-115353-1-1.html\")","source":"_posts/GitHub上最受欢迎的Android开源项目TOP20.md","raw":"---\ntitle: 'GitHub上最受欢迎的Android开源项目TOP20'\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - 马克\nid: 85\ndate: 2013-05-07 19:06:20\n---\n\n[GitHub上最受欢迎的Android开源项目TOP20](http://www.apkbus.com/android-115353-1-1.html \"http://www.apkbus.com/android-115353-1-1.html\")","slug":"GitHub上最受欢迎的Android开源项目TOP20","published":1,"updated":"2016-04-13T09:09:11.721Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7kz000quco4a6eclqbw","content":"<p><a href=\"http://www.apkbus.com/android-115353-1-1.html\" title=\"http://www.apkbus.com/android-115353-1-1.html\" target=\"_blank\" rel=\"external\">GitHub上最受欢迎的Android开源项目TOP20</a></p>","excerpt":"","more":"<p><a href=\"http://www.apkbus.com/android-115353-1-1.html\" title=\"http://www.apkbus.com/android-115353-1-1.html\">GitHub上最受欢迎的Android开源项目TOP20</a></p>"},{"title":"Hadoop2.2.0 Mapreduce Log日志分析小例","id":"531","date":"2014-12-11T18:17:26.000Z","_content":"\n这个任务主要是在搭建好Hadoop2.2.0环境的基础上，模仿sample中的wordcount程序，手动编写一个Mapreduce的对日志文件分析的函数。该日志文件是模拟搜索引擎记录所有用户的查询，当有一个用户使用搜索引擎进行搜索时，日志文件会记录这样一条记录：（搜索时间、搜索关键字、用户IP）。其中，日志文件的格式是：\n\n*   时间+搜索词+IP地址\n*   2011-10-26 06:11:35 云计算 210.77.23.12\n*   2011-10-26 06:11:45 Hadoop 210.77.23.12\n\n利用Mapreduce模型对日志文件进行分析，需要完成的任务有：\n\n*   所有日志中出现次数最多的50个关键词；\n*   特定日期区间日志中出现次数最多的50个关键词；\n*   特定IP地址区间（假定前3段相同，区间在4段中设定）日志中出现次数最多的50个关键词\n\n任务主要流程包括：\n\n*   按照一定的规则随机生成并将日志文件写入DFS中。\n*   将日志文件进行字符串筛检，提取出所需字段并计数\n*   将累计的词数进行排序\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1en69s477ktj20fc0atdge.jpg)\n\n编程之前，研究了一下eclipse-hadoop的插件，其作用是可以快速的查看DFS中的新增的文件，即写入日志，生成日志都能快速的查看。下载jar包，将之放到eclipse目录下的dropins里。启动eclipse后再preference里可以配置hadoop的路径。\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1en69y207dij20hm055dga.jpg)\n\n在导航中打开map-reduce的窗口，右键新建一个HadoopLocation，如图：\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1en69yxctfuj20s20enq5z.jpg)        这里Mapreduce和DFS的port分别是mapred-site.Xml和core-site.xml中配置的端口。这样就可以在Program Explorer 中看到dfs的文件。\n\n![](http://ww2.sinaimg.cn/large/68eb7c93jw1en69zmtefxj205v04e3yj.jpg)此外，加入了插件后还可以直接建立Mapreduce的项目，这里就不详述了。\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1en6a08tm2hj20gz09174x.jpg)\n变成之前对Hadoop2.2.0的Mapreduce做一个简介。之前版本的Mapreduce是由Jobtracker和TaskTracker来管理的，之后出现了Yarn模型的版本，其要义是优化了每次Job都要经过JobTracker分配的结构，通过NodeManager管理节点任务，通过ResourceManager管理资源的分配。\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1en6a10wwoxj20cv09ogme.jpg)\n\n该系统程序的编写建立在系统自带的Wordcount demon上，通过重写Mapper类下的Map函数和Reducer类下的Reduce函数来读入分布式文件的数据，并进行分布式处理。其中，排序并找出前K个任务由两个Mapreduce完成。第一个任务Map负责读取分布式文件，截取字符串，并按任务需求过滤log信息；第一个任务Reduce负责对截取出的搜索词计数。第二个任务的Map负责封装新的词频和搜索词；第二个任务的Reduce负责将K-V键值对加入TreeMap并进行排序，最终输出TopK文件。\n操作者需要在一台配置好Hadoop的Linux全分布式节点的环境下，在控制台通过hdfs命令输入7项参数（其中5项必选）：1.输入log日志文本路径 2.第一个Mapreduce输出的词频统计文件路径 3.第二个Mapreduce输出的词频统计顺序排列的文件路径（中间过程）4.第二个Mapreduce输出的最高词频统计结果的文件路径 5.任务需求 6.参数1 7.参数2 进行系统的操作，最终在在hdfs文件系统中找到生成的结果，一般以ABC-part-00000命名。参数输入错误或者系统崩溃会自动停止程序。\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1en6a20gi08j20o20bwmxy.jpg)\n\n之前叙述了系统由两部分构成，其中第一部分不作为系统的主体框架，只作为普通JavaApplication处理，另一部分则具体分为MAP1，REDUCE1,MAP2,REDUCE2来处理，以下是系统设计的具体框架。\n第一部分较简单，通过调用Hadoop写入文件的API，再加上随机函数分别生成搜索词、IP和日期来实现。第二部分则通过编写两个函数入口run、两个map读取文件和两个reduce实现相应功能来组成。本系统的主要类如下：\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1en6a3grqz1j2055053jrl.jpg)\n\n其中，Config主要存放系统全局的参数，例如日志行数，日志起止时间，topK个数等。\nDFSWritter负责第一个主要任务写入数据，包含以下函数：\n\n![](http://ww2.sinaimg.cn/large/68eb7c93jw1en6a4d8g9pj205902cq2w.jpg)\n\n写入数据构成如下：\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1en6a51ij4xj20sr080q3h.jpg)\n\n其中获取随机日期的getRandomDate函数，其中在config中指定各参数\n\n![](http://ww2.sinaimg.cn/large/68eb7c93jw1en6a5w98dvj20ke07fgn5.jpg)\n\n获取随机搜索词的函数，其中Config可以配置搜索词最短和最长词数。\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1en6a6p3he8j20nw07l0u9.jpg)\n\n获取随机IP的函数，其中IP最大最小值可在config中指定。\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1en6a7e0i34j20ne04j0tc.jpg)\n\nWritter函数，负责写入log数据，已指定了写入的路径。\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1en6a856bgrj20i80eatbf.jpg)\n\n在main调用写入函数即可。第二个任务是进行日志文件的筛查、排序、查找最大值。主要用到的类有：\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1en6a9b6vr0j204w03a74d.jpg)\n\nLogAnalysiser21、LogAnalysiser21分别负责第一个、第二个Job的入口，继承了Configured类，实现配置Map和Reduce，若有Combiner或者partitioner也在这里进行配置。它们均重写了run函数进行mapreduce的启动。二者可以合并，这里分开让结构更清晰。\nMapClass MapClass2分别是两个job的映射，读取输入的文件并传给Reduce。它们均继承自Mapper并重写map函数。\nReduceClass ReduceClass2 分别是两个Job的处理细节，收到来自Map的信息并作整合处理。它们均继承自Reducer并重写reduce函数。\n如下图是该任务的系统流程：\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1en6aa7zbrjj20n60c8409.jpg)\n\n其中logAnalysis21负责对参数中mode进行判断，加载第一个job，主要函数run'为：\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1en6aapphpij20qz0byq4p.jpg)\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1en6ab82ey0j20eg05yt9u.jpg)\n\nMapClass中map函数如下，主要负责依据不同的需求对日志文件进行筛选\n\n![](http://ww2.sinaimg.cn/large/68eb7c93jw1en6ac19sqjj20js0ct418.jpg)\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1en6acnbc0lj20k109djt9.jpg)\n\nReduceClass 中reduce函数如下，主要负责计数并输出。\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1en6ad4qxadj20jg04daap.jpg)\n\nLogAnalysis22负责加载第二个job，run函数如下：\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1en6ady0bw1j20o20dydjd.jpg)\n\nMapClass2负责读取上一个job的wordcount文件，并对数据键值对进行改写，将词频改写为填充到10位的long，由于排序时同词频会被删除，因此将key改写为（词频+搜索词）value改写为（搜索词） 。Map函数如下：\n\n![](http://ww2.sinaimg.cn/large/68eb7c93jw1en6aexl5nyj20o1039dgl.jpg)\n\nReduce2负责读取传来的键值对，写入TreeMap，利用TreeMap的排序器自动对传来的改写（搜索词+词频）进行排序。这里用到了TreeMap自动根据key值进行排序的方法，但是key不能重复，因此在Map中改写起到了作用。同时，这里重写了TreeMap的Comparator函数，默认依据是从小到大排序。若指定了排序器Comparator，这里就可以按照从达到小进行排序了。排序完成后截取key前10位即为词频，value即为搜索词。Reduce函数主要如下：\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1en6affldqej20lv0dnjto.jpg)\n\n这里context输出只是中间结果sort，需要找到前N个高频搜索词，因此指定新的输出：\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1en6afzezfbj20ix0720u3.jpg)\n\n在安装配置好hadoop的分布式系统启动hadoop：\n\n&nbsp;\n\n<pre class=\"brush: bash; gutter: true\">./start-dfs.sh ./start-yarn.sh</pre>\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1en6b2rf3ndj20hz05at9r.jpg)\n\n在Config.java确认配置参数\n\n![](http://ww2.sinaimg.cn/large/68eb7c93jw1en6b3i6ungj207g07qmya.jpg)\n\n运行DFSWritter.java文件，将日志写入HDFS分布式文件系统，这里写入50个作为测试。\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1en6b41kibtj20ci01vdfx.jpg)\n\n输入hdf格式的命令，先列出log日志的结果\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1en6b4i2mh6j20cn0cvgnt.jpg)\n\n![](http://ww2.sinaimg.cn/large/68eb7c93jw1en6b4wispqj20990bg0uy.jpg)\n\n将Java程序导出成JAR到本地路径/usr/workspace/jar/logAnalysis2.0.jar。\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1en6b5hlroyj20h709bgmn.jpg)\n\n在命令行hdf命令，并带上必要的参数。首先运行需求一\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1en6b6bmiaoj20i101y74m.jpg)\n\n两个Mapreduce一气呵成完成，分别查看wordcount\\sort\\topK,\n查看Wordcount，可以看到按需统计的词频\n\n![](http://ww2.sinaimg.cn/large/68eb7c93jw1en6b6um7e7j20hy0buq49.jpg)\n\n查看sort，其中大的值排在了最后。\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1en6b7psqyhj20fx0bv3yt.jpg)\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1en6b84efm9j203x0ad749.jpg)\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n最后查看topK结果，即截取了sort的最后的8项并倒序输入。\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1en6b9u4yjyj20hp06o3z6.jpg)\n\n运行第二个需求，在参数五中输入2，并写上起止IP\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1en6bad6w83j20i301474g.jpg)\n\n运行结果的wordcount、sort、topK文件分别如下\n\n![](http://ww2.sinaimg.cn/large/68eb7c93jw1en6bb6k4j8j20gg0a2mxn.jpg)\n\n最后运行第三个需求，参数中带入3 和起止时间。\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1en6bbm6hi0j20i101k74j.jpg)\n\n再次分别查看wordcount sort topk文件，比对前文的全log发现完全符合。\n\n![](http://ww2.sinaimg.cn/large/68eb7c93jw1en6bcbhaifj20fi0cxmxr.jpg)\n\n这样，一个建立在Hadoop的Mapreduce小例就完成了。\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;","source":"_posts/Hadoop2.2.0 Mapreduce Log日志分析小例.md","raw":"---\ntitle: Hadoop2.2.0 Mapreduce Log日志分析小例\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - hadoop\nid: 531\ndate: 2014-12-12 02:17:26\n---\n\n这个任务主要是在搭建好Hadoop2.2.0环境的基础上，模仿sample中的wordcount程序，手动编写一个Mapreduce的对日志文件分析的函数。该日志文件是模拟搜索引擎记录所有用户的查询，当有一个用户使用搜索引擎进行搜索时，日志文件会记录这样一条记录：（搜索时间、搜索关键字、用户IP）。其中，日志文件的格式是：\n\n*   时间+搜索词+IP地址\n*   2011-10-26 06:11:35 云计算 210.77.23.12\n*   2011-10-26 06:11:45 Hadoop 210.77.23.12\n\n利用Mapreduce模型对日志文件进行分析，需要完成的任务有：\n\n*   所有日志中出现次数最多的50个关键词；\n*   特定日期区间日志中出现次数最多的50个关键词；\n*   特定IP地址区间（假定前3段相同，区间在4段中设定）日志中出现次数最多的50个关键词\n\n任务主要流程包括：\n\n*   按照一定的规则随机生成并将日志文件写入DFS中。\n*   将日志文件进行字符串筛检，提取出所需字段并计数\n*   将累计的词数进行排序\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1en69s477ktj20fc0atdge.jpg)\n\n编程之前，研究了一下eclipse-hadoop的插件，其作用是可以快速的查看DFS中的新增的文件，即写入日志，生成日志都能快速的查看。下载jar包，将之放到eclipse目录下的dropins里。启动eclipse后再preference里可以配置hadoop的路径。\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1en69y207dij20hm055dga.jpg)\n\n在导航中打开map-reduce的窗口，右键新建一个HadoopLocation，如图：\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1en69yxctfuj20s20enq5z.jpg)        这里Mapreduce和DFS的port分别是mapred-site.Xml和core-site.xml中配置的端口。这样就可以在Program Explorer 中看到dfs的文件。\n\n![](http://ww2.sinaimg.cn/large/68eb7c93jw1en69zmtefxj205v04e3yj.jpg)此外，加入了插件后还可以直接建立Mapreduce的项目，这里就不详述了。\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1en6a08tm2hj20gz09174x.jpg)\n变成之前对Hadoop2.2.0的Mapreduce做一个简介。之前版本的Mapreduce是由Jobtracker和TaskTracker来管理的，之后出现了Yarn模型的版本，其要义是优化了每次Job都要经过JobTracker分配的结构，通过NodeManager管理节点任务，通过ResourceManager管理资源的分配。\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1en6a10wwoxj20cv09ogme.jpg)\n\n该系统程序的编写建立在系统自带的Wordcount demon上，通过重写Mapper类下的Map函数和Reducer类下的Reduce函数来读入分布式文件的数据，并进行分布式处理。其中，排序并找出前K个任务由两个Mapreduce完成。第一个任务Map负责读取分布式文件，截取字符串，并按任务需求过滤log信息；第一个任务Reduce负责对截取出的搜索词计数。第二个任务的Map负责封装新的词频和搜索词；第二个任务的Reduce负责将K-V键值对加入TreeMap并进行排序，最终输出TopK文件。\n操作者需要在一台配置好Hadoop的Linux全分布式节点的环境下，在控制台通过hdfs命令输入7项参数（其中5项必选）：1.输入log日志文本路径 2.第一个Mapreduce输出的词频统计文件路径 3.第二个Mapreduce输出的词频统计顺序排列的文件路径（中间过程）4.第二个Mapreduce输出的最高词频统计结果的文件路径 5.任务需求 6.参数1 7.参数2 进行系统的操作，最终在在hdfs文件系统中找到生成的结果，一般以ABC-part-00000命名。参数输入错误或者系统崩溃会自动停止程序。\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1en6a20gi08j20o20bwmxy.jpg)\n\n之前叙述了系统由两部分构成，其中第一部分不作为系统的主体框架，只作为普通JavaApplication处理，另一部分则具体分为MAP1，REDUCE1,MAP2,REDUCE2来处理，以下是系统设计的具体框架。\n第一部分较简单，通过调用Hadoop写入文件的API，再加上随机函数分别生成搜索词、IP和日期来实现。第二部分则通过编写两个函数入口run、两个map读取文件和两个reduce实现相应功能来组成。本系统的主要类如下：\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1en6a3grqz1j2055053jrl.jpg)\n\n其中，Config主要存放系统全局的参数，例如日志行数，日志起止时间，topK个数等。\nDFSWritter负责第一个主要任务写入数据，包含以下函数：\n\n![](http://ww2.sinaimg.cn/large/68eb7c93jw1en6a4d8g9pj205902cq2w.jpg)\n\n写入数据构成如下：\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1en6a51ij4xj20sr080q3h.jpg)\n\n其中获取随机日期的getRandomDate函数，其中在config中指定各参数\n\n![](http://ww2.sinaimg.cn/large/68eb7c93jw1en6a5w98dvj20ke07fgn5.jpg)\n\n获取随机搜索词的函数，其中Config可以配置搜索词最短和最长词数。\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1en6a6p3he8j20nw07l0u9.jpg)\n\n获取随机IP的函数，其中IP最大最小值可在config中指定。\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1en6a7e0i34j20ne04j0tc.jpg)\n\nWritter函数，负责写入log数据，已指定了写入的路径。\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1en6a856bgrj20i80eatbf.jpg)\n\n在main调用写入函数即可。第二个任务是进行日志文件的筛查、排序、查找最大值。主要用到的类有：\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1en6a9b6vr0j204w03a74d.jpg)\n\nLogAnalysiser21、LogAnalysiser21分别负责第一个、第二个Job的入口，继承了Configured类，实现配置Map和Reduce，若有Combiner或者partitioner也在这里进行配置。它们均重写了run函数进行mapreduce的启动。二者可以合并，这里分开让结构更清晰。\nMapClass MapClass2分别是两个job的映射，读取输入的文件并传给Reduce。它们均继承自Mapper并重写map函数。\nReduceClass ReduceClass2 分别是两个Job的处理细节，收到来自Map的信息并作整合处理。它们均继承自Reducer并重写reduce函数。\n如下图是该任务的系统流程：\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1en6aa7zbrjj20n60c8409.jpg)\n\n其中logAnalysis21负责对参数中mode进行判断，加载第一个job，主要函数run'为：\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1en6aapphpij20qz0byq4p.jpg)\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1en6ab82ey0j20eg05yt9u.jpg)\n\nMapClass中map函数如下，主要负责依据不同的需求对日志文件进行筛选\n\n![](http://ww2.sinaimg.cn/large/68eb7c93jw1en6ac19sqjj20js0ct418.jpg)\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1en6acnbc0lj20k109djt9.jpg)\n\nReduceClass 中reduce函数如下，主要负责计数并输出。\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1en6ad4qxadj20jg04daap.jpg)\n\nLogAnalysis22负责加载第二个job，run函数如下：\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1en6ady0bw1j20o20dydjd.jpg)\n\nMapClass2负责读取上一个job的wordcount文件，并对数据键值对进行改写，将词频改写为填充到10位的long，由于排序时同词频会被删除，因此将key改写为（词频+搜索词）value改写为（搜索词） 。Map函数如下：\n\n![](http://ww2.sinaimg.cn/large/68eb7c93jw1en6aexl5nyj20o1039dgl.jpg)\n\nReduce2负责读取传来的键值对，写入TreeMap，利用TreeMap的排序器自动对传来的改写（搜索词+词频）进行排序。这里用到了TreeMap自动根据key值进行排序的方法，但是key不能重复，因此在Map中改写起到了作用。同时，这里重写了TreeMap的Comparator函数，默认依据是从小到大排序。若指定了排序器Comparator，这里就可以按照从达到小进行排序了。排序完成后截取key前10位即为词频，value即为搜索词。Reduce函数主要如下：\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1en6affldqej20lv0dnjto.jpg)\n\n这里context输出只是中间结果sort，需要找到前N个高频搜索词，因此指定新的输出：\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1en6afzezfbj20ix0720u3.jpg)\n\n在安装配置好hadoop的分布式系统启动hadoop：\n\n&nbsp;\n\n<pre class=\"brush: bash; gutter: true\">./start-dfs.sh ./start-yarn.sh</pre>\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1en6b2rf3ndj20hz05at9r.jpg)\n\n在Config.java确认配置参数\n\n![](http://ww2.sinaimg.cn/large/68eb7c93jw1en6b3i6ungj207g07qmya.jpg)\n\n运行DFSWritter.java文件，将日志写入HDFS分布式文件系统，这里写入50个作为测试。\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1en6b41kibtj20ci01vdfx.jpg)\n\n输入hdf格式的命令，先列出log日志的结果\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1en6b4i2mh6j20cn0cvgnt.jpg)\n\n![](http://ww2.sinaimg.cn/large/68eb7c93jw1en6b4wispqj20990bg0uy.jpg)\n\n将Java程序导出成JAR到本地路径/usr/workspace/jar/logAnalysis2.0.jar。\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1en6b5hlroyj20h709bgmn.jpg)\n\n在命令行hdf命令，并带上必要的参数。首先运行需求一\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1en6b6bmiaoj20i101y74m.jpg)\n\n两个Mapreduce一气呵成完成，分别查看wordcount\\sort\\topK,\n查看Wordcount，可以看到按需统计的词频\n\n![](http://ww2.sinaimg.cn/large/68eb7c93jw1en6b6um7e7j20hy0buq49.jpg)\n\n查看sort，其中大的值排在了最后。\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1en6b7psqyhj20fx0bv3yt.jpg)\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1en6b84efm9j203x0ad749.jpg)\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n最后查看topK结果，即截取了sort的最后的8项并倒序输入。\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1en6b9u4yjyj20hp06o3z6.jpg)\n\n运行第二个需求，在参数五中输入2，并写上起止IP\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1en6bad6w83j20i301474g.jpg)\n\n运行结果的wordcount、sort、topK文件分别如下\n\n![](http://ww2.sinaimg.cn/large/68eb7c93jw1en6bb6k4j8j20gg0a2mxn.jpg)\n\n最后运行第三个需求，参数中带入3 和起止时间。\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1en6bbm6hi0j20i101k74j.jpg)\n\n再次分别查看wordcount sort topk文件，比对前文的全log发现完全符合。\n\n![](http://ww2.sinaimg.cn/large/68eb7c93jw1en6bcbhaifj20fi0cxmxr.jpg)\n\n这样，一个建立在Hadoop的Mapreduce小例就完成了。\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;","slug":"Hadoop2.2.0 Mapreduce Log日志分析小例","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7l2000uuco4rkoj23he","content":"<p>这个任务主要是在搭建好Hadoop2.2.0环境的基础上，模仿sample中的wordcount程序，手动编写一个Mapreduce的对日志文件分析的函数。该日志文件是模拟搜索引擎记录所有用户的查询，当有一个用户使用搜索引擎进行搜索时，日志文件会记录这样一条记录：（搜索时间、搜索关键字、用户IP）。其中，日志文件的格式是：</p>\n<ul>\n<li>时间+搜索词+IP地址</li>\n<li>2011-10-26 06:11:35 云计算 210.77.23.12</li>\n<li>2011-10-26 06:11:45 Hadoop 210.77.23.12</li>\n</ul>\n<p>利用Mapreduce模型对日志文件进行分析，需要完成的任务有：</p>\n<ul>\n<li>所有日志中出现次数最多的50个关键词；</li>\n<li>特定日期区间日志中出现次数最多的50个关键词；</li>\n<li>特定IP地址区间（假定前3段相同，区间在4段中设定）日志中出现次数最多的50个关键词</li>\n</ul>\n<p>任务主要流程包括：</p>\n<ul>\n<li>按照一定的规则随机生成并将日志文件写入DFS中。</li>\n<li>将日志文件进行字符串筛检，提取出所需字段并计数</li>\n<li>将累计的词数进行排序</li>\n</ul>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1en69s477ktj20fc0atdge.jpg\" alt=\"\"></p>\n<p>编程之前，研究了一下eclipse-hadoop的插件，其作用是可以快速的查看DFS中的新增的文件，即写入日志，生成日志都能快速的查看。下载jar包，将之放到eclipse目录下的dropins里。启动eclipse后再preference里可以配置hadoop的路径。</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1en69y207dij20hm055dga.jpg\" alt=\"\"></p>\n<p>在导航中打开map-reduce的窗口，右键新建一个HadoopLocation，如图：</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1en69yxctfuj20s20enq5z.jpg\" alt=\"\">        这里Mapreduce和DFS的port分别是mapred-site.Xml和core-site.xml中配置的端口。这样就可以在Program Explorer 中看到dfs的文件。</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1en69zmtefxj205v04e3yj.jpg\" alt=\"\">此外，加入了插件后还可以直接建立Mapreduce的项目，这里就不详述了。</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1en6a08tm2hj20gz09174x.jpg\" alt=\"\"><br>变成之前对Hadoop2.2.0的Mapreduce做一个简介。之前版本的Mapreduce是由Jobtracker和TaskTracker来管理的，之后出现了Yarn模型的版本，其要义是优化了每次Job都要经过JobTracker分配的结构，通过NodeManager管理节点任务，通过ResourceManager管理资源的分配。</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1en6a10wwoxj20cv09ogme.jpg\" alt=\"\"></p>\n<p>该系统程序的编写建立在系统自带的Wordcount demon上，通过重写Mapper类下的Map函数和Reducer类下的Reduce函数来读入分布式文件的数据，并进行分布式处理。其中，排序并找出前K个任务由两个Mapreduce完成。第一个任务Map负责读取分布式文件，截取字符串，并按任务需求过滤log信息；第一个任务Reduce负责对截取出的搜索词计数。第二个任务的Map负责封装新的词频和搜索词；第二个任务的Reduce负责将K-V键值对加入TreeMap并进行排序，最终输出TopK文件。<br>操作者需要在一台配置好Hadoop的Linux全分布式节点的环境下，在控制台通过hdfs命令输入7项参数（其中5项必选）：1.输入log日志文本路径 2.第一个Mapreduce输出的词频统计文件路径 3.第二个Mapreduce输出的词频统计顺序排列的文件路径（中间过程）4.第二个Mapreduce输出的最高词频统计结果的文件路径 5.任务需求 6.参数1 7.参数2 进行系统的操作，最终在在hdfs文件系统中找到生成的结果，一般以ABC-part-00000命名。参数输入错误或者系统崩溃会自动停止程序。</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1en6a20gi08j20o20bwmxy.jpg\" alt=\"\"></p>\n<p>之前叙述了系统由两部分构成，其中第一部分不作为系统的主体框架，只作为普通JavaApplication处理，另一部分则具体分为MAP1，REDUCE1,MAP2,REDUCE2来处理，以下是系统设计的具体框架。<br>第一部分较简单，通过调用Hadoop写入文件的API，再加上随机函数分别生成搜索词、IP和日期来实现。第二部分则通过编写两个函数入口run、两个map读取文件和两个reduce实现相应功能来组成。本系统的主要类如下：</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1en6a3grqz1j2055053jrl.jpg\" alt=\"\"></p>\n<p>其中，Config主要存放系统全局的参数，例如日志行数，日志起止时间，topK个数等。<br>DFSWritter负责第一个主要任务写入数据，包含以下函数：</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1en6a4d8g9pj205902cq2w.jpg\" alt=\"\"></p>\n<p>写入数据构成如下：</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1en6a51ij4xj20sr080q3h.jpg\" alt=\"\"></p>\n<p>其中获取随机日期的getRandomDate函数，其中在config中指定各参数</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1en6a5w98dvj20ke07fgn5.jpg\" alt=\"\"></p>\n<p>获取随机搜索词的函数，其中Config可以配置搜索词最短和最长词数。</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1en6a6p3he8j20nw07l0u9.jpg\" alt=\"\"></p>\n<p>获取随机IP的函数，其中IP最大最小值可在config中指定。</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1en6a7e0i34j20ne04j0tc.jpg\" alt=\"\"></p>\n<p>Writter函数，负责写入log数据，已指定了写入的路径。<br><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1en6a856bgrj20i80eatbf.jpg\" alt=\"\"></p>\n<p>在main调用写入函数即可。第二个任务是进行日志文件的筛查、排序、查找最大值。主要用到的类有：</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1en6a9b6vr0j204w03a74d.jpg\" alt=\"\"></p>\n<p>LogAnalysiser21、LogAnalysiser21分别负责第一个、第二个Job的入口，继承了Configured类，实现配置Map和Reduce，若有Combiner或者partitioner也在这里进行配置。它们均重写了run函数进行mapreduce的启动。二者可以合并，这里分开让结构更清晰。<br>MapClass MapClass2分别是两个job的映射，读取输入的文件并传给Reduce。它们均继承自Mapper并重写map函数。<br>ReduceClass ReduceClass2 分别是两个Job的处理细节，收到来自Map的信息并作整合处理。它们均继承自Reducer并重写reduce函数。<br>如下图是该任务的系统流程：</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1en6aa7zbrjj20n60c8409.jpg\" alt=\"\"></p>\n<p>其中logAnalysis21负责对参数中mode进行判断，加载第一个job，主要函数run’为：</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1en6aapphpij20qz0byq4p.jpg\" alt=\"\"></p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1en6ab82ey0j20eg05yt9u.jpg\" alt=\"\"></p>\n<p>MapClass中map函数如下，主要负责依据不同的需求对日志文件进行筛选</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1en6ac19sqjj20js0ct418.jpg\" alt=\"\"></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1en6acnbc0lj20k109djt9.jpg\" alt=\"\"></p>\n<p>ReduceClass 中reduce函数如下，主要负责计数并输出。</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1en6ad4qxadj20jg04daap.jpg\" alt=\"\"></p>\n<p>LogAnalysis22负责加载第二个job，run函数如下：</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1en6ady0bw1j20o20dydjd.jpg\" alt=\"\"></p>\n<p>MapClass2负责读取上一个job的wordcount文件，并对数据键值对进行改写，将词频改写为填充到10位的long，由于排序时同词频会被删除，因此将key改写为（词频+搜索词）value改写为（搜索词） 。Map函数如下：</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1en6aexl5nyj20o1039dgl.jpg\" alt=\"\"></p>\n<p>Reduce2负责读取传来的键值对，写入TreeMap，利用TreeMap的排序器自动对传来的改写（搜索词+词频）进行排序。这里用到了TreeMap自动根据key值进行排序的方法，但是key不能重复，因此在Map中改写起到了作用。同时，这里重写了TreeMap的Comparator函数，默认依据是从小到大排序。若指定了排序器Comparator，这里就可以按照从达到小进行排序了。排序完成后截取key前10位即为词频，value即为搜索词。Reduce函数主要如下：</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1en6affldqej20lv0dnjto.jpg\" alt=\"\"></p>\n<p>这里context输出只是中间结果sort，需要找到前N个高频搜索词，因此指定新的输出：</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1en6afzezfbj20ix0720u3.jpg\" alt=\"\"></p>\n<p>在安装配置好hadoop的分布式系统启动hadoop：</p>\n<p>&nbsp;</p>\n<pre class=\"brush: bash; gutter: true\">./start-dfs.sh ./start-yarn.sh</pre>\n\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1en6b2rf3ndj20hz05at9r.jpg\" alt=\"\"></p>\n<p>在Config.java确认配置参数</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1en6b3i6ungj207g07qmya.jpg\" alt=\"\"></p>\n<p>运行DFSWritter.java文件，将日志写入HDFS分布式文件系统，这里写入50个作为测试。</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1en6b41kibtj20ci01vdfx.jpg\" alt=\"\"></p>\n<p>输入hdf格式的命令，先列出log日志的结果</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1en6b4i2mh6j20cn0cvgnt.jpg\" alt=\"\"></p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1en6b4wispqj20990bg0uy.jpg\" alt=\"\"></p>\n<p>将Java程序导出成JAR到本地路径/usr/workspace/jar/logAnalysis2.0.jar。</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1en6b5hlroyj20h709bgmn.jpg\" alt=\"\"></p>\n<p>在命令行hdf命令，并带上必要的参数。首先运行需求一</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1en6b6bmiaoj20i101y74m.jpg\" alt=\"\"></p>\n<p>两个Mapreduce一气呵成完成，分别查看wordcount\\sort\\topK,<br>查看Wordcount，可以看到按需统计的词频</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1en6b6um7e7j20hy0buq49.jpg\" alt=\"\"></p>\n<p>查看sort，其中大的值排在了最后。</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1en6b7psqyhj20fx0bv3yt.jpg\" alt=\"\"></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1en6b84efm9j203x0ad749.jpg\" alt=\"\"></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>最后查看topK结果，即截取了sort的最后的8项并倒序输入。</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1en6b9u4yjyj20hp06o3z6.jpg\" alt=\"\"></p>\n<p>运行第二个需求，在参数五中输入2，并写上起止IP</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1en6bad6w83j20i301474g.jpg\" alt=\"\"></p>\n<p>运行结果的wordcount、sort、topK文件分别如下</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1en6bb6k4j8j20gg0a2mxn.jpg\" alt=\"\"></p>\n<p>最后运行第三个需求，参数中带入3 和起止时间。</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1en6bbm6hi0j20i101k74j.jpg\" alt=\"\"></p>\n<p>再次分别查看wordcount sort topk文件，比对前文的全log发现完全符合。</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1en6bcbhaifj20fi0cxmxr.jpg\" alt=\"\"></p>\n<p>这样，一个建立在Hadoop的Mapreduce小例就完成了。</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>","excerpt":"","more":"<p>这个任务主要是在搭建好Hadoop2.2.0环境的基础上，模仿sample中的wordcount程序，手动编写一个Mapreduce的对日志文件分析的函数。该日志文件是模拟搜索引擎记录所有用户的查询，当有一个用户使用搜索引擎进行搜索时，日志文件会记录这样一条记录：（搜索时间、搜索关键字、用户IP）。其中，日志文件的格式是：</p>\n<ul>\n<li>时间+搜索词+IP地址</li>\n<li>2011-10-26 06:11:35 云计算 210.77.23.12</li>\n<li>2011-10-26 06:11:45 Hadoop 210.77.23.12</li>\n</ul>\n<p>利用Mapreduce模型对日志文件进行分析，需要完成的任务有：</p>\n<ul>\n<li>所有日志中出现次数最多的50个关键词；</li>\n<li>特定日期区间日志中出现次数最多的50个关键词；</li>\n<li>特定IP地址区间（假定前3段相同，区间在4段中设定）日志中出现次数最多的50个关键词</li>\n</ul>\n<p>任务主要流程包括：</p>\n<ul>\n<li>按照一定的规则随机生成并将日志文件写入DFS中。</li>\n<li>将日志文件进行字符串筛检，提取出所需字段并计数</li>\n<li>将累计的词数进行排序</li>\n</ul>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1en69s477ktj20fc0atdge.jpg\" alt=\"\"></p>\n<p>编程之前，研究了一下eclipse-hadoop的插件，其作用是可以快速的查看DFS中的新增的文件，即写入日志，生成日志都能快速的查看。下载jar包，将之放到eclipse目录下的dropins里。启动eclipse后再preference里可以配置hadoop的路径。</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1en69y207dij20hm055dga.jpg\" alt=\"\"></p>\n<p>在导航中打开map-reduce的窗口，右键新建一个HadoopLocation，如图：</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1en69yxctfuj20s20enq5z.jpg\" alt=\"\">        这里Mapreduce和DFS的port分别是mapred-site.Xml和core-site.xml中配置的端口。这样就可以在Program Explorer 中看到dfs的文件。</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1en69zmtefxj205v04e3yj.jpg\" alt=\"\">此外，加入了插件后还可以直接建立Mapreduce的项目，这里就不详述了。</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1en6a08tm2hj20gz09174x.jpg\" alt=\"\"><br>变成之前对Hadoop2.2.0的Mapreduce做一个简介。之前版本的Mapreduce是由Jobtracker和TaskTracker来管理的，之后出现了Yarn模型的版本，其要义是优化了每次Job都要经过JobTracker分配的结构，通过NodeManager管理节点任务，通过ResourceManager管理资源的分配。</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1en6a10wwoxj20cv09ogme.jpg\" alt=\"\"></p>\n<p>该系统程序的编写建立在系统自带的Wordcount demon上，通过重写Mapper类下的Map函数和Reducer类下的Reduce函数来读入分布式文件的数据，并进行分布式处理。其中，排序并找出前K个任务由两个Mapreduce完成。第一个任务Map负责读取分布式文件，截取字符串，并按任务需求过滤log信息；第一个任务Reduce负责对截取出的搜索词计数。第二个任务的Map负责封装新的词频和搜索词；第二个任务的Reduce负责将K-V键值对加入TreeMap并进行排序，最终输出TopK文件。<br>操作者需要在一台配置好Hadoop的Linux全分布式节点的环境下，在控制台通过hdfs命令输入7项参数（其中5项必选）：1.输入log日志文本路径 2.第一个Mapreduce输出的词频统计文件路径 3.第二个Mapreduce输出的词频统计顺序排列的文件路径（中间过程）4.第二个Mapreduce输出的最高词频统计结果的文件路径 5.任务需求 6.参数1 7.参数2 进行系统的操作，最终在在hdfs文件系统中找到生成的结果，一般以ABC-part-00000命名。参数输入错误或者系统崩溃会自动停止程序。</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1en6a20gi08j20o20bwmxy.jpg\" alt=\"\"></p>\n<p>之前叙述了系统由两部分构成，其中第一部分不作为系统的主体框架，只作为普通JavaApplication处理，另一部分则具体分为MAP1，REDUCE1,MAP2,REDUCE2来处理，以下是系统设计的具体框架。<br>第一部分较简单，通过调用Hadoop写入文件的API，再加上随机函数分别生成搜索词、IP和日期来实现。第二部分则通过编写两个函数入口run、两个map读取文件和两个reduce实现相应功能来组成。本系统的主要类如下：</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1en6a3grqz1j2055053jrl.jpg\" alt=\"\"></p>\n<p>其中，Config主要存放系统全局的参数，例如日志行数，日志起止时间，topK个数等。<br>DFSWritter负责第一个主要任务写入数据，包含以下函数：</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1en6a4d8g9pj205902cq2w.jpg\" alt=\"\"></p>\n<p>写入数据构成如下：</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1en6a51ij4xj20sr080q3h.jpg\" alt=\"\"></p>\n<p>其中获取随机日期的getRandomDate函数，其中在config中指定各参数</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1en6a5w98dvj20ke07fgn5.jpg\" alt=\"\"></p>\n<p>获取随机搜索词的函数，其中Config可以配置搜索词最短和最长词数。</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1en6a6p3he8j20nw07l0u9.jpg\" alt=\"\"></p>\n<p>获取随机IP的函数，其中IP最大最小值可在config中指定。</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1en6a7e0i34j20ne04j0tc.jpg\" alt=\"\"></p>\n<p>Writter函数，负责写入log数据，已指定了写入的路径。<br><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1en6a856bgrj20i80eatbf.jpg\" alt=\"\"></p>\n<p>在main调用写入函数即可。第二个任务是进行日志文件的筛查、排序、查找最大值。主要用到的类有：</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1en6a9b6vr0j204w03a74d.jpg\" alt=\"\"></p>\n<p>LogAnalysiser21、LogAnalysiser21分别负责第一个、第二个Job的入口，继承了Configured类，实现配置Map和Reduce，若有Combiner或者partitioner也在这里进行配置。它们均重写了run函数进行mapreduce的启动。二者可以合并，这里分开让结构更清晰。<br>MapClass MapClass2分别是两个job的映射，读取输入的文件并传给Reduce。它们均继承自Mapper并重写map函数。<br>ReduceClass ReduceClass2 分别是两个Job的处理细节，收到来自Map的信息并作整合处理。它们均继承自Reducer并重写reduce函数。<br>如下图是该任务的系统流程：</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1en6aa7zbrjj20n60c8409.jpg\" alt=\"\"></p>\n<p>其中logAnalysis21负责对参数中mode进行判断，加载第一个job，主要函数run’为：</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1en6aapphpij20qz0byq4p.jpg\" alt=\"\"></p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1en6ab82ey0j20eg05yt9u.jpg\" alt=\"\"></p>\n<p>MapClass中map函数如下，主要负责依据不同的需求对日志文件进行筛选</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1en6ac19sqjj20js0ct418.jpg\" alt=\"\"></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1en6acnbc0lj20k109djt9.jpg\" alt=\"\"></p>\n<p>ReduceClass 中reduce函数如下，主要负责计数并输出。</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1en6ad4qxadj20jg04daap.jpg\" alt=\"\"></p>\n<p>LogAnalysis22负责加载第二个job，run函数如下：</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1en6ady0bw1j20o20dydjd.jpg\" alt=\"\"></p>\n<p>MapClass2负责读取上一个job的wordcount文件，并对数据键值对进行改写，将词频改写为填充到10位的long，由于排序时同词频会被删除，因此将key改写为（词频+搜索词）value改写为（搜索词） 。Map函数如下：</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1en6aexl5nyj20o1039dgl.jpg\" alt=\"\"></p>\n<p>Reduce2负责读取传来的键值对，写入TreeMap，利用TreeMap的排序器自动对传来的改写（搜索词+词频）进行排序。这里用到了TreeMap自动根据key值进行排序的方法，但是key不能重复，因此在Map中改写起到了作用。同时，这里重写了TreeMap的Comparator函数，默认依据是从小到大排序。若指定了排序器Comparator，这里就可以按照从达到小进行排序了。排序完成后截取key前10位即为词频，value即为搜索词。Reduce函数主要如下：</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1en6affldqej20lv0dnjto.jpg\" alt=\"\"></p>\n<p>这里context输出只是中间结果sort，需要找到前N个高频搜索词，因此指定新的输出：</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1en6afzezfbj20ix0720u3.jpg\" alt=\"\"></p>\n<p>在安装配置好hadoop的分布式系统启动hadoop：</p>\n<p>&nbsp;</p>\n<pre class=\"brush: bash; gutter: true\">./start-dfs.sh ./start-yarn.sh</pre>\n\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1en6b2rf3ndj20hz05at9r.jpg\" alt=\"\"></p>\n<p>在Config.java确认配置参数</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1en6b3i6ungj207g07qmya.jpg\" alt=\"\"></p>\n<p>运行DFSWritter.java文件，将日志写入HDFS分布式文件系统，这里写入50个作为测试。</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1en6b41kibtj20ci01vdfx.jpg\" alt=\"\"></p>\n<p>输入hdf格式的命令，先列出log日志的结果</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1en6b4i2mh6j20cn0cvgnt.jpg\" alt=\"\"></p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1en6b4wispqj20990bg0uy.jpg\" alt=\"\"></p>\n<p>将Java程序导出成JAR到本地路径/usr/workspace/jar/logAnalysis2.0.jar。</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1en6b5hlroyj20h709bgmn.jpg\" alt=\"\"></p>\n<p>在命令行hdf命令，并带上必要的参数。首先运行需求一</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1en6b6bmiaoj20i101y74m.jpg\" alt=\"\"></p>\n<p>两个Mapreduce一气呵成完成，分别查看wordcount\\sort\\topK,<br>查看Wordcount，可以看到按需统计的词频</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1en6b6um7e7j20hy0buq49.jpg\" alt=\"\"></p>\n<p>查看sort，其中大的值排在了最后。</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1en6b7psqyhj20fx0bv3yt.jpg\" alt=\"\"></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1en6b84efm9j203x0ad749.jpg\" alt=\"\"></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>最后查看topK结果，即截取了sort的最后的8项并倒序输入。</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1en6b9u4yjyj20hp06o3z6.jpg\" alt=\"\"></p>\n<p>运行第二个需求，在参数五中输入2，并写上起止IP</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1en6bad6w83j20i301474g.jpg\" alt=\"\"></p>\n<p>运行结果的wordcount、sort、topK文件分别如下</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1en6bb6k4j8j20gg0a2mxn.jpg\" alt=\"\"></p>\n<p>最后运行第三个需求，参数中带入3 和起止时间。</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1en6bbm6hi0j20i101k74j.jpg\" alt=\"\"></p>\n<p>再次分别查看wordcount sort topk文件，比对前文的全log发现完全符合。</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1en6bcbhaifj20fi0cxmxr.jpg\" alt=\"\"></p>\n<p>这样，一个建立在Hadoop的Mapreduce小例就完成了。</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>"},{"title":"Hexo双备份Github和Coding&域名绑定","date":"2016-04-10T14:51:49.000Z","_content":"感谢[这个教程](http://zipperary.com/2013/05/28/hexo-guide-2/)\n还有[这个](http://ibruce.info/2013/11/22/hexo-your-blog/?utm_source=tuicool)\n解决了好多bugs的[这个](http://www.jianshu.com/p/35e197cb1273)\n优化cdn图床缓冲的[这个](http://lukang.me/2015/optimization-of-hexo-2.html)\n[这个](http://www.dute.me/)让我找到了便宜的狗爹优惠码\n\n    从一开始的阵地wp搬到这里来了。后会有期了dooby.me 再见了WordPress  \n    默默的是有些不舍。虽然push很慢虽然被墙了大半  \n    4年光阴不复返啊。从一个逗比成长为大逗比了。\n\n<!-- more -->\nhexo坑还是挺多的。\n$$ \\begin{bmatrix} x \\\\\\\\ y \\\\\\\\ 1 \n\\end{bmatrix} \\sim \\begin{bmatrix} f & 0 & 0 & 0 \\\\\\\\ 0 & f & 0 & 0 \\\\\\\\ 0 & 0 & 1 & 0 \\end{bmatrix} \\begin{bmatrix} r_11 & r_12 & r_13 & t_x \\\\\\\\ r_21 & r_22 & r_23 & t_y \\\\\\\\ r_31 & r_32& r_33 & t_z \\\\\\\\ 0 & 0 & 0 & 1 \\end{bmatrix} \\begin{bmatrix} p \\\\\\\\ q \\\\\\\\ 0 \\\\\\\\ 1 \\end{bmatrix} \\sim \\begin{bmatrix} fr_11 & fr_12 & ft_x \\\\\\\\ fr_21 & fr_22 & ft_y \\\\\\\\ r_31 & r_32 & t_z \\end{bmatrix} \\begin{bmatrix} p \\\\\\\\ q \\\\\\\\ 1 \\end{bmatrix} \n$$$$\\sim \\begin{bmatrix} h_11 & h_12&h_13 \\\\\\\\ h_21 & h_22 & h_23 \\\\\\\\ h_31 & h_32 & h_33 \\end{bmatrix} \\begin{bmatrix} p \\\\\\\\ q \\\\\\\\ 1 \\end{bmatrix}$$\n# WordPress迁移 #\n这个使用hexo-migrate-wordpress插件还不错 但是切记导出的xml是文章 tag和category会自动建好。否则使用hexo migrate wordpress 会报错\n> 沙扬娜拉dooby.me\n\n![dooby.me](http://ooo.0o0.ooo/2016/05/02/5727757865698.png)\n# Github和Coding双备份 #\n按照一般的教程都能配置好Github的。但是Coding对国内线路速度相对较快（好蛋疼GitCafe已经被收了）配置文档差不多是这样\n```markdown\ndeploy:\n   type: git\n   repo: \n      github: https://github.com/{YOUR_ID}/{YOUR_ID}.github.io.git,master\n      coding: https://git.coding.net/{YOUR_ID}/{BLOG　NAME}.git,master\n```\n当然也需要先将ssh的key添加上去（同一个码即可），Coding不需要同一个名字..然而最近发现Coding的项目展示页面收费了……虽说是注重团队协作和代码交易 但是个人用户的托管真的完全要丢掉了吗？差不多1块钱1天的样子 相当不划算\n\n# SEO是极好的 #\n切莫贪杯 google就好 但是 切记！标题不要带有‘&’。年少无知，这个符号不能正常解析出xml会报错\n\n# 域名绑定 #\n切记@解析的是{YOUR_ID}.github.io的地址而不是github.com的 CNAME需要放在source下才能被generate。dnspod被企鹅注资后ui变得相当土了\n\n# 专注写作 #\n放弃各种挂饰 插件 统计吧 seo和评论就足够了。多写作多讨论 当然很想适时的学一发nodejs因为折腾了好久ig的照片还是没能get进来。\n\n\n{% gist 86cc40065a691b7c4534e483249583dd transValue.java %}\n\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n\n{% codeblock hello.java java https://gist.github.com/ovjaywang/86cc40065a691b7c4534e483249583dd %}\nvoid transValue(int a,int b){\n        a ^= b;\n        b ^= a;\n        a ^=b;\n    }\n{% endcodeblock %}\n\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n\n{% pullquote [class] %}\nblah blah blah\n{% endpullquote %}\n\n2016.04.11","source":"_posts/Hello-Hexo.md","raw":"---\ntitle: Hexo双备份Github和Coding&域名绑定\ndate: 2016-04-10 22:51:49\ntags: [hello]\ncategories: 槽\n---\n感谢[这个教程](http://zipperary.com/2013/05/28/hexo-guide-2/)\n还有[这个](http://ibruce.info/2013/11/22/hexo-your-blog/?utm_source=tuicool)\n解决了好多bugs的[这个](http://www.jianshu.com/p/35e197cb1273)\n优化cdn图床缓冲的[这个](http://lukang.me/2015/optimization-of-hexo-2.html)\n[这个](http://www.dute.me/)让我找到了便宜的狗爹优惠码\n\n    从一开始的阵地wp搬到这里来了。后会有期了dooby.me 再见了WordPress  \n    默默的是有些不舍。虽然push很慢虽然被墙了大半  \n    4年光阴不复返啊。从一个逗比成长为大逗比了。\n\n<!-- more -->\nhexo坑还是挺多的。\n$$ \\begin{bmatrix} x \\\\\\\\ y \\\\\\\\ 1 \n\\end{bmatrix} \\sim \\begin{bmatrix} f & 0 & 0 & 0 \\\\\\\\ 0 & f & 0 & 0 \\\\\\\\ 0 & 0 & 1 & 0 \\end{bmatrix} \\begin{bmatrix} r_11 & r_12 & r_13 & t_x \\\\\\\\ r_21 & r_22 & r_23 & t_y \\\\\\\\ r_31 & r_32& r_33 & t_z \\\\\\\\ 0 & 0 & 0 & 1 \\end{bmatrix} \\begin{bmatrix} p \\\\\\\\ q \\\\\\\\ 0 \\\\\\\\ 1 \\end{bmatrix} \\sim \\begin{bmatrix} fr_11 & fr_12 & ft_x \\\\\\\\ fr_21 & fr_22 & ft_y \\\\\\\\ r_31 & r_32 & t_z \\end{bmatrix} \\begin{bmatrix} p \\\\\\\\ q \\\\\\\\ 1 \\end{bmatrix} \n$$$$\\sim \\begin{bmatrix} h_11 & h_12&h_13 \\\\\\\\ h_21 & h_22 & h_23 \\\\\\\\ h_31 & h_32 & h_33 \\end{bmatrix} \\begin{bmatrix} p \\\\\\\\ q \\\\\\\\ 1 \\end{bmatrix}$$\n# WordPress迁移 #\n这个使用hexo-migrate-wordpress插件还不错 但是切记导出的xml是文章 tag和category会自动建好。否则使用hexo migrate wordpress 会报错\n> 沙扬娜拉dooby.me\n\n![dooby.me](http://ooo.0o0.ooo/2016/05/02/5727757865698.png)\n# Github和Coding双备份 #\n按照一般的教程都能配置好Github的。但是Coding对国内线路速度相对较快（好蛋疼GitCafe已经被收了）配置文档差不多是这样\n```markdown\ndeploy:\n   type: git\n   repo: \n      github: https://github.com/{YOUR_ID}/{YOUR_ID}.github.io.git,master\n      coding: https://git.coding.net/{YOUR_ID}/{BLOG　NAME}.git,master\n```\n当然也需要先将ssh的key添加上去（同一个码即可），Coding不需要同一个名字..然而最近发现Coding的项目展示页面收费了……虽说是注重团队协作和代码交易 但是个人用户的托管真的完全要丢掉了吗？差不多1块钱1天的样子 相当不划算\n\n# SEO是极好的 #\n切莫贪杯 google就好 但是 切记！标题不要带有‘&’。年少无知，这个符号不能正常解析出xml会报错\n\n# 域名绑定 #\n切记@解析的是{YOUR_ID}.github.io的地址而不是github.com的 CNAME需要放在source下才能被generate。dnspod被企鹅注资后ui变得相当土了\n\n# 专注写作 #\n放弃各种挂饰 插件 统计吧 seo和评论就足够了。多写作多讨论 当然很想适时的学一发nodejs因为折腾了好久ig的照片还是没能get进来。\n\n\n{% gist 86cc40065a691b7c4534e483249583dd transValue.java %}\n\n{% blockquote @DevDocs https://twitter.com/devdocs/status/356095192085962752 %}\nNEW: DevDocs now comes with syntax highlighting. http://devdocs.io\n{% endblockquote %}\n\n{% blockquote David Levithan, Wide Awake %}\nDo not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.\n{% endblockquote %}\n\n{% blockquote Seth Godin http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html Welcome to Island Marketing %}\nEvery interaction is both precious and an opportunity to delight.\n{% endblockquote %}\n\n{% codeblock hello.java java https://gist.github.com/ovjaywang/86cc40065a691b7c4534e483249583dd %}\nvoid transValue(int a,int b){\n        a ^= b;\n        b ^= a;\n        a ^=b;\n    }\n{% endcodeblock %}\n\n{% codeblock %}\nalert('Hello World!');\n{% endcodeblock %}\n\n{% pullquote [class] %}\nblah blah blah\n{% endpullquote %}\n\n2016.04.11","slug":"Hello-Hexo","published":1,"updated":"2016-05-16T05:33:28.615Z","_id":"cio8sn7l4000wuco4q8etku7h","comments":1,"layout":"post","photos":[],"link":"","content":"<p>感谢<a href=\"http://zipperary.com/2013/05/28/hexo-guide-2/\" target=\"_blank\" rel=\"external\">这个教程</a><br>还有<a href=\"http://ibruce.info/2013/11/22/hexo-your-blog/?utm_source=tuicool\" target=\"_blank\" rel=\"external\">这个</a><br>解决了好多bugs的<a href=\"http://www.jianshu.com/p/35e197cb1273\" target=\"_blank\" rel=\"external\">这个</a><br>优化cdn图床缓冲的<a href=\"http://lukang.me/2015/optimization-of-hexo-2.html\" target=\"_blank\" rel=\"external\">这个</a><br><a href=\"http://www.dute.me/\" target=\"_blank\" rel=\"external\">这个</a>让我找到了便宜的狗爹优惠码</p>\n<pre><code>从一开始的阵地wp搬到这里来了。后会有期了dooby.me 再见了WordPress  \n默默的是有些不舍。虽然push很慢虽然被墙了大半  \n4年光阴不复返啊。从一个逗比成长为大逗比了。\n</code></pre><a id=\"more\"></a>\n<p>hexo坑还是挺多的。<br>$$ \\begin{bmatrix} x \\\\ y \\\\ 1<br>\\end{bmatrix} \\sim \\begin{bmatrix} f &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; f &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\end{bmatrix} \\begin{bmatrix} r_11 &amp; r_12 &amp; r_13 &amp; t_x \\\\ r_21 &amp; r_22 &amp; r_23 &amp; t_y \\\\ r_31 &amp; r_32&amp; r_33 &amp; t_z \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{bmatrix} \\begin{bmatrix} p \\\\ q \\\\ 0 \\\\ 1 \\end{bmatrix} \\sim \\begin{bmatrix} fr_11 &amp; fr_12 &amp; ft_x \\\\ fr_21 &amp; fr_22 &amp; ft_y \\\\ r_31 &amp; r_32 &amp; t_z \\end{bmatrix} \\begin{bmatrix} p \\\\ q \\\\ 1 \\end{bmatrix}<br>$$$$\\sim \\begin{bmatrix} h_11 &amp; h_12&amp;h_13 \\\\ h_21 &amp; h_22 &amp; h_23 \\\\ h_31 &amp; h_32 &amp; h_33 \\end{bmatrix} \\begin{bmatrix} p \\\\ q \\\\ 1 \\end{bmatrix}$$</p>\n<h1 id=\"WordPress迁移\"><a href=\"#WordPress迁移\" class=\"headerlink\" title=\"WordPress迁移\"></a>WordPress迁移</h1><p>这个使用hexo-migrate-wordpress插件还不错 但是切记导出的xml是文章 tag和category会自动建好。否则使用hexo migrate wordpress 会报错</p>\n<blockquote>\n<p>沙扬娜拉dooby.me</p>\n</blockquote>\n<p><img src=\"http://ooo.0o0.ooo/2016/05/02/5727757865698.png\" alt=\"dooby.me\"></p>\n<h1 id=\"Github和Coding双备份\"><a href=\"#Github和Coding双备份\" class=\"headerlink\" title=\"Github和Coding双备份\"></a>Github和Coding双备份</h1><p>按照一般的教程都能配置好Github的。但是Coding对国内线路速度相对较快（好蛋疼GitCafe已经被收了）配置文档差不多是这样</p>\n<pre><code class=\"markdown\">deploy:\n   type: git\n   repo: \n      github: https://github.com/{YOUR_ID}/{YOUR_ID}.github.io.git,master\n      coding: https://git.coding.net/{YOUR_ID}/{BLOG　NAME}.git,master\n</code></pre>\n<p>当然也需要先将ssh的key添加上去（同一个码即可），Coding不需要同一个名字..然而最近发现Coding的项目展示页面收费了……虽说是注重团队协作和代码交易 但是个人用户的托管真的完全要丢掉了吗？差不多1块钱1天的样子 相当不划算</p>\n<h1 id=\"SEO是极好的\"><a href=\"#SEO是极好的\" class=\"headerlink\" title=\"SEO是极好的\"></a>SEO是极好的</h1><p>切莫贪杯 google就好 但是 切记！标题不要带有‘&amp;’。年少无知，这个符号不能正常解析出xml会报错</p>\n<h1 id=\"域名绑定\"><a href=\"#域名绑定\" class=\"headerlink\" title=\"域名绑定\"></a>域名绑定</h1><p>切记@解析的是{YOUR_ID}.github.io的地址而不是github.com的 CNAME需要放在source下才能被generate。dnspod被企鹅注资后ui变得相当土了</p>\n<h1 id=\"专注写作\"><a href=\"#专注写作\" class=\"headerlink\" title=\"专注写作\"></a>专注写作</h1><p>放弃各种挂饰 插件 统计吧 seo和评论就足够了。多写作多讨论 当然很想适时的学一发nodejs因为折腾了好久ig的照片还是没能get进来。</p>\n<script src=\"//gist.github.com/86cc40065a691b7c4534e483249583dd.js?file=transValue.java\"></script>\n<blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href=\"http://devdocs.io\" target=\"_blank\" rel=\"external\">http://devdocs.io</a></p><footer><strong>@DevDocs</strong><cite><a href=\"https://twitter.com/devdocs/status/356095192085962752\" target=\"_blank\" rel=\"external\">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>\n<blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p><footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>\n<blockquote><p>Every interaction is both precious and an opportunity to delight.</p><footer><strong>Seth Godin</strong><cite><a href=\"http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html\" target=\"_blank\" rel=\"external\">Welcome to Island Marketing</a></cite></footer></blockquote>\n<pre><code>void transValue(int a,int b){\n        a ^= b;\n        b ^= a;\n        a ^=b;\n    }</code></pre>\n<pre><code>alert('Hello World!');</code></pre>\n<blockquote class=\"pullquote [class]\"><p>blah blah blah</p></blockquote>\n<p>2016.04.11</p>","excerpt":"<p>感谢<a href=\"http://zipperary.com/2013/05/28/hexo-guide-2/\">这个教程</a><br>还有<a href=\"http://ibruce.info/2013/11/22/hexo-your-blog/?utm_source=tuicool\">这个</a><br>解决了好多bugs的<a href=\"http://www.jianshu.com/p/35e197cb1273\">这个</a><br>优化cdn图床缓冲的<a href=\"http://lukang.me/2015/optimization-of-hexo-2.html\">这个</a><br><a href=\"http://www.dute.me/\">这个</a>让我找到了便宜的狗爹优惠码</p>\n<pre><code>从一开始的阵地wp搬到这里来了。后会有期了dooby.me 再见了WordPress  \n默默的是有些不舍。虽然push很慢虽然被墙了大半  \n4年光阴不复返啊。从一个逗比成长为大逗比了。\n</code></pre>","more":"<p>hexo坑还是挺多的。<br>$$ \\begin{bmatrix} x \\\\ y \\\\ 1<br>\\end{bmatrix} \\sim \\begin{bmatrix} f &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; f &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\end{bmatrix} \\begin{bmatrix} r_11 &amp; r_12 &amp; r_13 &amp; t_x \\\\ r_21 &amp; r_22 &amp; r_23 &amp; t_y \\\\ r_31 &amp; r_32&amp; r_33 &amp; t_z \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{bmatrix} \\begin{bmatrix} p \\\\ q \\\\ 0 \\\\ 1 \\end{bmatrix} \\sim \\begin{bmatrix} fr_11 &amp; fr_12 &amp; ft_x \\\\ fr_21 &amp; fr_22 &amp; ft_y \\\\ r_31 &amp; r_32 &amp; t_z \\end{bmatrix} \\begin{bmatrix} p \\\\ q \\\\ 1 \\end{bmatrix}<br>$$$$\\sim \\begin{bmatrix} h_11 &amp; h_12&amp;h_13 \\\\ h_21 &amp; h_22 &amp; h_23 \\\\ h_31 &amp; h_32 &amp; h_33 \\end{bmatrix} \\begin{bmatrix} p \\\\ q \\\\ 1 \\end{bmatrix}$$</p>\n<h1 id=\"WordPress迁移\"><a href=\"#WordPress迁移\" class=\"headerlink\" title=\"WordPress迁移\"></a>WordPress迁移</h1><p>这个使用hexo-migrate-wordpress插件还不错 但是切记导出的xml是文章 tag和category会自动建好。否则使用hexo migrate wordpress 会报错</p>\n<blockquote>\n<p>沙扬娜拉dooby.me</p>\n</blockquote>\n<p><img src=\"http://ooo.0o0.ooo/2016/05/02/5727757865698.png\" alt=\"dooby.me\"></p>\n<h1 id=\"Github和Coding双备份\"><a href=\"#Github和Coding双备份\" class=\"headerlink\" title=\"Github和Coding双备份\"></a>Github和Coding双备份</h1><p>按照一般的教程都能配置好Github的。但是Coding对国内线路速度相对较快（好蛋疼GitCafe已经被收了）配置文档差不多是这样</p>\n<pre><code class=\"markdown\">deploy:\n   type: git\n   repo: \n      github: https://github.com/{YOUR_ID}/{YOUR_ID}.github.io.git,master\n      coding: https://git.coding.net/{YOUR_ID}/{BLOG　NAME}.git,master\n</code></pre>\n<p>当然也需要先将ssh的key添加上去（同一个码即可），Coding不需要同一个名字..然而最近发现Coding的项目展示页面收费了……虽说是注重团队协作和代码交易 但是个人用户的托管真的完全要丢掉了吗？差不多1块钱1天的样子 相当不划算</p>\n<h1 id=\"SEO是极好的\"><a href=\"#SEO是极好的\" class=\"headerlink\" title=\"SEO是极好的\"></a>SEO是极好的</h1><p>切莫贪杯 google就好 但是 切记！标题不要带有‘&amp;’。年少无知，这个符号不能正常解析出xml会报错</p>\n<h1 id=\"域名绑定\"><a href=\"#域名绑定\" class=\"headerlink\" title=\"域名绑定\"></a>域名绑定</h1><p>切记@解析的是{YOUR_ID}.github.io的地址而不是github.com的 CNAME需要放在source下才能被generate。dnspod被企鹅注资后ui变得相当土了</p>\n<h1 id=\"专注写作\"><a href=\"#专注写作\" class=\"headerlink\" title=\"专注写作\"></a>专注写作</h1><p>放弃各种挂饰 插件 统计吧 seo和评论就足够了。多写作多讨论 当然很想适时的学一发nodejs因为折腾了好久ig的照片还是没能get进来。</p>\n<script src=\"//gist.github.com/86cc40065a691b7c4534e483249583dd.js?file=transValue.java\"></script>\n<blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href=\"http://devdocs.io\">http://devdocs.io</a></p><footer><strong>@DevDocs</strong><cite><a href=\"https://twitter.com/devdocs/status/356095192085962752\">twitter.com/devdocs/status/356095192085962752</a></cite></footer></blockquote>\n<blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p><footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>\n<blockquote><p>Every interaction is both precious and an opportunity to delight.</p><footer><strong>Seth Godin</strong><cite><a href=\"http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html\">Welcome to Island Marketing</a></cite></footer></blockquote>\n<pre><code>void transValue(int a,int b){\n        a ^= b;\n        b ^= a;\n        a ^=b;\n    }</code></pre>\n<pre><code>alert('Hello World!');</code></pre>\n<blockquote class=\"pullquote [class]\"><p>blah blah blah</p></blockquote>\n<p>2016.04.11</p>"},{"title":"Android使用HttpURLConnection HttpClient提交图片","id":"201","date":"2013-05-21T06:43:00.000Z","_content":"\nAndroid进行图片提交大多数用的是HttpURLConnection 但是我的大半天的试验只成功了一次。参考了绝大多数主流的代码，不论是Base64还是Json还是URLEncode能换过的包都换过了，但都是上传成功，上传的效果要么图裂要么只有顶部的几条扫描进去了。\n由于是服务器在国外甚至还考虑了翻墙的做法。但收效甚微，最终都是没达到上传到效果。\n首先了解一下Android图片提交的普遍方案：\n![图片提交的流程](http://blog.sptechnolab.com/wp-content/uploads/2011/03/phpad1.png)\n将图像转换成二进制的Bitmap数据然后进行Base64加密通过字符串进行传输。但是这里有个问题就是安卓的图片上传原则上是不能直接在机子的内存直接操作的，一般情况是先将图片一边写入缓存放入sd卡里，一边利用HttpURLConnection 进行上传。（但这个方法从始至终只成功过一次。。。然后我就崩溃决然了）<!--more-->\n\n<span style=\"color: #cc99ff;\">普通java程序的图片上传</span>\n\n如果不考虑内存的影响，普通java程序下可以利用HttpClient在参数中加入格式化过的图像数据进行传输。或者如找到的一个Demo里一样，利用ImageIO进行流的输入输出。以下是关键代码\n\n<pre class=\"brush: java; gutter: true\"> ByteArrayOutputStream baos = new ByteArrayOutputStream();//字节数组输出流\n    ImageIO.write(ImageIO.read(new File(SAMPLE_PIC_FILE)), &quot;jpg&quot;, baos);\n        //利用ImageIO将图片一次性转换成二进制数据写入baos里\n    URL url = new URL(YOUR URL);\n        //服务器地址\n    String data = URLEncoder.encode(&quot;image&quot;, &quot;UTF-8&quot;) + &quot;=&quot; \n        + URLEncoder.encode(Base64.encodeBase64String(baos.toByteArray()).toString(), &quot;UTF-8&quot;);\n        //写入数据，这里传入服务器接受的名字，如果是自己的服务器可以进行更改，利用到了URLEncode转换成以URL编码的格式\n        //Base64进行加密处理注意输入的字符尽可能的进行URLencode编码以防止出错 这里写入的数据与地址栏中?后面的参数格式一致\n     data += &quot;&amp;&quot; + URLEncoder.encode(&quot;key&quot;, &quot;UTF-8&quot;) + &quot;=&quot; + URLEncoder.encode(IMGUR_KEY, &quot;UTF-8&quot;);\n        //添加别的数据 流入title description等\n    URLConnection conn = url.openConnection();//建立连接\n    conn.setDoOutput(true);//设置可以使用输出流\n    conn.addRequestProperty(&quot;Authorization&quot;, &quot;Client-ID &quot;+IMGUR_CLIENT_ID);\n        //添加头文件参数这里还可以添加Content-type connection等\n    OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream());\n        //getoutputstream这一步建立输出流的写入\n    //System.out.println(&quot;Sending data...&quot;);\n    wr.write(data);//将缓存写入输出流\n    wr.flush();//刷新缓冲区确保数据都写入\n        String reply = &quot;&quot;;\n    StringBuffer sb = new StringBuffer();\n    InputStream inStream = conn.getInputStream();//这一步才进行关键的上传操作，创建输入流\n    Scanner input = new Scanner(inStream);将输入流写入scanner当作参数\n    while (input.hasNextLine()) {\n    String nextLine = input.nextLine();\n    sb.append(nextLine); }\n    reply = sb.toString();//最后获得响应的html代码</pre>\n\n<!--more--><span style=\"color: #cc99ff;\">利用HttpURLConnection的android图片提交</span>\n\nandroid的图片提交保险起见应该是利用HttpURLConnection的 因为内存小的关系所以做到一次性提交抱错的风险比较大。\n\n这里关键的步骤就是分多次将数据写入缓冲区域，并且常见的就是添加BOUNDARY PREFIX LINE_END等识别信息（这里主要是为了自己开发的服务器识别，例子很多就不赘述了）关键代码如下\n\n<pre class=\"brush: java; gutter: true\">                        URL url = new URL(RequestURL);//请求地址\n            HttpURLConnection conn = (HttpURLConnection) url.openConnection();//获取connection\n            conn.setReadTimeout(TIME_OUT);//可选\n            conn.setConnectTimeout(TIME_OUT);//可选\n            conn.setDoInput(true); //必要\n            conn.setDoOutput(true); //必要\n            conn.setUseCaches(false);  //必要\n            conn.setRequestMethod(&quot;POST&quot;);  //必要\n            conn.setRequestProperty(&quot;Charset&quot;, &quot;UTF-8&quot;);//可选  \n            conn.setRequestProperty(&quot;connection&quot;, &quot;keep-alive&quot;);//可选   \n            conn.setRequestProperty(&quot;Content-Type&quot;, CONTENT_TYPE + &quot;;boundary=&quot; + BOUNDARY); //可选\n                        //一上几步分别是设置读取超时时间 传输超时时间 是否可以进行输入 是否可以进行输出 是否可用缓存 \n                        //确认上传方式 设置编码格式 设置传输的保持连接 这是各种识别信息 \n\n            if(file!=null)\n            {\n                DataOutputStream dos = new DataOutputStream( conn.getOutputStream());\n                //从连接的输出流获取数据输出流\n                                StringBuffer sb = new StringBuffer();\n                sb.append(PREFIX+BOUNDARY+BOUNDARY);//设置各种标识符\n                sb.append(&quot;Content-Type: application/octet-stream; charset=&quot;+CHARSET+LINE_END);\n                                //像写http豹纹一样添加各种\n                sb.append(LINE_END);\n                dos.write(sb.toString().getBytes());//将以上豹纹头写入dos数据输出流中\n                InputStream is = new FileInputStream(file);//写入图片文件\n                byte[] bytes = new byte[1024];//设置每次读取1024byte\n                int len = 0;//这里0和-1都见过 主要是0\n                while((len=is.read(bytes))!=-1)//一边赋值给长度一边确认是否不为负数\n                {\n                    dos.write(bytes, 0, len);//只要没读完反复的输入到数据输出流中\n                }\n                is.close();//关闭图片的输入流\n                dos.write(LINE_END.getBytes());//各种标识符\n                byte[] end_data = (PREFIX+BOUNDARY+PREFIX+LINE_END).getBytes();\n                dos.write(end_data);\n                dos.flush();//刷新缓存 这不很重要\n                                 InputStream is = conn.getInputStream();\n                int res =   conn.getResponseCode();//获取响应代码 最后就可以抓到Entity了</pre>\n\n但是，但是，但是，非常的，极其的，很生气的，只成功了一次，不知道是我的平板没有sd卡的缘故还是网络的缘故，都不能进行完整的图片操作。。。以上代码经过千万次的筛选确保无误，全中国的帖子都在用这个方法。\n\n<!--more-->\n\n<span style=\"color: #cc99ff;\">利用HttpClient进行Android的图片提交</span>\n\nHttpClient非常常用，客户端模拟登录是经常用到，鉴别输入的参数和请求地址就可以进行模拟Post和Get操作。夙愿完成了。\n\n首先提一下我主要利用的不是本地的服务器，采用了叫做Imgur的网站的无限上传的图床，主要优势是有方便的上传可以利用，地址也好抓，但就是外国的服务器，网络不是非常的稳定。首先注册账号，然后添加一个application获取key'和secret这是它提供的上传功能的参数[caption width=\"674\" align=\"alignnone\"]![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B7-1.jpg) upload参数[/caption]\n\n<pre class=\"brush: java; gutter: true\">private String pic(File fff) \n    {   InputStream inputStream=null;\n                InputStream is;\n                String reply=&quot;&quot;;\n    try {\n        inputStream = new FileInputStream(fff);//同样将图片写入输入流\n        Bitmap bitmapOrg = BitmapFactory.decodeStream(inputStream);\n                //这一步将输入流抓换成Bitmap格式的二进制数据\n        ByteArrayOutputStream bao = new ByteArrayOutputStream();\n                //创建字节数组输出流，将数据写入它来上传\n        bitmapOrg.compress(Bitmap.CompressFormat.JPEG, 90, bao);\n                //这一步是重中之重，千辛万苦才在国外找到了这个很少人用的方法，将二进制的Bitmap数据进行压缩，\n                //传入的参数是图片格式，压缩率和输出的字节流 很给力啊!\n        byte [] ba = bao.toByteArray();//将字节流抓换成字节数组\n        String ba1=Base64.encodeBytes(ba);//Base64加密\n        ArrayList&lt;NameValuePair&gt; nameValuePairs = new\n                ArrayList&lt;NameValuePair&gt;();\n                nameValuePairs.add(new BasicNameValuePair(\n                                                URLEncoder.encode(&quot;image&quot;, &quot;UTF-8&quot;),ba1));//添加参数\n                nameValuePairs.add(new BasicNameValuePair(URLEncoder.encode(&quot;key&quot;, &quot;UTF-8&quot;),\n                                                   URLEncoder.encode(IMGUR_KEY, &quot;UTF-8&quot;)));//添加第二个参数\n            try{\n                HttpClient httpclient = new DefaultHttpClient();//创建HttpClient\n                HttpPost httppost = new\n                HttpPost(&quot;https://api.imgur.com/3/image&quot;);//请求地址\n                httppost.setHeader(&quot;Authorization&quot;,&quot;Client-ID &quot;+IMGUR_CLIENT_ID);//设置请求的header\n                httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));//参数写入Entity中\n                HttpResponse response = httpclient.execute(httppost);//解析提交获取响应\n                HttpEntity entity = response.getEntity();//响应的文本\n                is = entity.getContent();\n                StringBuffer sb = new StringBuffer();\n                 Scanner input = new Scanner(is);\n                   while (input.hasNextLine()) {\n                    String nextLine = input.nextLine();\n                    sb.append(nextLine);\n                    // System.out.println(nextLine);\n                   }\n                   reply = sb.toString();\n                }catch(Exception e){\n                //Log.e(&quot;log_tag&quot;, &quot;Error in http connection &quot;+e.toString());\n                }\n    } catch (FileNotFoundException e) {\n        // TODO 自动生成的 catch 块\n        e.printStackTrace();\n    } catch (UnsupportedEncodingException e1) {\n        // TODO 自动生成的 catch 块\n        e1.printStackTrace();\n    }       \n        return reply;\n    }</pre>\n\n[参考代码](http://blog.sptechnolab.com/2011/03/09/android/android-upload-image-to-server/)","source":"_posts/HttpURLConnection HttpClient commit pics.md","raw":"---\ntitle: 'Android使用HttpURLConnection HttpClient提交图片'\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - Android\nid: 201\ndate: 2013-05-21 14:43:00\n---\n\nAndroid进行图片提交大多数用的是HttpURLConnection 但是我的大半天的试验只成功了一次。参考了绝大多数主流的代码，不论是Base64还是Json还是URLEncode能换过的包都换过了，但都是上传成功，上传的效果要么图裂要么只有顶部的几条扫描进去了。\n由于是服务器在国外甚至还考虑了翻墙的做法。但收效甚微，最终都是没达到上传到效果。\n首先了解一下Android图片提交的普遍方案：\n![图片提交的流程](http://blog.sptechnolab.com/wp-content/uploads/2011/03/phpad1.png)\n将图像转换成二进制的Bitmap数据然后进行Base64加密通过字符串进行传输。但是这里有个问题就是安卓的图片上传原则上是不能直接在机子的内存直接操作的，一般情况是先将图片一边写入缓存放入sd卡里，一边利用HttpURLConnection 进行上传。（但这个方法从始至终只成功过一次。。。然后我就崩溃决然了）<!--more-->\n\n<span style=\"color: #cc99ff;\">普通java程序的图片上传</span>\n\n如果不考虑内存的影响，普通java程序下可以利用HttpClient在参数中加入格式化过的图像数据进行传输。或者如找到的一个Demo里一样，利用ImageIO进行流的输入输出。以下是关键代码\n\n<pre class=\"brush: java; gutter: true\"> ByteArrayOutputStream baos = new ByteArrayOutputStream();//字节数组输出流\n    ImageIO.write(ImageIO.read(new File(SAMPLE_PIC_FILE)), &quot;jpg&quot;, baos);\n        //利用ImageIO将图片一次性转换成二进制数据写入baos里\n    URL url = new URL(YOUR URL);\n        //服务器地址\n    String data = URLEncoder.encode(&quot;image&quot;, &quot;UTF-8&quot;) + &quot;=&quot; \n        + URLEncoder.encode(Base64.encodeBase64String(baos.toByteArray()).toString(), &quot;UTF-8&quot;);\n        //写入数据，这里传入服务器接受的名字，如果是自己的服务器可以进行更改，利用到了URLEncode转换成以URL编码的格式\n        //Base64进行加密处理注意输入的字符尽可能的进行URLencode编码以防止出错 这里写入的数据与地址栏中?后面的参数格式一致\n     data += &quot;&amp;&quot; + URLEncoder.encode(&quot;key&quot;, &quot;UTF-8&quot;) + &quot;=&quot; + URLEncoder.encode(IMGUR_KEY, &quot;UTF-8&quot;);\n        //添加别的数据 流入title description等\n    URLConnection conn = url.openConnection();//建立连接\n    conn.setDoOutput(true);//设置可以使用输出流\n    conn.addRequestProperty(&quot;Authorization&quot;, &quot;Client-ID &quot;+IMGUR_CLIENT_ID);\n        //添加头文件参数这里还可以添加Content-type connection等\n    OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream());\n        //getoutputstream这一步建立输出流的写入\n    //System.out.println(&quot;Sending data...&quot;);\n    wr.write(data);//将缓存写入输出流\n    wr.flush();//刷新缓冲区确保数据都写入\n        String reply = &quot;&quot;;\n    StringBuffer sb = new StringBuffer();\n    InputStream inStream = conn.getInputStream();//这一步才进行关键的上传操作，创建输入流\n    Scanner input = new Scanner(inStream);将输入流写入scanner当作参数\n    while (input.hasNextLine()) {\n    String nextLine = input.nextLine();\n    sb.append(nextLine); }\n    reply = sb.toString();//最后获得响应的html代码</pre>\n\n<!--more--><span style=\"color: #cc99ff;\">利用HttpURLConnection的android图片提交</span>\n\nandroid的图片提交保险起见应该是利用HttpURLConnection的 因为内存小的关系所以做到一次性提交抱错的风险比较大。\n\n这里关键的步骤就是分多次将数据写入缓冲区域，并且常见的就是添加BOUNDARY PREFIX LINE_END等识别信息（这里主要是为了自己开发的服务器识别，例子很多就不赘述了）关键代码如下\n\n<pre class=\"brush: java; gutter: true\">                        URL url = new URL(RequestURL);//请求地址\n            HttpURLConnection conn = (HttpURLConnection) url.openConnection();//获取connection\n            conn.setReadTimeout(TIME_OUT);//可选\n            conn.setConnectTimeout(TIME_OUT);//可选\n            conn.setDoInput(true); //必要\n            conn.setDoOutput(true); //必要\n            conn.setUseCaches(false);  //必要\n            conn.setRequestMethod(&quot;POST&quot;);  //必要\n            conn.setRequestProperty(&quot;Charset&quot;, &quot;UTF-8&quot;);//可选  \n            conn.setRequestProperty(&quot;connection&quot;, &quot;keep-alive&quot;);//可选   \n            conn.setRequestProperty(&quot;Content-Type&quot;, CONTENT_TYPE + &quot;;boundary=&quot; + BOUNDARY); //可选\n                        //一上几步分别是设置读取超时时间 传输超时时间 是否可以进行输入 是否可以进行输出 是否可用缓存 \n                        //确认上传方式 设置编码格式 设置传输的保持连接 这是各种识别信息 \n\n            if(file!=null)\n            {\n                DataOutputStream dos = new DataOutputStream( conn.getOutputStream());\n                //从连接的输出流获取数据输出流\n                                StringBuffer sb = new StringBuffer();\n                sb.append(PREFIX+BOUNDARY+BOUNDARY);//设置各种标识符\n                sb.append(&quot;Content-Type: application/octet-stream; charset=&quot;+CHARSET+LINE_END);\n                                //像写http豹纹一样添加各种\n                sb.append(LINE_END);\n                dos.write(sb.toString().getBytes());//将以上豹纹头写入dos数据输出流中\n                InputStream is = new FileInputStream(file);//写入图片文件\n                byte[] bytes = new byte[1024];//设置每次读取1024byte\n                int len = 0;//这里0和-1都见过 主要是0\n                while((len=is.read(bytes))!=-1)//一边赋值给长度一边确认是否不为负数\n                {\n                    dos.write(bytes, 0, len);//只要没读完反复的输入到数据输出流中\n                }\n                is.close();//关闭图片的输入流\n                dos.write(LINE_END.getBytes());//各种标识符\n                byte[] end_data = (PREFIX+BOUNDARY+PREFIX+LINE_END).getBytes();\n                dos.write(end_data);\n                dos.flush();//刷新缓存 这不很重要\n                                 InputStream is = conn.getInputStream();\n                int res =   conn.getResponseCode();//获取响应代码 最后就可以抓到Entity了</pre>\n\n但是，但是，但是，非常的，极其的，很生气的，只成功了一次，不知道是我的平板没有sd卡的缘故还是网络的缘故，都不能进行完整的图片操作。。。以上代码经过千万次的筛选确保无误，全中国的帖子都在用这个方法。\n\n<!--more-->\n\n<span style=\"color: #cc99ff;\">利用HttpClient进行Android的图片提交</span>\n\nHttpClient非常常用，客户端模拟登录是经常用到，鉴别输入的参数和请求地址就可以进行模拟Post和Get操作。夙愿完成了。\n\n首先提一下我主要利用的不是本地的服务器，采用了叫做Imgur的网站的无限上传的图床，主要优势是有方便的上传可以利用，地址也好抓，但就是外国的服务器，网络不是非常的稳定。首先注册账号，然后添加一个application获取key'和secret这是它提供的上传功能的参数[caption width=\"674\" align=\"alignnone\"]![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B7-1.jpg) upload参数[/caption]\n\n<pre class=\"brush: java; gutter: true\">private String pic(File fff) \n    {   InputStream inputStream=null;\n                InputStream is;\n                String reply=&quot;&quot;;\n    try {\n        inputStream = new FileInputStream(fff);//同样将图片写入输入流\n        Bitmap bitmapOrg = BitmapFactory.decodeStream(inputStream);\n                //这一步将输入流抓换成Bitmap格式的二进制数据\n        ByteArrayOutputStream bao = new ByteArrayOutputStream();\n                //创建字节数组输出流，将数据写入它来上传\n        bitmapOrg.compress(Bitmap.CompressFormat.JPEG, 90, bao);\n                //这一步是重中之重，千辛万苦才在国外找到了这个很少人用的方法，将二进制的Bitmap数据进行压缩，\n                //传入的参数是图片格式，压缩率和输出的字节流 很给力啊!\n        byte [] ba = bao.toByteArray();//将字节流抓换成字节数组\n        String ba1=Base64.encodeBytes(ba);//Base64加密\n        ArrayList&lt;NameValuePair&gt; nameValuePairs = new\n                ArrayList&lt;NameValuePair&gt;();\n                nameValuePairs.add(new BasicNameValuePair(\n                                                URLEncoder.encode(&quot;image&quot;, &quot;UTF-8&quot;),ba1));//添加参数\n                nameValuePairs.add(new BasicNameValuePair(URLEncoder.encode(&quot;key&quot;, &quot;UTF-8&quot;),\n                                                   URLEncoder.encode(IMGUR_KEY, &quot;UTF-8&quot;)));//添加第二个参数\n            try{\n                HttpClient httpclient = new DefaultHttpClient();//创建HttpClient\n                HttpPost httppost = new\n                HttpPost(&quot;https://api.imgur.com/3/image&quot;);//请求地址\n                httppost.setHeader(&quot;Authorization&quot;,&quot;Client-ID &quot;+IMGUR_CLIENT_ID);//设置请求的header\n                httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));//参数写入Entity中\n                HttpResponse response = httpclient.execute(httppost);//解析提交获取响应\n                HttpEntity entity = response.getEntity();//响应的文本\n                is = entity.getContent();\n                StringBuffer sb = new StringBuffer();\n                 Scanner input = new Scanner(is);\n                   while (input.hasNextLine()) {\n                    String nextLine = input.nextLine();\n                    sb.append(nextLine);\n                    // System.out.println(nextLine);\n                   }\n                   reply = sb.toString();\n                }catch(Exception e){\n                //Log.e(&quot;log_tag&quot;, &quot;Error in http connection &quot;+e.toString());\n                }\n    } catch (FileNotFoundException e) {\n        // TODO 自动生成的 catch 块\n        e.printStackTrace();\n    } catch (UnsupportedEncodingException e1) {\n        // TODO 自动生成的 catch 块\n        e1.printStackTrace();\n    }       \n        return reply;\n    }</pre>\n\n[参考代码](http://blog.sptechnolab.com/2011/03/09/android/android-upload-image-to-server/)","slug":"HttpURLConnection HttpClient commit pics","published":1,"updated":"2016-04-13T13:26:09.380Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7la000zuco45yisbgtb","content":"<p>Android进行图片提交大多数用的是HttpURLConnection 但是我的大半天的试验只成功了一次。参考了绝大多数主流的代码，不论是Base64还是Json还是URLEncode能换过的包都换过了，但都是上传成功，上传的效果要么图裂要么只有顶部的几条扫描进去了。<br>由于是服务器在国外甚至还考虑了翻墙的做法。但收效甚微，最终都是没达到上传到效果。<br>首先了解一下Android图片提交的普遍方案：<br><img src=\"http://blog.sptechnolab.com/wp-content/uploads/2011/03/phpad1.png\" alt=\"图片提交的流程\"><br>将图像转换成二进制的Bitmap数据然后进行Base64加密通过字符串进行传输。但是这里有个问题就是安卓的图片上传原则上是不能直接在机子的内存直接操作的，一般情况是先将图片一边写入缓存放入sd卡里，一边利用HttpURLConnection 进行上传。（但这个方法从始至终只成功过一次。。。然后我就崩溃决然了）<a id=\"more\"></a></p>\n<p><span style=\"color: #cc99ff\">普通java程序的图片上传</span></p>\n<p>如果不考虑内存的影响，普通java程序下可以利用HttpClient在参数中加入格式化过的图像数据进行传输。或者如找到的一个Demo里一样，利用ImageIO进行流的输入输出。以下是关键代码</p>\n<pre class=\"brush: java; gutter: true\"> ByteArrayOutputStream baos = new ByteArrayOutputStream();//字节数组输出流\n    ImageIO.write(ImageIO.read(new File(SAMPLE_PIC_FILE)), &quot;jpg&quot;, baos);\n        //利用ImageIO将图片一次性转换成二进制数据写入baos里\n    URL url = new URL(YOUR URL);\n        //服务器地址\n    String data = URLEncoder.encode(&quot;image&quot;, &quot;UTF-8&quot;) + &quot;=&quot; \n        + URLEncoder.encode(Base64.encodeBase64String(baos.toByteArray()).toString(), &quot;UTF-8&quot;);\n        //写入数据，这里传入服务器接受的名字，如果是自己的服务器可以进行更改，利用到了URLEncode转换成以URL编码的格式\n        //Base64进行加密处理注意输入的字符尽可能的进行URLencode编码以防止出错 这里写入的数据与地址栏中?后面的参数格式一致\n     data += &quot;&amp;&quot; + URLEncoder.encode(&quot;key&quot;, &quot;UTF-8&quot;) + &quot;=&quot; + URLEncoder.encode(IMGUR_KEY, &quot;UTF-8&quot;);\n        //添加别的数据 流入title description等\n    URLConnection conn = url.openConnection();//建立连接\n    conn.setDoOutput(true);//设置可以使用输出流\n    conn.addRequestProperty(&quot;Authorization&quot;, &quot;Client-ID &quot;+IMGUR_CLIENT_ID);\n        //添加头文件参数这里还可以添加Content-type connection等\n    OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream());\n        //getoutputstream这一步建立输出流的写入\n    //System.out.println(&quot;Sending data...&quot;);\n    wr.write(data);//将缓存写入输出流\n    wr.flush();//刷新缓冲区确保数据都写入\n        String reply = &quot;&quot;;\n    StringBuffer sb = new StringBuffer();\n    InputStream inStream = conn.getInputStream();//这一步才进行关键的上传操作，创建输入流\n    Scanner input = new Scanner(inStream);将输入流写入scanner当作参数\n    while (input.hasNextLine()) {\n    String nextLine = input.nextLine();\n    sb.append(nextLine); }\n    reply = sb.toString();//最后获得响应的html代码</pre>\n\n<!--more--><span style=\"color: #cc99ff\">利用HttpURLConnection的android图片提交</span><br><br>android的图片提交保险起见应该是利用HttpURLConnection的 因为内存小的关系所以做到一次性提交抱错的风险比较大。<br><br>这里关键的步骤就是分多次将数据写入缓冲区域，并且常见的就是添加BOUNDARY PREFIX LINE_END等识别信息（这里主要是为了自己开发的服务器识别，例子很多就不赘述了）关键代码如下<br><br><pre class=\"brush: java; gutter: true\">                        URL url = new URL(RequestURL);//请求地址<br>            HttpURLConnection conn = (HttpURLConnection) url.openConnection();//获取connection<br>            conn.setReadTimeout(TIME_OUT);//可选<br>            conn.setConnectTimeout(TIME_OUT);//可选<br>            conn.setDoInput(true); //必要<br>            conn.setDoOutput(true); //必要<br>            conn.setUseCaches(false);  //必要<br>            conn.setRequestMethod(&quot;POST&quot;);  //必要<br>            conn.setRequestProperty(&quot;Charset&quot;, &quot;UTF-8&quot;);//可选<br>            conn.setRequestProperty(&quot;connection&quot;, &quot;keep-alive&quot;);//可选<br>            conn.setRequestProperty(&quot;Content-Type&quot;, CONTENT_TYPE + &quot;;boundary=&quot; + BOUNDARY); //可选<br>                        //一上几步分别是设置读取超时时间 传输超时时间 是否可以进行输入 是否可以进行输出 是否可用缓存<br>                        //确认上传方式 设置编码格式 设置传输的保持连接 这是各种识别信息<br><br>            if(file!=null)<br>            {<br>                DataOutputStream dos = new DataOutputStream( conn.getOutputStream());<br>                //从连接的输出流获取数据输出流<br>                                StringBuffer sb = new StringBuffer();<br>                sb.append(PREFIX+BOUNDARY+BOUNDARY);//设置各种标识符<br>                sb.append(&quot;Content-Type: application/octet-stream; charset=&quot;+CHARSET+LINE_END);<br>                                //像写http豹纹一样添加各种<br>                sb.append(LINE_END);<br>                dos.write(sb.toString().getBytes());//将以上豹纹头写入dos数据输出流中<br>                InputStream is = new FileInputStream(file);//写入图片文件<br>                byte[] bytes = new byte[1024];//设置每次读取1024byte<br>                int len = 0;//这里0和-1都见过 主要是0<br>                while((len=is.read(bytes))!=-1)//一边赋值给长度一边确认是否不为负数<br>                {<br>                    dos.write(bytes, 0, len);//只要没读完反复的输入到数据输出流中<br>                }<br>                is.close();//关闭图片的输入流<br>                dos.write(LINE_END.getBytes());//各种标识符<br>                byte[] end_data = (PREFIX+BOUNDARY+PREFIX+LINE_END).getBytes();<br>                dos.write(end_data);<br>                dos.flush();//刷新缓存 这不很重要<br>                                 InputStream is = conn.getInputStream();<br>                int res =   conn.getResponseCode();//获取响应代码 最后就可以抓到Entity了</pre><br><br>但是，但是，但是，非常的，极其的，很生气的，只成功了一次，不知道是我的平板没有sd卡的缘故还是网络的缘故，都不能进行完整的图片操作。。。以上代码经过千万次的筛选确保无误，全中国的帖子都在用这个方法。<br><br><!--more-->\n<p><span style=\"color: #cc99ff\">利用HttpClient进行Android的图片提交</span></p>\n<p>HttpClient非常常用，客户端模拟登录是经常用到，鉴别输入的参数和请求地址就可以进行模拟Post和Get操作。夙愿完成了。</p>\n<p>首先提一下我主要利用的不是本地的服务器，采用了叫做Imgur的网站的无限上传的图床，主要优势是有方便的上传可以利用，地址也好抓，但就是外国的服务器，网络不是非常的稳定。首先注册账号，然后添加一个application获取key’和secret这是它提供的上传功能的参数[caption width=”674” align=”alignnone”]<img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B7-1.jpg\" alt=\"\"> upload参数[/caption]</p>\n<pre class=\"brush: java; gutter: true\">private String pic(File fff) \n    {   InputStream inputStream=null;\n                InputStream is;\n                String reply=&quot;&quot;;\n    try {\n        inputStream = new FileInputStream(fff);//同样将图片写入输入流\n        Bitmap bitmapOrg = BitmapFactory.decodeStream(inputStream);\n                //这一步将输入流抓换成Bitmap格式的二进制数据\n        ByteArrayOutputStream bao = new ByteArrayOutputStream();\n                //创建字节数组输出流，将数据写入它来上传\n        bitmapOrg.compress(Bitmap.CompressFormat.JPEG, 90, bao);\n                //这一步是重中之重，千辛万苦才在国外找到了这个很少人用的方法，将二进制的Bitmap数据进行压缩，\n                //传入的参数是图片格式，压缩率和输出的字节流 很给力啊!\n        byte [] ba = bao.toByteArray();//将字节流抓换成字节数组\n        String ba1=Base64.encodeBytes(ba);//Base64加密\n        ArrayList&lt;NameValuePair&gt; nameValuePairs = new\n                ArrayList&lt;NameValuePair&gt;();\n                nameValuePairs.add(new BasicNameValuePair(\n                                                URLEncoder.encode(&quot;image&quot;, &quot;UTF-8&quot;),ba1));//添加参数\n                nameValuePairs.add(new BasicNameValuePair(URLEncoder.encode(&quot;key&quot;, &quot;UTF-8&quot;),\n                                                   URLEncoder.encode(IMGUR_KEY, &quot;UTF-8&quot;)));//添加第二个参数\n            try{\n                HttpClient httpclient = new DefaultHttpClient();//创建HttpClient\n                HttpPost httppost = new\n                HttpPost(&quot;https://api.imgur.com/3/image&quot;);//请求地址\n                httppost.setHeader(&quot;Authorization&quot;,&quot;Client-ID &quot;+IMGUR_CLIENT_ID);//设置请求的header\n                httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));//参数写入Entity中\n                HttpResponse response = httpclient.execute(httppost);//解析提交获取响应\n                HttpEntity entity = response.getEntity();//响应的文本\n                is = entity.getContent();\n                StringBuffer sb = new StringBuffer();\n                 Scanner input = new Scanner(is);\n                   while (input.hasNextLine()) {\n                    String nextLine = input.nextLine();\n                    sb.append(nextLine);\n                    // System.out.println(nextLine);\n                   }\n                   reply = sb.toString();\n                }catch(Exception e){\n                //Log.e(&quot;log_tag&quot;, &quot;Error in http connection &quot;+e.toString());\n                }\n    } catch (FileNotFoundException e) {\n        // TODO 自动生成的 catch 块\n        e.printStackTrace();\n    } catch (UnsupportedEncodingException e1) {\n        // TODO 自动生成的 catch 块\n        e1.printStackTrace();\n    }       \n        return reply;\n    }</pre>\n\n<p><a href=\"http://blog.sptechnolab.com/2011/03/09/android/android-upload-image-to-server/\" target=\"_blank\" rel=\"external\">参考代码</a></p>","excerpt":"<p>Android进行图片提交大多数用的是HttpURLConnection 但是我的大半天的试验只成功了一次。参考了绝大多数主流的代码，不论是Base64还是Json还是URLEncode能换过的包都换过了，但都是上传成功，上传的效果要么图裂要么只有顶部的几条扫描进去了。<br>由于是服务器在国外甚至还考虑了翻墙的做法。但收效甚微，最终都是没达到上传到效果。<br>首先了解一下Android图片提交的普遍方案：<br><img src=\"http://blog.sptechnolab.com/wp-content/uploads/2011/03/phpad1.png\" alt=\"图片提交的流程\"><br>将图像转换成二进制的Bitmap数据然后进行Base64加密通过字符串进行传输。但是这里有个问题就是安卓的图片上传原则上是不能直接在机子的内存直接操作的，一般情况是先将图片一边写入缓存放入sd卡里，一边利用HttpURLConnection 进行上传。（但这个方法从始至终只成功过一次。。。然后我就崩溃决然了）","more":"</p>\n<p><span style=\"color: #cc99ff\">普通java程序的图片上传</span></p>\n<p>如果不考虑内存的影响，普通java程序下可以利用HttpClient在参数中加入格式化过的图像数据进行传输。或者如找到的一个Demo里一样，利用ImageIO进行流的输入输出。以下是关键代码</p>\n<pre class=\"brush: java; gutter: true\"> ByteArrayOutputStream baos = new ByteArrayOutputStream();//字节数组输出流\n    ImageIO.write(ImageIO.read(new File(SAMPLE_PIC_FILE)), &quot;jpg&quot;, baos);\n        //利用ImageIO将图片一次性转换成二进制数据写入baos里\n    URL url = new URL(YOUR URL);\n        //服务器地址\n    String data = URLEncoder.encode(&quot;image&quot;, &quot;UTF-8&quot;) + &quot;=&quot; \n        + URLEncoder.encode(Base64.encodeBase64String(baos.toByteArray()).toString(), &quot;UTF-8&quot;);\n        //写入数据，这里传入服务器接受的名字，如果是自己的服务器可以进行更改，利用到了URLEncode转换成以URL编码的格式\n        //Base64进行加密处理注意输入的字符尽可能的进行URLencode编码以防止出错 这里写入的数据与地址栏中?后面的参数格式一致\n     data += &quot;&amp;&quot; + URLEncoder.encode(&quot;key&quot;, &quot;UTF-8&quot;) + &quot;=&quot; + URLEncoder.encode(IMGUR_KEY, &quot;UTF-8&quot;);\n        //添加别的数据 流入title description等\n    URLConnection conn = url.openConnection();//建立连接\n    conn.setDoOutput(true);//设置可以使用输出流\n    conn.addRequestProperty(&quot;Authorization&quot;, &quot;Client-ID &quot;+IMGUR_CLIENT_ID);\n        //添加头文件参数这里还可以添加Content-type connection等\n    OutputStreamWriter wr = new OutputStreamWriter(conn.getOutputStream());\n        //getoutputstream这一步建立输出流的写入\n    //System.out.println(&quot;Sending data...&quot;);\n    wr.write(data);//将缓存写入输出流\n    wr.flush();//刷新缓冲区确保数据都写入\n        String reply = &quot;&quot;;\n    StringBuffer sb = new StringBuffer();\n    InputStream inStream = conn.getInputStream();//这一步才进行关键的上传操作，创建输入流\n    Scanner input = new Scanner(inStream);将输入流写入scanner当作参数\n    while (input.hasNextLine()) {\n    String nextLine = input.nextLine();\n    sb.append(nextLine); }\n    reply = sb.toString();//最后获得响应的html代码</pre>\n\n<!--more--><span style=\"color: #cc99ff\">利用HttpURLConnection的android图片提交</span><br><br>android的图片提交保险起见应该是利用HttpURLConnection的 因为内存小的关系所以做到一次性提交抱错的风险比较大。<br><br>这里关键的步骤就是分多次将数据写入缓冲区域，并且常见的就是添加BOUNDARY PREFIX LINE_END等识别信息（这里主要是为了自己开发的服务器识别，例子很多就不赘述了）关键代码如下<br><br><pre class=\"brush: java; gutter: true\">                        URL url = new URL(RequestURL);//请求地址<br>            HttpURLConnection conn = (HttpURLConnection) url.openConnection();//获取connection<br>            conn.setReadTimeout(TIME_OUT);//可选<br>            conn.setConnectTimeout(TIME_OUT);//可选<br>            conn.setDoInput(true); //必要<br>            conn.setDoOutput(true); //必要<br>            conn.setUseCaches(false);  //必要<br>            conn.setRequestMethod(&quot;POST&quot;);  //必要<br>            conn.setRequestProperty(&quot;Charset&quot;, &quot;UTF-8&quot;);//可选<br>            conn.setRequestProperty(&quot;connection&quot;, &quot;keep-alive&quot;);//可选<br>            conn.setRequestProperty(&quot;Content-Type&quot;, CONTENT_TYPE + &quot;;boundary=&quot; + BOUNDARY); //可选<br>                        //一上几步分别是设置读取超时时间 传输超时时间 是否可以进行输入 是否可以进行输出 是否可用缓存<br>                        //确认上传方式 设置编码格式 设置传输的保持连接 这是各种识别信息<br><br>            if(file!=null)<br>            {<br>                DataOutputStream dos = new DataOutputStream( conn.getOutputStream());<br>                //从连接的输出流获取数据输出流<br>                                StringBuffer sb = new StringBuffer();<br>                sb.append(PREFIX+BOUNDARY+BOUNDARY);//设置各种标识符<br>                sb.append(&quot;Content-Type: application/octet-stream; charset=&quot;+CHARSET+LINE_END);<br>                                //像写http豹纹一样添加各种<br>                sb.append(LINE_END);<br>                dos.write(sb.toString().getBytes());//将以上豹纹头写入dos数据输出流中<br>                InputStream is = new FileInputStream(file);//写入图片文件<br>                byte[] bytes = new byte[1024];//设置每次读取1024byte<br>                int len = 0;//这里0和-1都见过 主要是0<br>                while((len=is.read(bytes))!=-1)//一边赋值给长度一边确认是否不为负数<br>                {<br>                    dos.write(bytes, 0, len);//只要没读完反复的输入到数据输出流中<br>                }<br>                is.close();//关闭图片的输入流<br>                dos.write(LINE_END.getBytes());//各种标识符<br>                byte[] end_data = (PREFIX+BOUNDARY+PREFIX+LINE_END).getBytes();<br>                dos.write(end_data);<br>                dos.flush();//刷新缓存 这不很重要<br>                                 InputStream is = conn.getInputStream();<br>                int res =   conn.getResponseCode();//获取响应代码 最后就可以抓到Entity了</pre><br><br>但是，但是，但是，非常的，极其的，很生气的，只成功了一次，不知道是我的平板没有sd卡的缘故还是网络的缘故，都不能进行完整的图片操作。。。以上代码经过千万次的筛选确保无误，全中国的帖子都在用这个方法。<br><br><!--more-->\n<p><span style=\"color: #cc99ff\">利用HttpClient进行Android的图片提交</span></p>\n<p>HttpClient非常常用，客户端模拟登录是经常用到，鉴别输入的参数和请求地址就可以进行模拟Post和Get操作。夙愿完成了。</p>\n<p>首先提一下我主要利用的不是本地的服务器，采用了叫做Imgur的网站的无限上传的图床，主要优势是有方便的上传可以利用，地址也好抓，但就是外国的服务器，网络不是非常的稳定。首先注册账号，然后添加一个application获取key’和secret这是它提供的上传功能的参数[caption width=”674” align=”alignnone”]<img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B7-1.jpg\" alt=\"\"> upload参数[/caption]</p>\n<pre class=\"brush: java; gutter: true\">private String pic(File fff) \n    {   InputStream inputStream=null;\n                InputStream is;\n                String reply=&quot;&quot;;\n    try {\n        inputStream = new FileInputStream(fff);//同样将图片写入输入流\n        Bitmap bitmapOrg = BitmapFactory.decodeStream(inputStream);\n                //这一步将输入流抓换成Bitmap格式的二进制数据\n        ByteArrayOutputStream bao = new ByteArrayOutputStream();\n                //创建字节数组输出流，将数据写入它来上传\n        bitmapOrg.compress(Bitmap.CompressFormat.JPEG, 90, bao);\n                //这一步是重中之重，千辛万苦才在国外找到了这个很少人用的方法，将二进制的Bitmap数据进行压缩，\n                //传入的参数是图片格式，压缩率和输出的字节流 很给力啊!\n        byte [] ba = bao.toByteArray();//将字节流抓换成字节数组\n        String ba1=Base64.encodeBytes(ba);//Base64加密\n        ArrayList&lt;NameValuePair&gt; nameValuePairs = new\n                ArrayList&lt;NameValuePair&gt;();\n                nameValuePairs.add(new BasicNameValuePair(\n                                                URLEncoder.encode(&quot;image&quot;, &quot;UTF-8&quot;),ba1));//添加参数\n                nameValuePairs.add(new BasicNameValuePair(URLEncoder.encode(&quot;key&quot;, &quot;UTF-8&quot;),\n                                                   URLEncoder.encode(IMGUR_KEY, &quot;UTF-8&quot;)));//添加第二个参数\n            try{\n                HttpClient httpclient = new DefaultHttpClient();//创建HttpClient\n                HttpPost httppost = new\n                HttpPost(&quot;https://api.imgur.com/3/image&quot;);//请求地址\n                httppost.setHeader(&quot;Authorization&quot;,&quot;Client-ID &quot;+IMGUR_CLIENT_ID);//设置请求的header\n                httppost.setEntity(new UrlEncodedFormEntity(nameValuePairs));//参数写入Entity中\n                HttpResponse response = httpclient.execute(httppost);//解析提交获取响应\n                HttpEntity entity = response.getEntity();//响应的文本\n                is = entity.getContent();\n                StringBuffer sb = new StringBuffer();\n                 Scanner input = new Scanner(is);\n                   while (input.hasNextLine()) {\n                    String nextLine = input.nextLine();\n                    sb.append(nextLine);\n                    // System.out.println(nextLine);\n                   }\n                   reply = sb.toString();\n                }catch(Exception e){\n                //Log.e(&quot;log_tag&quot;, &quot;Error in http connection &quot;+e.toString());\n                }\n    } catch (FileNotFoundException e) {\n        // TODO 自动生成的 catch 块\n        e.printStackTrace();\n    } catch (UnsupportedEncodingException e1) {\n        // TODO 自动生成的 catch 块\n        e1.printStackTrace();\n    }       \n        return reply;\n    }</pre>\n\n<p><a href=\"http://blog.sptechnolab.com/2011/03/09/android/android-upload-image-to-server/\">参考代码</a></p>"},{"title":"Java和mySql间date数据的注意","id":"185","date":"2013-05-16T13:00:26.000Z","_content":"\n已经吃了很多次亏了...每每其他调试得得意满满的时候就出来捣乱了\n首先是在java中 date和string类型之间的转换就容易出错\n直接使用toString默认输出的是\n/** Date类的格式: Sat Apr 16 13:17:29 CST 2006 */\ndata-&gt;string\n<pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">public static String DatetoString(Date dt){\n\t\tDateFormat df=new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm:ss&quot;);\n\t\tString myD=df.format(dt);\n\t\treturn myD;\n\t}</pre>\nstring-&gt;date\n<pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">public static Date Trans(String str)\n\t{\n\t\tDateFormat df=new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm:ss&quot;);\n\t\tDate d=null;\n\t\ttry {\n\t\t\td=df.parse(str);\n\t\t} catch (ParseException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tif(d==null)\n\t\t{System.out.println(&quot;格式输入失败&quot;);}\n\t\telse\n\t\t{\n\t\t\tSystem.out.println(&quot;格式转换成功  &quot;+d);\n\t\t}\n\t\treturn d;\n\t}</pre>\n其中，yyyyMMddHHmmss表示年月日时分秒不可以随便代替 其中可以加入: / - 空格等一切你想塞入的符号\n这是月份的表示 其中月份是从0开始的\n<pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">Calendar cal = Calendar.getInstance();  \ncal.setTime(new Date());  \nSystem.out.println(&quot;System   Date:   &quot; + cal.get(Calendar.MONTH + 1));</pre>\n以下是mysql和java之间传值转化的类\nMySql的时间类型有             Java中与之对应的时间类型 \ndate                        java.sql.Date \ndatetime                    java.sql.Timestamp \ntimestamp                   java.sql.Timestamp \ntime                        java.sql.Time \nyear                        java.sql.Date\n<pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">\n/获得系统时间  \njava.util.Date date = new java.util.Date();  \n//将时间格式转换成符合Timestamp要求的格式  \nString nowTime = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;).format(date);  \njava.sql.Timestamp ts_date = java.sql.Timestamp.valueOf(nowTime)  \n</pre>\nTimeDate->String\n<pre class=\"brush: actionscript3; gutter: true; first-line: 1; highlight: []; html-script: false\">\nTimestamp ts = new Timestamp(System.currentTimeMillis());  \n        String tsStr = &quot;&quot;;  \n        DateFormat sdf = new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm:ss&quot;);  \n        try {  \n            //方法一  \n            tsStr = sdf.format(ts);  \n            System.out.println(tsStr);  \n            //方法二  \n            tsStr = ts.toString();  \n            System.out.println(tsStr);  \n        } catch (Exception e) {  \n            e.printStackTrace();  \n        }  \n</pre>\nTimeDate->Date\n<pre class=\"brush: actionscript3; gutter: true; first-line: 1; highlight: []; html-script: false\">\nTimestamp ts = new Timestamp(System.currentTimeMillis());  \n        Date date = new Date();  \n        try {  \n            date = ts;  \n            System.out.println(date);  \n        } catch (Exception e) {  \n            e.printStackTrace();  \n        } \n</pre>","source":"_posts/Java和mySql间date数据的注意.md","raw":"---\ntitle: Java和mySql间date数据的注意\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - java\n  - mysql\nid: 185\ndate: 2013-05-16 21:00:26\n---\n\n已经吃了很多次亏了...每每其他调试得得意满满的时候就出来捣乱了\n首先是在java中 date和string类型之间的转换就容易出错\n直接使用toString默认输出的是\n/** Date类的格式: Sat Apr 16 13:17:29 CST 2006 */\ndata-&gt;string\n<pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">public static String DatetoString(Date dt){\n\t\tDateFormat df=new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm:ss&quot;);\n\t\tString myD=df.format(dt);\n\t\treturn myD;\n\t}</pre>\nstring-&gt;date\n<pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">public static Date Trans(String str)\n\t{\n\t\tDateFormat df=new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm:ss&quot;);\n\t\tDate d=null;\n\t\ttry {\n\t\t\td=df.parse(str);\n\t\t} catch (ParseException e) {\n\t\t\te.printStackTrace();\n\t\t}\n\t\tif(d==null)\n\t\t{System.out.println(&quot;格式输入失败&quot;);}\n\t\telse\n\t\t{\n\t\t\tSystem.out.println(&quot;格式转换成功  &quot;+d);\n\t\t}\n\t\treturn d;\n\t}</pre>\n其中，yyyyMMddHHmmss表示年月日时分秒不可以随便代替 其中可以加入: / - 空格等一切你想塞入的符号\n这是月份的表示 其中月份是从0开始的\n<pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">Calendar cal = Calendar.getInstance();  \ncal.setTime(new Date());  \nSystem.out.println(&quot;System   Date:   &quot; + cal.get(Calendar.MONTH + 1));</pre>\n以下是mysql和java之间传值转化的类\nMySql的时间类型有             Java中与之对应的时间类型 \ndate                        java.sql.Date \ndatetime                    java.sql.Timestamp \ntimestamp                   java.sql.Timestamp \ntime                        java.sql.Time \nyear                        java.sql.Date\n<pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">\n/获得系统时间  \njava.util.Date date = new java.util.Date();  \n//将时间格式转换成符合Timestamp要求的格式  \nString nowTime = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;).format(date);  \njava.sql.Timestamp ts_date = java.sql.Timestamp.valueOf(nowTime)  \n</pre>\nTimeDate->String\n<pre class=\"brush: actionscript3; gutter: true; first-line: 1; highlight: []; html-script: false\">\nTimestamp ts = new Timestamp(System.currentTimeMillis());  \n        String tsStr = &quot;&quot;;  \n        DateFormat sdf = new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm:ss&quot;);  \n        try {  \n            //方法一  \n            tsStr = sdf.format(ts);  \n            System.out.println(tsStr);  \n            //方法二  \n            tsStr = ts.toString();  \n            System.out.println(tsStr);  \n        } catch (Exception e) {  \n            e.printStackTrace();  \n        }  \n</pre>\nTimeDate->Date\n<pre class=\"brush: actionscript3; gutter: true; first-line: 1; highlight: []; html-script: false\">\nTimestamp ts = new Timestamp(System.currentTimeMillis());  \n        Date date = new Date();  \n        try {  \n            date = ts;  \n            System.out.println(date);  \n        } catch (Exception e) {  \n            e.printStackTrace();  \n        } \n</pre>","slug":"Java和mySql间date数据的注意","published":1,"updated":"2016-04-11T14:09:45.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7lh0011uco4j5asp58u","content":"<p>已经吃了很多次亏了…每每其他调试得得意满满的时候就出来捣乱了<br>首先是在java中 date和string类型之间的转换就容易出错<br>直接使用toString默认输出的是<br>/<em>* Date类的格式: Sat Apr 16 13:17:29 CST 2006 </em>/<br>data-&gt;string</p>\n<pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">public static String DatetoString(Date dt){\n        DateFormat df=new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm:ss&quot;);\n        String myD=df.format(dt);\n        return myD;\n    }</pre>\nstring-&gt;date\n<pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">public static Date Trans(String str)\n    {\n        DateFormat df=new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm:ss&quot;);\n        Date d=null;\n        try {\n            d=df.parse(str);\n        } catch (ParseException e) {\n            e.printStackTrace();\n        }\n        if(d==null)\n        {System.out.println(&quot;格式输入失败&quot;);}\n        else\n        {\n            System.out.println(&quot;格式转换成功  &quot;+d);\n        }\n        return d;\n    }</pre>\n其中，yyyyMMddHHmmss表示年月日时分秒不可以随便代替 其中可以加入: / - 空格等一切你想塞入的符号\n这是月份的表示 其中月份是从0开始的\n<pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">Calendar cal = Calendar.getInstance();  \ncal.setTime(new Date());  \nSystem.out.println(&quot;System   Date:   &quot; + cal.get(Calendar.MONTH + 1));</pre>\n以下是mysql和java之间传值转化的类\nMySql的时间类型有             Java中与之对应的时间类型 \ndate                        java.sql.Date \ndatetime                    java.sql.Timestamp \ntimestamp                   java.sql.Timestamp \ntime                        java.sql.Time \nyear                        java.sql.Date\n<pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">\n/获得系统时间  \njava.util.Date date = new java.util.Date();  \n//将时间格式转换成符合Timestamp要求的格式  \nString nowTime = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;).format(date);  \njava.sql.Timestamp ts_date = java.sql.Timestamp.valueOf(nowTime)  \n</pre>\nTimeDate->String\n<pre class=\"brush: actionscript3; gutter: true; first-line: 1; highlight: []; html-script: false\">\nTimestamp ts = new Timestamp(System.currentTimeMillis());  \n        String tsStr = &quot;&quot;;  \n        DateFormat sdf = new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm:ss&quot;);  \n        try {  \n            //方法一  \n            tsStr = sdf.format(ts);  \n            System.out.println(tsStr);  \n            //方法二  \n            tsStr = ts.toString();  \n            System.out.println(tsStr);  \n        } catch (Exception e) {  \n            e.printStackTrace();  \n        }  \n</pre>\nTimeDate->Date\n<pre class=\"brush: actionscript3; gutter: true; first-line: 1; highlight: []; html-script: false\">\nTimestamp ts = new Timestamp(System.currentTimeMillis());  \n        Date date = new Date();  \n        try {  \n            date = ts;  \n            System.out.println(date);  \n        } catch (Exception e) {  \n            e.printStackTrace();  \n        } \n</pre>","excerpt":"","more":"<p>已经吃了很多次亏了…每每其他调试得得意满满的时候就出来捣乱了<br>首先是在java中 date和string类型之间的转换就容易出错<br>直接使用toString默认输出的是<br>/<em>* Date类的格式: Sat Apr 16 13:17:29 CST 2006 </em>/<br>data-&gt;string</p>\n<pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">public static String DatetoString(Date dt){\n        DateFormat df=new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm:ss&quot;);\n        String myD=df.format(dt);\n        return myD;\n    }</pre>\nstring-&gt;date\n<pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">public static Date Trans(String str)\n    {\n        DateFormat df=new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm:ss&quot;);\n        Date d=null;\n        try {\n            d=df.parse(str);\n        } catch (ParseException e) {\n            e.printStackTrace();\n        }\n        if(d==null)\n        {System.out.println(&quot;格式输入失败&quot;);}\n        else\n        {\n            System.out.println(&quot;格式转换成功  &quot;+d);\n        }\n        return d;\n    }</pre>\n其中，yyyyMMddHHmmss表示年月日时分秒不可以随便代替 其中可以加入: / - 空格等一切你想塞入的符号\n这是月份的表示 其中月份是从0开始的\n<pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">Calendar cal = Calendar.getInstance();  \ncal.setTime(new Date());  \nSystem.out.println(&quot;System   Date:   &quot; + cal.get(Calendar.MONTH + 1));</pre>\n以下是mysql和java之间传值转化的类\nMySql的时间类型有             Java中与之对应的时间类型 \ndate                        java.sql.Date \ndatetime                    java.sql.Timestamp \ntimestamp                   java.sql.Timestamp \ntime                        java.sql.Time \nyear                        java.sql.Date\n<pre class=\"brush: java; gutter: true; first-line: 1; highlight: []; html-script: false\">\n/获得系统时间  \njava.util.Date date = new java.util.Date();  \n//将时间格式转换成符合Timestamp要求的格式  \nString nowTime = new SimpleDateFormat(&quot;yyyy-MM-dd HH:mm:ss&quot;).format(date);  \njava.sql.Timestamp ts_date = java.sql.Timestamp.valueOf(nowTime)  \n</pre>\nTimeDate->String\n<pre class=\"brush: actionscript3; gutter: true; first-line: 1; highlight: []; html-script: false\">\nTimestamp ts = new Timestamp(System.currentTimeMillis());  \n        String tsStr = &quot;&quot;;  \n        DateFormat sdf = new SimpleDateFormat(&quot;yyyy/MM/dd HH:mm:ss&quot;);  \n        try {  \n            //方法一  \n            tsStr = sdf.format(ts);  \n            System.out.println(tsStr);  \n            //方法二  \n            tsStr = ts.toString();  \n            System.out.println(tsStr);  \n        } catch (Exception e) {  \n            e.printStackTrace();  \n        }  \n</pre>\nTimeDate->Date\n<pre class=\"brush: actionscript3; gutter: true; first-line: 1; highlight: []; html-script: false\">\nTimestamp ts = new Timestamp(System.currentTimeMillis());  \n        Date date = new Date();  \n        try {  \n            date = ts;  \n            System.out.println(date);  \n        } catch (Exception e) {  \n            e.printStackTrace();  \n        } \n</pre>"},{"title":"MFC中添加控制台调试","id":"573","date":"2015-05-06T18:56:39.000Z","_content":"\n<span style=\"color: #000000;\">1.在需要添加控制台调试的cpp页面加上**#include \"conio.h\";**</span>\n\n<span style=\"color: #000000;\">2.在启动mfc窗体的页面加入**AllocConsole();**</span>\n\n<span style=\"color: #000000;\">3.在需要输出的地方输入 **cprintf()** ,其中是char类型。若是vs2005之后，应改成_cprintf();</span>\n\n<span style=\"color: #000000;\">4.若需要关闭控制台窗口，使用 FreeConsole();</span>","source":"_posts/MFC中添加控制台调试.md","raw":"---\ntitle: MFC中添加控制台调试\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - mfc\n  - 控制台\nid: 573\ndate: 2015-05-07 02:56:39\n---\n\n<span style=\"color: #000000;\">1.在需要添加控制台调试的cpp页面加上**#include \"conio.h\";**</span>\n\n<span style=\"color: #000000;\">2.在启动mfc窗体的页面加入**AllocConsole();**</span>\n\n<span style=\"color: #000000;\">3.在需要输出的地方输入 **cprintf()** ,其中是char类型。若是vs2005之后，应改成_cprintf();</span>\n\n<span style=\"color: #000000;\">4.若需要关闭控制台窗口，使用 FreeConsole();</span>","slug":"MFC中添加控制台调试","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7lj0016uco4ppijy0bi","content":"<p><span style=\"color: #000000\">1.在需要添加控制台调试的cpp页面加上<strong>#include “conio.h”;</strong></span></p>\n<p><span style=\"color: #000000\">2.在启动mfc窗体的页面加入<strong>AllocConsole();</strong></span></p>\n<p><span style=\"color: #000000\">3.在需要输出的地方输入 <strong>cprintf()</strong> ,其中是char类型。若是vs2005之后，应改成_cprintf();</span></p>\n<p><span style=\"color: #000000\">4.若需要关闭控制台窗口，使用 FreeConsole();</span></p>","excerpt":"","more":"<p><span style=\"color: #000000\">1.在需要添加控制台调试的cpp页面加上<strong>#include “conio.h”;</strong></span></p>\n<p><span style=\"color: #000000\">2.在启动mfc窗体的页面加入<strong>AllocConsole();</strong></span></p>\n<p><span style=\"color: #000000\">3.在需要输出的地方输入 <strong>cprintf()</strong> ,其中是char类型。若是vs2005之后，应改成_cprintf();</span></p>\n<p><span style=\"color: #000000\">4.若需要关闭控制台窗口，使用 FreeConsole();</span></p>"},{"title":"OWL的语义语法及Jena初步","id":"304","date":"2013-07-20T21:07:26.000Z","_content":"\n1.  **OWL演化**\n\nOWL是语义WEB的层级结构核心，在语义层次上解决WEB信息共享和交换的基础。它是RDFS的衍伸，并基于DAML+OIL的拓展。RDFS相当于二元谓词，相当于类和属性的层级体系，但是存在以下几点局限性：\n\n*   属性的局部范围——rdfs：range对所有的类定义了属性的值，但是不能仅仅对某几个类进行约束。eg.不能描述牛吃草，而别的动物也可能吃肉。\n*   不相交——有些类是不相交的。eg.例如男人和女人是不相交的，但是在RDFS中只能声明为“人”的子类。\n*   类的布尔组合——可以通过类的布尔组合，如并、交、补来定义新类。eg.将“人”定义为“男人”和“女人”的并。\n*   基数约束——可以对属性值的数量进行限制。eg.一个人有一个人的父亲和一个母亲；一门课至少由一位老师任教等。\n*   属性性质——可以声明一个属性是传递的（如大于）或者一个属性的值是唯一的（母亲），或者一个属性是另一个属性的逆（吃与被吃）\nOWL支持一下三种描述本体的条件\n\n*   良定义语法\n*   形式化语义\n*   有效的推理支持，包括：\n\n1.  <span style=\"color: #ff0000;\">类成员关系的推理</span>-x是类C的实例，类C是类D子类，则x也是D的一个实例\n2.  <span style=\"color: #ff0000;\">类的等价关系推理</span>-A等价于B，B等价于C，则A等价于C\n3.  <span style=\"color: #ff0000;\">一致性推理</span>-x是A类的一个实例，类A是类B与类C的交的子集，类A是类D的一个子类，而B与D不相交。这里出现了不一致性。因为A为空，却又实例x\n4.  <span style=\"color: #ff0000;\">分类推理</span>-如果已经声明“属性-值”对是实例属于类A的充分条件，则如果x满足该条件，即具有这样的“属性-值”对，则x一定是A的实例\n\n**2.OWL三种分类**\n\n*   <span style=\"line-height: 15px;\"><span style=\"color: #ff0000;\">OWL-FULL</span>：提供了最强大的表达能力和使用RDF语法的最大自由，但是没有可计算性的保证。OWL FULL中类即是<span style=\"color: #ff0000;\">个体的集合<span style=\"color: #000000;\">也可以是<span style=\"color: #ff0000;\">个体<span style=\"color: #000000;\">。与OWL DL和Lite相比，个体和类是分离的集合，即一个资源不能同时是个体和类，但在Full中可以。OWL FULL允许本体对预定义的RDF或OWL词汇表的增强，但是难以实现OWL FULL中所有构子的推理。</span></span></span></span></span>\n\n它的优点是和RDF完全兼容，所有合法的RDF文档都是合法的OWL FULL文档，所有RDF(S)结论都是OWL FULL结论。OWL FULL的缺点是该语言的表达能力太强，以致推理变得不可判定。如果将保持对RDF的兼容性作为主要目标，则应该选择FULL。OWL FULL将RDF拓展为一个完备的本体语言，克服了OWL DL和RDFS在语义上的冲突，但是OWL FULL消除了基数限制中对传递型属性的约束，因此不能保证推理是可判定的。\n\n*   <span style=\"line-height: 15px;\"><span style=\"color: #ff0000;\">OWL DL</span>：OWL保留了强大表达能力的同时，也具有<span style=\"color: #ff0000;\">计算完备性</span>（所有结论都是可以判定的）和<span style=\"color: #ff0000;\">可判定性</span>（所有的计算都在有限时间内终止）。DL对应于描述逻辑（Description Logic），而描述逻辑是OWL的形式化基础。</span>\n\n<span style=\"line-height: 15px;\">OWL DL的特点是它支持有效的推理，缺点和Lite一样，失去了RDF的兼容性。一个RDF文档在成为OWL DL文档之前必须进行适当的拓展和约束，一个合法的OWL DL文档是一个RDF文档。如果用户保证推理的可判定型和本体语言的强表达能力作为主要目标，则可以选用OWL DL。OWL DL忽略了对RDFS的兼容性，它主要针对概念，属性，个体之间关系的描述，以保证强大的语义表达能力。DL采用了RDFS的数据类型机制和内嵌的XMLSchema数据类型。</span>\n\n*   <span style=\"line-height: 15px;\"><span style=\"color: #ff0000;\">OWL Lite</span>：它是支持分类体系和简单约束的owl语言，例如基数约束，但是基数的值只能是1和0。虽然它的表达能力较弱，但是提供了词典和分类体系提升为本体的快速解决方案。可以通过对OWL DL子语言进行限制，得到OWL Lite子语言，OWL Lite的计算复杂度比DL低。Lite除去了DL中的枚举类、不相交声明和任意基数约束。</span>\n\n<span style=\"line-height: 15px;\"> OWL Lite的特点是易学易用，如果关注的重点是一个简洁的本体语言，就可以选用OWL Lite。OWL Lite增强了OWl DL中的公理约束，可以保证快速高效的推理。OWL Lite可以利用已经实现的逻辑推理系统进行推理。</span>\n\n[![owl11](http://farm6.staticflickr.com/5461/9335813301_870c4db228.jpg)](http://www.flickr.com/photos/ovbeeshoot/9335813301/ \"Flickr 上 Liar1992 的 owl11\")\n\n**3.OWL的类**\n\n-类提供了对具有相似特性的资源进行分组的抽象机制，和RDFS的类相似。\n\n-类包括<span style=\"color: #ff0000;\">类的内涵</span>和<span style=\"color: #ff0000;\">类的外延</span>，内涵是类的描述和类的公理的总和，外延是类的实例的集合体。\n\n-OWL Lite和OWL DL中，个体不能为类，类和个体属于不相交的论域，属性和数据值也是如此。但是在owl FULL中允许自由使用RDFS，一个类或者元类可能同时为另一个类的实例。\n\nOWL的类通过<span style=\"color: #ff0000;\">类描述<span style=\"color: #000000;\">进行描述并使用</span><span style=\"color: #000000;\"><span style=\"color: #ff0000;\">类公理</span>进行结合。</span></span>\n\n*   **<span style=\"line-height: 28px;\">本体的头部</span>**\n\n        OWL本体是一个RDF文档，包含在一个<span style=\"color: #ff0000;\">rdf:RDF</span>元素中。一个OWL本体可能以一系列的关于本体的声明作为开始，包含注释、版本控制以及导入其他本体等内容，称为本体头部。\n<span style=\"color: #ff0000;\">owl:Ontology</span>元素是用来声明关于当前文档的OWL元数据的，可以记录版本信息和导入文档所依赖的一些定义。rdf:about属性为本体提供名称和引用，一般取值为空表示本体的名称是owl:Ontology元素的基准URI，即本体所在的文档URI或上下文中<span style=\"color: #ff0000;\">xml:base</span>指定的URI。<span style=\"color: #ff0000;\">rdfs:coment</span>和<span style=\"color: #ff0000;\">rdfs:label</span>为本体提供自然语言注释和标签。<span style=\"color: #ff0000;\">owl:priorVersion</span>为本体版本控制提供相关信息。owl:imports用于导入其他一些文体，将内容引入为当前文档的一部分。\n\n因此一个标注OWL文档的模式如下：\n\n<pre class=\"brush: xml; gutter: true\">&lt;?xml version=&quot;1.0&quot;?&gt;\n&lt;rdf:RDF\n    xmlns:foaf=&quot;http://xmlns.com/foaf/0.1/&quot;\n    xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;\n  xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema#&quot;\n    xmlns:rdfs=&quot;http://www.w3.org/2000/01/rdf-schema#&quot;\n    xmlns:aaa=&quot;http://www.w3.org/2002/07/aaa#&quot;\n    xmlns:abc=&quot;http://www.w3.org/2003/01/geo/abc#&quot;\n    xmlns=&quot;http://geoontology.altervista.org/abc.owl#&quot;\n  xml:base=&quot;http://geoontology.altervista.org/bbb.owl&quot;&gt;\n  &lt;owl:Ontology rdf:about=&quot;&quot;&gt;\n    &lt;rdfs:comment xml:lang=&quot;en&quot;&gt;Hi&lt;/rdfs:comment&gt;\n    &lt;rdfs:comment xml:lang=&quot;it&quot;&gt;Hello.&lt;/rdfs:comment&gt;\n    &lt;owl:versionInfo rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;\n    &gt;0.0.2&lt;/owl:versionInfo&gt;\n    &lt;rdfs:label rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;\n    &gt;……&lt;/rdfs:label&gt;\n  &lt;/owl:Ontology&gt;\n\n&lt;owl:DatatypeProperty rdf:ID=&quot;……&quot;&gt;\n             ……\n  &lt;/owl:DatatypeProperty&gt;\n &lt;owl:ObjectProperty rdf:about=&quot;……&quot;&gt;\n             ……\n  &lt;/owl:ObjectProperty&gt;\n&lt;/rdf:RDF&gt;</pre>\n\n*   **<span style=\"line-height: 15px;\">类描述</span>**\n\n类描述是类公理的基本构造模块，也成为类定义。类描述通过类的名称，或者通过指定一个匿名类的外延来描述一个OWL类。以下是类描述的六种类型：\n\n<span style=\"color: #ff0000;\">—简单类描述</span>：<span style=\"color: #ff0000;\"> owl：Class</span>命名实例，是rdfs：Class的子类。如：\n\n&lt;owl:Class rdf:ID=\"Human\"&gt;\n\n又如：\n\n<pre class=\"brush: xml; gutter: true\">&lt;owl:Class rdf:ID=&quot;Person&quot;/&gt;\n    &lt;owl:Class rdf:ID=&quot;Male&quot;/&gt;\n    &lt;owl:Class rdf:ID=&quot;Man&quot;&gt;\n    &lt;rdfs:subClassOf rdf:resource=&quot;#Person&quot;/&gt;\n&lt;/owl:Class&gt;\n&lt;owl:Class rdf:about=&quot;#Man&quot;/&gt;\n    &lt;rdfs:subClassOf rdf:resource=&quot;#Male&quot;/&gt;\n&lt;/owl:Class&gt;</pre>\n\n这里定义了Person、Man、Male三个类，并且声明了Man是Person和Male的子类。\n\n需要注意的是Lite和DL中，所有类的声明都<span style=\"color: #ff0000;\">必须</span>采用<span style=\"color: #ff0000;\">owl:Class</span>或<span style=\"color: #ff0000;\">owl：Restriction</span>。如果对于枚举、交、并、补的类描述赋予一个RDF标识符，则这并不是一个描述类，而是一个完全类的类公理。\n\nowl中保留了两个预定义的类，分别是<span style=\"color: #ff0000;\">owl：Thing</span>和<span style=\"color: #ff0000;\">owl：Nothing</span>。前者是所有个体的集合，后者是空集。所有的owl类都是owl：Thing的子类，而owl：Nothing是所有类的子类。owl子类的概念和rdfs：subClassOf相同。\n\n<span style=\"color: #ff0000;\">—枚举类</span>：采用<span style=\"color: #ff0000;\">owl：oneOf</span>进行类描述，该内置OWL属性的值必须是一个个体或类的实例的列表。因此可以通过枚举实例的方法来描述类。该类的外延就是所有枚举类的个体。如下RDF/XML语法定义了一个包括地球大洲的类\n\n<pre class=\"brush: xml; gutter: true\">&lt;owl:Class&gt;\n    &lt;owl:oneOf rdf:parseType=&quot;Collection&quot;&gt;\n        &lt;owl:Thing rdf:about=&quot;#Eurasia&quot;/&gt;\n        &lt;owl:Thing rdf:about=&quot;#Africa&quot;/&gt;\n        &lt;owl:Thing rdf:about=&quot;#NorthAmerica&quot;/&gt;\n        &lt;owl:Thing rdf:about=&quot;#SouthAmerica&quot;/&gt;\n        &lt;owl:Thing rdf:about=&quot;#Australia&quot;/&gt;\n        &lt;owl:Thing rdf:about=&quot;#Antarctica&quot;/&gt;    \n    &lt;/owl:oneOf&gt;\n&lt;/owl:Class&gt;</pre>\n\n其中，&lt;owl:Thing rdf:about=\"…\"/&gt;引用的是个体。\n\n又如：\n\n<pre class=\"brush: xml; gutter: true\"> &lt;owl:Class rdf:ID=&quot;RGBColor&quot;&gt;\n      &lt;owl:oneOf rdf:parseType=&quot;Collection&quot;&gt;\n           &lt;owl:Thing rdf:about=&quot;#Red&quot;/&gt;\n           &lt;owl:Thing rdf:about=&quot;#Green&quot;/&gt;\n           &lt;owl:Thing rdf:about=&quot;#Blue&quot;/&gt;\n      &lt;/owl:oneOf&gt;\n&lt;/owl:Class&gt;</pre>\n\n这里定义了颜色类，根据定义，所有的个体都是owl：Thing的实例OWL Lite不能使用枚举类。\n\n—属性限制<span style=\"color: #ff0000;\">owl：Restriction</span>，是特殊类型的类描述。它描述了匿名类，即满足限制的所有个体的类，包括值约束（value constraint）和基数约束（cardinality constraint）。\n\n值约束是当属性作用于特定的类描述时对其值进行约束，如可能引起某些个体，它们的属性adjacentTo 的值应该是Region，相当于定义域或者值域的概念，并将其应用于类公理内，甚至就是Region的类公理内。OW中的值约束不仅仅类似rdfs：range只在类描述中起作用，也在使用该属性的所有场合有效。\n\n基数约束在特定类的描述中对属性值的数量进行限制，例如hasPlayer在足球队有11个值，但是在篮球只有5个值。OWL还支持定义全局属性技术的构子，即owl：FunctionalProperty和owl：InverseFunctionalProperty。形式如下：\n\n<pre class=\"brush: xml; gutter: true\">&lt;owl:Restriction&gt;\n    &lt;owl:onProperty rdf:resource=&quot;(some property)&quot;&gt;\n&lt;/owl:Restriction&gt;</pre>\n\n属性限制也可以作用于数值属性和对象属性，前者的值是数据字面量，后者的值为个体\n\n值约束包括：\n\n<span style=\"color: #000000;\"><span style=\"color: #ff0000;\">owl：allValuesFrom</span>，连接约束类和类描述货数据范围。它特定属性的值（属性的值域）要么是类描述的成员，要么是指定数据范围内的数据值，一个简单的例子：</span>\n\n<pre class=\"brush: xml; gutter: true\">&lt;owl:Restriction&gt;\n    &lt;owl:onProperty rdf:resouce=&quot;#hasParent&quot;/&gt;\n    &lt;owl:allValuesFrom rdf:resouce=&quot;#Human&quot;/&gt;\n&lt;/owl:Restriction&gt;</pre>\n\n它描述了一个OWL的匿名类，对其所有的个体而言，如果它具有属性hasParent，则属性hasParent的值必须是类Human。在OWL Lite中owl：allValuesFrom和一阶谓词逻辑中的全称量词类似。\n\n<span style=\"color: #ff0000;\">owl：someValuesFrom</span>，它连接约束类和描述类或者数据范围。它描述的类中至少有一个属性的值为描述类或者数据范围内的值。即可能存在部数据描述类或者数据范围的实例。以下例子描述了个体的类，这些个体的父母至少有一个属于Physician\n\n<pre class=\"brush: actionscript3; gutter: true\">&lt;owl:Restriction&gt;\n    &lt;owl:onProperty rdf:resouce=&quot;hasParent&quot;/&gt;\n    &lt;owl:someValuesFrom rdf:resouce=&quot;#Physician&quot;/&gt;\n&lt;/owl:Restriction&gt;</pre>\n\n<span style=\"color: #ff0000;\">owl:hasValue</span>它连接约束类和一个V，V可以为个体或者数据值，它描述所有个体的一个类，其属性最少有一个值在语义上等于V，类似AllvaluesFrom的唯一值定义。Lite中没有该值约束，示例如下，描述了一个类，个体Clinton是他/她们的父母亲：\n\n<pre class=\"brush: xml; gutter: true\">&lt;owl:Restriction&gt;\n     &lt;owl:onProperty rdf:resource=&quot;#hasParent&quot;/&gt;\n     &lt;owl:hasValue rdf:resouce=&quot;#Cliton&quot;/&gt;\n&lt;/owl:Restriction&gt;</pre>\n\n基数约束包括：\n\n<span style=\"color: #ff0000;\">owl:maxCardinality</span>：\n\n<span style=\"color: #ff0000;\">owl:minCardinality</span>：\n\n<span style=\"color: #ff0000;\">owl:cardinality</span>：\n\n—\n\n—\n\n—\n\n第一种类型通过类名描述一个类，其余通过对类的外延进行约束来描述匿名类。第二种不多不少枚举类的个体。第三种包括满足属性限制的所有类。四五六类型包括满足类描述布尔运算的类，可以看成是与、或、非。后面四中类描述可能导致嵌套结构，因此理论上可以构造任意复杂的类描述。\n\n参考资料\n\n[本体语言OWL](http://blog.sina.com.cn/s/blog_6c42aaa60100nhps.html \"本体语言OWL\")\n\n[语义Web原理及应用](http://www.amazon.cn/gp/product/B002NKMS7S/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B002NKMS7S&amp;linkCode=as2&amp;tag=ovjaywang-23)![](http://ir-cn.amazon-adsystem.com/e/ir?t=ovjaywang-23&amp;l=as2&amp;o=28&amp;a=B002NKMS7S)","source":"_posts/OWL的语义语法及Jena初步.md","raw":"---\ntitle: OWL的语义语法及Jena初步\ncategories:\n  - 什么都学一下\n  - 代码狗\n  - 学习log\ntags:\n  - jena\n  - 本体\n  - 语义网\nid: 304\ndate: 2013-07-21 05:07:26\n---\n\n1.  **OWL演化**\n\nOWL是语义WEB的层级结构核心，在语义层次上解决WEB信息共享和交换的基础。它是RDFS的衍伸，并基于DAML+OIL的拓展。RDFS相当于二元谓词，相当于类和属性的层级体系，但是存在以下几点局限性：\n\n*   属性的局部范围——rdfs：range对所有的类定义了属性的值，但是不能仅仅对某几个类进行约束。eg.不能描述牛吃草，而别的动物也可能吃肉。\n*   不相交——有些类是不相交的。eg.例如男人和女人是不相交的，但是在RDFS中只能声明为“人”的子类。\n*   类的布尔组合——可以通过类的布尔组合，如并、交、补来定义新类。eg.将“人”定义为“男人”和“女人”的并。\n*   基数约束——可以对属性值的数量进行限制。eg.一个人有一个人的父亲和一个母亲；一门课至少由一位老师任教等。\n*   属性性质——可以声明一个属性是传递的（如大于）或者一个属性的值是唯一的（母亲），或者一个属性是另一个属性的逆（吃与被吃）\nOWL支持一下三种描述本体的条件\n\n*   良定义语法\n*   形式化语义\n*   有效的推理支持，包括：\n\n1.  <span style=\"color: #ff0000;\">类成员关系的推理</span>-x是类C的实例，类C是类D子类，则x也是D的一个实例\n2.  <span style=\"color: #ff0000;\">类的等价关系推理</span>-A等价于B，B等价于C，则A等价于C\n3.  <span style=\"color: #ff0000;\">一致性推理</span>-x是A类的一个实例，类A是类B与类C的交的子集，类A是类D的一个子类，而B与D不相交。这里出现了不一致性。因为A为空，却又实例x\n4.  <span style=\"color: #ff0000;\">分类推理</span>-如果已经声明“属性-值”对是实例属于类A的充分条件，则如果x满足该条件，即具有这样的“属性-值”对，则x一定是A的实例\n\n**2.OWL三种分类**\n\n*   <span style=\"line-height: 15px;\"><span style=\"color: #ff0000;\">OWL-FULL</span>：提供了最强大的表达能力和使用RDF语法的最大自由，但是没有可计算性的保证。OWL FULL中类即是<span style=\"color: #ff0000;\">个体的集合<span style=\"color: #000000;\">也可以是<span style=\"color: #ff0000;\">个体<span style=\"color: #000000;\">。与OWL DL和Lite相比，个体和类是分离的集合，即一个资源不能同时是个体和类，但在Full中可以。OWL FULL允许本体对预定义的RDF或OWL词汇表的增强，但是难以实现OWL FULL中所有构子的推理。</span></span></span></span></span>\n\n它的优点是和RDF完全兼容，所有合法的RDF文档都是合法的OWL FULL文档，所有RDF(S)结论都是OWL FULL结论。OWL FULL的缺点是该语言的表达能力太强，以致推理变得不可判定。如果将保持对RDF的兼容性作为主要目标，则应该选择FULL。OWL FULL将RDF拓展为一个完备的本体语言，克服了OWL DL和RDFS在语义上的冲突，但是OWL FULL消除了基数限制中对传递型属性的约束，因此不能保证推理是可判定的。\n\n*   <span style=\"line-height: 15px;\"><span style=\"color: #ff0000;\">OWL DL</span>：OWL保留了强大表达能力的同时，也具有<span style=\"color: #ff0000;\">计算完备性</span>（所有结论都是可以判定的）和<span style=\"color: #ff0000;\">可判定性</span>（所有的计算都在有限时间内终止）。DL对应于描述逻辑（Description Logic），而描述逻辑是OWL的形式化基础。</span>\n\n<span style=\"line-height: 15px;\">OWL DL的特点是它支持有效的推理，缺点和Lite一样，失去了RDF的兼容性。一个RDF文档在成为OWL DL文档之前必须进行适当的拓展和约束，一个合法的OWL DL文档是一个RDF文档。如果用户保证推理的可判定型和本体语言的强表达能力作为主要目标，则可以选用OWL DL。OWL DL忽略了对RDFS的兼容性，它主要针对概念，属性，个体之间关系的描述，以保证强大的语义表达能力。DL采用了RDFS的数据类型机制和内嵌的XMLSchema数据类型。</span>\n\n*   <span style=\"line-height: 15px;\"><span style=\"color: #ff0000;\">OWL Lite</span>：它是支持分类体系和简单约束的owl语言，例如基数约束，但是基数的值只能是1和0。虽然它的表达能力较弱，但是提供了词典和分类体系提升为本体的快速解决方案。可以通过对OWL DL子语言进行限制，得到OWL Lite子语言，OWL Lite的计算复杂度比DL低。Lite除去了DL中的枚举类、不相交声明和任意基数约束。</span>\n\n<span style=\"line-height: 15px;\"> OWL Lite的特点是易学易用，如果关注的重点是一个简洁的本体语言，就可以选用OWL Lite。OWL Lite增强了OWl DL中的公理约束，可以保证快速高效的推理。OWL Lite可以利用已经实现的逻辑推理系统进行推理。</span>\n\n[![owl11](http://farm6.staticflickr.com/5461/9335813301_870c4db228.jpg)](http://www.flickr.com/photos/ovbeeshoot/9335813301/ \"Flickr 上 Liar1992 的 owl11\")\n\n**3.OWL的类**\n\n-类提供了对具有相似特性的资源进行分组的抽象机制，和RDFS的类相似。\n\n-类包括<span style=\"color: #ff0000;\">类的内涵</span>和<span style=\"color: #ff0000;\">类的外延</span>，内涵是类的描述和类的公理的总和，外延是类的实例的集合体。\n\n-OWL Lite和OWL DL中，个体不能为类，类和个体属于不相交的论域，属性和数据值也是如此。但是在owl FULL中允许自由使用RDFS，一个类或者元类可能同时为另一个类的实例。\n\nOWL的类通过<span style=\"color: #ff0000;\">类描述<span style=\"color: #000000;\">进行描述并使用</span><span style=\"color: #000000;\"><span style=\"color: #ff0000;\">类公理</span>进行结合。</span></span>\n\n*   **<span style=\"line-height: 28px;\">本体的头部</span>**\n\n        OWL本体是一个RDF文档，包含在一个<span style=\"color: #ff0000;\">rdf:RDF</span>元素中。一个OWL本体可能以一系列的关于本体的声明作为开始，包含注释、版本控制以及导入其他本体等内容，称为本体头部。\n<span style=\"color: #ff0000;\">owl:Ontology</span>元素是用来声明关于当前文档的OWL元数据的，可以记录版本信息和导入文档所依赖的一些定义。rdf:about属性为本体提供名称和引用，一般取值为空表示本体的名称是owl:Ontology元素的基准URI，即本体所在的文档URI或上下文中<span style=\"color: #ff0000;\">xml:base</span>指定的URI。<span style=\"color: #ff0000;\">rdfs:coment</span>和<span style=\"color: #ff0000;\">rdfs:label</span>为本体提供自然语言注释和标签。<span style=\"color: #ff0000;\">owl:priorVersion</span>为本体版本控制提供相关信息。owl:imports用于导入其他一些文体，将内容引入为当前文档的一部分。\n\n因此一个标注OWL文档的模式如下：\n\n<pre class=\"brush: xml; gutter: true\">&lt;?xml version=&quot;1.0&quot;?&gt;\n&lt;rdf:RDF\n    xmlns:foaf=&quot;http://xmlns.com/foaf/0.1/&quot;\n    xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;\n  xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema#&quot;\n    xmlns:rdfs=&quot;http://www.w3.org/2000/01/rdf-schema#&quot;\n    xmlns:aaa=&quot;http://www.w3.org/2002/07/aaa#&quot;\n    xmlns:abc=&quot;http://www.w3.org/2003/01/geo/abc#&quot;\n    xmlns=&quot;http://geoontology.altervista.org/abc.owl#&quot;\n  xml:base=&quot;http://geoontology.altervista.org/bbb.owl&quot;&gt;\n  &lt;owl:Ontology rdf:about=&quot;&quot;&gt;\n    &lt;rdfs:comment xml:lang=&quot;en&quot;&gt;Hi&lt;/rdfs:comment&gt;\n    &lt;rdfs:comment xml:lang=&quot;it&quot;&gt;Hello.&lt;/rdfs:comment&gt;\n    &lt;owl:versionInfo rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;\n    &gt;0.0.2&lt;/owl:versionInfo&gt;\n    &lt;rdfs:label rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;\n    &gt;……&lt;/rdfs:label&gt;\n  &lt;/owl:Ontology&gt;\n\n&lt;owl:DatatypeProperty rdf:ID=&quot;……&quot;&gt;\n             ……\n  &lt;/owl:DatatypeProperty&gt;\n &lt;owl:ObjectProperty rdf:about=&quot;……&quot;&gt;\n             ……\n  &lt;/owl:ObjectProperty&gt;\n&lt;/rdf:RDF&gt;</pre>\n\n*   **<span style=\"line-height: 15px;\">类描述</span>**\n\n类描述是类公理的基本构造模块，也成为类定义。类描述通过类的名称，或者通过指定一个匿名类的外延来描述一个OWL类。以下是类描述的六种类型：\n\n<span style=\"color: #ff0000;\">—简单类描述</span>：<span style=\"color: #ff0000;\"> owl：Class</span>命名实例，是rdfs：Class的子类。如：\n\n&lt;owl:Class rdf:ID=\"Human\"&gt;\n\n又如：\n\n<pre class=\"brush: xml; gutter: true\">&lt;owl:Class rdf:ID=&quot;Person&quot;/&gt;\n    &lt;owl:Class rdf:ID=&quot;Male&quot;/&gt;\n    &lt;owl:Class rdf:ID=&quot;Man&quot;&gt;\n    &lt;rdfs:subClassOf rdf:resource=&quot;#Person&quot;/&gt;\n&lt;/owl:Class&gt;\n&lt;owl:Class rdf:about=&quot;#Man&quot;/&gt;\n    &lt;rdfs:subClassOf rdf:resource=&quot;#Male&quot;/&gt;\n&lt;/owl:Class&gt;</pre>\n\n这里定义了Person、Man、Male三个类，并且声明了Man是Person和Male的子类。\n\n需要注意的是Lite和DL中，所有类的声明都<span style=\"color: #ff0000;\">必须</span>采用<span style=\"color: #ff0000;\">owl:Class</span>或<span style=\"color: #ff0000;\">owl：Restriction</span>。如果对于枚举、交、并、补的类描述赋予一个RDF标识符，则这并不是一个描述类，而是一个完全类的类公理。\n\nowl中保留了两个预定义的类，分别是<span style=\"color: #ff0000;\">owl：Thing</span>和<span style=\"color: #ff0000;\">owl：Nothing</span>。前者是所有个体的集合，后者是空集。所有的owl类都是owl：Thing的子类，而owl：Nothing是所有类的子类。owl子类的概念和rdfs：subClassOf相同。\n\n<span style=\"color: #ff0000;\">—枚举类</span>：采用<span style=\"color: #ff0000;\">owl：oneOf</span>进行类描述，该内置OWL属性的值必须是一个个体或类的实例的列表。因此可以通过枚举实例的方法来描述类。该类的外延就是所有枚举类的个体。如下RDF/XML语法定义了一个包括地球大洲的类\n\n<pre class=\"brush: xml; gutter: true\">&lt;owl:Class&gt;\n    &lt;owl:oneOf rdf:parseType=&quot;Collection&quot;&gt;\n        &lt;owl:Thing rdf:about=&quot;#Eurasia&quot;/&gt;\n        &lt;owl:Thing rdf:about=&quot;#Africa&quot;/&gt;\n        &lt;owl:Thing rdf:about=&quot;#NorthAmerica&quot;/&gt;\n        &lt;owl:Thing rdf:about=&quot;#SouthAmerica&quot;/&gt;\n        &lt;owl:Thing rdf:about=&quot;#Australia&quot;/&gt;\n        &lt;owl:Thing rdf:about=&quot;#Antarctica&quot;/&gt;    \n    &lt;/owl:oneOf&gt;\n&lt;/owl:Class&gt;</pre>\n\n其中，&lt;owl:Thing rdf:about=\"…\"/&gt;引用的是个体。\n\n又如：\n\n<pre class=\"brush: xml; gutter: true\"> &lt;owl:Class rdf:ID=&quot;RGBColor&quot;&gt;\n      &lt;owl:oneOf rdf:parseType=&quot;Collection&quot;&gt;\n           &lt;owl:Thing rdf:about=&quot;#Red&quot;/&gt;\n           &lt;owl:Thing rdf:about=&quot;#Green&quot;/&gt;\n           &lt;owl:Thing rdf:about=&quot;#Blue&quot;/&gt;\n      &lt;/owl:oneOf&gt;\n&lt;/owl:Class&gt;</pre>\n\n这里定义了颜色类，根据定义，所有的个体都是owl：Thing的实例OWL Lite不能使用枚举类。\n\n—属性限制<span style=\"color: #ff0000;\">owl：Restriction</span>，是特殊类型的类描述。它描述了匿名类，即满足限制的所有个体的类，包括值约束（value constraint）和基数约束（cardinality constraint）。\n\n值约束是当属性作用于特定的类描述时对其值进行约束，如可能引起某些个体，它们的属性adjacentTo 的值应该是Region，相当于定义域或者值域的概念，并将其应用于类公理内，甚至就是Region的类公理内。OW中的值约束不仅仅类似rdfs：range只在类描述中起作用，也在使用该属性的所有场合有效。\n\n基数约束在特定类的描述中对属性值的数量进行限制，例如hasPlayer在足球队有11个值，但是在篮球只有5个值。OWL还支持定义全局属性技术的构子，即owl：FunctionalProperty和owl：InverseFunctionalProperty。形式如下：\n\n<pre class=\"brush: xml; gutter: true\">&lt;owl:Restriction&gt;\n    &lt;owl:onProperty rdf:resource=&quot;(some property)&quot;&gt;\n&lt;/owl:Restriction&gt;</pre>\n\n属性限制也可以作用于数值属性和对象属性，前者的值是数据字面量，后者的值为个体\n\n值约束包括：\n\n<span style=\"color: #000000;\"><span style=\"color: #ff0000;\">owl：allValuesFrom</span>，连接约束类和类描述货数据范围。它特定属性的值（属性的值域）要么是类描述的成员，要么是指定数据范围内的数据值，一个简单的例子：</span>\n\n<pre class=\"brush: xml; gutter: true\">&lt;owl:Restriction&gt;\n    &lt;owl:onProperty rdf:resouce=&quot;#hasParent&quot;/&gt;\n    &lt;owl:allValuesFrom rdf:resouce=&quot;#Human&quot;/&gt;\n&lt;/owl:Restriction&gt;</pre>\n\n它描述了一个OWL的匿名类，对其所有的个体而言，如果它具有属性hasParent，则属性hasParent的值必须是类Human。在OWL Lite中owl：allValuesFrom和一阶谓词逻辑中的全称量词类似。\n\n<span style=\"color: #ff0000;\">owl：someValuesFrom</span>，它连接约束类和描述类或者数据范围。它描述的类中至少有一个属性的值为描述类或者数据范围内的值。即可能存在部数据描述类或者数据范围的实例。以下例子描述了个体的类，这些个体的父母至少有一个属于Physician\n\n<pre class=\"brush: actionscript3; gutter: true\">&lt;owl:Restriction&gt;\n    &lt;owl:onProperty rdf:resouce=&quot;hasParent&quot;/&gt;\n    &lt;owl:someValuesFrom rdf:resouce=&quot;#Physician&quot;/&gt;\n&lt;/owl:Restriction&gt;</pre>\n\n<span style=\"color: #ff0000;\">owl:hasValue</span>它连接约束类和一个V，V可以为个体或者数据值，它描述所有个体的一个类，其属性最少有一个值在语义上等于V，类似AllvaluesFrom的唯一值定义。Lite中没有该值约束，示例如下，描述了一个类，个体Clinton是他/她们的父母亲：\n\n<pre class=\"brush: xml; gutter: true\">&lt;owl:Restriction&gt;\n     &lt;owl:onProperty rdf:resource=&quot;#hasParent&quot;/&gt;\n     &lt;owl:hasValue rdf:resouce=&quot;#Cliton&quot;/&gt;\n&lt;/owl:Restriction&gt;</pre>\n\n基数约束包括：\n\n<span style=\"color: #ff0000;\">owl:maxCardinality</span>：\n\n<span style=\"color: #ff0000;\">owl:minCardinality</span>：\n\n<span style=\"color: #ff0000;\">owl:cardinality</span>：\n\n—\n\n—\n\n—\n\n第一种类型通过类名描述一个类，其余通过对类的外延进行约束来描述匿名类。第二种不多不少枚举类的个体。第三种包括满足属性限制的所有类。四五六类型包括满足类描述布尔运算的类，可以看成是与、或、非。后面四中类描述可能导致嵌套结构，因此理论上可以构造任意复杂的类描述。\n\n参考资料\n\n[本体语言OWL](http://blog.sina.com.cn/s/blog_6c42aaa60100nhps.html \"本体语言OWL\")\n\n[语义Web原理及应用](http://www.amazon.cn/gp/product/B002NKMS7S/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B002NKMS7S&amp;linkCode=as2&amp;tag=ovjaywang-23)![](http://ir-cn.amazon-adsystem.com/e/ir?t=ovjaywang-23&amp;l=as2&amp;o=28&amp;a=B002NKMS7S)","slug":"OWL的语义语法及Jena初步","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7lk0018uco437orm6s7","content":"<ol>\n<li><strong>OWL演化</strong></li>\n</ol>\n<p>OWL是语义WEB的层级结构核心，在语义层次上解决WEB信息共享和交换的基础。它是RDFS的衍伸，并基于DAML+OIL的拓展。RDFS相当于二元谓词，相当于类和属性的层级体系，但是存在以下几点局限性：</p>\n<ul>\n<li>属性的局部范围——rdfs：range对所有的类定义了属性的值，但是不能仅仅对某几个类进行约束。eg.不能描述牛吃草，而别的动物也可能吃肉。</li>\n<li>不相交——有些类是不相交的。eg.例如男人和女人是不相交的，但是在RDFS中只能声明为“人”的子类。</li>\n<li>类的布尔组合——可以通过类的布尔组合，如并、交、补来定义新类。eg.将“人”定义为“男人”和“女人”的并。</li>\n<li>基数约束——可以对属性值的数量进行限制。eg.一个人有一个人的父亲和一个母亲；一门课至少由一位老师任教等。</li>\n<li><p>属性性质——可以声明一个属性是传递的（如大于）或者一个属性的值是唯一的（母亲），或者一个属性是另一个属性的逆（吃与被吃）<br>OWL支持一下三种描述本体的条件</p>\n</li>\n<li><p>良定义语法</p>\n</li>\n<li>形式化语义</li>\n<li>有效的推理支持，包括：</li>\n</ul>\n<ol>\n<li><span style=\"color: #ff0000\">类成员关系的推理</span>-x是类C的实例，类C是类D子类，则x也是D的一个实例</li>\n<li><span style=\"color: #ff0000\">类的等价关系推理</span>-A等价于B，B等价于C，则A等价于C</li>\n<li><span style=\"color: #ff0000\">一致性推理</span>-x是A类的一个实例，类A是类B与类C的交的子集，类A是类D的一个子类，而B与D不相交。这里出现了不一致性。因为A为空，却又实例x</li>\n<li><span style=\"color: #ff0000\">分类推理</span>-如果已经声明“属性-值”对是实例属于类A的充分条件，则如果x满足该条件，即具有这样的“属性-值”对，则x一定是A的实例</li>\n</ol>\n<p><strong>2.OWL三种分类</strong></p>\n<ul>\n<li><span style=\"line-height: 15px\"><span style=\"color: #ff0000\">OWL-FULL</span>：提供了最强大的表达能力和使用RDF语法的最大自由，但是没有可计算性的保证。OWL FULL中类即是<span style=\"color: #ff0000\">个体的集合<span style=\"color: #000000\">也可以是<span style=\"color: #ff0000\">个体<span style=\"color: #000000\">。与OWL DL和Lite相比，个体和类是分离的集合，即一个资源不能同时是个体和类，但在Full中可以。OWL FULL允许本体对预定义的RDF或OWL词汇表的增强，但是难以实现OWL FULL中所有构子的推理。</span></span></span></span></span></li>\n</ul>\n<p>它的优点是和RDF完全兼容，所有合法的RDF文档都是合法的OWL FULL文档，所有RDF(S)结论都是OWL FULL结论。OWL FULL的缺点是该语言的表达能力太强，以致推理变得不可判定。如果将保持对RDF的兼容性作为主要目标，则应该选择FULL。OWL FULL将RDF拓展为一个完备的本体语言，克服了OWL DL和RDFS在语义上的冲突，但是OWL FULL消除了基数限制中对传递型属性的约束，因此不能保证推理是可判定的。</p>\n<ul>\n<li><span style=\"line-height: 15px\"><span style=\"color: #ff0000\">OWL DL</span>：OWL保留了强大表达能力的同时，也具有<span style=\"color: #ff0000\">计算完备性</span>（所有结论都是可以判定的）和<span style=\"color: #ff0000\">可判定性</span>（所有的计算都在有限时间内终止）。DL对应于描述逻辑（Description Logic），而描述逻辑是OWL的形式化基础。</span></li>\n</ul>\n<p><span style=\"line-height: 15px\">OWL DL的特点是它支持有效的推理，缺点和Lite一样，失去了RDF的兼容性。一个RDF文档在成为OWL DL文档之前必须进行适当的拓展和约束，一个合法的OWL DL文档是一个RDF文档。如果用户保证推理的可判定型和本体语言的强表达能力作为主要目标，则可以选用OWL DL。OWL DL忽略了对RDFS的兼容性，它主要针对概念，属性，个体之间关系的描述，以保证强大的语义表达能力。DL采用了RDFS的数据类型机制和内嵌的XMLSchema数据类型。</span></p>\n<ul>\n<li><span style=\"line-height: 15px\"><span style=\"color: #ff0000\">OWL Lite</span>：它是支持分类体系和简单约束的owl语言，例如基数约束，但是基数的值只能是1和0。虽然它的表达能力较弱，但是提供了词典和分类体系提升为本体的快速解决方案。可以通过对OWL DL子语言进行限制，得到OWL Lite子语言，OWL Lite的计算复杂度比DL低。Lite除去了DL中的枚举类、不相交声明和任意基数约束。</span></li>\n</ul>\n<p><span style=\"line-height: 15px\"> OWL Lite的特点是易学易用，如果关注的重点是一个简洁的本体语言，就可以选用OWL Lite。OWL Lite增强了OWl DL中的公理约束，可以保证快速高效的推理。OWL Lite可以利用已经实现的逻辑推理系统进行推理。</span></p>\n<p><a href=\"http://www.flickr.com/photos/ovbeeshoot/9335813301/\" title=\"Flickr 上 Liar1992 的 owl11\" target=\"_blank\" rel=\"external\"><img src=\"http://farm6.staticflickr.com/5461/9335813301_870c4db228.jpg\" alt=\"owl11\"></a></p>\n<p><strong>3.OWL的类</strong></p>\n<p>-类提供了对具有相似特性的资源进行分组的抽象机制，和RDFS的类相似。</p>\n<p>-类包括<span style=\"color: #ff0000\">类的内涵</span>和<span style=\"color: #ff0000\">类的外延</span>，内涵是类的描述和类的公理的总和，外延是类的实例的集合体。</p>\n<p>-OWL Lite和OWL DL中，个体不能为类，类和个体属于不相交的论域，属性和数据值也是如此。但是在owl FULL中允许自由使用RDFS，一个类或者元类可能同时为另一个类的实例。</p>\n<p>OWL的类通过<span style=\"color: #ff0000\">类描述<span style=\"color: #000000\">进行描述并使用</span><span style=\"color: #000000\"><span style=\"color: #ff0000\">类公理</span>进行结合。</span></span></p>\n<ul>\n<li><p><strong><span style=\"line-height: 28px\">本体的头部</span></strong></p>\n<pre><code>OWL本体是一个RDF文档，包含在一个&lt;span style=&quot;color: #ff0000;&quot;&gt;rdf:RDF&lt;/span&gt;元素中。一个OWL本体可能以一系列的关于本体的声明作为开始，包含注释、版本控制以及导入其他本体等内容，称为本体头部。\n</code></pre><p><span style=\"color: #ff0000\">owl:Ontology</span>元素是用来声明关于当前文档的OWL元数据的，可以记录版本信息和导入文档所依赖的一些定义。rdf:about属性为本体提供名称和引用，一般取值为空表示本体的名称是owl:Ontology元素的基准URI，即本体所在的文档URI或上下文中<span style=\"color: #ff0000\">xml:base</span>指定的URI。<span style=\"color: #ff0000\">rdfs:coment</span>和<span style=\"color: #ff0000\">rdfs:label</span>为本体提供自然语言注释和标签。<span style=\"color: #ff0000\">owl:priorVersion</span>为本体版本控制提供相关信息。owl:imports用于导入其他一些文体，将内容引入为当前文档的一部分。</p>\n</li>\n</ul>\n<p>因此一个标注OWL文档的模式如下：</p>\n<pre class=\"brush: xml; gutter: true\">&lt;?xml version=&quot;1.0&quot;?&gt;\n&lt;rdf:RDF\n    xmlns:foaf=&quot;http://xmlns.com/foaf/0.1/&quot;\n    xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;\n  xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema#&quot;\n    xmlns:rdfs=&quot;http://www.w3.org/2000/01/rdf-schema#&quot;\n    xmlns:aaa=&quot;http://www.w3.org/2002/07/aaa#&quot;\n    xmlns:abc=&quot;http://www.w3.org/2003/01/geo/abc#&quot;\n    xmlns=&quot;http://geoontology.altervista.org/abc.owl#&quot;\n  xml:base=&quot;http://geoontology.altervista.org/bbb.owl&quot;&gt;\n  &lt;owl:Ontology rdf:about=&quot;&quot;&gt;\n    &lt;rdfs:comment xml:lang=&quot;en&quot;&gt;Hi&lt;/rdfs:comment&gt;\n    &lt;rdfs:comment xml:lang=&quot;it&quot;&gt;Hello.&lt;/rdfs:comment&gt;\n    &lt;owl:versionInfo rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;\n    &gt;0.0.2&lt;/owl:versionInfo&gt;\n    &lt;rdfs:label rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;\n    &gt;……&lt;/rdfs:label&gt;\n  &lt;/owl:Ontology&gt;\n\n&lt;owl:DatatypeProperty rdf:ID=&quot;……&quot;&gt;\n             ……\n  &lt;/owl:DatatypeProperty&gt;\n &lt;owl:ObjectProperty rdf:about=&quot;……&quot;&gt;\n             ……\n  &lt;/owl:ObjectProperty&gt;\n&lt;/rdf:RDF&gt;</pre>\n\n<ul>\n<li><strong><span style=\"line-height: 15px\">类描述</span></strong></li>\n</ul>\n<p>类描述是类公理的基本构造模块，也成为类定义。类描述通过类的名称，或者通过指定一个匿名类的外延来描述一个OWL类。以下是类描述的六种类型：</p>\n<p><span style=\"color: #ff0000\">—简单类描述</span>：<span style=\"color: #ff0000\"> owl：Class</span>命名实例，是rdfs：Class的子类。如：</p>\n<p>&lt;owl:Class rdf:ID=”Human”&gt;</p>\n<p>又如：</p>\n<pre class=\"brush: xml; gutter: true\">&lt;owl:Class rdf:ID=&quot;Person&quot;/&gt;\n    &lt;owl:Class rdf:ID=&quot;Male&quot;/&gt;\n    &lt;owl:Class rdf:ID=&quot;Man&quot;&gt;\n    &lt;rdfs:subClassOf rdf:resource=&quot;#Person&quot;/&gt;\n&lt;/owl:Class&gt;\n&lt;owl:Class rdf:about=&quot;#Man&quot;/&gt;\n    &lt;rdfs:subClassOf rdf:resource=&quot;#Male&quot;/&gt;\n&lt;/owl:Class&gt;</pre>\n\n<p>这里定义了Person、Man、Male三个类，并且声明了Man是Person和Male的子类。</p>\n<p>需要注意的是Lite和DL中，所有类的声明都<span style=\"color: #ff0000\">必须</span>采用<span style=\"color: #ff0000\">owl:Class</span>或<span style=\"color: #ff0000\">owl：Restriction</span>。如果对于枚举、交、并、补的类描述赋予一个RDF标识符，则这并不是一个描述类，而是一个完全类的类公理。</p>\n<p>owl中保留了两个预定义的类，分别是<span style=\"color: #ff0000\">owl：Thing</span>和<span style=\"color: #ff0000\">owl：Nothing</span>。前者是所有个体的集合，后者是空集。所有的owl类都是owl：Thing的子类，而owl：Nothing是所有类的子类。owl子类的概念和rdfs：subClassOf相同。</p>\n<p><span style=\"color: #ff0000\">—枚举类</span>：采用<span style=\"color: #ff0000\">owl：oneOf</span>进行类描述，该内置OWL属性的值必须是一个个体或类的实例的列表。因此可以通过枚举实例的方法来描述类。该类的外延就是所有枚举类的个体。如下RDF/XML语法定义了一个包括地球大洲的类</p>\n<pre class=\"brush: xml; gutter: true\">&lt;owl:Class&gt;\n    &lt;owl:oneOf rdf:parseType=&quot;Collection&quot;&gt;\n        &lt;owl:Thing rdf:about=&quot;#Eurasia&quot;/&gt;\n        &lt;owl:Thing rdf:about=&quot;#Africa&quot;/&gt;\n        &lt;owl:Thing rdf:about=&quot;#NorthAmerica&quot;/&gt;\n        &lt;owl:Thing rdf:about=&quot;#SouthAmerica&quot;/&gt;\n        &lt;owl:Thing rdf:about=&quot;#Australia&quot;/&gt;\n        &lt;owl:Thing rdf:about=&quot;#Antarctica&quot;/&gt;    \n    &lt;/owl:oneOf&gt;\n&lt;/owl:Class&gt;</pre>\n\n<p>其中，&lt;owl:Thing rdf:about=”…”/&gt;引用的是个体。</p>\n<p>又如：</p>\n<pre class=\"brush: xml; gutter: true\"> &lt;owl:Class rdf:ID=&quot;RGBColor&quot;&gt;\n      &lt;owl:oneOf rdf:parseType=&quot;Collection&quot;&gt;\n           &lt;owl:Thing rdf:about=&quot;#Red&quot;/&gt;\n           &lt;owl:Thing rdf:about=&quot;#Green&quot;/&gt;\n           &lt;owl:Thing rdf:about=&quot;#Blue&quot;/&gt;\n      &lt;/owl:oneOf&gt;\n&lt;/owl:Class&gt;</pre>\n\n<p>这里定义了颜色类，根据定义，所有的个体都是owl：Thing的实例OWL Lite不能使用枚举类。</p>\n<p>—属性限制<span style=\"color: #ff0000\">owl：Restriction</span>，是特殊类型的类描述。它描述了匿名类，即满足限制的所有个体的类，包括值约束（value constraint）和基数约束（cardinality constraint）。</p>\n<p>值约束是当属性作用于特定的类描述时对其值进行约束，如可能引起某些个体，它们的属性adjacentTo 的值应该是Region，相当于定义域或者值域的概念，并将其应用于类公理内，甚至就是Region的类公理内。OW中的值约束不仅仅类似rdfs：range只在类描述中起作用，也在使用该属性的所有场合有效。</p>\n<p>基数约束在特定类的描述中对属性值的数量进行限制，例如hasPlayer在足球队有11个值，但是在篮球只有5个值。OWL还支持定义全局属性技术的构子，即owl：FunctionalProperty和owl：InverseFunctionalProperty。形式如下：</p>\n<pre class=\"brush: xml; gutter: true\">&lt;owl:Restriction&gt;\n    &lt;owl:onProperty rdf:resource=&quot;(some property)&quot;&gt;\n&lt;/owl:Restriction&gt;</pre>\n\n<p>属性限制也可以作用于数值属性和对象属性，前者的值是数据字面量，后者的值为个体</p>\n<p>值约束包括：</p>\n<p><span style=\"color: #000000\"><span style=\"color: #ff0000\">owl：allValuesFrom</span>，连接约束类和类描述货数据范围。它特定属性的值（属性的值域）要么是类描述的成员，要么是指定数据范围内的数据值，一个简单的例子：</span></p>\n<pre class=\"brush: xml; gutter: true\">&lt;owl:Restriction&gt;\n    &lt;owl:onProperty rdf:resouce=&quot;#hasParent&quot;/&gt;\n    &lt;owl:allValuesFrom rdf:resouce=&quot;#Human&quot;/&gt;\n&lt;/owl:Restriction&gt;</pre>\n\n<p>它描述了一个OWL的匿名类，对其所有的个体而言，如果它具有属性hasParent，则属性hasParent的值必须是类Human。在OWL Lite中owl：allValuesFrom和一阶谓词逻辑中的全称量词类似。</p>\n<p><span style=\"color: #ff0000\">owl：someValuesFrom</span>，它连接约束类和描述类或者数据范围。它描述的类中至少有一个属性的值为描述类或者数据范围内的值。即可能存在部数据描述类或者数据范围的实例。以下例子描述了个体的类，这些个体的父母至少有一个属于Physician</p>\n<pre class=\"brush: actionscript3; gutter: true\">&lt;owl:Restriction&gt;\n    &lt;owl:onProperty rdf:resouce=&quot;hasParent&quot;/&gt;\n    &lt;owl:someValuesFrom rdf:resouce=&quot;#Physician&quot;/&gt;\n&lt;/owl:Restriction&gt;</pre>\n\n<p><span style=\"color: #ff0000\">owl:hasValue</span>它连接约束类和一个V，V可以为个体或者数据值，它描述所有个体的一个类，其属性最少有一个值在语义上等于V，类似AllvaluesFrom的唯一值定义。Lite中没有该值约束，示例如下，描述了一个类，个体Clinton是他/她们的父母亲：</p>\n<pre class=\"brush: xml; gutter: true\">&lt;owl:Restriction&gt;\n     &lt;owl:onProperty rdf:resource=&quot;#hasParent&quot;/&gt;\n     &lt;owl:hasValue rdf:resouce=&quot;#Cliton&quot;/&gt;\n&lt;/owl:Restriction&gt;</pre>\n\n<p>基数约束包括：</p>\n<p><span style=\"color: #ff0000\">owl:maxCardinality</span>：</p>\n<p><span style=\"color: #ff0000\">owl:minCardinality</span>：</p>\n<p><span style=\"color: #ff0000\">owl:cardinality</span>：</p>\n<p>—</p>\n<p>—</p>\n<p>—</p>\n<p>第一种类型通过类名描述一个类，其余通过对类的外延进行约束来描述匿名类。第二种不多不少枚举类的个体。第三种包括满足属性限制的所有类。四五六类型包括满足类描述布尔运算的类，可以看成是与、或、非。后面四中类描述可能导致嵌套结构，因此理论上可以构造任意复杂的类描述。</p>\n<p>参考资料</p>\n<p><a href=\"http://blog.sina.com.cn/s/blog_6c42aaa60100nhps.html\" title=\"本体语言OWL\" target=\"_blank\" rel=\"external\">本体语言OWL</a></p>\n<p><a href=\"http://www.amazon.cn/gp/product/B002NKMS7S/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B002NKMS7S&amp;linkCode=as2&amp;tag=ovjaywang-23\" target=\"_blank\" rel=\"external\">语义Web原理及应用</a><img src=\"http://ir-cn.amazon-adsystem.com/e/ir?t=ovjaywang-23&amp;l=as2&amp;o=28&amp;a=B002NKMS7S\" alt=\"\"></p>","excerpt":"","more":"<ol>\n<li><strong>OWL演化</strong></li>\n</ol>\n<p>OWL是语义WEB的层级结构核心，在语义层次上解决WEB信息共享和交换的基础。它是RDFS的衍伸，并基于DAML+OIL的拓展。RDFS相当于二元谓词，相当于类和属性的层级体系，但是存在以下几点局限性：</p>\n<ul>\n<li>属性的局部范围——rdfs：range对所有的类定义了属性的值，但是不能仅仅对某几个类进行约束。eg.不能描述牛吃草，而别的动物也可能吃肉。</li>\n<li>不相交——有些类是不相交的。eg.例如男人和女人是不相交的，但是在RDFS中只能声明为“人”的子类。</li>\n<li>类的布尔组合——可以通过类的布尔组合，如并、交、补来定义新类。eg.将“人”定义为“男人”和“女人”的并。</li>\n<li>基数约束——可以对属性值的数量进行限制。eg.一个人有一个人的父亲和一个母亲；一门课至少由一位老师任教等。</li>\n<li><p>属性性质——可以声明一个属性是传递的（如大于）或者一个属性的值是唯一的（母亲），或者一个属性是另一个属性的逆（吃与被吃）<br>OWL支持一下三种描述本体的条件</p>\n</li>\n<li><p>良定义语法</p>\n</li>\n<li>形式化语义</li>\n<li>有效的推理支持，包括：</li>\n</ul>\n<ol>\n<li><span style=\"color: #ff0000\">类成员关系的推理</span>-x是类C的实例，类C是类D子类，则x也是D的一个实例</li>\n<li><span style=\"color: #ff0000\">类的等价关系推理</span>-A等价于B，B等价于C，则A等价于C</li>\n<li><span style=\"color: #ff0000\">一致性推理</span>-x是A类的一个实例，类A是类B与类C的交的子集，类A是类D的一个子类，而B与D不相交。这里出现了不一致性。因为A为空，却又实例x</li>\n<li><span style=\"color: #ff0000\">分类推理</span>-如果已经声明“属性-值”对是实例属于类A的充分条件，则如果x满足该条件，即具有这样的“属性-值”对，则x一定是A的实例</li>\n</ol>\n<p><strong>2.OWL三种分类</strong></p>\n<ul>\n<li><span style=\"line-height: 15px\"><span style=\"color: #ff0000\">OWL-FULL</span>：提供了最强大的表达能力和使用RDF语法的最大自由，但是没有可计算性的保证。OWL FULL中类即是<span style=\"color: #ff0000\">个体的集合<span style=\"color: #000000\">也可以是<span style=\"color: #ff0000\">个体<span style=\"color: #000000\">。与OWL DL和Lite相比，个体和类是分离的集合，即一个资源不能同时是个体和类，但在Full中可以。OWL FULL允许本体对预定义的RDF或OWL词汇表的增强，但是难以实现OWL FULL中所有构子的推理。</span></span></span></span></span></li>\n</ul>\n<p>它的优点是和RDF完全兼容，所有合法的RDF文档都是合法的OWL FULL文档，所有RDF(S)结论都是OWL FULL结论。OWL FULL的缺点是该语言的表达能力太强，以致推理变得不可判定。如果将保持对RDF的兼容性作为主要目标，则应该选择FULL。OWL FULL将RDF拓展为一个完备的本体语言，克服了OWL DL和RDFS在语义上的冲突，但是OWL FULL消除了基数限制中对传递型属性的约束，因此不能保证推理是可判定的。</p>\n<ul>\n<li><span style=\"line-height: 15px\"><span style=\"color: #ff0000\">OWL DL</span>：OWL保留了强大表达能力的同时，也具有<span style=\"color: #ff0000\">计算完备性</span>（所有结论都是可以判定的）和<span style=\"color: #ff0000\">可判定性</span>（所有的计算都在有限时间内终止）。DL对应于描述逻辑（Description Logic），而描述逻辑是OWL的形式化基础。</span></li>\n</ul>\n<p><span style=\"line-height: 15px\">OWL DL的特点是它支持有效的推理，缺点和Lite一样，失去了RDF的兼容性。一个RDF文档在成为OWL DL文档之前必须进行适当的拓展和约束，一个合法的OWL DL文档是一个RDF文档。如果用户保证推理的可判定型和本体语言的强表达能力作为主要目标，则可以选用OWL DL。OWL DL忽略了对RDFS的兼容性，它主要针对概念，属性，个体之间关系的描述，以保证强大的语义表达能力。DL采用了RDFS的数据类型机制和内嵌的XMLSchema数据类型。</span></p>\n<ul>\n<li><span style=\"line-height: 15px\"><span style=\"color: #ff0000\">OWL Lite</span>：它是支持分类体系和简单约束的owl语言，例如基数约束，但是基数的值只能是1和0。虽然它的表达能力较弱，但是提供了词典和分类体系提升为本体的快速解决方案。可以通过对OWL DL子语言进行限制，得到OWL Lite子语言，OWL Lite的计算复杂度比DL低。Lite除去了DL中的枚举类、不相交声明和任意基数约束。</span></li>\n</ul>\n<p><span style=\"line-height: 15px\"> OWL Lite的特点是易学易用，如果关注的重点是一个简洁的本体语言，就可以选用OWL Lite。OWL Lite增强了OWl DL中的公理约束，可以保证快速高效的推理。OWL Lite可以利用已经实现的逻辑推理系统进行推理。</span></p>\n<p><a href=\"http://www.flickr.com/photos/ovbeeshoot/9335813301/\" title=\"Flickr 上 Liar1992 的 owl11\"><img src=\"http://farm6.staticflickr.com/5461/9335813301_870c4db228.jpg\" alt=\"owl11\"></a></p>\n<p><strong>3.OWL的类</strong></p>\n<p>-类提供了对具有相似特性的资源进行分组的抽象机制，和RDFS的类相似。</p>\n<p>-类包括<span style=\"color: #ff0000\">类的内涵</span>和<span style=\"color: #ff0000\">类的外延</span>，内涵是类的描述和类的公理的总和，外延是类的实例的集合体。</p>\n<p>-OWL Lite和OWL DL中，个体不能为类，类和个体属于不相交的论域，属性和数据值也是如此。但是在owl FULL中允许自由使用RDFS，一个类或者元类可能同时为另一个类的实例。</p>\n<p>OWL的类通过<span style=\"color: #ff0000\">类描述<span style=\"color: #000000\">进行描述并使用</span><span style=\"color: #000000\"><span style=\"color: #ff0000\">类公理</span>进行结合。</span></span></p>\n<ul>\n<li><p><strong><span style=\"line-height: 28px\">本体的头部</span></strong></p>\n<pre><code>OWL本体是一个RDF文档，包含在一个&lt;span style=&quot;color: #ff0000;&quot;&gt;rdf:RDF&lt;/span&gt;元素中。一个OWL本体可能以一系列的关于本体的声明作为开始，包含注释、版本控制以及导入其他本体等内容，称为本体头部。\n</code></pre><p><span style=\"color: #ff0000\">owl:Ontology</span>元素是用来声明关于当前文档的OWL元数据的，可以记录版本信息和导入文档所依赖的一些定义。rdf:about属性为本体提供名称和引用，一般取值为空表示本体的名称是owl:Ontology元素的基准URI，即本体所在的文档URI或上下文中<span style=\"color: #ff0000\">xml:base</span>指定的URI。<span style=\"color: #ff0000\">rdfs:coment</span>和<span style=\"color: #ff0000\">rdfs:label</span>为本体提供自然语言注释和标签。<span style=\"color: #ff0000\">owl:priorVersion</span>为本体版本控制提供相关信息。owl:imports用于导入其他一些文体，将内容引入为当前文档的一部分。</p>\n</li>\n</ul>\n<p>因此一个标注OWL文档的模式如下：</p>\n<pre class=\"brush: xml; gutter: true\">&lt;?xml version=&quot;1.0&quot;?&gt;\n&lt;rdf:RDF\n    xmlns:foaf=&quot;http://xmlns.com/foaf/0.1/&quot;\n    xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;\n  xmlns:xsd=&quot;http://www.w3.org/2001/XMLSchema#&quot;\n    xmlns:rdfs=&quot;http://www.w3.org/2000/01/rdf-schema#&quot;\n    xmlns:aaa=&quot;http://www.w3.org/2002/07/aaa#&quot;\n    xmlns:abc=&quot;http://www.w3.org/2003/01/geo/abc#&quot;\n    xmlns=&quot;http://geoontology.altervista.org/abc.owl#&quot;\n  xml:base=&quot;http://geoontology.altervista.org/bbb.owl&quot;&gt;\n  &lt;owl:Ontology rdf:about=&quot;&quot;&gt;\n    &lt;rdfs:comment xml:lang=&quot;en&quot;&gt;Hi&lt;/rdfs:comment&gt;\n    &lt;rdfs:comment xml:lang=&quot;it&quot;&gt;Hello.&lt;/rdfs:comment&gt;\n    &lt;owl:versionInfo rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;\n    &gt;0.0.2&lt;/owl:versionInfo&gt;\n    &lt;rdfs:label rdf:datatype=&quot;http://www.w3.org/2001/XMLSchema#string&quot;\n    &gt;……&lt;/rdfs:label&gt;\n  &lt;/owl:Ontology&gt;\n\n&lt;owl:DatatypeProperty rdf:ID=&quot;……&quot;&gt;\n             ……\n  &lt;/owl:DatatypeProperty&gt;\n &lt;owl:ObjectProperty rdf:about=&quot;……&quot;&gt;\n             ……\n  &lt;/owl:ObjectProperty&gt;\n&lt;/rdf:RDF&gt;</pre>\n\n<ul>\n<li><strong><span style=\"line-height: 15px\">类描述</span></strong></li>\n</ul>\n<p>类描述是类公理的基本构造模块，也成为类定义。类描述通过类的名称，或者通过指定一个匿名类的外延来描述一个OWL类。以下是类描述的六种类型：</p>\n<p><span style=\"color: #ff0000\">—简单类描述</span>：<span style=\"color: #ff0000\"> owl：Class</span>命名实例，是rdfs：Class的子类。如：</p>\n<p>&lt;owl:Class rdf:ID=”Human”&gt;</p>\n<p>又如：</p>\n<pre class=\"brush: xml; gutter: true\">&lt;owl:Class rdf:ID=&quot;Person&quot;/&gt;\n    &lt;owl:Class rdf:ID=&quot;Male&quot;/&gt;\n    &lt;owl:Class rdf:ID=&quot;Man&quot;&gt;\n    &lt;rdfs:subClassOf rdf:resource=&quot;#Person&quot;/&gt;\n&lt;/owl:Class&gt;\n&lt;owl:Class rdf:about=&quot;#Man&quot;/&gt;\n    &lt;rdfs:subClassOf rdf:resource=&quot;#Male&quot;/&gt;\n&lt;/owl:Class&gt;</pre>\n\n<p>这里定义了Person、Man、Male三个类，并且声明了Man是Person和Male的子类。</p>\n<p>需要注意的是Lite和DL中，所有类的声明都<span style=\"color: #ff0000\">必须</span>采用<span style=\"color: #ff0000\">owl:Class</span>或<span style=\"color: #ff0000\">owl：Restriction</span>。如果对于枚举、交、并、补的类描述赋予一个RDF标识符，则这并不是一个描述类，而是一个完全类的类公理。</p>\n<p>owl中保留了两个预定义的类，分别是<span style=\"color: #ff0000\">owl：Thing</span>和<span style=\"color: #ff0000\">owl：Nothing</span>。前者是所有个体的集合，后者是空集。所有的owl类都是owl：Thing的子类，而owl：Nothing是所有类的子类。owl子类的概念和rdfs：subClassOf相同。</p>\n<p><span style=\"color: #ff0000\">—枚举类</span>：采用<span style=\"color: #ff0000\">owl：oneOf</span>进行类描述，该内置OWL属性的值必须是一个个体或类的实例的列表。因此可以通过枚举实例的方法来描述类。该类的外延就是所有枚举类的个体。如下RDF/XML语法定义了一个包括地球大洲的类</p>\n<pre class=\"brush: xml; gutter: true\">&lt;owl:Class&gt;\n    &lt;owl:oneOf rdf:parseType=&quot;Collection&quot;&gt;\n        &lt;owl:Thing rdf:about=&quot;#Eurasia&quot;/&gt;\n        &lt;owl:Thing rdf:about=&quot;#Africa&quot;/&gt;\n        &lt;owl:Thing rdf:about=&quot;#NorthAmerica&quot;/&gt;\n        &lt;owl:Thing rdf:about=&quot;#SouthAmerica&quot;/&gt;\n        &lt;owl:Thing rdf:about=&quot;#Australia&quot;/&gt;\n        &lt;owl:Thing rdf:about=&quot;#Antarctica&quot;/&gt;    \n    &lt;/owl:oneOf&gt;\n&lt;/owl:Class&gt;</pre>\n\n<p>其中，&lt;owl:Thing rdf:about=”…”/&gt;引用的是个体。</p>\n<p>又如：</p>\n<pre class=\"brush: xml; gutter: true\"> &lt;owl:Class rdf:ID=&quot;RGBColor&quot;&gt;\n      &lt;owl:oneOf rdf:parseType=&quot;Collection&quot;&gt;\n           &lt;owl:Thing rdf:about=&quot;#Red&quot;/&gt;\n           &lt;owl:Thing rdf:about=&quot;#Green&quot;/&gt;\n           &lt;owl:Thing rdf:about=&quot;#Blue&quot;/&gt;\n      &lt;/owl:oneOf&gt;\n&lt;/owl:Class&gt;</pre>\n\n<p>这里定义了颜色类，根据定义，所有的个体都是owl：Thing的实例OWL Lite不能使用枚举类。</p>\n<p>—属性限制<span style=\"color: #ff0000\">owl：Restriction</span>，是特殊类型的类描述。它描述了匿名类，即满足限制的所有个体的类，包括值约束（value constraint）和基数约束（cardinality constraint）。</p>\n<p>值约束是当属性作用于特定的类描述时对其值进行约束，如可能引起某些个体，它们的属性adjacentTo 的值应该是Region，相当于定义域或者值域的概念，并将其应用于类公理内，甚至就是Region的类公理内。OW中的值约束不仅仅类似rdfs：range只在类描述中起作用，也在使用该属性的所有场合有效。</p>\n<p>基数约束在特定类的描述中对属性值的数量进行限制，例如hasPlayer在足球队有11个值，但是在篮球只有5个值。OWL还支持定义全局属性技术的构子，即owl：FunctionalProperty和owl：InverseFunctionalProperty。形式如下：</p>\n<pre class=\"brush: xml; gutter: true\">&lt;owl:Restriction&gt;\n    &lt;owl:onProperty rdf:resource=&quot;(some property)&quot;&gt;\n&lt;/owl:Restriction&gt;</pre>\n\n<p>属性限制也可以作用于数值属性和对象属性，前者的值是数据字面量，后者的值为个体</p>\n<p>值约束包括：</p>\n<p><span style=\"color: #000000\"><span style=\"color: #ff0000\">owl：allValuesFrom</span>，连接约束类和类描述货数据范围。它特定属性的值（属性的值域）要么是类描述的成员，要么是指定数据范围内的数据值，一个简单的例子：</span></p>\n<pre class=\"brush: xml; gutter: true\">&lt;owl:Restriction&gt;\n    &lt;owl:onProperty rdf:resouce=&quot;#hasParent&quot;/&gt;\n    &lt;owl:allValuesFrom rdf:resouce=&quot;#Human&quot;/&gt;\n&lt;/owl:Restriction&gt;</pre>\n\n<p>它描述了一个OWL的匿名类，对其所有的个体而言，如果它具有属性hasParent，则属性hasParent的值必须是类Human。在OWL Lite中owl：allValuesFrom和一阶谓词逻辑中的全称量词类似。</p>\n<p><span style=\"color: #ff0000\">owl：someValuesFrom</span>，它连接约束类和描述类或者数据范围。它描述的类中至少有一个属性的值为描述类或者数据范围内的值。即可能存在部数据描述类或者数据范围的实例。以下例子描述了个体的类，这些个体的父母至少有一个属于Physician</p>\n<pre class=\"brush: actionscript3; gutter: true\">&lt;owl:Restriction&gt;\n    &lt;owl:onProperty rdf:resouce=&quot;hasParent&quot;/&gt;\n    &lt;owl:someValuesFrom rdf:resouce=&quot;#Physician&quot;/&gt;\n&lt;/owl:Restriction&gt;</pre>\n\n<p><span style=\"color: #ff0000\">owl:hasValue</span>它连接约束类和一个V，V可以为个体或者数据值，它描述所有个体的一个类，其属性最少有一个值在语义上等于V，类似AllvaluesFrom的唯一值定义。Lite中没有该值约束，示例如下，描述了一个类，个体Clinton是他/她们的父母亲：</p>\n<pre class=\"brush: xml; gutter: true\">&lt;owl:Restriction&gt;\n     &lt;owl:onProperty rdf:resource=&quot;#hasParent&quot;/&gt;\n     &lt;owl:hasValue rdf:resouce=&quot;#Cliton&quot;/&gt;\n&lt;/owl:Restriction&gt;</pre>\n\n<p>基数约束包括：</p>\n<p><span style=\"color: #ff0000\">owl:maxCardinality</span>：</p>\n<p><span style=\"color: #ff0000\">owl:minCardinality</span>：</p>\n<p><span style=\"color: #ff0000\">owl:cardinality</span>：</p>\n<p>—</p>\n<p>—</p>\n<p>—</p>\n<p>第一种类型通过类名描述一个类，其余通过对类的外延进行约束来描述匿名类。第二种不多不少枚举类的个体。第三种包括满足属性限制的所有类。四五六类型包括满足类描述布尔运算的类，可以看成是与、或、非。后面四中类描述可能导致嵌套结构，因此理论上可以构造任意复杂的类描述。</p>\n<p>参考资料</p>\n<p><a href=\"http://blog.sina.com.cn/s/blog_6c42aaa60100nhps.html\" title=\"本体语言OWL\">本体语言OWL</a></p>\n<p><a href=\"http://www.amazon.cn/gp/product/B002NKMS7S/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B002NKMS7S&amp;linkCode=as2&amp;tag=ovjaywang-23\">语义Web原理及应用</a><img src=\"http://ir-cn.amazon-adsystem.com/e/ir?t=ovjaywang-23&amp;l=as2&amp;o=28&amp;a=B002NKMS7S\" alt=\"\"></p>"},{"title":"SublimeText添加中文编码","id":"536","date":"2014-12-15T11:10:49.000Z","_content":"\nSublimeText添加中文编码\n\n1.  Preferences”--&gt;“Package Control\n2.  在输入框内输入“Install Package”，点击下方自动提示出来的“Install Package”\n3.  弹出一个输入框内输入“CovertToUTF8”，下面就会相应的插件，鼠标点击安装。\n4.  稍等几秒后，插件就会安装成功，无需重启Sublime Text,中文内容已经能够正确显示了。","source":"_posts/SublimeText添加中文编码.md","raw":"---\ntitle: SublimeText添加中文编码\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - sublimetext\nid: 536\ndate: 2014-12-15 19:10:49\n---\n\nSublimeText添加中文编码\n\n1.  Preferences”--&gt;“Package Control\n2.  在输入框内输入“Install Package”，点击下方自动提示出来的“Install Package”\n3.  弹出一个输入框内输入“CovertToUTF8”，下面就会相应的插件，鼠标点击安装。\n4.  稍等几秒后，插件就会安装成功，无需重启Sublime Text,中文内容已经能够正确显示了。","slug":"SublimeText添加中文编码","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7ln001buco48n7afo4i","content":"<p>SublimeText添加中文编码</p>\n<ol>\n<li>Preferences”–&gt;“Package Control</li>\n<li>在输入框内输入“Install Package”，点击下方自动提示出来的“Install Package”</li>\n<li>弹出一个输入框内输入“CovertToUTF8”，下面就会相应的插件，鼠标点击安装。</li>\n<li>稍等几秒后，插件就会安装成功，无需重启Sublime Text,中文内容已经能够正确显示了。</li>\n</ol>","excerpt":"","more":"<p>SublimeText添加中文编码</p>\n<ol>\n<li>Preferences”–&gt;“Package Control</li>\n<li>在输入框内输入“Install Package”，点击下方自动提示出来的“Install Package”</li>\n<li>弹出一个输入框内输入“CovertToUTF8”，下面就会相应的插件，鼠标点击安装。</li>\n<li>稍等几秒后，插件就会安装成功，无需重启Sublime Text,中文内容已经能够正确显示了。</li>\n</ol>"},{"title":"Ontology本体的基础概念","id":"273","date":"2013-07-14T17:37:51.000Z","_content":"\n#### 本体论基础&amp;概念\n\n        本体作为一种能在语义和知识层次上描述领域概念的建模工具，其目标是捕获相关领域的知识，确定该领域内共同认可的词汇，通过概念之间的关系来描述概念的语义，提供对该领域知识的共同理解。语义Web（the Semantic Web）是在本体理论基础之上对现有Web所进行的扩展[15]，其目标是使Web上的信息具有计算机可以理解的语义，在本体的支持下实现信息系统间语义上的互操作性，以及对Web资源所进行的智能访问和检索[16]。充分实现语义Web的潜力，需要大规模采用基于本体的方法来共享信息和资源，本体是语义Web得以实现的基础和关键。\n\n*   ##### **<span style=\"color: #49352f; font-family: 'Poiret One', 'Times New Roman', serif; font-size: 21px; line-height: 15px;\">本体（Ontology）</span>**\n\n本体是共享概念模型的明确的形式化规范说明（An ontology is a formal, explicit specification of a shared conceptualisation.）”。该定义包含四层含义：\n\n1）概念模型（Conceptualization），即本体是通过抽象客观世界的概念而得到的模型，它表示的含义独立于具体的环境状态；\n\n2）明确性（Explicit），即本体所使用的概念及在这些概念之上的约束都有明确的定义，没有二义性；\n\n3）形式化（Formal），即本体是计算机可处理的，而不是自然语言；\n\n 4）共享（Shared），即本体体现的是共同认可的知识，反映的是相关领域中公认的概念集合，它所针对的是团体而不是个体。\n\n*   ##### **<span style=\"line-height: 15px;\">本体建模元素</span>**\n\n1)类（Classes）或概念（Concepts）\n\n        其含义非常广泛，指任何事务，如工作描述、功能、行为、策略和推理过程。从语义上讲，它表示的是对象的集合，其定义包括概念的名称，与其他概念之间的关系的集合，以及用自然语言对概念的描述。\n\n2)关系（Relations）\n\n        在领域中概念之间的交互作用，形式上定义为n维笛卡儿积的子集。如子类关系（subClassOf）。在语义上关系对应于对象元组的集合。\n\n3)函数（Functions）\n\n        一类特殊的关系。该关系的前n－1个元素可以唯一决定第n个元素。形式化的定义为F: C1×C2×…×Cn-1→Cn。如motherOf就是一个函数，motherOf(x, y)表示y是x的母亲。\n\n4)公理（Axioms）\n\n        代表永真断言，如概念乙属于概念甲的范围。\n\n5)实例（Instances）\n\n        代表某概念类的基本元素，即某概念类所指的具体实体。从语义上讲实例表示的就是对象。\n\n*   **<span style=\"line-height: 15px;\">概念间关系</span>**\n\n        概念间的关系可以分为两类：分类关系和非分类关系，包括4种类型，part-of——表达概念之间部分与整体的关系、kind-of——表达概念之间的继承关系，类似于面向对象中的子类和父类之间的关系、instance-of——表达概念之间的实例和概念之间的关系、attribute-of——表达某个概念是另外一个概念的属性。\n\n        Gruber提出了根据特定领域构造本体的准则：\n\n       （1）清晰性、明确性和客观性：即本体应该用自然语言对所定义的术语给出明确的、客观的语义定义，有效的说明所定义术语的含义。而且，当定义可以用逻辑公理表达时，它应该是形式化的。\n\n        （2）完全性：即所给出的定义是完整的，完全能表达所描述术语的含义。\n\n        （3）一致性：即由术语得出的推论与术语本身的含义是相容的，支持与其定义相一致的推理，不会产生矛盾。\n\n        （4）最大单调可拓展性：即向本体中添加通用或专用的术语时，不需要修改其已有的概念定义和内容，支持在已有的概念基础上定义新术语。\n\n        （5）最小承诺和最小编码偏好：所谓最小承诺，即本体约定应该最小，对待建模对象应给出尽可能少的约束。对编码偏好应该是最小化的，因为不同的知识系统可能采用不同的表达方法或表示风格。\n\n        以上5条是最具影响力的，其余几条准则分别是：\n\n（6）本体描述原则（Ontological Distinction Principle）[36]：本体中的类应该是互不相交的。\n\n（7）概念层次多样化（Diversification of hierarchies）增强多继承机制的能力[37]。\n\n（8）模块化设计（Modularity）以最小化模块化之间的耦合度[38]。\n\n（9）语义距离最小化（Minimization of the semantic distance）[37]：兄弟概念之间的语义距离最小化，尽可能把含义相似的概念抽象出来，用相同的元语来表示。\n\n（10）命名标准化（Standardization of names）[37]：尽可能使用标准的名字。\n\n*   ##### **<span style=\"line-height: 28px;\">Web3.0和语义网</span>**\n\n        互联网专家们认为，对于普通用户而言，Web 3.0带来的最大好处就是让你拥有了一个贴身的私人助理。根据专家们的观点，Web3.0时代网络对你无所不知，能够自主地查询互联网上的所有信息来回答任何问题。许多专家把Web 3.0比做是庞大的数据库。Web2.0使用互联网是为了把人与人联系起来，而Web 3.0使用互联网是为了把信息与信息联系起来。一些专家认为Web3.0会取代目前的互联网，另一些专家则认为它将作为独立的网络而存在。\n\n        在Web3.0时代你只要发出一个很简单的指令，剩下的事情则交给互联网，互联网完全可以替你做所有工作：它会根据你的偏好确定搜索参数，以缩小搜索服务的范围。然后，浏览器程序会收集并分析数据并提供给你，便于你进行比较。浏览器之所以有这个本领，是因为Web 3.0能够理解网上的信息。\n今天，你使用互联网搜索引擎时，搜索引擎其实并不真正理解你要搜索的东西。它只是简单地查找出现搜索框中的关键字的众多网页，而无法告诉某网页是不是真与你搜索的东西相关。换句话说，它只能告诉你，关键字出现在该网页上。比如，搜索的是“土星”这个词，最后会得到有关土星的网页搜索结果和有关汽车生产商土星公司的其他搜索结果。\n\n        TimBerners-Lee于1989年发明了互联网。他发明的互联网其最主要用途是作为统一的界面实现信息的彼此共享。不过，Berners-Lee对Web2.0到底是否存在表示怀疑，认为它只是毫无意义的专业术语。Berners-Lee坚持认为，他发明互联网就是为了能够让这一网络架构能处理Web2.0所能处理的所有任务。Berners-Lee设想未来的互联网与今天的Web 3.0概念很相似。它被称为语义网(Semantic Web)。\n简单地说，今天的互联网架构是为方便人使用而设计的。它让我们容易访问网页，理解网页所呈现的一切，而计算机却不能理解。搜索引擎也许能查找关键字，但它理解不了这些关键字在网页语境下是如何使用的。\n有了语义网，计算机将使用软件代理来搜索及理解网页上的信息。这些软件代理将是在互联网上搜索相关信息的程序。它们之所以有这种功能，就是因为语义网拥有信息的集合体，这种集合体就叫本体(ontology)。在互联网上，本体其实是一个文件，它定义了一组词语之间的关系。\n\n        语义网要发挥应有的功效，本体内容就必须详细而全面。按照Berners-Lee的概念，本体会以元数据(元数据是指网页代码中所含的人类看不见而计算机能读取的信息)的形式而存在。\n构建本体需要大量的工作。实际上，这是语义网面临的重大障碍之一。人们是否愿意投入精力为自己的网站构建全面完整的本体？网站变化后，他们会维护本体吗？这些都是语义网构建时需要考虑的问题。批评人士认为，创建及维护语义网这种复杂的任务对大多数人来说工作量太大了。\n另一方面，一些人很喜欢给互联网对象和信息做标签或做标记。互联网可以对做了标记的对象或信息进行分类。如果博客含有一个标记选项，这样很容易按特定主题对日志内容进行分类。Flickr等照片共享网站让用户可以对照片做标记。\n\n*   ##### **RDF（S）和OWL**\n\nRDF和RDFS作为W3C标准，提供了统一的、形式化的数据表示语言来描述Web上资源的含义。OWL建立在RDF之上，定义了RDF（S）描述中使用的词汇的语法，便于RDF（S）对元数据的处理，是计算机理解Web资源的基础。\n\n一个资源描述模型必须解决三个问题：\n\n1.  资源的标识，即如何标识被描述的资源。该标识系统不能和其它的标识系统混淆，即使面对互联网上千差万别、不计其数的资源也可以用简单、有效的方法进行标识。\n2.  <span style=\"line-height: 28px;\">l 结构设计。该模型在结构上要尽可能的简单，易于掌握；同时也应具有一定的灵活性、易于扩展，适于互联网分布式的网状结构。</span>\n3.  <span style=\"line-height: 28px;\">l 语言系统。既用可被机器理解的计算机语言对该模型进行描述，表达足够的语义以方便机器之间的交流。</span>\n\n        除此之外，一个资源描述模型在设计时还应考虑与现有标准的兼容、实现的难易程度以及应用前景和价值等方方面面的问题。\nRDF模型是一种二元关系模型，它采用URI来标识被描述的资源，通过陈述描述资源。\nXML是Web上数据表示的标准，因此RDF采用了一种基于XML语法的语言系统来表示RDF陈述，称为RDF/XML。\n\n—**Resource Description Framework，RDF**\n\n        一种用于描述Web资源的标记语言。RDF是一个处理元数据的XML应用，所谓元数据，就是“描述数据的数据”或者“描述信息的信息”。也许这样解释元数据有些令人难以理解，举个简单的例子，书的内容是书的数据，而作者的名字、出版社的地址或版权信息就是书的元数据。数据和元数据的划分不是绝对的，有些数据既可以作为数据处理，也可以作为元数据处理，例如可以将作者的名字作为数据而不是元数据处理。\n\n       RDF基于这样的思想：用Web标识符（称作统一资源标识符，Uniform Resource Identifiers或URIs）来标识事物，用简单的属性（property）及属性值来描述资源。这使得RDF可以将一个或多个关于资源的简单陈述表示为一个由结点和弧组成的图（graph），其中的结点和弧代表资源、属性或属性值。其中每个陈述都是由**主体**（subject），**谓词**（predicate），**客体**（object）组成的。为了让讨论显得尽量具体一些，下面的这组陈述“有一个人由http://www.w3.org/People/EM/contact#me 标识, 他的名字是Eric Miller, 他的电子邮件地址是em@w3.org,他的头衔是Dr.”可以表示为图1 (http://www.w3.org/TR/2004/REC-rdf-primer-20040210/#figure1)所示的图：\n\n[![27683_2](http://farm8.staticflickr.com/7390/9287033894_d345589db9.jpg)](http://www.flickr.com/photos/ovbeeshoot/9287033894/ \"Flickr 上 Liar1992 的 27683_2\")\n\n其表达的RDF如以下XML文档所示\n\n<pre class=\"brush: xml; gutter: true\"> &lt;?xml version=&quot;1.0&quot;?&gt;\n &lt;rdf:RDF xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;\n xmlns:contact=&quot;http://www.w3.org/2000/10/swap/pim/contact#&quot;&gt;\n &lt;contact:Person rdf:about=&quot;http://www.w3.org/People/EM/contact#me&quot;&gt;\n     &lt;contact:fullName&gt;Eric Miller&lt;/contact:fullName&gt;\n     &lt;contact:mailbox rdf:resource=&quot;mailto:em@w3.org&quot;/&gt;\n     &lt;contact:personalTitle&gt;Dr.&lt;/contact:personalTitle&gt; \n   &lt;/contact:Person&gt;\n &lt;/rdf:RDF&gt;</pre>\n\n—**Web Ontology Language**，**OWL**\n\n        OWL 与 RDF 有很多相似之处，但是较之 RDF， OWL 是一门具有更强机器解释能力的更强大的语言。\n\n与 RDF 相比，OWL 拥有更大的词汇表以及更强大的语言。\n\n        2003 年7 月W3C 公布了OWL Web ontology 语言的最初工作草案,2004 年2 月10 日,OWL 正式成为W3C 推荐的标准。OWL 和DAML + OIL 非常相近,只有一些微小的变化。DAML + OIL 和OWL 的语义都基于描述逻辑(descriptionlogic ,DL) 。OWL 作为W3C 推荐的标准本体表示语言,它的最大特点是关联描述逻辑, 通过对概念、概念属性及其相互间关系的描述,构成概念的复杂关系网络,这就意味着描述逻辑推理机可以推理OWL 本体。\n\n        OWL 有3 个表达能力递增的子语言:OWL Lite ,OWL DL , OWL Full[20 ] 。OWL Lite 提供了类层次的能力和简单的约束能力,支持基数为0 或1 的基数约束,包括6 个类别的语言构造子。OWL DL 在保持计算完整性( computational completeness ) 和可判定性(decidability) 的前提下,提供了尽可能大的表达能力,包含了OWL 的全部语言构造成分,但他们的使用受到一些限制(如一个类可以是许多类的子类,但不能是另一个类的实例) 。描述逻辑是OWL 的形式化基础,OWL DL 的主要扩充是增加了布尔逻辑运算操作。OWL Full 包含OWL 的全部语言构造成分并取消了OWL DL 的限制,在OWL Full 中一个类可以看成个体的集合,也可以看成是一个个体。由于OWL Full 取消了OWL DL 中的保证可计算的某些限制,在没有计算保证的语法自由的RDF 上进行最大程度表达, 允许一个Ontology 在预定义的(RDF、OWL) 词汇表上增加词汇,从而任何推理软件均不能支持OWL FULL 的所有特点,因此不存在完整的推理算法支持OWL Full 的全部特性。OWL 通过对概念、概念属性及其相互间关系的描述,构成概念的复杂关系网络。\nOWL本体的一个优点是会有能够对其做推理的工具。这些工具提供了不特定于某个主题领域的通用支持，而如果要构建一个能对一个特定的工业界标准XML Schema做推理的系统，它往往是特定于一个领域的。构建一个可靠的和有用的推理系统不是一项简单的工作。而创建一个本体则更为容易处理。\n\n        OWL旨在提供一种可用于描述网络文档和应用之中所固有的那些类及其之间关系的语言。OWL网络本体语言当前已经获得万维网联盟认可的，用于编纂本体的知识表达语言家族。 其功能在于为网络文档和应用中固有的类以及其间的逻辑关系提供描述，使得基于此技术的网络应用更加 人性化和智能化，节省用户自身资源搜索时间并将这些处理交给计算机系统内部处理。基于不同的语义论特性 此家族语言大致分为两个系统： 基于描述逻辑进而丰富表达和精准计算属性的OWL DL和OWL Lite，以及以资源描述架构RDF提供兼容叙述的OWL Full。 网络本体语言已经被认为是语义网技术的基础语言并吸引了包括学术和商业范围内人士的广泛兴趣。\n\n*   ##### **<span style=\"line-height: 28px;\">本体相关工具介绍</span>**\n\n       ——Jena [Jena下载](http://jena.apache.org/download/ \"Jena下载\")\n\n        jena是惠普公司的一个项目，jena为应用程序开发人员提供了一套java接口对本体进行操作。这样我们就可以调用jenaAPI，构建我们自己的应用程序，实现对包括RDF，OWL本体进行创建，修改，查询以及推理操作。主要包括：\n\na)       以RDF/XML、三元组形式读写RDF\n\n资源描述框架是(RDF)是描述资源的一项标准(在技术上是W3C的推荐标准)，Jena文档中有一部分呢详细介绍了RDF和Jena RDF API，其内容包括对Jena RDF包的介绍、RDF模型的创建、读写、查询等操作，以及RDF容器等的讨论。\n\nb)       RDFS，OWL，DAML+OIL等本体的操作\n\nJena框架包含一个本体子系统（Ontology Subsystem），它提供的API允许处理基于RDF的本体数据，也就是说，它支持OWL，DAML+OIL和RDFS。本体API与推理子系统结合可以从特定本体中提取信息，Jena 2还提供文档管理器（OntDocumentManager）以支持对导入本体的文档管理。\n\nc)       利用数据库保存数据\n\n    Jena 2允许将数据存储到硬盘中，或者是OWL文件，或者是关系数据库中。本文处理的本体就是OWL文件读入的。\n\nd)       查询模型\n\nJena 2提供了ARQ查询引擎，它实现SPARQL查询语言和RDQL，从而支持对模型的查询。另外，查询引擎与关系数据库相关联，这使得查询存储在关系数据库中的本体时能够达到更高的效率。\n\ne)       基于规则的推理\n\n        Jena 2支持基于规则的简单推理，其推理机制支持将推理器(inference reasoners)导入Jena，创建模型时将推理器与模型关联以实现推理。\n\n        Jena提供的接口本质上都是Java程序，也就是.java文件经过javac之后生成的.class文件。显然，class文件并不能提示本体创建使用的语言。为了区别于其他的表示方法，每种本体语言都有一个自己的框架（profile），它列出了这种语言使用的类（概念）和属性的构建方式和URI。因此，在DAML框架里，对象属性（）的URI是daml:ObjectProperty，而在OWL框架里却是owl:ObjectProperty。RDFS并没有定义对象属性，所以在RDFS框架里，对象属性的URI是null。\n在Jena中，这种框架通过参数的设置在创建时与本体模型（Ontology Model）绑定在一起。本体模型继承自Jena中的Model类。Model允许访问RDF数据集合中的陈述（Statements），OntModel对此进行了扩展，以便支持本体中的各种数据对象：类（classes）、属性（properties）、实例（个体individuals）。\n\n ——Protege [download protégé software](http://protege.stanford.edu/download/download.html \"download protégé software\")\n\nProtégé是一个开源的本体编辑器（目前的版本是Protégé4.3），用户可以在GUI环境下创建本体或者知识库。\n\n——SparQL\n\n        SparQL(Simple Protocol and RDF Query Language)，是为RDF开发的一种查询语言和数据获取协议，它是为W3C所开发的RDF数据模型所定义，但是可以用于任何可以用RDF来表示的信息资源。\nSparQL 协议和 RDF 查询语言（SparQL）于2008年1月15日正式成为一项W3C推荐标准。SparQL 构建在以前的 RDF 查询语言（例如 rdfDB、RDQL 和 SeRQL）之上，拥有一些有价值的新特性。\n而且，SparQ将Web2.0和Semantic web两种新的web技术联系起来了，很有可能成为将来的主流网络数据库的查询语言和数据获取标准。\n\n*   ##### **参考文献**\n\n[Web 3.0时代：网络对你无所不知](http://www.china.com.cn/economic/txt/2011-03/01/content_22025450_2.htm \"Web 3.0时代：网络对你无所不知\")\n[本体（Ontology）综述](http://imarine.blog.163.com/blog/static/51380183200861373316920/ \"本体（Ontology）综述\")\n[RDF 简介](http://www.w3school.com.cn/rdf/rdf_intro.asp \"RDF 简介\")\n[RDF入门 推荐标准](http://www.360doc.com/content/05/1104/11/677_27683.shtml \"RDF入门 推荐标准\")\n[OWL 简介](http://www.w3school.com.cn/rdf/rdf_owl.asp \"OWL 简介\")\n[Jena 简介](http://www.ibm.com/developerworks/cn/java/j-jena/ \"Jena 简介\")\n[实用语义网RDFS与OWL高效建模(英文版)](http://www.amazon.cn/gp/product/B001P5HR2I/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B001P5HR2I&amp;linkCode=as2&amp;tag=ovjaywang-23)![](http://ir-cn.amazon-adsystem.com/e/ir?t=ovjaywang-23&amp;l=as2&amp;o=28&amp;a=B001P5HR2I)\n[数据库支持的模糊OWL本体管理](http://www.amazon.cn/gp/product/B005CLOYGS/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B005CLOYGS&amp;linkCode=as2&amp;tag=ovjaywang-23)![](http://ir-cn.amazon-adsystem.com/e/ir?t=ovjaywang-23&amp;l=as2&amp;o=28&amp;a=B005CLOYGS)\n[语义Web原理及应用](http://www.amazon.cn/gp/product/B002NKMS7S/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B002NKMS7S&amp;linkCode=as2&amp;tag=ovjaywang-23)![](http://ir-cn.amazon-adsystem.com/e/ir?t=ovjaywang-23&amp;l=as2&amp;o=28&amp;a=B002NKMS7S)\n<script type=\"text/javascript\" src=\"http://wms-cn.amazon-adsystem.com/20070822/CN/js/link-enhancer-common.js?tag=ovjaywang-23\">// <![CDATA[\n\n// ]]></script>\n\n<noscript>\n    ![](http://wms-cn.amazon-adsystem.com/20070822/CN/img/noscript.gif?tag=ovjaywang-23)\n</noscript>","source":"_posts/Ontology本体的基础概念.md","raw":"---\ntitle: Ontology本体的基础概念\ncategories:\n  - 什么都学一下\n  - 学习log\ntags:\n  - ontology\n  - 本体\n  - 本体论\nid: 273\ndate: 2013-07-15 01:37:51\n---\n\n#### 本体论基础&amp;概念\n\n        本体作为一种能在语义和知识层次上描述领域概念的建模工具，其目标是捕获相关领域的知识，确定该领域内共同认可的词汇，通过概念之间的关系来描述概念的语义，提供对该领域知识的共同理解。语义Web（the Semantic Web）是在本体理论基础之上对现有Web所进行的扩展[15]，其目标是使Web上的信息具有计算机可以理解的语义，在本体的支持下实现信息系统间语义上的互操作性，以及对Web资源所进行的智能访问和检索[16]。充分实现语义Web的潜力，需要大规模采用基于本体的方法来共享信息和资源，本体是语义Web得以实现的基础和关键。\n\n*   ##### **<span style=\"color: #49352f; font-family: 'Poiret One', 'Times New Roman', serif; font-size: 21px; line-height: 15px;\">本体（Ontology）</span>**\n\n本体是共享概念模型的明确的形式化规范说明（An ontology is a formal, explicit specification of a shared conceptualisation.）”。该定义包含四层含义：\n\n1）概念模型（Conceptualization），即本体是通过抽象客观世界的概念而得到的模型，它表示的含义独立于具体的环境状态；\n\n2）明确性（Explicit），即本体所使用的概念及在这些概念之上的约束都有明确的定义，没有二义性；\n\n3）形式化（Formal），即本体是计算机可处理的，而不是自然语言；\n\n 4）共享（Shared），即本体体现的是共同认可的知识，反映的是相关领域中公认的概念集合，它所针对的是团体而不是个体。\n\n*   ##### **<span style=\"line-height: 15px;\">本体建模元素</span>**\n\n1)类（Classes）或概念（Concepts）\n\n        其含义非常广泛，指任何事务，如工作描述、功能、行为、策略和推理过程。从语义上讲，它表示的是对象的集合，其定义包括概念的名称，与其他概念之间的关系的集合，以及用自然语言对概念的描述。\n\n2)关系（Relations）\n\n        在领域中概念之间的交互作用，形式上定义为n维笛卡儿积的子集。如子类关系（subClassOf）。在语义上关系对应于对象元组的集合。\n\n3)函数（Functions）\n\n        一类特殊的关系。该关系的前n－1个元素可以唯一决定第n个元素。形式化的定义为F: C1×C2×…×Cn-1→Cn。如motherOf就是一个函数，motherOf(x, y)表示y是x的母亲。\n\n4)公理（Axioms）\n\n        代表永真断言，如概念乙属于概念甲的范围。\n\n5)实例（Instances）\n\n        代表某概念类的基本元素，即某概念类所指的具体实体。从语义上讲实例表示的就是对象。\n\n*   **<span style=\"line-height: 15px;\">概念间关系</span>**\n\n        概念间的关系可以分为两类：分类关系和非分类关系，包括4种类型，part-of——表达概念之间部分与整体的关系、kind-of——表达概念之间的继承关系，类似于面向对象中的子类和父类之间的关系、instance-of——表达概念之间的实例和概念之间的关系、attribute-of——表达某个概念是另外一个概念的属性。\n\n        Gruber提出了根据特定领域构造本体的准则：\n\n       （1）清晰性、明确性和客观性：即本体应该用自然语言对所定义的术语给出明确的、客观的语义定义，有效的说明所定义术语的含义。而且，当定义可以用逻辑公理表达时，它应该是形式化的。\n\n        （2）完全性：即所给出的定义是完整的，完全能表达所描述术语的含义。\n\n        （3）一致性：即由术语得出的推论与术语本身的含义是相容的，支持与其定义相一致的推理，不会产生矛盾。\n\n        （4）最大单调可拓展性：即向本体中添加通用或专用的术语时，不需要修改其已有的概念定义和内容，支持在已有的概念基础上定义新术语。\n\n        （5）最小承诺和最小编码偏好：所谓最小承诺，即本体约定应该最小，对待建模对象应给出尽可能少的约束。对编码偏好应该是最小化的，因为不同的知识系统可能采用不同的表达方法或表示风格。\n\n        以上5条是最具影响力的，其余几条准则分别是：\n\n（6）本体描述原则（Ontological Distinction Principle）[36]：本体中的类应该是互不相交的。\n\n（7）概念层次多样化（Diversification of hierarchies）增强多继承机制的能力[37]。\n\n（8）模块化设计（Modularity）以最小化模块化之间的耦合度[38]。\n\n（9）语义距离最小化（Minimization of the semantic distance）[37]：兄弟概念之间的语义距离最小化，尽可能把含义相似的概念抽象出来，用相同的元语来表示。\n\n（10）命名标准化（Standardization of names）[37]：尽可能使用标准的名字。\n\n*   ##### **<span style=\"line-height: 28px;\">Web3.0和语义网</span>**\n\n        互联网专家们认为，对于普通用户而言，Web 3.0带来的最大好处就是让你拥有了一个贴身的私人助理。根据专家们的观点，Web3.0时代网络对你无所不知，能够自主地查询互联网上的所有信息来回答任何问题。许多专家把Web 3.0比做是庞大的数据库。Web2.0使用互联网是为了把人与人联系起来，而Web 3.0使用互联网是为了把信息与信息联系起来。一些专家认为Web3.0会取代目前的互联网，另一些专家则认为它将作为独立的网络而存在。\n\n        在Web3.0时代你只要发出一个很简单的指令，剩下的事情则交给互联网，互联网完全可以替你做所有工作：它会根据你的偏好确定搜索参数，以缩小搜索服务的范围。然后，浏览器程序会收集并分析数据并提供给你，便于你进行比较。浏览器之所以有这个本领，是因为Web 3.0能够理解网上的信息。\n今天，你使用互联网搜索引擎时，搜索引擎其实并不真正理解你要搜索的东西。它只是简单地查找出现搜索框中的关键字的众多网页，而无法告诉某网页是不是真与你搜索的东西相关。换句话说，它只能告诉你，关键字出现在该网页上。比如，搜索的是“土星”这个词，最后会得到有关土星的网页搜索结果和有关汽车生产商土星公司的其他搜索结果。\n\n        TimBerners-Lee于1989年发明了互联网。他发明的互联网其最主要用途是作为统一的界面实现信息的彼此共享。不过，Berners-Lee对Web2.0到底是否存在表示怀疑，认为它只是毫无意义的专业术语。Berners-Lee坚持认为，他发明互联网就是为了能够让这一网络架构能处理Web2.0所能处理的所有任务。Berners-Lee设想未来的互联网与今天的Web 3.0概念很相似。它被称为语义网(Semantic Web)。\n简单地说，今天的互联网架构是为方便人使用而设计的。它让我们容易访问网页，理解网页所呈现的一切，而计算机却不能理解。搜索引擎也许能查找关键字，但它理解不了这些关键字在网页语境下是如何使用的。\n有了语义网，计算机将使用软件代理来搜索及理解网页上的信息。这些软件代理将是在互联网上搜索相关信息的程序。它们之所以有这种功能，就是因为语义网拥有信息的集合体，这种集合体就叫本体(ontology)。在互联网上，本体其实是一个文件，它定义了一组词语之间的关系。\n\n        语义网要发挥应有的功效，本体内容就必须详细而全面。按照Berners-Lee的概念，本体会以元数据(元数据是指网页代码中所含的人类看不见而计算机能读取的信息)的形式而存在。\n构建本体需要大量的工作。实际上，这是语义网面临的重大障碍之一。人们是否愿意投入精力为自己的网站构建全面完整的本体？网站变化后，他们会维护本体吗？这些都是语义网构建时需要考虑的问题。批评人士认为，创建及维护语义网这种复杂的任务对大多数人来说工作量太大了。\n另一方面，一些人很喜欢给互联网对象和信息做标签或做标记。互联网可以对做了标记的对象或信息进行分类。如果博客含有一个标记选项，这样很容易按特定主题对日志内容进行分类。Flickr等照片共享网站让用户可以对照片做标记。\n\n*   ##### **RDF（S）和OWL**\n\nRDF和RDFS作为W3C标准，提供了统一的、形式化的数据表示语言来描述Web上资源的含义。OWL建立在RDF之上，定义了RDF（S）描述中使用的词汇的语法，便于RDF（S）对元数据的处理，是计算机理解Web资源的基础。\n\n一个资源描述模型必须解决三个问题：\n\n1.  资源的标识，即如何标识被描述的资源。该标识系统不能和其它的标识系统混淆，即使面对互联网上千差万别、不计其数的资源也可以用简单、有效的方法进行标识。\n2.  <span style=\"line-height: 28px;\">l 结构设计。该模型在结构上要尽可能的简单，易于掌握；同时也应具有一定的灵活性、易于扩展，适于互联网分布式的网状结构。</span>\n3.  <span style=\"line-height: 28px;\">l 语言系统。既用可被机器理解的计算机语言对该模型进行描述，表达足够的语义以方便机器之间的交流。</span>\n\n        除此之外，一个资源描述模型在设计时还应考虑与现有标准的兼容、实现的难易程度以及应用前景和价值等方方面面的问题。\nRDF模型是一种二元关系模型，它采用URI来标识被描述的资源，通过陈述描述资源。\nXML是Web上数据表示的标准，因此RDF采用了一种基于XML语法的语言系统来表示RDF陈述，称为RDF/XML。\n\n—**Resource Description Framework，RDF**\n\n        一种用于描述Web资源的标记语言。RDF是一个处理元数据的XML应用，所谓元数据，就是“描述数据的数据”或者“描述信息的信息”。也许这样解释元数据有些令人难以理解，举个简单的例子，书的内容是书的数据，而作者的名字、出版社的地址或版权信息就是书的元数据。数据和元数据的划分不是绝对的，有些数据既可以作为数据处理，也可以作为元数据处理，例如可以将作者的名字作为数据而不是元数据处理。\n\n       RDF基于这样的思想：用Web标识符（称作统一资源标识符，Uniform Resource Identifiers或URIs）来标识事物，用简单的属性（property）及属性值来描述资源。这使得RDF可以将一个或多个关于资源的简单陈述表示为一个由结点和弧组成的图（graph），其中的结点和弧代表资源、属性或属性值。其中每个陈述都是由**主体**（subject），**谓词**（predicate），**客体**（object）组成的。为了让讨论显得尽量具体一些，下面的这组陈述“有一个人由http://www.w3.org/People/EM/contact#me 标识, 他的名字是Eric Miller, 他的电子邮件地址是em@w3.org,他的头衔是Dr.”可以表示为图1 (http://www.w3.org/TR/2004/REC-rdf-primer-20040210/#figure1)所示的图：\n\n[![27683_2](http://farm8.staticflickr.com/7390/9287033894_d345589db9.jpg)](http://www.flickr.com/photos/ovbeeshoot/9287033894/ \"Flickr 上 Liar1992 的 27683_2\")\n\n其表达的RDF如以下XML文档所示\n\n<pre class=\"brush: xml; gutter: true\"> &lt;?xml version=&quot;1.0&quot;?&gt;\n &lt;rdf:RDF xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;\n xmlns:contact=&quot;http://www.w3.org/2000/10/swap/pim/contact#&quot;&gt;\n &lt;contact:Person rdf:about=&quot;http://www.w3.org/People/EM/contact#me&quot;&gt;\n     &lt;contact:fullName&gt;Eric Miller&lt;/contact:fullName&gt;\n     &lt;contact:mailbox rdf:resource=&quot;mailto:em@w3.org&quot;/&gt;\n     &lt;contact:personalTitle&gt;Dr.&lt;/contact:personalTitle&gt; \n   &lt;/contact:Person&gt;\n &lt;/rdf:RDF&gt;</pre>\n\n—**Web Ontology Language**，**OWL**\n\n        OWL 与 RDF 有很多相似之处，但是较之 RDF， OWL 是一门具有更强机器解释能力的更强大的语言。\n\n与 RDF 相比，OWL 拥有更大的词汇表以及更强大的语言。\n\n        2003 年7 月W3C 公布了OWL Web ontology 语言的最初工作草案,2004 年2 月10 日,OWL 正式成为W3C 推荐的标准。OWL 和DAML + OIL 非常相近,只有一些微小的变化。DAML + OIL 和OWL 的语义都基于描述逻辑(descriptionlogic ,DL) 。OWL 作为W3C 推荐的标准本体表示语言,它的最大特点是关联描述逻辑, 通过对概念、概念属性及其相互间关系的描述,构成概念的复杂关系网络,这就意味着描述逻辑推理机可以推理OWL 本体。\n\n        OWL 有3 个表达能力递增的子语言:OWL Lite ,OWL DL , OWL Full[20 ] 。OWL Lite 提供了类层次的能力和简单的约束能力,支持基数为0 或1 的基数约束,包括6 个类别的语言构造子。OWL DL 在保持计算完整性( computational completeness ) 和可判定性(decidability) 的前提下,提供了尽可能大的表达能力,包含了OWL 的全部语言构造成分,但他们的使用受到一些限制(如一个类可以是许多类的子类,但不能是另一个类的实例) 。描述逻辑是OWL 的形式化基础,OWL DL 的主要扩充是增加了布尔逻辑运算操作。OWL Full 包含OWL 的全部语言构造成分并取消了OWL DL 的限制,在OWL Full 中一个类可以看成个体的集合,也可以看成是一个个体。由于OWL Full 取消了OWL DL 中的保证可计算的某些限制,在没有计算保证的语法自由的RDF 上进行最大程度表达, 允许一个Ontology 在预定义的(RDF、OWL) 词汇表上增加词汇,从而任何推理软件均不能支持OWL FULL 的所有特点,因此不存在完整的推理算法支持OWL Full 的全部特性。OWL 通过对概念、概念属性及其相互间关系的描述,构成概念的复杂关系网络。\nOWL本体的一个优点是会有能够对其做推理的工具。这些工具提供了不特定于某个主题领域的通用支持，而如果要构建一个能对一个特定的工业界标准XML Schema做推理的系统，它往往是特定于一个领域的。构建一个可靠的和有用的推理系统不是一项简单的工作。而创建一个本体则更为容易处理。\n\n        OWL旨在提供一种可用于描述网络文档和应用之中所固有的那些类及其之间关系的语言。OWL网络本体语言当前已经获得万维网联盟认可的，用于编纂本体的知识表达语言家族。 其功能在于为网络文档和应用中固有的类以及其间的逻辑关系提供描述，使得基于此技术的网络应用更加 人性化和智能化，节省用户自身资源搜索时间并将这些处理交给计算机系统内部处理。基于不同的语义论特性 此家族语言大致分为两个系统： 基于描述逻辑进而丰富表达和精准计算属性的OWL DL和OWL Lite，以及以资源描述架构RDF提供兼容叙述的OWL Full。 网络本体语言已经被认为是语义网技术的基础语言并吸引了包括学术和商业范围内人士的广泛兴趣。\n\n*   ##### **<span style=\"line-height: 28px;\">本体相关工具介绍</span>**\n\n       ——Jena [Jena下载](http://jena.apache.org/download/ \"Jena下载\")\n\n        jena是惠普公司的一个项目，jena为应用程序开发人员提供了一套java接口对本体进行操作。这样我们就可以调用jenaAPI，构建我们自己的应用程序，实现对包括RDF，OWL本体进行创建，修改，查询以及推理操作。主要包括：\n\na)       以RDF/XML、三元组形式读写RDF\n\n资源描述框架是(RDF)是描述资源的一项标准(在技术上是W3C的推荐标准)，Jena文档中有一部分呢详细介绍了RDF和Jena RDF API，其内容包括对Jena RDF包的介绍、RDF模型的创建、读写、查询等操作，以及RDF容器等的讨论。\n\nb)       RDFS，OWL，DAML+OIL等本体的操作\n\nJena框架包含一个本体子系统（Ontology Subsystem），它提供的API允许处理基于RDF的本体数据，也就是说，它支持OWL，DAML+OIL和RDFS。本体API与推理子系统结合可以从特定本体中提取信息，Jena 2还提供文档管理器（OntDocumentManager）以支持对导入本体的文档管理。\n\nc)       利用数据库保存数据\n\n    Jena 2允许将数据存储到硬盘中，或者是OWL文件，或者是关系数据库中。本文处理的本体就是OWL文件读入的。\n\nd)       查询模型\n\nJena 2提供了ARQ查询引擎，它实现SPARQL查询语言和RDQL，从而支持对模型的查询。另外，查询引擎与关系数据库相关联，这使得查询存储在关系数据库中的本体时能够达到更高的效率。\n\ne)       基于规则的推理\n\n        Jena 2支持基于规则的简单推理，其推理机制支持将推理器(inference reasoners)导入Jena，创建模型时将推理器与模型关联以实现推理。\n\n        Jena提供的接口本质上都是Java程序，也就是.java文件经过javac之后生成的.class文件。显然，class文件并不能提示本体创建使用的语言。为了区别于其他的表示方法，每种本体语言都有一个自己的框架（profile），它列出了这种语言使用的类（概念）和属性的构建方式和URI。因此，在DAML框架里，对象属性（）的URI是daml:ObjectProperty，而在OWL框架里却是owl:ObjectProperty。RDFS并没有定义对象属性，所以在RDFS框架里，对象属性的URI是null。\n在Jena中，这种框架通过参数的设置在创建时与本体模型（Ontology Model）绑定在一起。本体模型继承自Jena中的Model类。Model允许访问RDF数据集合中的陈述（Statements），OntModel对此进行了扩展，以便支持本体中的各种数据对象：类（classes）、属性（properties）、实例（个体individuals）。\n\n ——Protege [download protégé software](http://protege.stanford.edu/download/download.html \"download protégé software\")\n\nProtégé是一个开源的本体编辑器（目前的版本是Protégé4.3），用户可以在GUI环境下创建本体或者知识库。\n\n——SparQL\n\n        SparQL(Simple Protocol and RDF Query Language)，是为RDF开发的一种查询语言和数据获取协议，它是为W3C所开发的RDF数据模型所定义，但是可以用于任何可以用RDF来表示的信息资源。\nSparQL 协议和 RDF 查询语言（SparQL）于2008年1月15日正式成为一项W3C推荐标准。SparQL 构建在以前的 RDF 查询语言（例如 rdfDB、RDQL 和 SeRQL）之上，拥有一些有价值的新特性。\n而且，SparQ将Web2.0和Semantic web两种新的web技术联系起来了，很有可能成为将来的主流网络数据库的查询语言和数据获取标准。\n\n*   ##### **参考文献**\n\n[Web 3.0时代：网络对你无所不知](http://www.china.com.cn/economic/txt/2011-03/01/content_22025450_2.htm \"Web 3.0时代：网络对你无所不知\")\n[本体（Ontology）综述](http://imarine.blog.163.com/blog/static/51380183200861373316920/ \"本体（Ontology）综述\")\n[RDF 简介](http://www.w3school.com.cn/rdf/rdf_intro.asp \"RDF 简介\")\n[RDF入门 推荐标准](http://www.360doc.com/content/05/1104/11/677_27683.shtml \"RDF入门 推荐标准\")\n[OWL 简介](http://www.w3school.com.cn/rdf/rdf_owl.asp \"OWL 简介\")\n[Jena 简介](http://www.ibm.com/developerworks/cn/java/j-jena/ \"Jena 简介\")\n[实用语义网RDFS与OWL高效建模(英文版)](http://www.amazon.cn/gp/product/B001P5HR2I/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B001P5HR2I&amp;linkCode=as2&amp;tag=ovjaywang-23)![](http://ir-cn.amazon-adsystem.com/e/ir?t=ovjaywang-23&amp;l=as2&amp;o=28&amp;a=B001P5HR2I)\n[数据库支持的模糊OWL本体管理](http://www.amazon.cn/gp/product/B005CLOYGS/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B005CLOYGS&amp;linkCode=as2&amp;tag=ovjaywang-23)![](http://ir-cn.amazon-adsystem.com/e/ir?t=ovjaywang-23&amp;l=as2&amp;o=28&amp;a=B005CLOYGS)\n[语义Web原理及应用](http://www.amazon.cn/gp/product/B002NKMS7S/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B002NKMS7S&amp;linkCode=as2&amp;tag=ovjaywang-23)![](http://ir-cn.amazon-adsystem.com/e/ir?t=ovjaywang-23&amp;l=as2&amp;o=28&amp;a=B002NKMS7S)\n<script type=\"text/javascript\" src=\"http://wms-cn.amazon-adsystem.com/20070822/CN/js/link-enhancer-common.js?tag=ovjaywang-23\">// <![CDATA[\n\n// ]]></script>\n\n<noscript>\n    ![](http://wms-cn.amazon-adsystem.com/20070822/CN/img/noscript.gif?tag=ovjaywang-23)\n</noscript>","slug":"Ontology本体的基础概念","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7lq001duco41t0bbso2","content":"<h4 id=\"本体论基础-amp-概念\"><a href=\"#本体论基础-amp-概念\" class=\"headerlink\" title=\"本体论基础&amp;概念\"></a>本体论基础&amp;概念</h4><pre><code>    本体作为一种能在语义和知识层次上描述领域概念的建模工具，其目标是捕获相关领域的知识，确定该领域内共同认可的词汇，通过概念之间的关系来描述概念的语义，提供对该领域知识的共同理解。语义Web（the Semantic Web）是在本体理论基础之上对现有Web所进行的扩展[15]，其目标是使Web上的信息具有计算机可以理解的语义，在本体的支持下实现信息系统间语义上的互操作性，以及对Web资源所进行的智能访问和检索[16]。充分实现语义Web的潜力，需要大规模采用基于本体的方法来共享信息和资源，本体是语义Web得以实现的基础和关键。\n</code></pre><ul>\n<li><h5 id=\"本体（Ontology）\"><a href=\"#本体（Ontology）\" class=\"headerlink\" title=\"本体（Ontology）\"></a><strong><span style=\"color: #49352f; font-family: 'Poiret One', 'Times New Roman', serif; font-size: 21px; line-height: 15px\">本体（Ontology）</span></strong></h5></li>\n</ul>\n<p>本体是共享概念模型的明确的形式化规范说明（An ontology is a formal, explicit specification of a shared conceptualisation.）”。该定义包含四层含义：</p>\n<p>1）概念模型（Conceptualization），即本体是通过抽象客观世界的概念而得到的模型，它表示的含义独立于具体的环境状态；</p>\n<p>2）明确性（Explicit），即本体所使用的概念及在这些概念之上的约束都有明确的定义，没有二义性；</p>\n<p>3）形式化（Formal），即本体是计算机可处理的，而不是自然语言；</p>\n<p> 4）共享（Shared），即本体体现的是共同认可的知识，反映的是相关领域中公认的概念集合，它所针对的是团体而不是个体。</p>\n<ul>\n<li><h5 id=\"本体建模元素\"><a href=\"#本体建模元素\" class=\"headerlink\" title=\"本体建模元素\"></a><strong><span style=\"line-height: 15px\">本体建模元素</span></strong></h5></li>\n</ul>\n<p>1)类（Classes）或概念（Concepts）</p>\n<pre><code>    其含义非常广泛，指任何事务，如工作描述、功能、行为、策略和推理过程。从语义上讲，它表示的是对象的集合，其定义包括概念的名称，与其他概念之间的关系的集合，以及用自然语言对概念的描述。\n</code></pre><p>2)关系（Relations）</p>\n<pre><code>    在领域中概念之间的交互作用，形式上定义为n维笛卡儿积的子集。如子类关系（subClassOf）。在语义上关系对应于对象元组的集合。\n</code></pre><p>3)函数（Functions）</p>\n<pre><code>    一类特殊的关系。该关系的前n－1个元素可以唯一决定第n个元素。形式化的定义为F: C1×C2×…×Cn-1→Cn。如motherOf就是一个函数，motherOf(x, y)表示y是x的母亲。\n</code></pre><p>4)公理（Axioms）</p>\n<pre><code>    代表永真断言，如概念乙属于概念甲的范围。\n</code></pre><p>5)实例（Instances）</p>\n<pre><code>    代表某概念类的基本元素，即某概念类所指的具体实体。从语义上讲实例表示的就是对象。\n</code></pre><ul>\n<li><p><strong><span style=\"line-height: 15px\">概念间关系</span></strong></p>\n<pre><code>概念间的关系可以分为两类：分类关系和非分类关系，包括4种类型，part-of——表达概念之间部分与整体的关系、kind-of——表达概念之间的继承关系，类似于面向对象中的子类和父类之间的关系、instance-of——表达概念之间的实例和概念之间的关系、attribute-of——表达某个概念是另外一个概念的属性。\n\nGruber提出了根据特定领域构造本体的准则：\n</code></pre><p>   （1）清晰性、明确性和客观性：即本体应该用自然语言对所定义的术语给出明确的、客观的语义定义，有效的说明所定义术语的含义。而且，当定义可以用逻辑公理表达时，它应该是形式化的。</p>\n<pre><code>（2）完全性：即所给出的定义是完整的，完全能表达所描述术语的含义。\n\n（3）一致性：即由术语得出的推论与术语本身的含义是相容的，支持与其定义相一致的推理，不会产生矛盾。\n\n（4）最大单调可拓展性：即向本体中添加通用或专用的术语时，不需要修改其已有的概念定义和内容，支持在已有的概念基础上定义新术语。\n\n（5）最小承诺和最小编码偏好：所谓最小承诺，即本体约定应该最小，对待建模对象应给出尽可能少的约束。对编码偏好应该是最小化的，因为不同的知识系统可能采用不同的表达方法或表示风格。\n\n以上5条是最具影响力的，其余几条准则分别是：\n</code></pre></li>\n</ul>\n<p>（6）本体描述原则（Ontological Distinction Principle）[36]：本体中的类应该是互不相交的。</p>\n<p>（7）概念层次多样化（Diversification of hierarchies）增强多继承机制的能力[37]。</p>\n<p>（8）模块化设计（Modularity）以最小化模块化之间的耦合度[38]。</p>\n<p>（9）语义距离最小化（Minimization of the semantic distance）[37]：兄弟概念之间的语义距离最小化，尽可能把含义相似的概念抽象出来，用相同的元语来表示。</p>\n<p>（10）命名标准化（Standardization of names）[37]：尽可能使用标准的名字。</p>\n<ul>\n<li><h5 id=\"Web3-0和语义网\"><a href=\"#Web3-0和语义网\" class=\"headerlink\" title=\"Web3.0和语义网\"></a><strong><span style=\"line-height: 28px\">Web3.0和语义网</span></strong></h5><pre><code>互联网专家们认为，对于普通用户而言，Web 3.0带来的最大好处就是让你拥有了一个贴身的私人助理。根据专家们的观点，Web3.0时代网络对你无所不知，能够自主地查询互联网上的所有信息来回答任何问题。许多专家把Web 3.0比做是庞大的数据库。Web2.0使用互联网是为了把人与人联系起来，而Web 3.0使用互联网是为了把信息与信息联系起来。一些专家认为Web3.0会取代目前的互联网，另一些专家则认为它将作为独立的网络而存在。\n\n在Web3.0时代你只要发出一个很简单的指令，剩下的事情则交给互联网，互联网完全可以替你做所有工作：它会根据你的偏好确定搜索参数，以缩小搜索服务的范围。然后，浏览器程序会收集并分析数据并提供给你，便于你进行比较。浏览器之所以有这个本领，是因为Web 3.0能够理解网上的信息。\n</code></pre><p>今天，你使用互联网搜索引擎时，搜索引擎其实并不真正理解你要搜索的东西。它只是简单地查找出现搜索框中的关键字的众多网页，而无法告诉某网页是不是真与你搜索的东西相关。换句话说，它只能告诉你，关键字出现在该网页上。比如，搜索的是“土星”这个词，最后会得到有关土星的网页搜索结果和有关汽车生产商土星公司的其他搜索结果。</p>\n<pre><code>TimBerners-Lee于1989年发明了互联网。他发明的互联网其最主要用途是作为统一的界面实现信息的彼此共享。不过，Berners-Lee对Web2.0到底是否存在表示怀疑，认为它只是毫无意义的专业术语。Berners-Lee坚持认为，他发明互联网就是为了能够让这一网络架构能处理Web2.0所能处理的所有任务。Berners-Lee设想未来的互联网与今天的Web 3.0概念很相似。它被称为语义网(Semantic Web)。\n</code></pre><p>简单地说，今天的互联网架构是为方便人使用而设计的。它让我们容易访问网页，理解网页所呈现的一切，而计算机却不能理解。搜索引擎也许能查找关键字，但它理解不了这些关键字在网页语境下是如何使用的。<br>有了语义网，计算机将使用软件代理来搜索及理解网页上的信息。这些软件代理将是在互联网上搜索相关信息的程序。它们之所以有这种功能，就是因为语义网拥有信息的集合体，这种集合体就叫本体(ontology)。在互联网上，本体其实是一个文件，它定义了一组词语之间的关系。</p>\n<pre><code>语义网要发挥应有的功效，本体内容就必须详细而全面。按照Berners-Lee的概念，本体会以元数据(元数据是指网页代码中所含的人类看不见而计算机能读取的信息)的形式而存在。\n</code></pre><p>构建本体需要大量的工作。实际上，这是语义网面临的重大障碍之一。人们是否愿意投入精力为自己的网站构建全面完整的本体？网站变化后，他们会维护本体吗？这些都是语义网构建时需要考虑的问题。批评人士认为，创建及维护语义网这种复杂的任务对大多数人来说工作量太大了。<br>另一方面，一些人很喜欢给互联网对象和信息做标签或做标记。互联网可以对做了标记的对象或信息进行分类。如果博客含有一个标记选项，这样很容易按特定主题对日志内容进行分类。Flickr等照片共享网站让用户可以对照片做标记。</p>\n</li>\n<li><h5 id=\"RDF（S）和OWL\"><a href=\"#RDF（S）和OWL\" class=\"headerlink\" title=\"RDF（S）和OWL\"></a><strong>RDF（S）和OWL</strong></h5></li>\n</ul>\n<p>RDF和RDFS作为W3C标准，提供了统一的、形式化的数据表示语言来描述Web上资源的含义。OWL建立在RDF之上，定义了RDF（S）描述中使用的词汇的语法，便于RDF（S）对元数据的处理，是计算机理解Web资源的基础。</p>\n<p>一个资源描述模型必须解决三个问题：</p>\n<ol>\n<li>资源的标识，即如何标识被描述的资源。该标识系统不能和其它的标识系统混淆，即使面对互联网上千差万别、不计其数的资源也可以用简单、有效的方法进行标识。</li>\n<li><span style=\"line-height: 28px\">l 结构设计。该模型在结构上要尽可能的简单，易于掌握；同时也应具有一定的灵活性、易于扩展，适于互联网分布式的网状结构。</span></li>\n<li><p><span style=\"line-height: 28px\">l 语言系统。既用可被机器理解的计算机语言对该模型进行描述，表达足够的语义以方便机器之间的交流。</span></p>\n<pre><code>除此之外，一个资源描述模型在设计时还应考虑与现有标准的兼容、实现的难易程度以及应用前景和价值等方方面面的问题。\n</code></pre><p>RDF模型是一种二元关系模型，它采用URI来标识被描述的资源，通过陈述描述资源。<br>XML是Web上数据表示的标准，因此RDF采用了一种基于XML语法的语言系统来表示RDF陈述，称为RDF/XML。</p>\n</li>\n</ol>\n<p>—<strong>Resource Description Framework，RDF</strong></p>\n<pre><code>    一种用于描述Web资源的标记语言。RDF是一个处理元数据的XML应用，所谓元数据，就是“描述数据的数据”或者“描述信息的信息”。也许这样解释元数据有些令人难以理解，举个简单的例子，书的内容是书的数据，而作者的名字、出版社的地址或版权信息就是书的元数据。数据和元数据的划分不是绝对的，有些数据既可以作为数据处理，也可以作为元数据处理，例如可以将作者的名字作为数据而不是元数据处理。\n\n   RDF基于这样的思想：用Web标识符（称作统一资源标识符，Uniform Resource Identifiers或URIs）来标识事物，用简单的属性（property）及属性值来描述资源。这使得RDF可以将一个或多个关于资源的简单陈述表示为一个由结点和弧组成的图（graph），其中的结点和弧代表资源、属性或属性值。其中每个陈述都是由**主体**（subject），**谓词**（predicate），**客体**（object）组成的。为了让讨论显得尽量具体一些，下面的这组陈述“有一个人由http://www.w3.org/People/EM/contact#me 标识, 他的名字是Eric Miller, 他的电子邮件地址是em@w3.org,他的头衔是Dr.”可以表示为图1 (http://www.w3.org/TR/2004/REC-rdf-primer-20040210/#figure1)所示的图：\n</code></pre><p><a href=\"http://www.flickr.com/photos/ovbeeshoot/9287033894/\" title=\"Flickr 上 Liar1992 的 27683_2\" target=\"_blank\" rel=\"external\"><img src=\"http://farm8.staticflickr.com/7390/9287033894_d345589db9.jpg\" alt=\"27683_2\"></a></p>\n<p>其表达的RDF如以下XML文档所示</p>\n<pre class=\"brush: xml; gutter: true\"> &lt;?xml version=&quot;1.0&quot;?&gt;\n &lt;rdf:RDF xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;\n xmlns:contact=&quot;http://www.w3.org/2000/10/swap/pim/contact#&quot;&gt;\n &lt;contact:Person rdf:about=&quot;http://www.w3.org/People/EM/contact#me&quot;&gt;\n     &lt;contact:fullName&gt;Eric Miller&lt;/contact:fullName&gt;\n     &lt;contact:mailbox rdf:resource=&quot;mailto:em@w3.org&quot;/&gt;\n     &lt;contact:personalTitle&gt;Dr.&lt;/contact:personalTitle&gt; \n   &lt;/contact:Person&gt;\n &lt;/rdf:RDF&gt;</pre>\n\n<p>—<strong>Web Ontology Language</strong>，<strong>OWL</strong></p>\n<pre><code>    OWL 与 RDF 有很多相似之处，但是较之 RDF， OWL 是一门具有更强机器解释能力的更强大的语言。\n</code></pre><p>与 RDF 相比，OWL 拥有更大的词汇表以及更强大的语言。</p>\n<pre><code>    2003 年7 月W3C 公布了OWL Web ontology 语言的最初工作草案,2004 年2 月10 日,OWL 正式成为W3C 推荐的标准。OWL 和DAML + OIL 非常相近,只有一些微小的变化。DAML + OIL 和OWL 的语义都基于描述逻辑(descriptionlogic ,DL) 。OWL 作为W3C 推荐的标准本体表示语言,它的最大特点是关联描述逻辑, 通过对概念、概念属性及其相互间关系的描述,构成概念的复杂关系网络,这就意味着描述逻辑推理机可以推理OWL 本体。\n\n    OWL 有3 个表达能力递增的子语言:OWL Lite ,OWL DL , OWL Full[20 ] 。OWL Lite 提供了类层次的能力和简单的约束能力,支持基数为0 或1 的基数约束,包括6 个类别的语言构造子。OWL DL 在保持计算完整性( computational completeness ) 和可判定性(decidability) 的前提下,提供了尽可能大的表达能力,包含了OWL 的全部语言构造成分,但他们的使用受到一些限制(如一个类可以是许多类的子类,但不能是另一个类的实例) 。描述逻辑是OWL 的形式化基础,OWL DL 的主要扩充是增加了布尔逻辑运算操作。OWL Full 包含OWL 的全部语言构造成分并取消了OWL DL 的限制,在OWL Full 中一个类可以看成个体的集合,也可以看成是一个个体。由于OWL Full 取消了OWL DL 中的保证可计算的某些限制,在没有计算保证的语法自由的RDF 上进行最大程度表达, 允许一个Ontology 在预定义的(RDF、OWL) 词汇表上增加词汇,从而任何推理软件均不能支持OWL FULL 的所有特点,因此不存在完整的推理算法支持OWL Full 的全部特性。OWL 通过对概念、概念属性及其相互间关系的描述,构成概念的复杂关系网络。\n</code></pre><p>OWL本体的一个优点是会有能够对其做推理的工具。这些工具提供了不特定于某个主题领域的通用支持，而如果要构建一个能对一个特定的工业界标准XML Schema做推理的系统，它往往是特定于一个领域的。构建一个可靠的和有用的推理系统不是一项简单的工作。而创建一个本体则更为容易处理。</p>\n<pre><code>    OWL旨在提供一种可用于描述网络文档和应用之中所固有的那些类及其之间关系的语言。OWL网络本体语言当前已经获得万维网联盟认可的，用于编纂本体的知识表达语言家族。 其功能在于为网络文档和应用中固有的类以及其间的逻辑关系提供描述，使得基于此技术的网络应用更加 人性化和智能化，节省用户自身资源搜索时间并将这些处理交给计算机系统内部处理。基于不同的语义论特性 此家族语言大致分为两个系统： 基于描述逻辑进而丰富表达和精准计算属性的OWL DL和OWL Lite，以及以资源描述架构RDF提供兼容叙述的OWL Full。 网络本体语言已经被认为是语义网技术的基础语言并吸引了包括学术和商业范围内人士的广泛兴趣。\n</code></pre><ul>\n<li><h5 id=\"本体相关工具介绍\"><a href=\"#本体相关工具介绍\" class=\"headerlink\" title=\"本体相关工具介绍\"></a><strong><span style=\"line-height: 28px\">本体相关工具介绍</span></strong></h5><p>   ——Jena <a href=\"http://jena.apache.org/download/\" title=\"Jena下载\" target=\"_blank\" rel=\"external\">Jena下载</a></p>\n<pre><code>jena是惠普公司的一个项目，jena为应用程序开发人员提供了一套java接口对本体进行操作。这样我们就可以调用jenaAPI，构建我们自己的应用程序，实现对包括RDF，OWL本体进行创建，修改，查询以及推理操作。主要包括：\n</code></pre></li>\n</ul>\n<p>a)       以RDF/XML、三元组形式读写RDF</p>\n<p>资源描述框架是(RDF)是描述资源的一项标准(在技术上是W3C的推荐标准)，Jena文档中有一部分呢详细介绍了RDF和Jena RDF API，其内容包括对Jena RDF包的介绍、RDF模型的创建、读写、查询等操作，以及RDF容器等的讨论。</p>\n<p>b)       RDFS，OWL，DAML+OIL等本体的操作</p>\n<p>Jena框架包含一个本体子系统（Ontology Subsystem），它提供的API允许处理基于RDF的本体数据，也就是说，它支持OWL，DAML+OIL和RDFS。本体API与推理子系统结合可以从特定本体中提取信息，Jena 2还提供文档管理器（OntDocumentManager）以支持对导入本体的文档管理。</p>\n<p>c)       利用数据库保存数据</p>\n<pre><code>Jena 2允许将数据存储到硬盘中，或者是OWL文件，或者是关系数据库中。本文处理的本体就是OWL文件读入的。\n</code></pre><p>d)       查询模型</p>\n<p>Jena 2提供了ARQ查询引擎，它实现SPARQL查询语言和RDQL，从而支持对模型的查询。另外，查询引擎与关系数据库相关联，这使得查询存储在关系数据库中的本体时能够达到更高的效率。</p>\n<p>e)       基于规则的推理</p>\n<pre><code>    Jena 2支持基于规则的简单推理，其推理机制支持将推理器(inference reasoners)导入Jena，创建模型时将推理器与模型关联以实现推理。\n\n    Jena提供的接口本质上都是Java程序，也就是.java文件经过javac之后生成的.class文件。显然，class文件并不能提示本体创建使用的语言。为了区别于其他的表示方法，每种本体语言都有一个自己的框架（profile），它列出了这种语言使用的类（概念）和属性的构建方式和URI。因此，在DAML框架里，对象属性（）的URI是daml:ObjectProperty，而在OWL框架里却是owl:ObjectProperty。RDFS并没有定义对象属性，所以在RDFS框架里，对象属性的URI是null。\n</code></pre><p>在Jena中，这种框架通过参数的设置在创建时与本体模型（Ontology Model）绑定在一起。本体模型继承自Jena中的Model类。Model允许访问RDF数据集合中的陈述（Statements），OntModel对此进行了扩展，以便支持本体中的各种数据对象：类（classes）、属性（properties）、实例（个体individuals）。</p>\n<p> ——Protege <a href=\"http://protege.stanford.edu/download/download.html\" title=\"download protégé software\" target=\"_blank\" rel=\"external\">download protégé software</a></p>\n<p>Protégé是一个开源的本体编辑器（目前的版本是Protégé4.3），用户可以在GUI环境下创建本体或者知识库。</p>\n<p>——SparQL</p>\n<pre><code>    SparQL(Simple Protocol and RDF Query Language)，是为RDF开发的一种查询语言和数据获取协议，它是为W3C所开发的RDF数据模型所定义，但是可以用于任何可以用RDF来表示的信息资源。\n</code></pre><p>SparQL 协议和 RDF 查询语言（SparQL）于2008年1月15日正式成为一项W3C推荐标准。SparQL 构建在以前的 RDF 查询语言（例如 rdfDB、RDQL 和 SeRQL）之上，拥有一些有价值的新特性。<br>而且，SparQ将Web2.0和Semantic web两种新的web技术联系起来了，很有可能成为将来的主流网络数据库的查询语言和数据获取标准。</p>\n<ul>\n<li><h5 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a><strong>参考文献</strong></h5></li>\n</ul>\n<p><a href=\"http://www.china.com.cn/economic/txt/2011-03/01/content_22025450_2.htm\" title=\"Web 3.0时代：网络对你无所不知\" target=\"_blank\" rel=\"external\">Web 3.0时代：网络对你无所不知</a><br><a href=\"http://imarine.blog.163.com/blog/static/51380183200861373316920/\" title=\"本体（Ontology）综述\" target=\"_blank\" rel=\"external\">本体（Ontology）综述</a><br><a href=\"http://www.w3school.com.cn/rdf/rdf_intro.asp\" title=\"RDF 简介\" target=\"_blank\" rel=\"external\">RDF 简介</a><br><a href=\"http://www.360doc.com/content/05/1104/11/677_27683.shtml\" title=\"RDF入门 推荐标准\" target=\"_blank\" rel=\"external\">RDF入门 推荐标准</a><br><a href=\"http://www.w3school.com.cn/rdf/rdf_owl.asp\" title=\"OWL 简介\" target=\"_blank\" rel=\"external\">OWL 简介</a><br><a href=\"http://www.ibm.com/developerworks/cn/java/j-jena/\" title=\"Jena 简介\" target=\"_blank\" rel=\"external\">Jena 简介</a><br><a href=\"http://www.amazon.cn/gp/product/B001P5HR2I/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B001P5HR2I&amp;linkCode=as2&amp;tag=ovjaywang-23\" target=\"_blank\" rel=\"external\">实用语义网RDFS与OWL高效建模(英文版)</a><img src=\"http://ir-cn.amazon-adsystem.com/e/ir?t=ovjaywang-23&amp;l=as2&amp;o=28&amp;a=B001P5HR2I\" alt=\"\"><br><a href=\"http://www.amazon.cn/gp/product/B005CLOYGS/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B005CLOYGS&amp;linkCode=as2&amp;tag=ovjaywang-23\" target=\"_blank\" rel=\"external\">数据库支持的模糊OWL本体管理</a><img src=\"http://ir-cn.amazon-adsystem.com/e/ir?t=ovjaywang-23&amp;l=as2&amp;o=28&amp;a=B005CLOYGS\" alt=\"\"><br><a href=\"http://www.amazon.cn/gp/product/B002NKMS7S/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B002NKMS7S&amp;linkCode=as2&amp;tag=ovjaywang-23\" target=\"_blank\" rel=\"external\">语义Web原理及应用</a><img src=\"http://ir-cn.amazon-adsystem.com/e/ir?t=ovjaywang-23&amp;l=as2&amp;o=28&amp;a=B002NKMS7S\" alt=\"\"></p>\n<script type=\"text/javascript\" src=\"http://wms-cn.amazon-adsystem.com/20070822/CN/js/link-enhancer-common.js?tag=ovjaywang-23\">// <![CDATA[\n\n// ]]></script>\n\n<noscript><br>    <img src=\"http://wms-cn.amazon-adsystem.com/20070822/CN/img/noscript.gif?tag=ovjaywang-23\" alt=\"\"><br></noscript>","excerpt":"","more":"<h4 id=\"本体论基础-amp-概念\"><a href=\"#本体论基础-amp-概念\" class=\"headerlink\" title=\"本体论基础&amp;概念\"></a>本体论基础&amp;概念</h4><pre><code>    本体作为一种能在语义和知识层次上描述领域概念的建模工具，其目标是捕获相关领域的知识，确定该领域内共同认可的词汇，通过概念之间的关系来描述概念的语义，提供对该领域知识的共同理解。语义Web（the Semantic Web）是在本体理论基础之上对现有Web所进行的扩展[15]，其目标是使Web上的信息具有计算机可以理解的语义，在本体的支持下实现信息系统间语义上的互操作性，以及对Web资源所进行的智能访问和检索[16]。充分实现语义Web的潜力，需要大规模采用基于本体的方法来共享信息和资源，本体是语义Web得以实现的基础和关键。\n</code></pre><ul>\n<li><h5 id=\"本体（Ontology）\"><a href=\"#本体（Ontology）\" class=\"headerlink\" title=\"本体（Ontology）\"></a><strong><span style=\"color: #49352f; font-family: 'Poiret One', 'Times New Roman', serif; font-size: 21px; line-height: 15px\">本体（Ontology）</span></strong></h5></li>\n</ul>\n<p>本体是共享概念模型的明确的形式化规范说明（An ontology is a formal, explicit specification of a shared conceptualisation.）”。该定义包含四层含义：</p>\n<p>1）概念模型（Conceptualization），即本体是通过抽象客观世界的概念而得到的模型，它表示的含义独立于具体的环境状态；</p>\n<p>2）明确性（Explicit），即本体所使用的概念及在这些概念之上的约束都有明确的定义，没有二义性；</p>\n<p>3）形式化（Formal），即本体是计算机可处理的，而不是自然语言；</p>\n<p> 4）共享（Shared），即本体体现的是共同认可的知识，反映的是相关领域中公认的概念集合，它所针对的是团体而不是个体。</p>\n<ul>\n<li><h5 id=\"本体建模元素\"><a href=\"#本体建模元素\" class=\"headerlink\" title=\"本体建模元素\"></a><strong><span style=\"line-height: 15px\">本体建模元素</span></strong></h5></li>\n</ul>\n<p>1)类（Classes）或概念（Concepts）</p>\n<pre><code>    其含义非常广泛，指任何事务，如工作描述、功能、行为、策略和推理过程。从语义上讲，它表示的是对象的集合，其定义包括概念的名称，与其他概念之间的关系的集合，以及用自然语言对概念的描述。\n</code></pre><p>2)关系（Relations）</p>\n<pre><code>    在领域中概念之间的交互作用，形式上定义为n维笛卡儿积的子集。如子类关系（subClassOf）。在语义上关系对应于对象元组的集合。\n</code></pre><p>3)函数（Functions）</p>\n<pre><code>    一类特殊的关系。该关系的前n－1个元素可以唯一决定第n个元素。形式化的定义为F: C1×C2×…×Cn-1→Cn。如motherOf就是一个函数，motherOf(x, y)表示y是x的母亲。\n</code></pre><p>4)公理（Axioms）</p>\n<pre><code>    代表永真断言，如概念乙属于概念甲的范围。\n</code></pre><p>5)实例（Instances）</p>\n<pre><code>    代表某概念类的基本元素，即某概念类所指的具体实体。从语义上讲实例表示的就是对象。\n</code></pre><ul>\n<li><p><strong><span style=\"line-height: 15px\">概念间关系</span></strong></p>\n<pre><code>概念间的关系可以分为两类：分类关系和非分类关系，包括4种类型，part-of——表达概念之间部分与整体的关系、kind-of——表达概念之间的继承关系，类似于面向对象中的子类和父类之间的关系、instance-of——表达概念之间的实例和概念之间的关系、attribute-of——表达某个概念是另外一个概念的属性。\n\nGruber提出了根据特定领域构造本体的准则：\n</code></pre><p>   （1）清晰性、明确性和客观性：即本体应该用自然语言对所定义的术语给出明确的、客观的语义定义，有效的说明所定义术语的含义。而且，当定义可以用逻辑公理表达时，它应该是形式化的。</p>\n<pre><code>（2）完全性：即所给出的定义是完整的，完全能表达所描述术语的含义。\n\n（3）一致性：即由术语得出的推论与术语本身的含义是相容的，支持与其定义相一致的推理，不会产生矛盾。\n\n（4）最大单调可拓展性：即向本体中添加通用或专用的术语时，不需要修改其已有的概念定义和内容，支持在已有的概念基础上定义新术语。\n\n（5）最小承诺和最小编码偏好：所谓最小承诺，即本体约定应该最小，对待建模对象应给出尽可能少的约束。对编码偏好应该是最小化的，因为不同的知识系统可能采用不同的表达方法或表示风格。\n\n以上5条是最具影响力的，其余几条准则分别是：\n</code></pre></li>\n</ul>\n<p>（6）本体描述原则（Ontological Distinction Principle）[36]：本体中的类应该是互不相交的。</p>\n<p>（7）概念层次多样化（Diversification of hierarchies）增强多继承机制的能力[37]。</p>\n<p>（8）模块化设计（Modularity）以最小化模块化之间的耦合度[38]。</p>\n<p>（9）语义距离最小化（Minimization of the semantic distance）[37]：兄弟概念之间的语义距离最小化，尽可能把含义相似的概念抽象出来，用相同的元语来表示。</p>\n<p>（10）命名标准化（Standardization of names）[37]：尽可能使用标准的名字。</p>\n<ul>\n<li><h5 id=\"Web3-0和语义网\"><a href=\"#Web3-0和语义网\" class=\"headerlink\" title=\"Web3.0和语义网\"></a><strong><span style=\"line-height: 28px\">Web3.0和语义网</span></strong></h5><pre><code>互联网专家们认为，对于普通用户而言，Web 3.0带来的最大好处就是让你拥有了一个贴身的私人助理。根据专家们的观点，Web3.0时代网络对你无所不知，能够自主地查询互联网上的所有信息来回答任何问题。许多专家把Web 3.0比做是庞大的数据库。Web2.0使用互联网是为了把人与人联系起来，而Web 3.0使用互联网是为了把信息与信息联系起来。一些专家认为Web3.0会取代目前的互联网，另一些专家则认为它将作为独立的网络而存在。\n\n在Web3.0时代你只要发出一个很简单的指令，剩下的事情则交给互联网，互联网完全可以替你做所有工作：它会根据你的偏好确定搜索参数，以缩小搜索服务的范围。然后，浏览器程序会收集并分析数据并提供给你，便于你进行比较。浏览器之所以有这个本领，是因为Web 3.0能够理解网上的信息。\n</code></pre><p>今天，你使用互联网搜索引擎时，搜索引擎其实并不真正理解你要搜索的东西。它只是简单地查找出现搜索框中的关键字的众多网页，而无法告诉某网页是不是真与你搜索的东西相关。换句话说，它只能告诉你，关键字出现在该网页上。比如，搜索的是“土星”这个词，最后会得到有关土星的网页搜索结果和有关汽车生产商土星公司的其他搜索结果。</p>\n<pre><code>TimBerners-Lee于1989年发明了互联网。他发明的互联网其最主要用途是作为统一的界面实现信息的彼此共享。不过，Berners-Lee对Web2.0到底是否存在表示怀疑，认为它只是毫无意义的专业术语。Berners-Lee坚持认为，他发明互联网就是为了能够让这一网络架构能处理Web2.0所能处理的所有任务。Berners-Lee设想未来的互联网与今天的Web 3.0概念很相似。它被称为语义网(Semantic Web)。\n</code></pre><p>简单地说，今天的互联网架构是为方便人使用而设计的。它让我们容易访问网页，理解网页所呈现的一切，而计算机却不能理解。搜索引擎也许能查找关键字，但它理解不了这些关键字在网页语境下是如何使用的。<br>有了语义网，计算机将使用软件代理来搜索及理解网页上的信息。这些软件代理将是在互联网上搜索相关信息的程序。它们之所以有这种功能，就是因为语义网拥有信息的集合体，这种集合体就叫本体(ontology)。在互联网上，本体其实是一个文件，它定义了一组词语之间的关系。</p>\n<pre><code>语义网要发挥应有的功效，本体内容就必须详细而全面。按照Berners-Lee的概念，本体会以元数据(元数据是指网页代码中所含的人类看不见而计算机能读取的信息)的形式而存在。\n</code></pre><p>构建本体需要大量的工作。实际上，这是语义网面临的重大障碍之一。人们是否愿意投入精力为自己的网站构建全面完整的本体？网站变化后，他们会维护本体吗？这些都是语义网构建时需要考虑的问题。批评人士认为，创建及维护语义网这种复杂的任务对大多数人来说工作量太大了。<br>另一方面，一些人很喜欢给互联网对象和信息做标签或做标记。互联网可以对做了标记的对象或信息进行分类。如果博客含有一个标记选项，这样很容易按特定主题对日志内容进行分类。Flickr等照片共享网站让用户可以对照片做标记。</p>\n</li>\n<li><h5 id=\"RDF（S）和OWL\"><a href=\"#RDF（S）和OWL\" class=\"headerlink\" title=\"RDF（S）和OWL\"></a><strong>RDF（S）和OWL</strong></h5></li>\n</ul>\n<p>RDF和RDFS作为W3C标准，提供了统一的、形式化的数据表示语言来描述Web上资源的含义。OWL建立在RDF之上，定义了RDF（S）描述中使用的词汇的语法，便于RDF（S）对元数据的处理，是计算机理解Web资源的基础。</p>\n<p>一个资源描述模型必须解决三个问题：</p>\n<ol>\n<li>资源的标识，即如何标识被描述的资源。该标识系统不能和其它的标识系统混淆，即使面对互联网上千差万别、不计其数的资源也可以用简单、有效的方法进行标识。</li>\n<li><span style=\"line-height: 28px\">l 结构设计。该模型在结构上要尽可能的简单，易于掌握；同时也应具有一定的灵活性、易于扩展，适于互联网分布式的网状结构。</span></li>\n<li><p><span style=\"line-height: 28px\">l 语言系统。既用可被机器理解的计算机语言对该模型进行描述，表达足够的语义以方便机器之间的交流。</span></p>\n<pre><code>除此之外，一个资源描述模型在设计时还应考虑与现有标准的兼容、实现的难易程度以及应用前景和价值等方方面面的问题。\n</code></pre><p>RDF模型是一种二元关系模型，它采用URI来标识被描述的资源，通过陈述描述资源。<br>XML是Web上数据表示的标准，因此RDF采用了一种基于XML语法的语言系统来表示RDF陈述，称为RDF/XML。</p>\n</li>\n</ol>\n<p>—<strong>Resource Description Framework，RDF</strong></p>\n<pre><code>    一种用于描述Web资源的标记语言。RDF是一个处理元数据的XML应用，所谓元数据，就是“描述数据的数据”或者“描述信息的信息”。也许这样解释元数据有些令人难以理解，举个简单的例子，书的内容是书的数据，而作者的名字、出版社的地址或版权信息就是书的元数据。数据和元数据的划分不是绝对的，有些数据既可以作为数据处理，也可以作为元数据处理，例如可以将作者的名字作为数据而不是元数据处理。\n\n   RDF基于这样的思想：用Web标识符（称作统一资源标识符，Uniform Resource Identifiers或URIs）来标识事物，用简单的属性（property）及属性值来描述资源。这使得RDF可以将一个或多个关于资源的简单陈述表示为一个由结点和弧组成的图（graph），其中的结点和弧代表资源、属性或属性值。其中每个陈述都是由**主体**（subject），**谓词**（predicate），**客体**（object）组成的。为了让讨论显得尽量具体一些，下面的这组陈述“有一个人由http://www.w3.org/People/EM/contact#me 标识, 他的名字是Eric Miller, 他的电子邮件地址是em@w3.org,他的头衔是Dr.”可以表示为图1 (http://www.w3.org/TR/2004/REC-rdf-primer-20040210/#figure1)所示的图：\n</code></pre><p><a href=\"http://www.flickr.com/photos/ovbeeshoot/9287033894/\" title=\"Flickr 上 Liar1992 的 27683_2\"><img src=\"http://farm8.staticflickr.com/7390/9287033894_d345589db9.jpg\" alt=\"27683_2\"></a></p>\n<p>其表达的RDF如以下XML文档所示</p>\n<pre class=\"brush: xml; gutter: true\"> &lt;?xml version=&quot;1.0&quot;?&gt;\n &lt;rdf:RDF xmlns:rdf=&quot;http://www.w3.org/1999/02/22-rdf-syntax-ns#&quot;\n xmlns:contact=&quot;http://www.w3.org/2000/10/swap/pim/contact#&quot;&gt;\n &lt;contact:Person rdf:about=&quot;http://www.w3.org/People/EM/contact#me&quot;&gt;\n     &lt;contact:fullName&gt;Eric Miller&lt;/contact:fullName&gt;\n     &lt;contact:mailbox rdf:resource=&quot;mailto:em@w3.org&quot;/&gt;\n     &lt;contact:personalTitle&gt;Dr.&lt;/contact:personalTitle&gt; \n   &lt;/contact:Person&gt;\n &lt;/rdf:RDF&gt;</pre>\n\n<p>—<strong>Web Ontology Language</strong>，<strong>OWL</strong></p>\n<pre><code>    OWL 与 RDF 有很多相似之处，但是较之 RDF， OWL 是一门具有更强机器解释能力的更强大的语言。\n</code></pre><p>与 RDF 相比，OWL 拥有更大的词汇表以及更强大的语言。</p>\n<pre><code>    2003 年7 月W3C 公布了OWL Web ontology 语言的最初工作草案,2004 年2 月10 日,OWL 正式成为W3C 推荐的标准。OWL 和DAML + OIL 非常相近,只有一些微小的变化。DAML + OIL 和OWL 的语义都基于描述逻辑(descriptionlogic ,DL) 。OWL 作为W3C 推荐的标准本体表示语言,它的最大特点是关联描述逻辑, 通过对概念、概念属性及其相互间关系的描述,构成概念的复杂关系网络,这就意味着描述逻辑推理机可以推理OWL 本体。\n\n    OWL 有3 个表达能力递增的子语言:OWL Lite ,OWL DL , OWL Full[20 ] 。OWL Lite 提供了类层次的能力和简单的约束能力,支持基数为0 或1 的基数约束,包括6 个类别的语言构造子。OWL DL 在保持计算完整性( computational completeness ) 和可判定性(decidability) 的前提下,提供了尽可能大的表达能力,包含了OWL 的全部语言构造成分,但他们的使用受到一些限制(如一个类可以是许多类的子类,但不能是另一个类的实例) 。描述逻辑是OWL 的形式化基础,OWL DL 的主要扩充是增加了布尔逻辑运算操作。OWL Full 包含OWL 的全部语言构造成分并取消了OWL DL 的限制,在OWL Full 中一个类可以看成个体的集合,也可以看成是一个个体。由于OWL Full 取消了OWL DL 中的保证可计算的某些限制,在没有计算保证的语法自由的RDF 上进行最大程度表达, 允许一个Ontology 在预定义的(RDF、OWL) 词汇表上增加词汇,从而任何推理软件均不能支持OWL FULL 的所有特点,因此不存在完整的推理算法支持OWL Full 的全部特性。OWL 通过对概念、概念属性及其相互间关系的描述,构成概念的复杂关系网络。\n</code></pre><p>OWL本体的一个优点是会有能够对其做推理的工具。这些工具提供了不特定于某个主题领域的通用支持，而如果要构建一个能对一个特定的工业界标准XML Schema做推理的系统，它往往是特定于一个领域的。构建一个可靠的和有用的推理系统不是一项简单的工作。而创建一个本体则更为容易处理。</p>\n<pre><code>    OWL旨在提供一种可用于描述网络文档和应用之中所固有的那些类及其之间关系的语言。OWL网络本体语言当前已经获得万维网联盟认可的，用于编纂本体的知识表达语言家族。 其功能在于为网络文档和应用中固有的类以及其间的逻辑关系提供描述，使得基于此技术的网络应用更加 人性化和智能化，节省用户自身资源搜索时间并将这些处理交给计算机系统内部处理。基于不同的语义论特性 此家族语言大致分为两个系统： 基于描述逻辑进而丰富表达和精准计算属性的OWL DL和OWL Lite，以及以资源描述架构RDF提供兼容叙述的OWL Full。 网络本体语言已经被认为是语义网技术的基础语言并吸引了包括学术和商业范围内人士的广泛兴趣。\n</code></pre><ul>\n<li><h5 id=\"本体相关工具介绍\"><a href=\"#本体相关工具介绍\" class=\"headerlink\" title=\"本体相关工具介绍\"></a><strong><span style=\"line-height: 28px\">本体相关工具介绍</span></strong></h5><p>   ——Jena <a href=\"http://jena.apache.org/download/\" title=\"Jena下载\">Jena下载</a></p>\n<pre><code>jena是惠普公司的一个项目，jena为应用程序开发人员提供了一套java接口对本体进行操作。这样我们就可以调用jenaAPI，构建我们自己的应用程序，实现对包括RDF，OWL本体进行创建，修改，查询以及推理操作。主要包括：\n</code></pre></li>\n</ul>\n<p>a)       以RDF/XML、三元组形式读写RDF</p>\n<p>资源描述框架是(RDF)是描述资源的一项标准(在技术上是W3C的推荐标准)，Jena文档中有一部分呢详细介绍了RDF和Jena RDF API，其内容包括对Jena RDF包的介绍、RDF模型的创建、读写、查询等操作，以及RDF容器等的讨论。</p>\n<p>b)       RDFS，OWL，DAML+OIL等本体的操作</p>\n<p>Jena框架包含一个本体子系统（Ontology Subsystem），它提供的API允许处理基于RDF的本体数据，也就是说，它支持OWL，DAML+OIL和RDFS。本体API与推理子系统结合可以从特定本体中提取信息，Jena 2还提供文档管理器（OntDocumentManager）以支持对导入本体的文档管理。</p>\n<p>c)       利用数据库保存数据</p>\n<pre><code>Jena 2允许将数据存储到硬盘中，或者是OWL文件，或者是关系数据库中。本文处理的本体就是OWL文件读入的。\n</code></pre><p>d)       查询模型</p>\n<p>Jena 2提供了ARQ查询引擎，它实现SPARQL查询语言和RDQL，从而支持对模型的查询。另外，查询引擎与关系数据库相关联，这使得查询存储在关系数据库中的本体时能够达到更高的效率。</p>\n<p>e)       基于规则的推理</p>\n<pre><code>    Jena 2支持基于规则的简单推理，其推理机制支持将推理器(inference reasoners)导入Jena，创建模型时将推理器与模型关联以实现推理。\n\n    Jena提供的接口本质上都是Java程序，也就是.java文件经过javac之后生成的.class文件。显然，class文件并不能提示本体创建使用的语言。为了区别于其他的表示方法，每种本体语言都有一个自己的框架（profile），它列出了这种语言使用的类（概念）和属性的构建方式和URI。因此，在DAML框架里，对象属性（）的URI是daml:ObjectProperty，而在OWL框架里却是owl:ObjectProperty。RDFS并没有定义对象属性，所以在RDFS框架里，对象属性的URI是null。\n</code></pre><p>在Jena中，这种框架通过参数的设置在创建时与本体模型（Ontology Model）绑定在一起。本体模型继承自Jena中的Model类。Model允许访问RDF数据集合中的陈述（Statements），OntModel对此进行了扩展，以便支持本体中的各种数据对象：类（classes）、属性（properties）、实例（个体individuals）。</p>\n<p> ——Protege <a href=\"http://protege.stanford.edu/download/download.html\" title=\"download protégé software\">download protégé software</a></p>\n<p>Protégé是一个开源的本体编辑器（目前的版本是Protégé4.3），用户可以在GUI环境下创建本体或者知识库。</p>\n<p>——SparQL</p>\n<pre><code>    SparQL(Simple Protocol and RDF Query Language)，是为RDF开发的一种查询语言和数据获取协议，它是为W3C所开发的RDF数据模型所定义，但是可以用于任何可以用RDF来表示的信息资源。\n</code></pre><p>SparQL 协议和 RDF 查询语言（SparQL）于2008年1月15日正式成为一项W3C推荐标准。SparQL 构建在以前的 RDF 查询语言（例如 rdfDB、RDQL 和 SeRQL）之上，拥有一些有价值的新特性。<br>而且，SparQ将Web2.0和Semantic web两种新的web技术联系起来了，很有可能成为将来的主流网络数据库的查询语言和数据获取标准。</p>\n<ul>\n<li><h5 id=\"参考文献\"><a href=\"#参考文献\" class=\"headerlink\" title=\"参考文献\"></a><strong>参考文献</strong></h5></li>\n</ul>\n<p><a href=\"http://www.china.com.cn/economic/txt/2011-03/01/content_22025450_2.htm\" title=\"Web 3.0时代：网络对你无所不知\">Web 3.0时代：网络对你无所不知</a><br><a href=\"http://imarine.blog.163.com/blog/static/51380183200861373316920/\" title=\"本体（Ontology）综述\">本体（Ontology）综述</a><br><a href=\"http://www.w3school.com.cn/rdf/rdf_intro.asp\" title=\"RDF 简介\">RDF 简介</a><br><a href=\"http://www.360doc.com/content/05/1104/11/677_27683.shtml\" title=\"RDF入门 推荐标准\">RDF入门 推荐标准</a><br><a href=\"http://www.w3school.com.cn/rdf/rdf_owl.asp\" title=\"OWL 简介\">OWL 简介</a><br><a href=\"http://www.ibm.com/developerworks/cn/java/j-jena/\" title=\"Jena 简介\">Jena 简介</a><br><a href=\"http://www.amazon.cn/gp/product/B001P5HR2I/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B001P5HR2I&amp;linkCode=as2&amp;tag=ovjaywang-23\">实用语义网RDFS与OWL高效建模(英文版)</a><img src=\"http://ir-cn.amazon-adsystem.com/e/ir?t=ovjaywang-23&amp;l=as2&amp;o=28&amp;a=B001P5HR2I\" alt=\"\"><br><a href=\"http://www.amazon.cn/gp/product/B005CLOYGS/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B005CLOYGS&amp;linkCode=as2&amp;tag=ovjaywang-23\">数据库支持的模糊OWL本体管理</a><img src=\"http://ir-cn.amazon-adsystem.com/e/ir?t=ovjaywang-23&amp;l=as2&amp;o=28&amp;a=B005CLOYGS\" alt=\"\"><br><a href=\"http://www.amazon.cn/gp/product/B002NKMS7S/ref=as_li_qf_sp_asin_tl?ie=UTF8&amp;camp=536&amp;creative=3200&amp;creativeASIN=B002NKMS7S&amp;linkCode=as2&amp;tag=ovjaywang-23\">语义Web原理及应用</a><img src=\"http://ir-cn.amazon-adsystem.com/e/ir?t=ovjaywang-23&amp;l=as2&amp;o=28&amp;a=B002NKMS7S\" alt=\"\"></p>\n<script type=\"text/javascript\" src=\"http://wms-cn.amazon-adsystem.com/20070822/CN/js/link-enhancer-common.js?tag=ovjaywang-23\">// <![CDATA[\n\n// ]]></script>\n\n<noscript><br>    <img src=\"http://wms-cn.amazon-adsystem.com/20070822/CN/img/noscript.gif?tag=ovjaywang-23\" alt=\"\"><br></noscript>"},{"title":"[机器学习课程小结][1/10]","id":"565","date":"2015-05-05T09:29:19.000Z","_content":"\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1ertx4e3tejj203704bglr.jpg)<span style=\"color: #000000;\">最近在Stanford的网络课程学习了机器学习的课程，Andre Ng讲的灰常不错啊。每种算法对应的实例挺多的，推导也很详细，它基本用matlab实现。就是概率统计数理统计矩阵论方面的知识最近得补一补了，直接应用在编程语言编写某些函数也是挺头疼的，不错还是略有收获。总共20节，听完5节，做个小结。</span>\n\n<span style=\"color: #000000;\">[L1 Introduction]</span>\n<span style=\"color: #000000;\"> 凸优化理论 隐式马尔科夫模型 O natation 学习型算法</span>\n\n<span style=\"color: #000000;\">1)Supervised Learning</span>\n<span style=\"color: #000000;\"> 回归问题 Regression 分类问题(x|y)(肿瘤大小|癌症良恶) 学习给定了标准答案的样本-&gt;分析新样本的可能性 支持向量机Support Vector Machine</span>\n<span style=\"color: #000000;\"> 2)Learning Theory</span>\n<span style=\"color: #000000;\"> 3)Unsupervised Learning</span>\n<span style=\"color: #000000;\"> 挖掘 聚类分析-&gt;图像分析和处理的应用 像素处理 ICA Algorithm 鸡尾酒问题（不同声源声音分离）</span>\n<span style=\"color: #000000;\"> 4)Reinforcement Learning</span>\n<span style=\"color: #000000;\"> 决策分析</span>\n\n&nbsp;\n\n> <span style=\"color: #000000;\">马可夫过程</span>\n\n<span style=\"color: #000000;\"> </span>\n\n<span style=\"color: #000000;\">在概率论及统计学中，马可夫过程（英语：Markov process）是一个具备了马可夫性质的随机过程。马可夫过程是不具备记忆特质的（memorylessness）。换言之，马可夫过程的条件概率</span><span style=\"color: #ff0000;\">仅仅与系统的当前状态相关，而与它的过去历史或未来状态，都是独立、不相关的</span>。<span style=\"color: #000000;\">具备离散状态的马可夫过程，通常被称为马可夫链。马可夫链通常使用离散的时间集合定义，又称离散时间马可夫链。具有马尔可夫性质的过程通常称之为马尔可夫过程。</span>\n\n<table style=\"width: 60%;\">\n<tbody>\n<tr>\n<th scope=\"col\"><span style=\"color: #000000;\"> </span></th>\n<th scope=\"col\"><span style=\"color: #000000;\">可数或有限的状态空间</span></th>\n<th scope=\"col\"><span style=\"color: #000000;\">连续或一般的状态空间</span></th>\n</tr>\n<tr>\n<th scope=\"row\"><span style=\"color: #000000;\">离散时间</span></th>\n<td><span style=\"color: #000000;\">在可数且有限状态空间下的<a style=\"color: #000000;\" title=\"马可夫链\">马可夫链</a></span></td>\n<td><span style=\"color: #000000;\"><a style=\"color: #000000;\" title=\"Harris chain\">Harris chain</a> (在一般状态空间下的马可夫链)</span></td>\n</tr>\n<tr>\n<th style=\"width: 10%;\" scope=\"row\"><span style=\"color: #000000;\">连续时间</span></th>\n<td style=\"width: 25%;\"><span style=\"color: #000000;\"><a style=\"color: #000000;\" title=\"&quot;Continuous-time\">Continuous-time Markov process</a></span></td>\n<td style=\"width: 25%;\"><span style=\"color: #000000;\">任何具备马可夫性质的<a class=\"new\" style=\"color: #000000;\" title=\"连续随机过程\">连续随机过程</a>，例如<a style=\"color: #000000;\" title=\"维纳过程\">维纳过程</a></span></td>\n</tr>\n</tbody>\n</table>\n\n## \n\n<span style=\"color: #000000;\">具有马尔可夫表示的非马尔可夫过程的例子，例如有移动平均时间序列。最有名的马尔可夫过程为马尔可夫链，但不少其他的过程，包括布朗运动也是马尔可夫过程。</span>\n\n&nbsp;\n\n> <span style=\"color: #000000;\">隐马尔可夫模型</span>\n\n&nbsp;\n\n<span style=\"color: #000000;\">隐马尔可夫模型（Hidden Markov Model，HMM）是统计模型，它用来描述一个含有隐含未知参数的马尔可夫过程。</span><span style=\"color: #ff0000;\">其难点是从可观察的参数中确定该过程的隐含参数</span><span style=\"color: #000000;\">。然后利用这些参数来作进一步的分析，例如模式识别。在正常的马尔可夫模型中，状态对于观察者来说是直接可见的。这样状态的转换概率便是全部的参数。而在隐马尔可夫模型中,状态并不是直接可见的，但受状态影响的某些变量则是可见的。</span><span style=\"color: #ff0000;\">每一个状态在可能输出的符号上都有一概率分布。因此输出符号的序列能够透露出状态序列的一些信息。</span>\n\n<span style=\"color: #000000;\">隐马尔可夫模型最初是在20世纪60年代后半期Leonard E. Baum和其它一些作者在一系列的统计学论文中描述的。HMM最初的应用之一是开始于20世纪70年代中期的语音识别。 在1980年代后半期，HMM开始应用到生物序列尤其是DNA的分析中。此后，在生物信息学领域HMM逐渐成为一项不可或缺的技术。</span>\n\n<span style=\"color: #000000;\">HMM有三个典型(canonical)问题:</span>\n<span style=\"color: #000000;\"> 已知模型参数，计算某一特定输出序列的概率.通常使用forward算法解决.</span>\n<span style=\"color: #000000;\"> 已知模型参数，寻找最可能的能产生某一特定输出序列的隐含状态的序列.通常使用Viterbi算法解决.</span>\n<span style=\"color: #000000;\"> 已知输出序列，寻找最可能的状态转移以及输出概率.通常使用Baum-Welch算法以及Reversed Viterbi算法解决.</span>\n\n&nbsp;\n\n> 凸优化\n\n&nbsp;\n\n<span style=\"color: #000000;\">凸优化，或叫做凸最优化，凸最小化，是数学最优化的一个子领域，研究</span><span style=\"color: #ff0000;\">定义于凸集中的凸函数最小化的问题</span><span style=\"color: #000000;\">。凸优化在某种意义上说较一般情形的数学最优化问题要简单，譬如在</span><span style=\"color: #ff0000;\">凸优化中局部最优值必定是全局最优值</span>。<span style=\"color: #000000;\">凸函数的凸性使得凸分析中的有力工具在最优化问题中得以应用，如次导数等。</span>\n<span style=\"color: #000000;\"> 凸优化应用于很多学科领域，诸如自动控制系统，信号处理，通讯和网络，电子电路设计，数据分析和建模，统计学(最优化设计），以及金融。在近来运算能力提高和最优化理论发展的背景下，一般的凸优化已经接近简单的线性规划一样直捷易行。许多最优化问题都可以转化成凸优化（凸最小化）问题，例如求凹函数f最大值的问题就等同于求凸函数 -f最小值的问题。</span>\n\n<span style=\"color: #000000;\">凸优化（凸最小化）问题可以用以下几种方法求解：</span>\n捆集法\n<span style=\"color: #ff0000;\">次梯度法</span>\n<span style=\"color: #000000;\">内点法</span>\n\n<span style=\"color: #000000;\">[L2]Linear Regression线性回归 Gradient descent梯度下降 Normal equations正规化方程组（都需要矩阵变换知识）</span>\n\n<span style=\"color: #000000;\">{(x(i), y(i)); i =1, . . . , m}称作包含m个训练样本的训练集合</span>\n\n![](http://ww1.sinaimg.cn/large/68eb7c93gw1ertvgzf951j20h70czgmk.jpg)\n\n<span style=\"color: #000000;\">h是假设的模型，可以带有一定先验知识，也可以是推测类型。学习算法通过学习训练集合的样本，得到h假设中的一定参数，在新的样本中进行预测和他推理</span>。<span style=\"color: #ff0000;\">若目标变量y是连续的，则这样的学习问题可归为回归问题；若目标变量y是离散的，例如可在{0,1}中取值的垃圾邮件归类、癌症可能性判定问题，则可归为分类问题。</span>\n\n![](http://ww4.sinaimg.cn/large/68eb7c93gw1ertvos0ycwj20b803qjri.jpg)\n\n<span style=\"color: #000000;\">假设h假设是线性的，则假设就是各个参数线性的代数和。其中θ和x均是向量。x中各向量分量是各自变因素的取值，θ是各个自变量分量的系数或权重。则机器学习算法的目的就是求这个假设函数h(x)与真实值y的最小值。评估标准J(θ)以各样本和预测值的差的平方的二分之一为准。（二分之一纯粹是为了后期的运算）</span>\n\n![](http://ww4.sinaimg.cn/large/68eb7c93gw1ertvwyw9uwj20en04hq37.jpg)\n\n<span style=\"color: #000000;\">1\\. LMS（<span class=\"Apple-converted-space\"> </span>Least mean square） 算法</span>\n\n<span style=\"color: #000000;\">即最小均方算法。算法实质是自适应的纠错学习，在学习中纠正参数θ的取值，直到收敛。其中，运用的最多的是梯度下降算法（Gradient Descent）</span>\n\n<span style=\"color: #000000;\">算法步骤为：</span>\n\n<span style=\"color: #000000;\">a)选取一个初始参数向量，可令其为0向量</span>\n\n<span style=\"color: #000000;\">b)重复查找各方向梯度，沿着梯度下降最快的方向搜索</span>\n\n<span style=\"color: #000000;\">c)直到四周均比局部梯度大的局部最优点</span>\n\n<span style=\"color: #000000;\">算法的数学描述为（该式为原始式，即梯度下降的数学定义）：</span>\n\n![](http://ww3.sinaimg.cn/large/68eb7c93gw1ertwxvy7r7j20a503h0st.jpg)\n\n<span style=\"color: #000000;\">：=与计算机编程中的赋值语句等同。α称作学习比率。则上式中J(θ)对θ求导的数学推导式为：</span>\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1ertx3pvtwhj20k70aw0ui.jpg)\n\n<span style=\"color: #000000;\">这里更新最上式，对于</span><span style=\"color: #ff0000;\">单个训练样本 </span>\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1ertxdj12m5j20ef02k0sy.jpg)\n\n<span style=\"color: #000000;\">对</span><span style=\"color: #ff0000;\">所有训练样本<span style=\"color: #000000;\">，沿着梯度方向不断计算直到收敛</span></span>\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1ertxfgsbo8j20jb067mxy.jpg)\n\n<span style=\"color: #000000;\">该方法中，每一次梯度的计算都用到了每个训练样本，这种梯度下降的方法称为</span> <span style=\"color: #ff0000;\">批梯度下降<span style=\"color: #000000;\">。由于这里的最优化问题只有一个全局，因此这里的局部梯度最优点即是全局的梯度最优点。此外还可以采取<span style=\"color: #ff0000;\">随机梯度下降</span>，每次梯度的计算选取随机的样本点，这样收敛的速度更快，但可能永远不会收敛到最优点，但会集中在最优点附近。因而在训练样本较大时可以采用随机梯度下降。这是随机梯度下降算法的数学表达：![](http://ww2.sinaimg.cn/large/68eb7c93jw1ertxr2dnpkj20pi09omy1.jpg)</span></span><span style=\"color: #000000;\">这是利用批梯度下降算法计算的梯度直到收敛，可以注意到每一次步长是不一样的，步长可在学习中不断调节，越接近最优点步长越短。</span>\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1ertxp6yvc3j20is0ewtb2.jpg)<span style=\"color: #000000;\">2.正规化方程</span>\n\n<span style=\"color: #000000;\">梯度下降是一种求取价值函数J(θ)的方法，正规化方程是另一种方案。首先提到的是几个必要的矩阵知识：</span>\n\n<span style=\"color: #000000;\">f与向量A的映射关系中，对f进行求导的定义：</span>\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1erty55sgncj20x00800v7.jpg)\n\n<span style=\"color: #000000;\">关于迹的一些定理：</span>\n\n<span style=\"color: #000000;\">迹的乘法交换：</span>\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1ertychjkpmj20ko03ydgn.jpg)\n\n<span style=\"color: #000000;\">迹和转置的迹；迹的加法结合；迹的数乘</span>\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1ertycuu329j20bg05bdg7.jpg)\n\n<span style=\"color: #000000;\">迹与倒数相关：</span>\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1ertyf4n67aj20gl080ab4.jpg)\n\n<span style=\"color: #000000;\">上式中，B是n_m矩阵，f的定义是依赖m_n矩阵的函数f（A）的值等于AB的迹。其中f（A）中的A的含义是A矩阵的每一个矩阵分量。</span>\n\n<span style=\"color: #000000;\">将J(θ)写成矩阵形式，给定的训练集合定义成矩阵X（m*n）m是训练样本个数，n是每个训练样本的自变量分量。</span>\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1erv2wqwhymj20bt06vt91.jpg)\n\n<span style=\"color: #000000;\">则已知的结果也可以用矩阵表示，或者说是向量表示</span>\n\n![](http://ww2.sinaimg.cn/large/68eb7c93jw1erv2xjw1fgj207e06m0sv.jpg)\n\n<span style=\"color: #000000;\">假设h和y的向量差为</span>\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1erv2z16c93j20iw0a33zm.jpg)\n\n<span style=\"color: #000000;\">J(θ)则可以表示为：</span>\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1erv2zsi8x8j20mc05qdgh.jpg)\n\n<span style=\"color: #000000;\">可以看到，h-y利用了向量内乘的方式，即向量乘以向量的转置，得到的实际上是个一维矩阵即一个数。为了找到J(θ)的最小值，可利用矩阵的求导，并参考上式中迹与倒数相关第三条：</span>\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1erv36i7jh1j20p20dhq5v.jpg)\n\n<span style=\"color: #000000;\">第三步骤中，利用到实数的迹也是它本身，第四步中用到了迹和迹的转置，第五步中的方法是利用迹与倒数相关第三条，将A的转置设为θ，B=B的转置=X的转置*X C=单位阵，带入公式即可。令上式为零，则求出导数为零时θ的取值。得到的方程称为正规化方程：</span>\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1erv3chess6j20wy06babl.jpg)\n\n> 梯度下降\n\n<span style=\"color: #000000;\">梯度下降法，基于这样的观察：如果实值函数 F(x)在点 (a,f(a)) 处可微且有定义，那么<span style=\"color: #ff0000;\">函数 F(x)在 a点沿着梯度相反的方向 -▽ F(a) 下降最快</span>。</span>\n\n<span style=\"color: #000000;\">因而，如果</span>![\\mathbf{b}=\\mathbf{a}-\\gamma\\nabla F(\\mathbf{a})](http://upload.wikimedia.org/math/3/f/f/3ff0cdc9fd95f11558270cd4db06ac28.png)<span style=\"color: #000000;\">,对于 ![\\gamma&gt;0](http://upload.wikimedia.org/math/e/2/4/e243b8724ee0860a2b24f48b7c5c2360.png) 为一个够小数值时成立，那么 ![F(\\mathbf{a})\\geq F(\\mathbf{b})](http://upload.wikimedia.org/math/9/b/b/9bb1b9d10c2499804ac52aaf0aacd8fe.png)。</span>\n\n<span style=\"color: #000000;\">考虑到这一点，我们可以从函数 ![F](http://upload.wikimedia.org/math/8/0/0/800618943025315f869e4e1f09471012.png) 的局部极小值的初始估计 ![\\mathbf{x}_0](http://upload.wikimedia.org/math/c/d/5/cd5146b777ca8406c51d8ba8da7fe901.png) 出发，并考虑如下序列 ![\\mathbf{x}_0, \\mathbf{x}_1, \\mathbf{x}_2, \\dots](http://upload.wikimedia.org/math/e/3/6/e36041cdf241095ff7a0e0169a8d405e.png) 使得</span>\n\n<dl><dd><span style=\"color: #000000;\">![\\mathbf{x}_{n+1}=\\mathbf{x}_n-\\gamma_n \\nabla F(\\mathbf{x}_n),\\ n \\ge 0.](http://upload.wikimedia.org/math/8/b/0/8b0e3f1c41429f48f4788cfee9fe57ee.png)</span></dd></dl>\n\n<span style=\"color: #000000;\">因此可得到</span>![F(\\mathbf{x}_0)\\ge F(\\mathbf{x}_1)\\ge F(\\mathbf{x}_2)\\ge \\cdots,](http://upload.wikimedia.org/math/3/e/a/3ea251fcbc5ebc8b22f515e171570797.png)如果顺利的话序列 ![(\\mathbf{x}_n)](http://upload.wikimedia.org/math/c/a/c/cac7a8ab62b2a332af1981678d0504e3.png) 收敛到期望的极值。<span style=\"color: #000000;\">注意每次迭代_步长_ ![\\gamma](http://upload.wikimedia.org/math/3/3/4/334de1ea38b615839e4ee6b65ee1b103.png) 可以改变。假设 ![F](http://upload.wikimedia.org/math/8/0/0/800618943025315f869e4e1f09471012.png) 定义在平面上，并且函数图像是一个碗型。蓝色的曲线是等高线，即函数 ![F](http://upload.wikimedia.org/math/8/0/0/800618943025315f869e4e1f09471012.png) 为常数的集合构成的曲线。红色的箭头指向该点梯度的反方向。（一点处的梯度方向与通过该点的等高线的垂线。沿着梯度_下降_方向，将最终到达碗底，即函数 ![F](http://upload.wikimedia.org/math/8/0/0/800618943025315f869e4e1f09471012.png) 值最小的点。</span>\n\n![](http://upload.wikimedia.org/wikipedia/commons/thumb/7/79/Gradient_descent.png/350px-Gradient_descent.png)\n\n&nbsp;","source":"_posts/[机器学习课程小结][110].md","raw":"---\ntitle: '[机器学习课程小结][1/10]'\ncategories:\n  - 什么都学一下\n  - 学习log\ntags:\n  - 机器学习\nid: 565\ndate: 2015-05-05 17:29:19\n---\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1ertx4e3tejj203704bglr.jpg)<span style=\"color: #000000;\">最近在Stanford的网络课程学习了机器学习的课程，Andre Ng讲的灰常不错啊。每种算法对应的实例挺多的，推导也很详细，它基本用matlab实现。就是概率统计数理统计矩阵论方面的知识最近得补一补了，直接应用在编程语言编写某些函数也是挺头疼的，不错还是略有收获。总共20节，听完5节，做个小结。</span>\n\n<span style=\"color: #000000;\">[L1 Introduction]</span>\n<span style=\"color: #000000;\"> 凸优化理论 隐式马尔科夫模型 O natation 学习型算法</span>\n\n<span style=\"color: #000000;\">1)Supervised Learning</span>\n<span style=\"color: #000000;\"> 回归问题 Regression 分类问题(x|y)(肿瘤大小|癌症良恶) 学习给定了标准答案的样本-&gt;分析新样本的可能性 支持向量机Support Vector Machine</span>\n<span style=\"color: #000000;\"> 2)Learning Theory</span>\n<span style=\"color: #000000;\"> 3)Unsupervised Learning</span>\n<span style=\"color: #000000;\"> 挖掘 聚类分析-&gt;图像分析和处理的应用 像素处理 ICA Algorithm 鸡尾酒问题（不同声源声音分离）</span>\n<span style=\"color: #000000;\"> 4)Reinforcement Learning</span>\n<span style=\"color: #000000;\"> 决策分析</span>\n\n&nbsp;\n\n> <span style=\"color: #000000;\">马可夫过程</span>\n\n<span style=\"color: #000000;\"> </span>\n\n<span style=\"color: #000000;\">在概率论及统计学中，马可夫过程（英语：Markov process）是一个具备了马可夫性质的随机过程。马可夫过程是不具备记忆特质的（memorylessness）。换言之，马可夫过程的条件概率</span><span style=\"color: #ff0000;\">仅仅与系统的当前状态相关，而与它的过去历史或未来状态，都是独立、不相关的</span>。<span style=\"color: #000000;\">具备离散状态的马可夫过程，通常被称为马可夫链。马可夫链通常使用离散的时间集合定义，又称离散时间马可夫链。具有马尔可夫性质的过程通常称之为马尔可夫过程。</span>\n\n<table style=\"width: 60%;\">\n<tbody>\n<tr>\n<th scope=\"col\"><span style=\"color: #000000;\"> </span></th>\n<th scope=\"col\"><span style=\"color: #000000;\">可数或有限的状态空间</span></th>\n<th scope=\"col\"><span style=\"color: #000000;\">连续或一般的状态空间</span></th>\n</tr>\n<tr>\n<th scope=\"row\"><span style=\"color: #000000;\">离散时间</span></th>\n<td><span style=\"color: #000000;\">在可数且有限状态空间下的<a style=\"color: #000000;\" title=\"马可夫链\">马可夫链</a></span></td>\n<td><span style=\"color: #000000;\"><a style=\"color: #000000;\" title=\"Harris chain\">Harris chain</a> (在一般状态空间下的马可夫链)</span></td>\n</tr>\n<tr>\n<th style=\"width: 10%;\" scope=\"row\"><span style=\"color: #000000;\">连续时间</span></th>\n<td style=\"width: 25%;\"><span style=\"color: #000000;\"><a style=\"color: #000000;\" title=\"&quot;Continuous-time\">Continuous-time Markov process</a></span></td>\n<td style=\"width: 25%;\"><span style=\"color: #000000;\">任何具备马可夫性质的<a class=\"new\" style=\"color: #000000;\" title=\"连续随机过程\">连续随机过程</a>，例如<a style=\"color: #000000;\" title=\"维纳过程\">维纳过程</a></span></td>\n</tr>\n</tbody>\n</table>\n\n## \n\n<span style=\"color: #000000;\">具有马尔可夫表示的非马尔可夫过程的例子，例如有移动平均时间序列。最有名的马尔可夫过程为马尔可夫链，但不少其他的过程，包括布朗运动也是马尔可夫过程。</span>\n\n&nbsp;\n\n> <span style=\"color: #000000;\">隐马尔可夫模型</span>\n\n&nbsp;\n\n<span style=\"color: #000000;\">隐马尔可夫模型（Hidden Markov Model，HMM）是统计模型，它用来描述一个含有隐含未知参数的马尔可夫过程。</span><span style=\"color: #ff0000;\">其难点是从可观察的参数中确定该过程的隐含参数</span><span style=\"color: #000000;\">。然后利用这些参数来作进一步的分析，例如模式识别。在正常的马尔可夫模型中，状态对于观察者来说是直接可见的。这样状态的转换概率便是全部的参数。而在隐马尔可夫模型中,状态并不是直接可见的，但受状态影响的某些变量则是可见的。</span><span style=\"color: #ff0000;\">每一个状态在可能输出的符号上都有一概率分布。因此输出符号的序列能够透露出状态序列的一些信息。</span>\n\n<span style=\"color: #000000;\">隐马尔可夫模型最初是在20世纪60年代后半期Leonard E. Baum和其它一些作者在一系列的统计学论文中描述的。HMM最初的应用之一是开始于20世纪70年代中期的语音识别。 在1980年代后半期，HMM开始应用到生物序列尤其是DNA的分析中。此后，在生物信息学领域HMM逐渐成为一项不可或缺的技术。</span>\n\n<span style=\"color: #000000;\">HMM有三个典型(canonical)问题:</span>\n<span style=\"color: #000000;\"> 已知模型参数，计算某一特定输出序列的概率.通常使用forward算法解决.</span>\n<span style=\"color: #000000;\"> 已知模型参数，寻找最可能的能产生某一特定输出序列的隐含状态的序列.通常使用Viterbi算法解决.</span>\n<span style=\"color: #000000;\"> 已知输出序列，寻找最可能的状态转移以及输出概率.通常使用Baum-Welch算法以及Reversed Viterbi算法解决.</span>\n\n&nbsp;\n\n> 凸优化\n\n&nbsp;\n\n<span style=\"color: #000000;\">凸优化，或叫做凸最优化，凸最小化，是数学最优化的一个子领域，研究</span><span style=\"color: #ff0000;\">定义于凸集中的凸函数最小化的问题</span><span style=\"color: #000000;\">。凸优化在某种意义上说较一般情形的数学最优化问题要简单，譬如在</span><span style=\"color: #ff0000;\">凸优化中局部最优值必定是全局最优值</span>。<span style=\"color: #000000;\">凸函数的凸性使得凸分析中的有力工具在最优化问题中得以应用，如次导数等。</span>\n<span style=\"color: #000000;\"> 凸优化应用于很多学科领域，诸如自动控制系统，信号处理，通讯和网络，电子电路设计，数据分析和建模，统计学(最优化设计），以及金融。在近来运算能力提高和最优化理论发展的背景下，一般的凸优化已经接近简单的线性规划一样直捷易行。许多最优化问题都可以转化成凸优化（凸最小化）问题，例如求凹函数f最大值的问题就等同于求凸函数 -f最小值的问题。</span>\n\n<span style=\"color: #000000;\">凸优化（凸最小化）问题可以用以下几种方法求解：</span>\n捆集法\n<span style=\"color: #ff0000;\">次梯度法</span>\n<span style=\"color: #000000;\">内点法</span>\n\n<span style=\"color: #000000;\">[L2]Linear Regression线性回归 Gradient descent梯度下降 Normal equations正规化方程组（都需要矩阵变换知识）</span>\n\n<span style=\"color: #000000;\">{(x(i), y(i)); i =1, . . . , m}称作包含m个训练样本的训练集合</span>\n\n![](http://ww1.sinaimg.cn/large/68eb7c93gw1ertvgzf951j20h70czgmk.jpg)\n\n<span style=\"color: #000000;\">h是假设的模型，可以带有一定先验知识，也可以是推测类型。学习算法通过学习训练集合的样本，得到h假设中的一定参数，在新的样本中进行预测和他推理</span>。<span style=\"color: #ff0000;\">若目标变量y是连续的，则这样的学习问题可归为回归问题；若目标变量y是离散的，例如可在{0,1}中取值的垃圾邮件归类、癌症可能性判定问题，则可归为分类问题。</span>\n\n![](http://ww4.sinaimg.cn/large/68eb7c93gw1ertvos0ycwj20b803qjri.jpg)\n\n<span style=\"color: #000000;\">假设h假设是线性的，则假设就是各个参数线性的代数和。其中θ和x均是向量。x中各向量分量是各自变因素的取值，θ是各个自变量分量的系数或权重。则机器学习算法的目的就是求这个假设函数h(x)与真实值y的最小值。评估标准J(θ)以各样本和预测值的差的平方的二分之一为准。（二分之一纯粹是为了后期的运算）</span>\n\n![](http://ww4.sinaimg.cn/large/68eb7c93gw1ertvwyw9uwj20en04hq37.jpg)\n\n<span style=\"color: #000000;\">1\\. LMS（<span class=\"Apple-converted-space\"> </span>Least mean square） 算法</span>\n\n<span style=\"color: #000000;\">即最小均方算法。算法实质是自适应的纠错学习，在学习中纠正参数θ的取值，直到收敛。其中，运用的最多的是梯度下降算法（Gradient Descent）</span>\n\n<span style=\"color: #000000;\">算法步骤为：</span>\n\n<span style=\"color: #000000;\">a)选取一个初始参数向量，可令其为0向量</span>\n\n<span style=\"color: #000000;\">b)重复查找各方向梯度，沿着梯度下降最快的方向搜索</span>\n\n<span style=\"color: #000000;\">c)直到四周均比局部梯度大的局部最优点</span>\n\n<span style=\"color: #000000;\">算法的数学描述为（该式为原始式，即梯度下降的数学定义）：</span>\n\n![](http://ww3.sinaimg.cn/large/68eb7c93gw1ertwxvy7r7j20a503h0st.jpg)\n\n<span style=\"color: #000000;\">：=与计算机编程中的赋值语句等同。α称作学习比率。则上式中J(θ)对θ求导的数学推导式为：</span>\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1ertx3pvtwhj20k70aw0ui.jpg)\n\n<span style=\"color: #000000;\">这里更新最上式，对于</span><span style=\"color: #ff0000;\">单个训练样本 </span>\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1ertxdj12m5j20ef02k0sy.jpg)\n\n<span style=\"color: #000000;\">对</span><span style=\"color: #ff0000;\">所有训练样本<span style=\"color: #000000;\">，沿着梯度方向不断计算直到收敛</span></span>\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1ertxfgsbo8j20jb067mxy.jpg)\n\n<span style=\"color: #000000;\">该方法中，每一次梯度的计算都用到了每个训练样本，这种梯度下降的方法称为</span> <span style=\"color: #ff0000;\">批梯度下降<span style=\"color: #000000;\">。由于这里的最优化问题只有一个全局，因此这里的局部梯度最优点即是全局的梯度最优点。此外还可以采取<span style=\"color: #ff0000;\">随机梯度下降</span>，每次梯度的计算选取随机的样本点，这样收敛的速度更快，但可能永远不会收敛到最优点，但会集中在最优点附近。因而在训练样本较大时可以采用随机梯度下降。这是随机梯度下降算法的数学表达：![](http://ww2.sinaimg.cn/large/68eb7c93jw1ertxr2dnpkj20pi09omy1.jpg)</span></span><span style=\"color: #000000;\">这是利用批梯度下降算法计算的梯度直到收敛，可以注意到每一次步长是不一样的，步长可在学习中不断调节，越接近最优点步长越短。</span>\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1ertxp6yvc3j20is0ewtb2.jpg)<span style=\"color: #000000;\">2.正规化方程</span>\n\n<span style=\"color: #000000;\">梯度下降是一种求取价值函数J(θ)的方法，正规化方程是另一种方案。首先提到的是几个必要的矩阵知识：</span>\n\n<span style=\"color: #000000;\">f与向量A的映射关系中，对f进行求导的定义：</span>\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1erty55sgncj20x00800v7.jpg)\n\n<span style=\"color: #000000;\">关于迹的一些定理：</span>\n\n<span style=\"color: #000000;\">迹的乘法交换：</span>\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1ertychjkpmj20ko03ydgn.jpg)\n\n<span style=\"color: #000000;\">迹和转置的迹；迹的加法结合；迹的数乘</span>\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1ertycuu329j20bg05bdg7.jpg)\n\n<span style=\"color: #000000;\">迹与倒数相关：</span>\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1ertyf4n67aj20gl080ab4.jpg)\n\n<span style=\"color: #000000;\">上式中，B是n_m矩阵，f的定义是依赖m_n矩阵的函数f（A）的值等于AB的迹。其中f（A）中的A的含义是A矩阵的每一个矩阵分量。</span>\n\n<span style=\"color: #000000;\">将J(θ)写成矩阵形式，给定的训练集合定义成矩阵X（m*n）m是训练样本个数，n是每个训练样本的自变量分量。</span>\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1erv2wqwhymj20bt06vt91.jpg)\n\n<span style=\"color: #000000;\">则已知的结果也可以用矩阵表示，或者说是向量表示</span>\n\n![](http://ww2.sinaimg.cn/large/68eb7c93jw1erv2xjw1fgj207e06m0sv.jpg)\n\n<span style=\"color: #000000;\">假设h和y的向量差为</span>\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1erv2z16c93j20iw0a33zm.jpg)\n\n<span style=\"color: #000000;\">J(θ)则可以表示为：</span>\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1erv2zsi8x8j20mc05qdgh.jpg)\n\n<span style=\"color: #000000;\">可以看到，h-y利用了向量内乘的方式，即向量乘以向量的转置，得到的实际上是个一维矩阵即一个数。为了找到J(θ)的最小值，可利用矩阵的求导，并参考上式中迹与倒数相关第三条：</span>\n\n![](http://ww4.sinaimg.cn/large/68eb7c93jw1erv36i7jh1j20p20dhq5v.jpg)\n\n<span style=\"color: #000000;\">第三步骤中，利用到实数的迹也是它本身，第四步中用到了迹和迹的转置，第五步中的方法是利用迹与倒数相关第三条，将A的转置设为θ，B=B的转置=X的转置*X C=单位阵，带入公式即可。令上式为零，则求出导数为零时θ的取值。得到的方程称为正规化方程：</span>\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1erv3chess6j20wy06babl.jpg)\n\n> 梯度下降\n\n<span style=\"color: #000000;\">梯度下降法，基于这样的观察：如果实值函数 F(x)在点 (a,f(a)) 处可微且有定义，那么<span style=\"color: #ff0000;\">函数 F(x)在 a点沿着梯度相反的方向 -▽ F(a) 下降最快</span>。</span>\n\n<span style=\"color: #000000;\">因而，如果</span>![\\mathbf{b}=\\mathbf{a}-\\gamma\\nabla F(\\mathbf{a})](http://upload.wikimedia.org/math/3/f/f/3ff0cdc9fd95f11558270cd4db06ac28.png)<span style=\"color: #000000;\">,对于 ![\\gamma&gt;0](http://upload.wikimedia.org/math/e/2/4/e243b8724ee0860a2b24f48b7c5c2360.png) 为一个够小数值时成立，那么 ![F(\\mathbf{a})\\geq F(\\mathbf{b})](http://upload.wikimedia.org/math/9/b/b/9bb1b9d10c2499804ac52aaf0aacd8fe.png)。</span>\n\n<span style=\"color: #000000;\">考虑到这一点，我们可以从函数 ![F](http://upload.wikimedia.org/math/8/0/0/800618943025315f869e4e1f09471012.png) 的局部极小值的初始估计 ![\\mathbf{x}_0](http://upload.wikimedia.org/math/c/d/5/cd5146b777ca8406c51d8ba8da7fe901.png) 出发，并考虑如下序列 ![\\mathbf{x}_0, \\mathbf{x}_1, \\mathbf{x}_2, \\dots](http://upload.wikimedia.org/math/e/3/6/e36041cdf241095ff7a0e0169a8d405e.png) 使得</span>\n\n<dl><dd><span style=\"color: #000000;\">![\\mathbf{x}_{n+1}=\\mathbf{x}_n-\\gamma_n \\nabla F(\\mathbf{x}_n),\\ n \\ge 0.](http://upload.wikimedia.org/math/8/b/0/8b0e3f1c41429f48f4788cfee9fe57ee.png)</span></dd></dl>\n\n<span style=\"color: #000000;\">因此可得到</span>![F(\\mathbf{x}_0)\\ge F(\\mathbf{x}_1)\\ge F(\\mathbf{x}_2)\\ge \\cdots,](http://upload.wikimedia.org/math/3/e/a/3ea251fcbc5ebc8b22f515e171570797.png)如果顺利的话序列 ![(\\mathbf{x}_n)](http://upload.wikimedia.org/math/c/a/c/cac7a8ab62b2a332af1981678d0504e3.png) 收敛到期望的极值。<span style=\"color: #000000;\">注意每次迭代_步长_ ![\\gamma](http://upload.wikimedia.org/math/3/3/4/334de1ea38b615839e4ee6b65ee1b103.png) 可以改变。假设 ![F](http://upload.wikimedia.org/math/8/0/0/800618943025315f869e4e1f09471012.png) 定义在平面上，并且函数图像是一个碗型。蓝色的曲线是等高线，即函数 ![F](http://upload.wikimedia.org/math/8/0/0/800618943025315f869e4e1f09471012.png) 为常数的集合构成的曲线。红色的箭头指向该点梯度的反方向。（一点处的梯度方向与通过该点的等高线的垂线。沿着梯度_下降_方向，将最终到达碗底，即函数 ![F](http://upload.wikimedia.org/math/8/0/0/800618943025315f869e4e1f09471012.png) 值最小的点。</span>\n\n![](http://upload.wikimedia.org/wikipedia/commons/thumb/7/79/Gradient_descent.png/350px-Gradient_descent.png)\n\n&nbsp;","slug":"[机器学习课程小结][110]","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7lw001huco48bzqcuc1","content":"<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1ertx4e3tejj203704bglr.jpg\" alt=\"\"><span style=\"color: #000000\">最近在Stanford的网络课程学习了机器学习的课程，Andre Ng讲的灰常不错啊。每种算法对应的实例挺多的，推导也很详细，它基本用matlab实现。就是概率统计数理统计矩阵论方面的知识最近得补一补了，直接应用在编程语言编写某些函数也是挺头疼的，不错还是略有收获。总共20节，听完5节，做个小结。</span></p>\n<p><span style=\"color: #000000\">[L1 Introduction]</span><br><span style=\"color: #000000\"> 凸优化理论 隐式马尔科夫模型 O natation 学习型算法</span></p>\n<p><span style=\"color: #000000\">1)Supervised Learning</span><br><span style=\"color: #000000\"> 回归问题 Regression 分类问题(x|y)(肿瘤大小|癌症良恶) 学习给定了标准答案的样本-&gt;分析新样本的可能性 支持向量机Support Vector Machine</span><br><span style=\"color: #000000\"> 2)Learning Theory</span><br><span style=\"color: #000000\"> 3)Unsupervised Learning</span><br><span style=\"color: #000000\"> 挖掘 聚类分析-&gt;图像分析和处理的应用 像素处理 ICA Algorithm 鸡尾酒问题（不同声源声音分离）</span><br><span style=\"color: #000000\"> 4)Reinforcement Learning</span><br><span style=\"color: #000000\"> 决策分析</span></p>\n<p>&nbsp;</p>\n<blockquote>\n<p><span style=\"color: #000000\">马可夫过程</span></p>\n</blockquote>\n<p><span style=\"color: #000000\"> </span></p>\n<p><span style=\"color: #000000\">在概率论及统计学中，马可夫过程（英语：Markov process）是一个具备了马可夫性质的随机过程。马可夫过程是不具备记忆特质的（memorylessness）。换言之，马可夫过程的条件概率</span><span style=\"color: #ff0000\">仅仅与系统的当前状态相关，而与它的过去历史或未来状态，都是独立、不相关的</span>。<span style=\"color: #000000\">具备离散状态的马可夫过程，通常被称为马可夫链。马可夫链通常使用离散的时间集合定义，又称离散时间马可夫链。具有马尔可夫性质的过程通常称之为马尔可夫过程。</span></p>\n<table style=\"width: 60%\"><br><tbody><br><tr><br><th scope=\"col\"><span style=\"color: #000000\"> </span></th><br><th scope=\"col\"><span style=\"color: #000000\">可数或有限的状态空间</span></th><br><th scope=\"col\"><span style=\"color: #000000\">连续或一般的状态空间</span></th><br></tr><br><tr><br><th scope=\"row\"><span style=\"color: #000000\">离散时间</span></th><br><td><span style=\"color: #000000\">在可数且有限状态空间下的<a style=\"color: #000000\" title=\"马可夫链\">马可夫链</a></span></td><br><td><span style=\"color: #000000\"><a style=\"color: #000000\" title=\"Harris chain\">Harris chain</a> (在一般状态空间下的马可夫链)</span></td><br></tr><br><tr><br><th style=\"width: 10%\" scope=\"row\"><span style=\"color: #000000\">连续时间</span></th><br><td style=\"width: 25%\"><span style=\"color: #000000\"><a style=\"color: #000000\" title=\"&quot;Continuous-time\">Continuous-time Markov process</a></span></td><br><td style=\"width: 25%\"><span style=\"color: #000000\">任何具备马可夫性质的<a class=\"new\" style=\"color: #000000\" title=\"连续随机过程\">连续随机过程</a>，例如<a style=\"color: #000000\" title=\"维纳过程\">维纳过程</a></span></td><br></tr><br></tbody><br></table>\n\n<p>## </p>\n<p><span style=\"color: #000000\">具有马尔可夫表示的非马尔可夫过程的例子，例如有移动平均时间序列。最有名的马尔可夫过程为马尔可夫链，但不少其他的过程，包括布朗运动也是马尔可夫过程。</span></p>\n<p>&nbsp;</p>\n<blockquote>\n<p><span style=\"color: #000000\">隐马尔可夫模型</span></p>\n</blockquote>\n<p>&nbsp;</p>\n<p><span style=\"color: #000000\">隐马尔可夫模型（Hidden Markov Model，HMM）是统计模型，它用来描述一个含有隐含未知参数的马尔可夫过程。</span><span style=\"color: #ff0000\">其难点是从可观察的参数中确定该过程的隐含参数</span><span style=\"color: #000000\">。然后利用这些参数来作进一步的分析，例如模式识别。在正常的马尔可夫模型中，状态对于观察者来说是直接可见的。这样状态的转换概率便是全部的参数。而在隐马尔可夫模型中,状态并不是直接可见的，但受状态影响的某些变量则是可见的。</span><span style=\"color: #ff0000\">每一个状态在可能输出的符号上都有一概率分布。因此输出符号的序列能够透露出状态序列的一些信息。</span></p>\n<p><span style=\"color: #000000\">隐马尔可夫模型最初是在20世纪60年代后半期Leonard E. Baum和其它一些作者在一系列的统计学论文中描述的。HMM最初的应用之一是开始于20世纪70年代中期的语音识别。 在1980年代后半期，HMM开始应用到生物序列尤其是DNA的分析中。此后，在生物信息学领域HMM逐渐成为一项不可或缺的技术。</span></p>\n<p><span style=\"color: #000000\">HMM有三个典型(canonical)问题:</span><br><span style=\"color: #000000\"> 已知模型参数，计算某一特定输出序列的概率.通常使用forward算法解决.</span><br><span style=\"color: #000000\"> 已知模型参数，寻找最可能的能产生某一特定输出序列的隐含状态的序列.通常使用Viterbi算法解决.</span><br><span style=\"color: #000000\"> 已知输出序列，寻找最可能的状态转移以及输出概率.通常使用Baum-Welch算法以及Reversed Viterbi算法解决.</span></p>\n<p>&nbsp;</p>\n<blockquote>\n<p>凸优化</p>\n</blockquote>\n<p>&nbsp;</p>\n<p><span style=\"color: #000000\">凸优化，或叫做凸最优化，凸最小化，是数学最优化的一个子领域，研究</span><span style=\"color: #ff0000\">定义于凸集中的凸函数最小化的问题</span><span style=\"color: #000000\">。凸优化在某种意义上说较一般情形的数学最优化问题要简单，譬如在</span><span style=\"color: #ff0000\">凸优化中局部最优值必定是全局最优值</span>。<span style=\"color: #000000\">凸函数的凸性使得凸分析中的有力工具在最优化问题中得以应用，如次导数等。</span><br><span style=\"color: #000000\"> 凸优化应用于很多学科领域，诸如自动控制系统，信号处理，通讯和网络，电子电路设计，数据分析和建模，统计学(最优化设计），以及金融。在近来运算能力提高和最优化理论发展的背景下，一般的凸优化已经接近简单的线性规划一样直捷易行。许多最优化问题都可以转化成凸优化（凸最小化）问题，例如求凹函数f最大值的问题就等同于求凸函数 -f最小值的问题。</span></p>\n<p><span style=\"color: #000000\">凸优化（凸最小化）问题可以用以下几种方法求解：</span><br>捆集法<br><span style=\"color: #ff0000\">次梯度法</span><br><span style=\"color: #000000\">内点法</span></p>\n<p><span style=\"color: #000000\">[L2]Linear Regression线性回归 Gradient descent梯度下降 Normal equations正规化方程组（都需要矩阵变换知识）</span></p>\n<p><span style=\"color: #000000\">{(x(i), y(i)); i =1, . . . , m}称作包含m个训练样本的训练集合</span></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93gw1ertvgzf951j20h70czgmk.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">h是假设的模型，可以带有一定先验知识，也可以是推测类型。学习算法通过学习训练集合的样本，得到h假设中的一定参数，在新的样本中进行预测和他推理</span>。<span style=\"color: #ff0000\">若目标变量y是连续的，则这样的学习问题可归为回归问题；若目标变量y是离散的，例如可在{0,1}中取值的垃圾邮件归类、癌症可能性判定问题，则可归为分类问题。</span></p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1ertvos0ycwj20b803qjri.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">假设h假设是线性的，则假设就是各个参数线性的代数和。其中θ和x均是向量。x中各向量分量是各自变因素的取值，θ是各个自变量分量的系数或权重。则机器学习算法的目的就是求这个假设函数h(x)与真实值y的最小值。评估标准J(θ)以各样本和预测值的差的平方的二分之一为准。（二分之一纯粹是为了后期的运算）</span></p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1ertvwyw9uwj20en04hq37.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">1. LMS（<span class=\"Apple-converted-space\"> </span>Least mean square） 算法</span></p>\n<p><span style=\"color: #000000\">即最小均方算法。算法实质是自适应的纠错学习，在学习中纠正参数θ的取值，直到收敛。其中，运用的最多的是梯度下降算法（Gradient Descent）</span></p>\n<p><span style=\"color: #000000\">算法步骤为：</span></p>\n<p><span style=\"color: #000000\">a)选取一个初始参数向量，可令其为0向量</span></p>\n<p><span style=\"color: #000000\">b)重复查找各方向梯度，沿着梯度下降最快的方向搜索</span></p>\n<p><span style=\"color: #000000\">c)直到四周均比局部梯度大的局部最优点</span></p>\n<p><span style=\"color: #000000\">算法的数学描述为（该式为原始式，即梯度下降的数学定义）：</span></p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93gw1ertwxvy7r7j20a503h0st.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">：=与计算机编程中的赋值语句等同。α称作学习比率。则上式中J(θ)对θ求导的数学推导式为：</span></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1ertx3pvtwhj20k70aw0ui.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">这里更新最上式，对于</span><span style=\"color: #ff0000\">单个训练样本 </span></p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1ertxdj12m5j20ef02k0sy.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">对</span><span style=\"color: #ff0000\">所有训练样本<span style=\"color: #000000\">，沿着梯度方向不断计算直到收敛</span></span></p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1ertxfgsbo8j20jb067mxy.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">该方法中，每一次梯度的计算都用到了每个训练样本，这种梯度下降的方法称为</span> <span style=\"color: #ff0000\">批梯度下降<span style=\"color: #000000\">。由于这里的最优化问题只有一个全局，因此这里的局部梯度最优点即是全局的梯度最优点。此外还可以采取<span style=\"color: #ff0000\">随机梯度下降</span>，每次梯度的计算选取随机的样本点，这样收敛的速度更快，但可能永远不会收敛到最优点，但会集中在最优点附近。因而在训练样本较大时可以采用随机梯度下降。这是随机梯度下降算法的数学表达：<img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1ertxr2dnpkj20pi09omy1.jpg\" alt=\"\"></span></span><span style=\"color: #000000\">这是利用批梯度下降算法计算的梯度直到收敛，可以注意到每一次步长是不一样的，步长可在学习中不断调节，越接近最优点步长越短。</span></p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1ertxp6yvc3j20is0ewtb2.jpg\" alt=\"\"><span style=\"color: #000000\">2.正规化方程</span></p>\n<p><span style=\"color: #000000\">梯度下降是一种求取价值函数J(θ)的方法，正规化方程是另一种方案。首先提到的是几个必要的矩阵知识：</span></p>\n<p><span style=\"color: #000000\">f与向量A的映射关系中，对f进行求导的定义：</span></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1erty55sgncj20x00800v7.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">关于迹的一些定理：</span></p>\n<p><span style=\"color: #000000\">迹的乘法交换：</span></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1ertychjkpmj20ko03ydgn.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">迹和转置的迹；迹的加法结合；迹的数乘</span></p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1ertycuu329j20bg05bdg7.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">迹与倒数相关：</span></p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1ertyf4n67aj20gl080ab4.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">上式中，B是n_m矩阵，f的定义是依赖m_n矩阵的函数f（A）的值等于AB的迹。其中f（A）中的A的含义是A矩阵的每一个矩阵分量。</span></p>\n<p><span style=\"color: #000000\">将J(θ)写成矩阵形式，给定的训练集合定义成矩阵X（m*n）m是训练样本个数，n是每个训练样本的自变量分量。</span></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1erv2wqwhymj20bt06vt91.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">则已知的结果也可以用矩阵表示，或者说是向量表示</span></p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1erv2xjw1fgj207e06m0sv.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">假设h和y的向量差为</span></p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1erv2z16c93j20iw0a33zm.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">J(θ)则可以表示为：</span></p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1erv2zsi8x8j20mc05qdgh.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">可以看到，h-y利用了向量内乘的方式，即向量乘以向量的转置，得到的实际上是个一维矩阵即一个数。为了找到J(θ)的最小值，可利用矩阵的求导，并参考上式中迹与倒数相关第三条：</span></p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1erv36i7jh1j20p20dhq5v.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">第三步骤中，利用到实数的迹也是它本身，第四步中用到了迹和迹的转置，第五步中的方法是利用迹与倒数相关第三条，将A的转置设为θ，B=B的转置=X的转置*X C=单位阵，带入公式即可。令上式为零，则求出导数为零时θ的取值。得到的方程称为正规化方程：</span></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1erv3chess6j20wy06babl.jpg\" alt=\"\"></p>\n<blockquote>\n<p>梯度下降</p>\n</blockquote>\n<p><span style=\"color: #000000\">梯度下降法，基于这样的观察：如果实值函数 F(x)在点 (a,f(a)) 处可微且有定义，那么<span style=\"color: #ff0000\">函数 F(x)在 a点沿着梯度相反的方向 -▽ F(a) 下降最快</span>。</span></p>\n<p><span style=\"color: #000000\">因而，如果</span><img src=\"http://upload.wikimedia.org/math/3/f/f/3ff0cdc9fd95f11558270cd4db06ac28.png\" alt=\"\\mathbf{b}=\\mathbf{a}-\\gamma\\nabla F(\\mathbf{a})\"><span style=\"color: #000000\">,对于 <img src=\"http://upload.wikimedia.org/math/e/2/4/e243b8724ee0860a2b24f48b7c5c2360.png\" alt=\"\\gamma&gt;0\"> 为一个够小数值时成立，那么 <img src=\"http://upload.wikimedia.org/math/9/b/b/9bb1b9d10c2499804ac52aaf0aacd8fe.png\" alt=\"F(\\mathbf{a})\\geq F(\\mathbf{b})\">。</span></p>\n<p><span style=\"color: #000000\">考虑到这一点，我们可以从函数 <img src=\"http://upload.wikimedia.org/math/8/0/0/800618943025315f869e4e1f09471012.png\" alt=\"F\"> 的局部极小值的初始估计 <img src=\"http://upload.wikimedia.org/math/c/d/5/cd5146b777ca8406c51d8ba8da7fe901.png\" alt=\"\\mathbf{x}_0\"> 出发，并考虑如下序列 <img src=\"http://upload.wikimedia.org/math/e/3/6/e36041cdf241095ff7a0e0169a8d405e.png\" alt=\"\\mathbf{x}_0, \\mathbf{x}_1, \\mathbf{x}_2, \\dots\"> 使得</span></p>\n<dl><dd><span style=\"color: #000000\"><img src=\"http://upload.wikimedia.org/math/8/b/0/8b0e3f1c41429f48f4788cfee9fe57ee.png\" alt=\"\\mathbf{x}_{n+1}=\\mathbf{x}_n-\\gamma_n \\nabla F(\\mathbf{x}_n),\\ n \\ge 0.\"></span></dd></dl>\n\n<p><span style=\"color: #000000\">因此可得到</span><img src=\"http://upload.wikimedia.org/math/3/e/a/3ea251fcbc5ebc8b22f515e171570797.png\" alt=\"F(\\mathbf{x}_0)\\ge F(\\mathbf{x}_1)\\ge F(\\mathbf{x}_2)\\ge \\cdots,\">如果顺利的话序列 <img src=\"http://upload.wikimedia.org/math/c/a/c/cac7a8ab62b2a332af1981678d0504e3.png\" alt=\"(\\mathbf{x}_n)\"> 收敛到期望的极值。<span style=\"color: #000000\">注意每次迭代<em>步长</em> <img src=\"http://upload.wikimedia.org/math/3/3/4/334de1ea38b615839e4ee6b65ee1b103.png\" alt=\"\\gamma\"> 可以改变。假设 <img src=\"http://upload.wikimedia.org/math/8/0/0/800618943025315f869e4e1f09471012.png\" alt=\"F\"> 定义在平面上，并且函数图像是一个碗型。蓝色的曲线是等高线，即函数 <img src=\"http://upload.wikimedia.org/math/8/0/0/800618943025315f869e4e1f09471012.png\" alt=\"F\"> 为常数的集合构成的曲线。红色的箭头指向该点梯度的反方向。（一点处的梯度方向与通过该点的等高线的垂线。沿着梯度<em>下降</em>方向，将最终到达碗底，即函数 <img src=\"http://upload.wikimedia.org/math/8/0/0/800618943025315f869e4e1f09471012.png\" alt=\"F\"> 值最小的点。</span></p>\n<p><img src=\"http://upload.wikimedia.org/wikipedia/commons/thumb/7/79/Gradient_descent.png/350px-Gradient_descent.png\" alt=\"\"></p>\n<p>&nbsp;</p>","excerpt":"","more":"<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1ertx4e3tejj203704bglr.jpg\" alt=\"\"><span style=\"color: #000000\">最近在Stanford的网络课程学习了机器学习的课程，Andre Ng讲的灰常不错啊。每种算法对应的实例挺多的，推导也很详细，它基本用matlab实现。就是概率统计数理统计矩阵论方面的知识最近得补一补了，直接应用在编程语言编写某些函数也是挺头疼的，不错还是略有收获。总共20节，听完5节，做个小结。</span></p>\n<p><span style=\"color: #000000\">[L1 Introduction]</span><br><span style=\"color: #000000\"> 凸优化理论 隐式马尔科夫模型 O natation 学习型算法</span></p>\n<p><span style=\"color: #000000\">1)Supervised Learning</span><br><span style=\"color: #000000\"> 回归问题 Regression 分类问题(x|y)(肿瘤大小|癌症良恶) 学习给定了标准答案的样本-&gt;分析新样本的可能性 支持向量机Support Vector Machine</span><br><span style=\"color: #000000\"> 2)Learning Theory</span><br><span style=\"color: #000000\"> 3)Unsupervised Learning</span><br><span style=\"color: #000000\"> 挖掘 聚类分析-&gt;图像分析和处理的应用 像素处理 ICA Algorithm 鸡尾酒问题（不同声源声音分离）</span><br><span style=\"color: #000000\"> 4)Reinforcement Learning</span><br><span style=\"color: #000000\"> 决策分析</span></p>\n<p>&nbsp;</p>\n<blockquote>\n<p><span style=\"color: #000000\">马可夫过程</span></p>\n</blockquote>\n<p><span style=\"color: #000000\"> </span></p>\n<p><span style=\"color: #000000\">在概率论及统计学中，马可夫过程（英语：Markov process）是一个具备了马可夫性质的随机过程。马可夫过程是不具备记忆特质的（memorylessness）。换言之，马可夫过程的条件概率</span><span style=\"color: #ff0000\">仅仅与系统的当前状态相关，而与它的过去历史或未来状态，都是独立、不相关的</span>。<span style=\"color: #000000\">具备离散状态的马可夫过程，通常被称为马可夫链。马可夫链通常使用离散的时间集合定义，又称离散时间马可夫链。具有马尔可夫性质的过程通常称之为马尔可夫过程。</span></p>\n<table style=\"width: 60%\"><br><tbody><br><tr><br><th scope=\"col\"><span style=\"color: #000000\"> </span></th><br><th scope=\"col\"><span style=\"color: #000000\">可数或有限的状态空间</span></th><br><th scope=\"col\"><span style=\"color: #000000\">连续或一般的状态空间</span></th><br></tr><br><tr><br><th scope=\"row\"><span style=\"color: #000000\">离散时间</span></th><br><td><span style=\"color: #000000\">在可数且有限状态空间下的<a style=\"color: #000000\" title=\"马可夫链\">马可夫链</a></span></td><br><td><span style=\"color: #000000\"><a style=\"color: #000000\" title=\"Harris chain\">Harris chain</a> (在一般状态空间下的马可夫链)</span></td><br></tr><br><tr><br><th style=\"width: 10%\" scope=\"row\"><span style=\"color: #000000\">连续时间</span></th><br><td style=\"width: 25%\"><span style=\"color: #000000\"><a style=\"color: #000000\" title=\"&quot;Continuous-time\">Continuous-time Markov process</a></span></td><br><td style=\"width: 25%\"><span style=\"color: #000000\">任何具备马可夫性质的<a class=\"new\" style=\"color: #000000\" title=\"连续随机过程\">连续随机过程</a>，例如<a style=\"color: #000000\" title=\"维纳过程\">维纳过程</a></span></td><br></tr><br></tbody><br></table>\n\n<p>## </p>\n<p><span style=\"color: #000000\">具有马尔可夫表示的非马尔可夫过程的例子，例如有移动平均时间序列。最有名的马尔可夫过程为马尔可夫链，但不少其他的过程，包括布朗运动也是马尔可夫过程。</span></p>\n<p>&nbsp;</p>\n<blockquote>\n<p><span style=\"color: #000000\">隐马尔可夫模型</span></p>\n</blockquote>\n<p>&nbsp;</p>\n<p><span style=\"color: #000000\">隐马尔可夫模型（Hidden Markov Model，HMM）是统计模型，它用来描述一个含有隐含未知参数的马尔可夫过程。</span><span style=\"color: #ff0000\">其难点是从可观察的参数中确定该过程的隐含参数</span><span style=\"color: #000000\">。然后利用这些参数来作进一步的分析，例如模式识别。在正常的马尔可夫模型中，状态对于观察者来说是直接可见的。这样状态的转换概率便是全部的参数。而在隐马尔可夫模型中,状态并不是直接可见的，但受状态影响的某些变量则是可见的。</span><span style=\"color: #ff0000\">每一个状态在可能输出的符号上都有一概率分布。因此输出符号的序列能够透露出状态序列的一些信息。</span></p>\n<p><span style=\"color: #000000\">隐马尔可夫模型最初是在20世纪60年代后半期Leonard E. Baum和其它一些作者在一系列的统计学论文中描述的。HMM最初的应用之一是开始于20世纪70年代中期的语音识别。 在1980年代后半期，HMM开始应用到生物序列尤其是DNA的分析中。此后，在生物信息学领域HMM逐渐成为一项不可或缺的技术。</span></p>\n<p><span style=\"color: #000000\">HMM有三个典型(canonical)问题:</span><br><span style=\"color: #000000\"> 已知模型参数，计算某一特定输出序列的概率.通常使用forward算法解决.</span><br><span style=\"color: #000000\"> 已知模型参数，寻找最可能的能产生某一特定输出序列的隐含状态的序列.通常使用Viterbi算法解决.</span><br><span style=\"color: #000000\"> 已知输出序列，寻找最可能的状态转移以及输出概率.通常使用Baum-Welch算法以及Reversed Viterbi算法解决.</span></p>\n<p>&nbsp;</p>\n<blockquote>\n<p>凸优化</p>\n</blockquote>\n<p>&nbsp;</p>\n<p><span style=\"color: #000000\">凸优化，或叫做凸最优化，凸最小化，是数学最优化的一个子领域，研究</span><span style=\"color: #ff0000\">定义于凸集中的凸函数最小化的问题</span><span style=\"color: #000000\">。凸优化在某种意义上说较一般情形的数学最优化问题要简单，譬如在</span><span style=\"color: #ff0000\">凸优化中局部最优值必定是全局最优值</span>。<span style=\"color: #000000\">凸函数的凸性使得凸分析中的有力工具在最优化问题中得以应用，如次导数等。</span><br><span style=\"color: #000000\"> 凸优化应用于很多学科领域，诸如自动控制系统，信号处理，通讯和网络，电子电路设计，数据分析和建模，统计学(最优化设计），以及金融。在近来运算能力提高和最优化理论发展的背景下，一般的凸优化已经接近简单的线性规划一样直捷易行。许多最优化问题都可以转化成凸优化（凸最小化）问题，例如求凹函数f最大值的问题就等同于求凸函数 -f最小值的问题。</span></p>\n<p><span style=\"color: #000000\">凸优化（凸最小化）问题可以用以下几种方法求解：</span><br>捆集法<br><span style=\"color: #ff0000\">次梯度法</span><br><span style=\"color: #000000\">内点法</span></p>\n<p><span style=\"color: #000000\">[L2]Linear Regression线性回归 Gradient descent梯度下降 Normal equations正规化方程组（都需要矩阵变换知识）</span></p>\n<p><span style=\"color: #000000\">{(x(i), y(i)); i =1, . . . , m}称作包含m个训练样本的训练集合</span></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93gw1ertvgzf951j20h70czgmk.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">h是假设的模型，可以带有一定先验知识，也可以是推测类型。学习算法通过学习训练集合的样本，得到h假设中的一定参数，在新的样本中进行预测和他推理</span>。<span style=\"color: #ff0000\">若目标变量y是连续的，则这样的学习问题可归为回归问题；若目标变量y是离散的，例如可在{0,1}中取值的垃圾邮件归类、癌症可能性判定问题，则可归为分类问题。</span></p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1ertvos0ycwj20b803qjri.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">假设h假设是线性的，则假设就是各个参数线性的代数和。其中θ和x均是向量。x中各向量分量是各自变因素的取值，θ是各个自变量分量的系数或权重。则机器学习算法的目的就是求这个假设函数h(x)与真实值y的最小值。评估标准J(θ)以各样本和预测值的差的平方的二分之一为准。（二分之一纯粹是为了后期的运算）</span></p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1ertvwyw9uwj20en04hq37.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">1. LMS（<span class=\"Apple-converted-space\"> </span>Least mean square） 算法</span></p>\n<p><span style=\"color: #000000\">即最小均方算法。算法实质是自适应的纠错学习，在学习中纠正参数θ的取值，直到收敛。其中，运用的最多的是梯度下降算法（Gradient Descent）</span></p>\n<p><span style=\"color: #000000\">算法步骤为：</span></p>\n<p><span style=\"color: #000000\">a)选取一个初始参数向量，可令其为0向量</span></p>\n<p><span style=\"color: #000000\">b)重复查找各方向梯度，沿着梯度下降最快的方向搜索</span></p>\n<p><span style=\"color: #000000\">c)直到四周均比局部梯度大的局部最优点</span></p>\n<p><span style=\"color: #000000\">算法的数学描述为（该式为原始式，即梯度下降的数学定义）：</span></p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93gw1ertwxvy7r7j20a503h0st.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">：=与计算机编程中的赋值语句等同。α称作学习比率。则上式中J(θ)对θ求导的数学推导式为：</span></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1ertx3pvtwhj20k70aw0ui.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">这里更新最上式，对于</span><span style=\"color: #ff0000\">单个训练样本 </span></p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1ertxdj12m5j20ef02k0sy.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">对</span><span style=\"color: #ff0000\">所有训练样本<span style=\"color: #000000\">，沿着梯度方向不断计算直到收敛</span></span></p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1ertxfgsbo8j20jb067mxy.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">该方法中，每一次梯度的计算都用到了每个训练样本，这种梯度下降的方法称为</span> <span style=\"color: #ff0000\">批梯度下降<span style=\"color: #000000\">。由于这里的最优化问题只有一个全局，因此这里的局部梯度最优点即是全局的梯度最优点。此外还可以采取<span style=\"color: #ff0000\">随机梯度下降</span>，每次梯度的计算选取随机的样本点，这样收敛的速度更快，但可能永远不会收敛到最优点，但会集中在最优点附近。因而在训练样本较大时可以采用随机梯度下降。这是随机梯度下降算法的数学表达：<img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1ertxr2dnpkj20pi09omy1.jpg\" alt=\"\"></span></span><span style=\"color: #000000\">这是利用批梯度下降算法计算的梯度直到收敛，可以注意到每一次步长是不一样的，步长可在学习中不断调节，越接近最优点步长越短。</span></p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1ertxp6yvc3j20is0ewtb2.jpg\" alt=\"\"><span style=\"color: #000000\">2.正规化方程</span></p>\n<p><span style=\"color: #000000\">梯度下降是一种求取价值函数J(θ)的方法，正规化方程是另一种方案。首先提到的是几个必要的矩阵知识：</span></p>\n<p><span style=\"color: #000000\">f与向量A的映射关系中，对f进行求导的定义：</span></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1erty55sgncj20x00800v7.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">关于迹的一些定理：</span></p>\n<p><span style=\"color: #000000\">迹的乘法交换：</span></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1ertychjkpmj20ko03ydgn.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">迹和转置的迹；迹的加法结合；迹的数乘</span></p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1ertycuu329j20bg05bdg7.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">迹与倒数相关：</span></p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1ertyf4n67aj20gl080ab4.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">上式中，B是n_m矩阵，f的定义是依赖m_n矩阵的函数f（A）的值等于AB的迹。其中f（A）中的A的含义是A矩阵的每一个矩阵分量。</span></p>\n<p><span style=\"color: #000000\">将J(θ)写成矩阵形式，给定的训练集合定义成矩阵X（m*n）m是训练样本个数，n是每个训练样本的自变量分量。</span></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1erv2wqwhymj20bt06vt91.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">则已知的结果也可以用矩阵表示，或者说是向量表示</span></p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1erv2xjw1fgj207e06m0sv.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">假设h和y的向量差为</span></p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1erv2z16c93j20iw0a33zm.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">J(θ)则可以表示为：</span></p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1erv2zsi8x8j20mc05qdgh.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">可以看到，h-y利用了向量内乘的方式，即向量乘以向量的转置，得到的实际上是个一维矩阵即一个数。为了找到J(θ)的最小值，可利用矩阵的求导，并参考上式中迹与倒数相关第三条：</span></p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93jw1erv36i7jh1j20p20dhq5v.jpg\" alt=\"\"></p>\n<p><span style=\"color: #000000\">第三步骤中，利用到实数的迹也是它本身，第四步中用到了迹和迹的转置，第五步中的方法是利用迹与倒数相关第三条，将A的转置设为θ，B=B的转置=X的转置*X C=单位阵，带入公式即可。令上式为零，则求出导数为零时θ的取值。得到的方程称为正规化方程：</span></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1erv3chess6j20wy06babl.jpg\" alt=\"\"></p>\n<blockquote>\n<p>梯度下降</p>\n</blockquote>\n<p><span style=\"color: #000000\">梯度下降法，基于这样的观察：如果实值函数 F(x)在点 (a,f(a)) 处可微且有定义，那么<span style=\"color: #ff0000\">函数 F(x)在 a点沿着梯度相反的方向 -▽ F(a) 下降最快</span>。</span></p>\n<p><span style=\"color: #000000\">因而，如果</span><img src=\"http://upload.wikimedia.org/math/3/f/f/3ff0cdc9fd95f11558270cd4db06ac28.png\" alt=\"\\mathbf{b}=\\mathbf{a}-\\gamma\\nabla F(\\mathbf{a})\"><span style=\"color: #000000\">,对于 <img src=\"http://upload.wikimedia.org/math/e/2/4/e243b8724ee0860a2b24f48b7c5c2360.png\" alt=\"\\gamma&gt;0\"> 为一个够小数值时成立，那么 <img src=\"http://upload.wikimedia.org/math/9/b/b/9bb1b9d10c2499804ac52aaf0aacd8fe.png\" alt=\"F(\\mathbf{a})\\geq F(\\mathbf{b})\">。</span></p>\n<p><span style=\"color: #000000\">考虑到这一点，我们可以从函数 <img src=\"http://upload.wikimedia.org/math/8/0/0/800618943025315f869e4e1f09471012.png\" alt=\"F\"> 的局部极小值的初始估计 <img src=\"http://upload.wikimedia.org/math/c/d/5/cd5146b777ca8406c51d8ba8da7fe901.png\" alt=\"\\mathbf{x}_0\"> 出发，并考虑如下序列 <img src=\"http://upload.wikimedia.org/math/e/3/6/e36041cdf241095ff7a0e0169a8d405e.png\" alt=\"\\mathbf{x}_0, \\mathbf{x}_1, \\mathbf{x}_2, \\dots\"> 使得</span></p>\n<dl><dd><span style=\"color: #000000\"><img src=\"http://upload.wikimedia.org/math/8/b/0/8b0e3f1c41429f48f4788cfee9fe57ee.png\" alt=\"\\mathbf{x}_{n+1}=\\mathbf{x}_n-\\gamma_n \\nabla F(\\mathbf{x}_n),\\ n \\ge 0.\"></span></dd></dl>\n\n<p><span style=\"color: #000000\">因此可得到</span><img src=\"http://upload.wikimedia.org/math/3/e/a/3ea251fcbc5ebc8b22f515e171570797.png\" alt=\"F(\\mathbf{x}_0)\\ge F(\\mathbf{x}_1)\\ge F(\\mathbf{x}_2)\\ge \\cdots,\">如果顺利的话序列 <img src=\"http://upload.wikimedia.org/math/c/a/c/cac7a8ab62b2a332af1981678d0504e3.png\" alt=\"(\\mathbf{x}_n)\"> 收敛到期望的极值。<span style=\"color: #000000\">注意每次迭代<em>步长</em> <img src=\"http://upload.wikimedia.org/math/3/3/4/334de1ea38b615839e4ee6b65ee1b103.png\" alt=\"\\gamma\"> 可以改变。假设 <img src=\"http://upload.wikimedia.org/math/8/0/0/800618943025315f869e4e1f09471012.png\" alt=\"F\"> 定义在平面上，并且函数图像是一个碗型。蓝色的曲线是等高线，即函数 <img src=\"http://upload.wikimedia.org/math/8/0/0/800618943025315f869e4e1f09471012.png\" alt=\"F\"> 为常数的集合构成的曲线。红色的箭头指向该点梯度的反方向。（一点处的梯度方向与通过该点的等高线的垂线。沿着梯度<em>下降</em>方向，将最终到达碗底，即函数 <img src=\"http://upload.wikimedia.org/math/8/0/0/800618943025315f869e4e1f09471012.png\" alt=\"F\"> 值最小的点。</span></p>\n<p><img src=\"http://upload.wikimedia.org/wikipedia/commons/thumb/7/79/Gradient_descent.png/350px-Gradient_descent.png\" alt=\"\"></p>\n<p>&nbsp;</p>"},{"title":"[汇总]pc Android iOS传输文件","id":"1028","date":"2016-01-03T16:35:49.000Z","_content":"\n曾写过一个这个[http://www.dooby.me/?p=473](http://www.dooby.me/?p=473)\n\n然而时过境迁很多出彩的多客户端文件传输的app已经出来了。。本篇主要提<font color=\"#FF0000\">多客户端的文件无线传输</font>，忽略笔记类和书签类。\n<!-- more -->\n\n1.Airdroid3.1.6 [http://coolapk.com/apk/com.sand.airdroid](http://coolapk.com/apk/com.sand.airdroid)\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1ezmt5t987jj20u01hcn0w.jpg)![](http://ww3.sinaimg.cn/large/68eb7c93jw1ezmt66mv43j20u01hctby.jpg)![](http://ww3.sinaimg.cn/large/68eb7c93jw1ezmt76fl5dj20u01hc77z.jpg)![](http://ww3.sinaimg.cn/large/68eb7c93jw1ezmt7qh365j20u01hctc6.jpg)\n\ntips：只能在安卓与电脑、安卓之间传输，需要注册登录账号\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1ezms9x6npaj20f403s0th.jpg)\n\n鹅妹子赢：除了强大的win客户端（网页端）无线文件（夹）传输外，还有照片音频视频管理、手机通知<font color=\"#FF0000\">桌面提示（低头党福音）</font>、通讯录短信管理、截屏、<font color=\"#FF0000\">apk卸载及下载</font>，收发短信！电话接打！<font color=\"#FF0000\">寻找手机</font>！！（黑科技啊）。连接过的设备支持<font color=\"#FF0000\">直接唤醒连接</font>（只要都在联网状态下，无论同wifi、异wifi甚至是移动数据网络）。还支持<font color=\"#FF0000\">桌面鼠标直接操控手机</font>的airmirror！！简洁干净，效果拔群，关键<font color=\"#FF0000\">美美美</font>！！！\n\n![](http://ww1.sinaimg.cn/large/68eb7c93gw1ezom8kr3ksj21he0q2q8x.jpg)\n\nweb平台远程唤醒\n\n![](http://ww2.sinaimg.cn/large/68eb7c93gw1ezomaz9flsj21h90qrgw9.jpg)\n\nweb平台主界面。\n\n![](http://ww4.sinaimg.cn/large/68eb7c93gw1ezomc357sjj21h10qt1d1.jpg)\n\nbug级别的手机查找\n\n![](http://ww3.sinaimg.cn/large/68eb7c93gw1ezoniqrfh4j20x90o1jw0.jpg)\n\nAirmirror直接用鼠标代替手势\n\n![](http://ww3.sinaimg.cn/large/68eb7c93gw1ezonwxogcxj20ci03yt8x.jpg)\n\n同样是bug级别的桌面通知提示。还可直接回复短信\n\n网络条件：\n\n电脑可在win客户端或web网页操作 手机需安装客户端。（win↔Android；Android↔Android）\n\n近距离传输 可在同wlan网络下，或手机自建热点，或无网络状况通过USB管理手机连接，通过FTP+端口的形式传输；远距离直接通过账号共享传输\n\n文件格式：Android客户端可发送筛选过的有图片、直接拍照、视频、音频、已接受文件及所有SD卡下内容；Win下可直接拖动文件夹（需premium）、任意文件发送\n\n<font color=\"#FF0000\">注：</font>Android间不可互传apk，分享出去是play的链接。只能在win下载apk\n\n测速：\n\n1G的视频 web端&nbsp; 在2G的wifi下达到3MB/s 用时 5分13秒。\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1ezmszm05i9j20lz047gmo.jpg)\n\n&nbsp;\n\n2.快牙3.6（国际版）[http://coolapk.com/apk/com.dewmobile.kuaiya.play](http://coolapk.com/apk/com.dewmobile.kuaiya.play)\n\ntips:强大的三平台互传 起家早 然后堕落了 加入一堆没用的游戏和功能\n\n饿妹子赢：支持wifi 热点 蓝牙各种乱七八糟的方式。能互传apk！能无账号扫码传输！\n\n&nbsp;\n\n3.Xender\n\n4.茄子助手\n\n5.微信&amp;qq手机助手\n\n6.百度云\n\n7.闪传\n\n8.SuperBeam\n\n9.极助手\n\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\">[](http://sns.juziyue.com/webinvite.php?u=94887)&nbsp;今天你[菊子曰](http://sns.juziyue.com/webinvite.php?u=94887)了么？</div>","source":"_posts/[汇总][2015.1.3]电脑端与Android iOS传输文件.md","raw":"---\ntitle: '[汇总]pc Android iOS传输文件'\ncategories:\n  - 软件测评\n  - 软文\nid: 1028\ndate: 2016-01-04 00:35:49\ntags:\n---\n\n曾写过一个这个[http://www.dooby.me/?p=473](http://www.dooby.me/?p=473)\n\n然而时过境迁很多出彩的多客户端文件传输的app已经出来了。。本篇主要提<font color=\"#FF0000\">多客户端的文件无线传输</font>，忽略笔记类和书签类。\n<!-- more -->\n\n1.Airdroid3.1.6 [http://coolapk.com/apk/com.sand.airdroid](http://coolapk.com/apk/com.sand.airdroid)\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1ezmt5t987jj20u01hcn0w.jpg)![](http://ww3.sinaimg.cn/large/68eb7c93jw1ezmt66mv43j20u01hctby.jpg)![](http://ww3.sinaimg.cn/large/68eb7c93jw1ezmt76fl5dj20u01hc77z.jpg)![](http://ww3.sinaimg.cn/large/68eb7c93jw1ezmt7qh365j20u01hctc6.jpg)\n\ntips：只能在安卓与电脑、安卓之间传输，需要注册登录账号\n\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1ezms9x6npaj20f403s0th.jpg)\n\n鹅妹子赢：除了强大的win客户端（网页端）无线文件（夹）传输外，还有照片音频视频管理、手机通知<font color=\"#FF0000\">桌面提示（低头党福音）</font>、通讯录短信管理、截屏、<font color=\"#FF0000\">apk卸载及下载</font>，收发短信！电话接打！<font color=\"#FF0000\">寻找手机</font>！！（黑科技啊）。连接过的设备支持<font color=\"#FF0000\">直接唤醒连接</font>（只要都在联网状态下，无论同wifi、异wifi甚至是移动数据网络）。还支持<font color=\"#FF0000\">桌面鼠标直接操控手机</font>的airmirror！！简洁干净，效果拔群，关键<font color=\"#FF0000\">美美美</font>！！！\n\n![](http://ww1.sinaimg.cn/large/68eb7c93gw1ezom8kr3ksj21he0q2q8x.jpg)\n\nweb平台远程唤醒\n\n![](http://ww2.sinaimg.cn/large/68eb7c93gw1ezomaz9flsj21h90qrgw9.jpg)\n\nweb平台主界面。\n\n![](http://ww4.sinaimg.cn/large/68eb7c93gw1ezomc357sjj21h10qt1d1.jpg)\n\nbug级别的手机查找\n\n![](http://ww3.sinaimg.cn/large/68eb7c93gw1ezoniqrfh4j20x90o1jw0.jpg)\n\nAirmirror直接用鼠标代替手势\n\n![](http://ww3.sinaimg.cn/large/68eb7c93gw1ezonwxogcxj20ci03yt8x.jpg)\n\n同样是bug级别的桌面通知提示。还可直接回复短信\n\n网络条件：\n\n电脑可在win客户端或web网页操作 手机需安装客户端。（win↔Android；Android↔Android）\n\n近距离传输 可在同wlan网络下，或手机自建热点，或无网络状况通过USB管理手机连接，通过FTP+端口的形式传输；远距离直接通过账号共享传输\n\n文件格式：Android客户端可发送筛选过的有图片、直接拍照、视频、音频、已接受文件及所有SD卡下内容；Win下可直接拖动文件夹（需premium）、任意文件发送\n\n<font color=\"#FF0000\">注：</font>Android间不可互传apk，分享出去是play的链接。只能在win下载apk\n\n测速：\n\n1G的视频 web端&nbsp; 在2G的wifi下达到3MB/s 用时 5分13秒。\n\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1ezmszm05i9j20lz047gmo.jpg)\n\n&nbsp;\n\n2.快牙3.6（国际版）[http://coolapk.com/apk/com.dewmobile.kuaiya.play](http://coolapk.com/apk/com.dewmobile.kuaiya.play)\n\ntips:强大的三平台互传 起家早 然后堕落了 加入一堆没用的游戏和功能\n\n饿妹子赢：支持wifi 热点 蓝牙各种乱七八糟的方式。能互传apk！能无账号扫码传输！\n\n&nbsp;\n\n3.Xender\n\n4.茄子助手\n\n5.微信&amp;qq手机助手\n\n6.百度云\n\n7.闪传\n\n8.SuperBeam\n\n9.极助手\n\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\">[](http://sns.juziyue.com/webinvite.php?u=94887)&nbsp;今天你[菊子曰](http://sns.juziyue.com/webinvite.php?u=94887)了么？</div>","slug":"[汇总][2015.1.3]电脑端与Android iOS传输文件","published":1,"updated":"2016-04-29T09:13:23.590Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7ly001juco4h7ed2tje","content":"<p>曾写过一个这个<a href=\"http://www.dooby.me/?p=473\" target=\"_blank\" rel=\"external\">http://www.dooby.me/?p=473</a></p>\n<p>然而时过境迁很多出彩的多客户端文件传输的app已经出来了。。本篇主要提<font color=\"#FF0000\">多客户端的文件无线传输</font>，忽略笔记类和书签类。<br><a id=\"more\"></a></p>\n<p>1.Airdroid3.1.6 <a href=\"http://coolapk.com/apk/com.sand.airdroid\" target=\"_blank\" rel=\"external\">http://coolapk.com/apk/com.sand.airdroid</a></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1ezmt5t987jj20u01hcn0w.jpg\" alt=\"\"><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1ezmt66mv43j20u01hctby.jpg\" alt=\"\"><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1ezmt76fl5dj20u01hc77z.jpg\" alt=\"\"><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1ezmt7qh365j20u01hctc6.jpg\" alt=\"\"></p>\n<p>tips：只能在安卓与电脑、安卓之间传输，需要注册登录账号</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1ezms9x6npaj20f403s0th.jpg\" alt=\"\"></p>\n<p>鹅妹子赢：除了强大的win客户端（网页端）无线文件（夹）传输外，还有照片音频视频管理、手机通知<font color=\"#FF0000\">桌面提示（低头党福音）</font>、通讯录短信管理、截屏、<font color=\"#FF0000\">apk卸载及下载</font>，收发短信！电话接打！<font color=\"#FF0000\">寻找手机</font>！！（黑科技啊）。连接过的设备支持<font color=\"#FF0000\">直接唤醒连接</font>（只要都在联网状态下，无论同wifi、异wifi甚至是移动数据网络）。还支持<font color=\"#FF0000\">桌面鼠标直接操控手机</font>的airmirror！！简洁干净，效果拔群，关键<font color=\"#FF0000\">美美美</font>！！！</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93gw1ezom8kr3ksj21he0q2q8x.jpg\" alt=\"\"></p>\n<p>web平台远程唤醒</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93gw1ezomaz9flsj21h90qrgw9.jpg\" alt=\"\"></p>\n<p>web平台主界面。</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1ezomc357sjj21h10qt1d1.jpg\" alt=\"\"></p>\n<p>bug级别的手机查找</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93gw1ezoniqrfh4j20x90o1jw0.jpg\" alt=\"\"></p>\n<p>Airmirror直接用鼠标代替手势</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93gw1ezonwxogcxj20ci03yt8x.jpg\" alt=\"\"></p>\n<p>同样是bug级别的桌面通知提示。还可直接回复短信</p>\n<p>网络条件：</p>\n<p>电脑可在win客户端或web网页操作 手机需安装客户端。（win↔Android；Android↔Android）</p>\n<p>近距离传输 可在同wlan网络下，或手机自建热点，或无网络状况通过USB管理手机连接，通过FTP+端口的形式传输；远距离直接通过账号共享传输</p>\n<p>文件格式：Android客户端可发送筛选过的有图片、直接拍照、视频、音频、已接受文件及所有SD卡下内容；Win下可直接拖动文件夹（需premium）、任意文件发送</p>\n<p><font color=\"#FF0000\">注：</font>Android间不可互传apk，分享出去是play的链接。只能在win下载apk</p>\n<p>测速：</p>\n<p>1G的视频 web端&nbsp; 在2G的wifi下达到3MB/s 用时 5分13秒。</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1ezmszm05i9j20lz047gmo.jpg\" alt=\"\"></p>\n<p>&nbsp;</p>\n<p>2.快牙3.6（国际版）<a href=\"http://coolapk.com/apk/com.dewmobile.kuaiya.play\" target=\"_blank\" rel=\"external\">http://coolapk.com/apk/com.dewmobile.kuaiya.play</a></p>\n<p>tips:强大的三平台互传 起家早 然后堕落了 加入一堆没用的游戏和功能</p>\n<p>饿妹子赢：支持wifi 热点 蓝牙各种乱七八糟的方式。能互传apk！能无账号扫码传输！</p>\n<p>&nbsp;</p>\n<p>3.Xender</p>\n<p>4.茄子助手</p>\n<p>5.微信&amp;qq手机助手</p>\n<p>6.百度云</p>\n<p>7.闪传</p>\n<p>8.SuperBeam</p>\n<p>9.极助手</p>\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\"><a href=\"http://sns.juziyue.com/webinvite.php?u=94887\" target=\"_blank\" rel=\"external\"></a>&nbsp;今天你<a href=\"http://sns.juziyue.com/webinvite.php?u=94887\" target=\"_blank\" rel=\"external\">菊子曰</a>了么？</div>","excerpt":"<p>曾写过一个这个<a href=\"http://www.dooby.me/?p=473\">http://www.dooby.me/?p=473</a></p>\n<p>然而时过境迁很多出彩的多客户端文件传输的app已经出来了。。本篇主要提<font color=\"#FF0000\">多客户端的文件无线传输</font>，忽略笔记类和书签类。<br>","more":"</p>\n<p>1.Airdroid3.1.6 <a href=\"http://coolapk.com/apk/com.sand.airdroid\">http://coolapk.com/apk/com.sand.airdroid</a></p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1ezmt5t987jj20u01hcn0w.jpg\" alt=\"\"><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1ezmt66mv43j20u01hctby.jpg\" alt=\"\"><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1ezmt76fl5dj20u01hc77z.jpg\" alt=\"\"><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1ezmt7qh365j20u01hctc6.jpg\" alt=\"\"></p>\n<p>tips：只能在安卓与电脑、安卓之间传输，需要注册登录账号</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1ezms9x6npaj20f403s0th.jpg\" alt=\"\"></p>\n<p>鹅妹子赢：除了强大的win客户端（网页端）无线文件（夹）传输外，还有照片音频视频管理、手机通知<font color=\"#FF0000\">桌面提示（低头党福音）</font>、通讯录短信管理、截屏、<font color=\"#FF0000\">apk卸载及下载</font>，收发短信！电话接打！<font color=\"#FF0000\">寻找手机</font>！！（黑科技啊）。连接过的设备支持<font color=\"#FF0000\">直接唤醒连接</font>（只要都在联网状态下，无论同wifi、异wifi甚至是移动数据网络）。还支持<font color=\"#FF0000\">桌面鼠标直接操控手机</font>的airmirror！！简洁干净，效果拔群，关键<font color=\"#FF0000\">美美美</font>！！！</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93gw1ezom8kr3ksj21he0q2q8x.jpg\" alt=\"\"></p>\n<p>web平台远程唤醒</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93gw1ezomaz9flsj21h90qrgw9.jpg\" alt=\"\"></p>\n<p>web平台主界面。</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1ezomc357sjj21h10qt1d1.jpg\" alt=\"\"></p>\n<p>bug级别的手机查找</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93gw1ezoniqrfh4j20x90o1jw0.jpg\" alt=\"\"></p>\n<p>Airmirror直接用鼠标代替手势</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93gw1ezonwxogcxj20ci03yt8x.jpg\" alt=\"\"></p>\n<p>同样是bug级别的桌面通知提示。还可直接回复短信</p>\n<p>网络条件：</p>\n<p>电脑可在win客户端或web网页操作 手机需安装客户端。（win↔Android；Android↔Android）</p>\n<p>近距离传输 可在同wlan网络下，或手机自建热点，或无网络状况通过USB管理手机连接，通过FTP+端口的形式传输；远距离直接通过账号共享传输</p>\n<p>文件格式：Android客户端可发送筛选过的有图片、直接拍照、视频、音频、已接受文件及所有SD卡下内容；Win下可直接拖动文件夹（需premium）、任意文件发送</p>\n<p><font color=\"#FF0000\">注：</font>Android间不可互传apk，分享出去是play的链接。只能在win下载apk</p>\n<p>测速：</p>\n<p>1G的视频 web端&nbsp; 在2G的wifi下达到3MB/s 用时 5分13秒。</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1ezmszm05i9j20lz047gmo.jpg\" alt=\"\"></p>\n<p>&nbsp;</p>\n<p>2.快牙3.6（国际版）<a href=\"http://coolapk.com/apk/com.dewmobile.kuaiya.play\">http://coolapk.com/apk/com.dewmobile.kuaiya.play</a></p>\n<p>tips:强大的三平台互传 起家早 然后堕落了 加入一堆没用的游戏和功能</p>\n<p>饿妹子赢：支持wifi 热点 蓝牙各种乱七八糟的方式。能互传apk！能无账号扫码传输！</p>\n<p>&nbsp;</p>\n<p>3.Xender</p>\n<p>4.茄子助手</p>\n<p>5.微信&amp;qq手机助手</p>\n<p>6.百度云</p>\n<p>7.闪传</p>\n<p>8.SuperBeam</p>\n<p>9.极助手</p>\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\"><a href=\"http://sns.juziyue.com/webinvite.php?u=94887\"></a>&nbsp;今天你<a href=\"http://sns.juziyue.com/webinvite.php?u=94887\">菊子曰</a>了么？</div>"},{"title":"android的ListView自定义样式 下拉刷新上拉加载 远程图片加载","id":"213","date":"2013-05-25T21:04:37.000Z","_content":"\n国内普遍超遍天 各种标榜原创的复制粘贴文 贴几个真正用起来的\n1.ListView的自定义样式 [demo1](http://www.cnblogs.com/allin/archive/2010/05/11/1732200.html \"demo\")很方便 四种ListView的实现方法都有 常用的还是自定义方便的simpleadpter\n\n[caption id=\"\" align=\"alignleft\" width=\"182\"]![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/2010051022581153.png) demo1[/caption]\n\n[caption id=\"\" align=\"alignleft\" width=\"178\"]![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/2010051022590225.png) demo1[/caption]\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n2.ListView的下拉刷新上拉加载的[demo2](http://k-beta.com/android-listview-more-refresh.html)\n![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/refresh1.jpg)![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/refresh2.jpg)\n\n![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/refresh3.jpg)![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/more1.jpg)\n\n另一个[demo](http://104zz.iteye.com/blog/1682801 \"demo3\")\n![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/09113475-eb2f-3a41-9606-cb0f4d803146.png)![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/1c8af22f-0f6e-3968-9837-e94532148f7b.png)","source":"_posts/android-listview-initpics-and-update.md","raw":"---\ntitle: android的ListView自定义样式 下拉刷新上拉加载 远程图片加载\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - Android\n  - java\nid: 213\ndate: 2013-05-26 05:04:37\n---\n\n国内普遍超遍天 各种标榜原创的复制粘贴文 贴几个真正用起来的\n1.ListView的自定义样式 [demo1](http://www.cnblogs.com/allin/archive/2010/05/11/1732200.html \"demo\")很方便 四种ListView的实现方法都有 常用的还是自定义方便的simpleadpter\n\n[caption id=\"\" align=\"alignleft\" width=\"182\"]![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/2010051022581153.png) demo1[/caption]\n\n[caption id=\"\" align=\"alignleft\" width=\"178\"]![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/2010051022590225.png) demo1[/caption]\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n2.ListView的下拉刷新上拉加载的[demo2](http://k-beta.com/android-listview-more-refresh.html)\n![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/refresh1.jpg)![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/refresh2.jpg)\n\n![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/refresh3.jpg)![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/more1.jpg)\n\n另一个[demo](http://104zz.iteye.com/blog/1682801 \"demo3\")\n![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/09113475-eb2f-3a41-9606-cb0f4d803146.png)![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/1c8af22f-0f6e-3968-9837-e94532148f7b.png)","slug":"android-listview-initpics-and-update","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7m0001muco4winm7avh","content":"<p>国内普遍超遍天 各种标榜原创的复制粘贴文 贴几个真正用起来的<br>1.ListView的自定义样式 <a href=\"http://www.cnblogs.com/allin/archive/2010/05/11/1732200.html\" title=\"demo\" target=\"_blank\" rel=\"external\">demo1</a>很方便 四种ListView的实现方法都有 常用的还是自定义方便的simpleadpter</p>\n<p>[caption id=”” align=”alignleft” width=”182”]<img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/2010051022581153.png\" alt=\"\"> demo1[/caption]</p>\n<p>[caption id=”” align=”alignleft” width=”178”]<img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/2010051022590225.png\" alt=\"\"> demo1[/caption]</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>2.ListView的下拉刷新上拉加载的<a href=\"http://k-beta.com/android-listview-more-refresh.html\" target=\"_blank\" rel=\"external\">demo2</a><br><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/refresh1.jpg\" alt=\"\"><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/refresh2.jpg\" alt=\"\"></p>\n<p><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/refresh3.jpg\" alt=\"\"><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/more1.jpg\" alt=\"\"></p>\n<p>另一个<a href=\"http://104zz.iteye.com/blog/1682801\" title=\"demo3\" target=\"_blank\" rel=\"external\">demo</a><br><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/09113475-eb2f-3a41-9606-cb0f4d803146.png\" alt=\"\"><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/1c8af22f-0f6e-3968-9837-e94532148f7b.png\" alt=\"\"></p>","excerpt":"","more":"<p>国内普遍超遍天 各种标榜原创的复制粘贴文 贴几个真正用起来的<br>1.ListView的自定义样式 <a href=\"http://www.cnblogs.com/allin/archive/2010/05/11/1732200.html\" title=\"demo\">demo1</a>很方便 四种ListView的实现方法都有 常用的还是自定义方便的simpleadpter</p>\n<p>[caption id=”” align=”alignleft” width=”182”]<img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/2010051022581153.png\" alt=\"\"> demo1[/caption]</p>\n<p>[caption id=”” align=”alignleft” width=”178”]<img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/2010051022590225.png\" alt=\"\"> demo1[/caption]</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>2.ListView的下拉刷新上拉加载的<a href=\"http://k-beta.com/android-listview-more-refresh.html\">demo2</a><br><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/refresh1.jpg\" alt=\"\"><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/refresh2.jpg\" alt=\"\"></p>\n<p><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/refresh3.jpg\" alt=\"\"><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/more1.jpg\" alt=\"\"></p>\n<p>另一个<a href=\"http://104zz.iteye.com/blog/1682801\" title=\"demo3\">demo</a><br><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/09113475-eb2f-3a41-9606-cb0f4d803146.png\" alt=\"\"><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/1c8af22f-0f6e-3968-9837-e94532148f7b.png\" alt=\"\"></p>"},{"title":"Android中listview使用baseAdapter的下拉刷新和加载更多功能","id":"225","date":"2013-06-01T20:58:24.000Z","_content":"\n该功能基于多个成熟的博客和demo的集成，最适合开发的方式推荐。\n\n首先是利用baseAdapter开发listview，baseAdapter拓展性自由性非常高，利用activity加载适配器Adapter再加载资源进入视图view中，图片imageview textview 等都可以自由的组织布局。在一个额外的xml布局中写好单个list项目的布局就可以自由的适配载入整个list 参考[自定义BaseAdapter](http://www.oschina.net/code/snippet_203635_7475) [demo](http://pan.baidu.com/share/link?shareid=464702&uk=4195521600)针对arrayAdapter simpleAdpter等四个适配器的比较。\n\n其次是下拉刷新的功能，虽然网上有很多例子，但是不是继承FrameLayout 就是集成activity。很少有继承listactivity并且还使用baseAdapter的例子。这里主要参考的是[Android中实现下拉刷新](http://blog.csdn.net/berber78/article/details/7387271)以及[Android:ListView使用RelativeLayout与TableLayout比较](http://greatwqs.iteye.com/blog/1058366) 这里的关键并不是头尾的算法和头尾的布局，关键的是如何将listview嵌入另一个布局中并保持布局的稳定和及时性。由于使用的是baseAdapter数据不是直接在activity里添加而是通过继承自baseAdapter的适配器调用getView函数获得的，因而数据的呈现极其容易出现冲突。这里展示两种方法：\n其一是针对上边[Android中实现下拉刷新](http://blog.csdn.net/berber78/article/details/7387271)的例子中的函数改写的。原代码是：\n<pre class=\"brush: xml; gutter: true; first-line: 1; highlight: []; html-script: false\">\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;RelativeLayout\n  xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n  android:layout_width=&quot;fill_parent&quot;\n  android:layout_height=&quot;fill_parent&quot;\n  &gt;\n  &lt;LinearLayout android:orientation=&quot;vertical&quot;\n                android:layout_width=&quot;fill_parent&quot;\n                android:layout_height=&quot;fill_parent&quot;\n                android:background=&quot;#000000&quot;&gt;       \n\t    //将ListView改为包名.自定义的列表类名，MsgListView.java代码见后，此代码不需改通用，下拉刷新相关即此处，其他无关\n\t    &lt;cn.xd.microblogging.tools.MsgListView\n\t    android:id=&quot;@android:id/list&quot;\n\t    android:layout_height=&quot;wrap_content&quot;\n\t    android:layout_width=&quot;fill_parent&quot;\n\t    android:layout_weight=&quot;1.0&quot;\n\t    android:drawSelectorOnTop=&quot;false&quot;\n\t    android:scrollbars=&quot;vertical&quot;\n\t    android:fadingEdgeLength=&quot;0dip&quot; \n\t    android:divider=&quot;@drawable/line&quot;\n\t    android:dividerHeight=&quot;3.0dip&quot;\n\t    android:cacheColorHint=&quot;#00000000&quot; \n\t    android:paddingBottom=&quot;40dp&quot;/&gt;\n  &lt;/LinearLayout&gt;\n  &lt;LinearLayout\n      android:id=&quot;@+id/msg_list_load&quot;\n      android:layout_width=&quot;fill_parent&quot;\n      android:layout_height=&quot;fill_parent&quot; &gt;      \n    &lt;LinearLayout android:id=&quot;@android:id/empty&quot;\n                  android:layout_width=&quot;fill_parent&quot;\n                  android:layout_height=&quot;fill_parent&quot; &gt;       \n      &lt;include\n        android:id=&quot;@android:id/empty&quot;\n        layout=&quot;@layout/empty_loading&quot;\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;fill_parent&quot; /&gt;      \n     &lt;/LinearLayout&gt;\n  &lt;/LinearLayout&gt;\n&lt;/RelativeLayout&gt;\n</pre>\n我的原baseAdapter的适配xml是：\n<pre class=\"brush: xml; gutter: true; first-line: 1; highlight: []; html-script: false\">\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    android:layout_width=&quot;fill_parent&quot;\n    android:layout_height=&quot;fill_parent&quot;\n    android:orientation=&quot;horizontal&quot; &gt;\n    &lt;LinearLayout\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:orientation=&quot;vertical&quot; &gt;\n        &lt;ImageView\n            android:id=&quot;@+id/img&quot;\n            android:layout_width=&quot;100dp&quot;\n            android:layout_height=&quot;wrap_content&quot;\n            android:layout_margin=&quot;5dp&quot; /&gt;\n        &lt;TextView\n            android:id=&quot;@+id/msgname&quot;\n            android:layout_width=&quot;wrap_content&quot;\n            android:layout_height=&quot;wrap_content&quot;\n            android:layout_gravity=&quot;center&quot;\n            android:layout_marginBottom=&quot;4dp&quot;\n            android:textColor=&quot;#FFFFFFFF&quot;\n            android:textSize=&quot;12sp&quot; /&gt;          \n    &lt;/LinearLayout&gt;\n    &lt;LinearLayout\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:orientation=&quot;vertical&quot; &gt;\n        &lt;TextView\n            android:id=&quot;@+id/msgtext&quot;\n            android:layout_width=&quot;wrap_content&quot;\n            android:layout_height=&quot;100dp&quot;\n            android:textColor=&quot;#FFFFFFFF&quot;\n            android:textSize=&quot;22sp&quot; /&gt;\n        &lt;LinearLayout\n            android:layout_width=&quot;wrap_content&quot;\n            android:layout_height=&quot;wrap_content&quot;\n            android:orientation=&quot;horizontal&quot;\n            android:layout_gravity=&quot;left&quot; &gt;\n            &lt;TextView\n                android:id=&quot;@+id/topic&quot;\n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:layout_gravity=&quot;left&quot;\n                android:layout_marginRight=&quot;10dp&quot;\n                android:textColor=&quot;#FFFFFFFF&quot;\n                android:textSize=&quot;13sp&quot; /&gt;\n            &lt;TextView\n                android:id=&quot;@+id/msgtime&quot;\n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:layout_marginRight=&quot;10dp&quot;\n                android:layout_gravity=&quot;left&quot;\n                android:textColor=&quot;#FFFFFFFF&quot;\n                android:textSize=&quot;13sp&quot; /&gt;\n            &lt;TextView\n                android:id=&quot;@+id/msgaddr&quot;\n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:layout_gravity=&quot;left&quot;\n                 android:layout_marginRight=&quot;10dp&quot;\n                android:textColor=&quot;#FFFFFFFF&quot;\n                android:textSize=&quot;13sp&quot; /&gt;\n            &lt;TextView\n                android:id=&quot;@+id/comment&quot;\n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:layout_gravity=&quot;left&quot;\n                android:textColor=&quot;#FFFFFFFF&quot;\n                android:textSize=&quot;13sp&quot; /&gt;\n        &lt;/LinearLayout&gt;\n    &lt;/LinearLayout&gt;\n&lt;/LinearLayout&gt;\n</pre>\n改写后的是：<pre class=\"brush: xml; gutter: true; first-line: 1; highlight: []; html-script: false\">\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;RelativeLayout\n  xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n  android:layout_width=&quot;fill_parent&quot;\n  android:layout_height=&quot;fill_parent&quot;\n  &gt;\n  &lt;LinearLayout android:orientation=&quot;vertical&quot;\n                android:layout_width=&quot;fill_parent&quot;\n                android:layout_height=&quot;fill_parent&quot;\n                android:background=&quot;#000000&quot;&gt;       \n\t    &lt;com.wjy.message.MsgListView\n\t    android:id=&quot;@android:id/list&quot;\n\t    android:layout_height=&quot;wrap_content&quot;\n\t    android:layout_width=&quot;fill_parent&quot;\n\t    android:layout_weight=&quot;1.0&quot;\n\t    android:drawSelectorOnTop=&quot;false&quot;\n\t    android:scrollbars=&quot;vertical&quot;\n\t    android:fadingEdgeLength=&quot;0dip&quot; \n\t    android:divider=&quot;@drawable/line&quot;\n\t    android:dividerHeight=&quot;3.0dip&quot;\n\t    android:cacheColorHint=&quot;#00000000&quot; \n\t    android:paddingBottom=&quot;40dp&quot;/&gt;\n  &lt;/LinearLayout&gt;\n  &lt;LinearLayout \n    android:layout_width=&quot;fill_parent&quot;\n    android:layout_height=&quot;fill_parent&quot;\n    android:orientation=&quot;horizontal&quot; &gt;\n    &lt;LinearLayout\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:orientation=&quot;vertical&quot; \n        android:id=&quot;@+id/hehe&quot;&gt;\n        &lt;ImageView\n            android:id=&quot;@+id/img&quot;\n            android:layout_width=&quot;100dp&quot;\n            android:layout_height=&quot;wrap_content&quot;\n            android:layout_margin=&quot;5dp&quot; /&gt;\n        &lt;TextView\n            android:id=&quot;@+id/msgname&quot;\n            android:layout_width=&quot;wrap_content&quot;\n            android:layout_height=&quot;wrap_content&quot;\n            android:layout_gravity=&quot;center&quot;\n            android:layout_marginBottom=&quot;4dp&quot;\n            android:textColor=&quot;#FFFFFFFF&quot;\n            android:textSize=&quot;12sp&quot; /&gt;\n    &lt;/LinearLayout&gt;\n    &lt;LinearLayout\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:orientation=&quot;vertical&quot; &gt;\n        &lt;TextView\n            android:id=&quot;@+id/msgtext&quot;\n            android:layout_width=&quot;wrap_content&quot;\n            android:layout_height=&quot;100dp&quot;\n            android:textColor=&quot;#FFFFFFFF&quot;\n            android:textSize=&quot;22sp&quot; /&gt;\n\n        &lt;LinearLayout\n            android:layout_width=&quot;wrap_content&quot;\n            android:layout_height=&quot;wrap_content&quot;\n            android:orientation=&quot;horizontal&quot;\n            android:layout_gravity=&quot;left&quot; &gt;\n\n            &lt;TextView\n                android:id=&quot;@+id/topic&quot;\n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:layout_gravity=&quot;left&quot;\n                android:layout_marginRight=&quot;10dp&quot;\n                android:textColor=&quot;#FFFFFFFF&quot;\n                android:textSize=&quot;13sp&quot; /&gt;\n            &lt;TextView\n                android:id=&quot;@+id/msgtime&quot;\n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:layout_marginRight=&quot;10dp&quot;\n                android:layout_gravity=&quot;left&quot;\n                android:textColor=&quot;#FFFFFFFF&quot;\n                android:textSize=&quot;13sp&quot; /&gt;\n\n            &lt;TextView\n                android:id=&quot;@+id/msgaddr&quot;\n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:layout_gravity=&quot;left&quot;\n                 android:layout_marginRight=&quot;10dp&quot;\n                android:textColor=&quot;#FFFFFFFF&quot;\n                android:textSize=&quot;13sp&quot; /&gt;\n            &lt;TextView\n                android:id=&quot;@+id/comment&quot;\n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:layout_gravity=&quot;left&quot;\n                android:textColor=&quot;#FFFFFFFF&quot;\n                android:textSize=&quot;13sp&quot; /&gt;\n        &lt;/LinearLayout&gt;\n    &lt;/LinearLayout&gt;\n&lt;/LinearLayout&gt;\n&lt;/RelativeLayout&gt;\n</pre>\n这其中加入了一个ImageView，一些textview的横横竖竖的布局。效果如图，![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B7-2.jpg)\n另一种是针对这个demo的[PullToRefreshView](http://pull-to-refresh-view.googlecode.com/svn/trunk/PullToRefreshView)这个托管在googlecode的资源非常完满的解决了很多问题，其中关于样式的xml有两个分别是：\ngrid_item.xml\n<pre class=\"brush: xml; gutter: true; first-line: 1; highlight: []; html-script: false\">\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:orientation=&quot;vertical&quot; &gt;\n\t&lt;TextView \n\t    android:id=&quot;@+id/text&quot;\n\t    android:drawableTop=&quot;@drawable/ic_launcher&quot;\n\t    android:layout_width=&quot;wrap_content&quot;\n\t    android:layout_height=&quot;wrap_content&quot;\n\t    android:gravity=&quot;center_horizontal&quot;\n\t    android:text=&quot;test&quot;/&gt;\n&lt;/LinearLayout&gt;\n</pre>\n其中就是放入了一个固定的图片和固定的文字\n可以随意替换。另一个是\ntest_listview.xml\n<pre class=\"brush: xml; gutter: true; first-line: 1; highlight: []; html-script: false\">\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;com.miloisbadboy.view.PullToRefreshView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    android:id=&quot;@+id/main_pull_refresh_view&quot;\n    android:background=&quot;@android:color/white&quot;\n    android:layout_width=&quot;fill_parent&quot;\n    android:layout_height=&quot;fill_parent&quot; \n    android:orientation=&quot;vertical&quot;&gt;\n\t&lt;!-- 这里放置listview,gridview或者scrollview的布局 ,PullToRefreshView\n\t要设置android:orientation=&quot;vertical&quot;属性\n\t否则,显示不正确--&gt;\n    &lt;ListView\n        android:id=&quot;@android:id/list&quot;\n        android:cacheColorHint=&quot;#00000000&quot;\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;fill_parent&quot; /&gt;\n\n&lt;/com.miloisbadboy.view.PullToRefreshView&gt;\n</pre>\n这里和上边的一样都调用的私有的一个下拉刷新的头样式的view文件。这里都可以直接用。这个demo几乎不用改动xml，就是在Adapter适配器getView中\nconvertView = mInflater.inflate(R.layout.你的list样式名字, null);不同罢了。\n\n最后一个问题是下拉刷新中list数据改变的情况。这里不能在额外的thread进行数据的更改，这样会异常。另外在非主线程调用Adapter的notifyDataSetChanged方法也会抱错。这里可以参考[notifyDataSetChanged() 动态更新ListView](http://www.cnblogs.com/wangjianhui/archive/2011/06/15/2081705.html)的例子，两种方法：1利用Handler处理2利用AsyncTask异步处理。这里图鉴第二种，这里加载图片，加载大数据方面AsyncTask非常管用。 可以参考这里[Android中AsyncTask的用法实例](http://www.pin5i.com/showtopic-android-asynctask-sample.html)以及这个例子：[异步下载图片](http://pan.baidu.com/share/link?shareid=464708&uk=4195521600)。\n这是最后的效果：\n![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B7-3.jpg)\nBaseAdapter使用好可以搭配出很多用户体验很好的列表，嵌入别的linerlayout也是很不错的。","source":"_posts/android-listview-push-update.md","raw":"---\ntitle: Android中listview使用baseAdapter的下拉刷新和加载更多功能\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - Android\n  - java\nid: 225\ndate: 2013-06-02 04:58:24\n---\n\n该功能基于多个成熟的博客和demo的集成，最适合开发的方式推荐。\n\n首先是利用baseAdapter开发listview，baseAdapter拓展性自由性非常高，利用activity加载适配器Adapter再加载资源进入视图view中，图片imageview textview 等都可以自由的组织布局。在一个额外的xml布局中写好单个list项目的布局就可以自由的适配载入整个list 参考[自定义BaseAdapter](http://www.oschina.net/code/snippet_203635_7475) [demo](http://pan.baidu.com/share/link?shareid=464702&uk=4195521600)针对arrayAdapter simpleAdpter等四个适配器的比较。\n\n其次是下拉刷新的功能，虽然网上有很多例子，但是不是继承FrameLayout 就是集成activity。很少有继承listactivity并且还使用baseAdapter的例子。这里主要参考的是[Android中实现下拉刷新](http://blog.csdn.net/berber78/article/details/7387271)以及[Android:ListView使用RelativeLayout与TableLayout比较](http://greatwqs.iteye.com/blog/1058366) 这里的关键并不是头尾的算法和头尾的布局，关键的是如何将listview嵌入另一个布局中并保持布局的稳定和及时性。由于使用的是baseAdapter数据不是直接在activity里添加而是通过继承自baseAdapter的适配器调用getView函数获得的，因而数据的呈现极其容易出现冲突。这里展示两种方法：\n其一是针对上边[Android中实现下拉刷新](http://blog.csdn.net/berber78/article/details/7387271)的例子中的函数改写的。原代码是：\n<pre class=\"brush: xml; gutter: true; first-line: 1; highlight: []; html-script: false\">\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;RelativeLayout\n  xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n  android:layout_width=&quot;fill_parent&quot;\n  android:layout_height=&quot;fill_parent&quot;\n  &gt;\n  &lt;LinearLayout android:orientation=&quot;vertical&quot;\n                android:layout_width=&quot;fill_parent&quot;\n                android:layout_height=&quot;fill_parent&quot;\n                android:background=&quot;#000000&quot;&gt;       \n\t    //将ListView改为包名.自定义的列表类名，MsgListView.java代码见后，此代码不需改通用，下拉刷新相关即此处，其他无关\n\t    &lt;cn.xd.microblogging.tools.MsgListView\n\t    android:id=&quot;@android:id/list&quot;\n\t    android:layout_height=&quot;wrap_content&quot;\n\t    android:layout_width=&quot;fill_parent&quot;\n\t    android:layout_weight=&quot;1.0&quot;\n\t    android:drawSelectorOnTop=&quot;false&quot;\n\t    android:scrollbars=&quot;vertical&quot;\n\t    android:fadingEdgeLength=&quot;0dip&quot; \n\t    android:divider=&quot;@drawable/line&quot;\n\t    android:dividerHeight=&quot;3.0dip&quot;\n\t    android:cacheColorHint=&quot;#00000000&quot; \n\t    android:paddingBottom=&quot;40dp&quot;/&gt;\n  &lt;/LinearLayout&gt;\n  &lt;LinearLayout\n      android:id=&quot;@+id/msg_list_load&quot;\n      android:layout_width=&quot;fill_parent&quot;\n      android:layout_height=&quot;fill_parent&quot; &gt;      \n    &lt;LinearLayout android:id=&quot;@android:id/empty&quot;\n                  android:layout_width=&quot;fill_parent&quot;\n                  android:layout_height=&quot;fill_parent&quot; &gt;       \n      &lt;include\n        android:id=&quot;@android:id/empty&quot;\n        layout=&quot;@layout/empty_loading&quot;\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;fill_parent&quot; /&gt;      \n     &lt;/LinearLayout&gt;\n  &lt;/LinearLayout&gt;\n&lt;/RelativeLayout&gt;\n</pre>\n我的原baseAdapter的适配xml是：\n<pre class=\"brush: xml; gutter: true; first-line: 1; highlight: []; html-script: false\">\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    android:layout_width=&quot;fill_parent&quot;\n    android:layout_height=&quot;fill_parent&quot;\n    android:orientation=&quot;horizontal&quot; &gt;\n    &lt;LinearLayout\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:orientation=&quot;vertical&quot; &gt;\n        &lt;ImageView\n            android:id=&quot;@+id/img&quot;\n            android:layout_width=&quot;100dp&quot;\n            android:layout_height=&quot;wrap_content&quot;\n            android:layout_margin=&quot;5dp&quot; /&gt;\n        &lt;TextView\n            android:id=&quot;@+id/msgname&quot;\n            android:layout_width=&quot;wrap_content&quot;\n            android:layout_height=&quot;wrap_content&quot;\n            android:layout_gravity=&quot;center&quot;\n            android:layout_marginBottom=&quot;4dp&quot;\n            android:textColor=&quot;#FFFFFFFF&quot;\n            android:textSize=&quot;12sp&quot; /&gt;          \n    &lt;/LinearLayout&gt;\n    &lt;LinearLayout\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:orientation=&quot;vertical&quot; &gt;\n        &lt;TextView\n            android:id=&quot;@+id/msgtext&quot;\n            android:layout_width=&quot;wrap_content&quot;\n            android:layout_height=&quot;100dp&quot;\n            android:textColor=&quot;#FFFFFFFF&quot;\n            android:textSize=&quot;22sp&quot; /&gt;\n        &lt;LinearLayout\n            android:layout_width=&quot;wrap_content&quot;\n            android:layout_height=&quot;wrap_content&quot;\n            android:orientation=&quot;horizontal&quot;\n            android:layout_gravity=&quot;left&quot; &gt;\n            &lt;TextView\n                android:id=&quot;@+id/topic&quot;\n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:layout_gravity=&quot;left&quot;\n                android:layout_marginRight=&quot;10dp&quot;\n                android:textColor=&quot;#FFFFFFFF&quot;\n                android:textSize=&quot;13sp&quot; /&gt;\n            &lt;TextView\n                android:id=&quot;@+id/msgtime&quot;\n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:layout_marginRight=&quot;10dp&quot;\n                android:layout_gravity=&quot;left&quot;\n                android:textColor=&quot;#FFFFFFFF&quot;\n                android:textSize=&quot;13sp&quot; /&gt;\n            &lt;TextView\n                android:id=&quot;@+id/msgaddr&quot;\n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:layout_gravity=&quot;left&quot;\n                 android:layout_marginRight=&quot;10dp&quot;\n                android:textColor=&quot;#FFFFFFFF&quot;\n                android:textSize=&quot;13sp&quot; /&gt;\n            &lt;TextView\n                android:id=&quot;@+id/comment&quot;\n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:layout_gravity=&quot;left&quot;\n                android:textColor=&quot;#FFFFFFFF&quot;\n                android:textSize=&quot;13sp&quot; /&gt;\n        &lt;/LinearLayout&gt;\n    &lt;/LinearLayout&gt;\n&lt;/LinearLayout&gt;\n</pre>\n改写后的是：<pre class=\"brush: xml; gutter: true; first-line: 1; highlight: []; html-script: false\">\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;RelativeLayout\n  xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n  android:layout_width=&quot;fill_parent&quot;\n  android:layout_height=&quot;fill_parent&quot;\n  &gt;\n  &lt;LinearLayout android:orientation=&quot;vertical&quot;\n                android:layout_width=&quot;fill_parent&quot;\n                android:layout_height=&quot;fill_parent&quot;\n                android:background=&quot;#000000&quot;&gt;       \n\t    &lt;com.wjy.message.MsgListView\n\t    android:id=&quot;@android:id/list&quot;\n\t    android:layout_height=&quot;wrap_content&quot;\n\t    android:layout_width=&quot;fill_parent&quot;\n\t    android:layout_weight=&quot;1.0&quot;\n\t    android:drawSelectorOnTop=&quot;false&quot;\n\t    android:scrollbars=&quot;vertical&quot;\n\t    android:fadingEdgeLength=&quot;0dip&quot; \n\t    android:divider=&quot;@drawable/line&quot;\n\t    android:dividerHeight=&quot;3.0dip&quot;\n\t    android:cacheColorHint=&quot;#00000000&quot; \n\t    android:paddingBottom=&quot;40dp&quot;/&gt;\n  &lt;/LinearLayout&gt;\n  &lt;LinearLayout \n    android:layout_width=&quot;fill_parent&quot;\n    android:layout_height=&quot;fill_parent&quot;\n    android:orientation=&quot;horizontal&quot; &gt;\n    &lt;LinearLayout\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:orientation=&quot;vertical&quot; \n        android:id=&quot;@+id/hehe&quot;&gt;\n        &lt;ImageView\n            android:id=&quot;@+id/img&quot;\n            android:layout_width=&quot;100dp&quot;\n            android:layout_height=&quot;wrap_content&quot;\n            android:layout_margin=&quot;5dp&quot; /&gt;\n        &lt;TextView\n            android:id=&quot;@+id/msgname&quot;\n            android:layout_width=&quot;wrap_content&quot;\n            android:layout_height=&quot;wrap_content&quot;\n            android:layout_gravity=&quot;center&quot;\n            android:layout_marginBottom=&quot;4dp&quot;\n            android:textColor=&quot;#FFFFFFFF&quot;\n            android:textSize=&quot;12sp&quot; /&gt;\n    &lt;/LinearLayout&gt;\n    &lt;LinearLayout\n        android:layout_width=&quot;wrap_content&quot;\n        android:layout_height=&quot;wrap_content&quot;\n        android:orientation=&quot;vertical&quot; &gt;\n        &lt;TextView\n            android:id=&quot;@+id/msgtext&quot;\n            android:layout_width=&quot;wrap_content&quot;\n            android:layout_height=&quot;100dp&quot;\n            android:textColor=&quot;#FFFFFFFF&quot;\n            android:textSize=&quot;22sp&quot; /&gt;\n\n        &lt;LinearLayout\n            android:layout_width=&quot;wrap_content&quot;\n            android:layout_height=&quot;wrap_content&quot;\n            android:orientation=&quot;horizontal&quot;\n            android:layout_gravity=&quot;left&quot; &gt;\n\n            &lt;TextView\n                android:id=&quot;@+id/topic&quot;\n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:layout_gravity=&quot;left&quot;\n                android:layout_marginRight=&quot;10dp&quot;\n                android:textColor=&quot;#FFFFFFFF&quot;\n                android:textSize=&quot;13sp&quot; /&gt;\n            &lt;TextView\n                android:id=&quot;@+id/msgtime&quot;\n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:layout_marginRight=&quot;10dp&quot;\n                android:layout_gravity=&quot;left&quot;\n                android:textColor=&quot;#FFFFFFFF&quot;\n                android:textSize=&quot;13sp&quot; /&gt;\n\n            &lt;TextView\n                android:id=&quot;@+id/msgaddr&quot;\n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:layout_gravity=&quot;left&quot;\n                 android:layout_marginRight=&quot;10dp&quot;\n                android:textColor=&quot;#FFFFFFFF&quot;\n                android:textSize=&quot;13sp&quot; /&gt;\n            &lt;TextView\n                android:id=&quot;@+id/comment&quot;\n                android:layout_width=&quot;wrap_content&quot;\n                android:layout_height=&quot;wrap_content&quot;\n                android:layout_gravity=&quot;left&quot;\n                android:textColor=&quot;#FFFFFFFF&quot;\n                android:textSize=&quot;13sp&quot; /&gt;\n        &lt;/LinearLayout&gt;\n    &lt;/LinearLayout&gt;\n&lt;/LinearLayout&gt;\n&lt;/RelativeLayout&gt;\n</pre>\n这其中加入了一个ImageView，一些textview的横横竖竖的布局。效果如图，![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B7-2.jpg)\n另一种是针对这个demo的[PullToRefreshView](http://pull-to-refresh-view.googlecode.com/svn/trunk/PullToRefreshView)这个托管在googlecode的资源非常完满的解决了很多问题，其中关于样式的xml有两个分别是：\ngrid_item.xml\n<pre class=\"brush: xml; gutter: true; first-line: 1; highlight: []; html-script: false\">\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;LinearLayout xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    android:layout_width=&quot;wrap_content&quot;\n    android:layout_height=&quot;wrap_content&quot;\n    android:orientation=&quot;vertical&quot; &gt;\n\t&lt;TextView \n\t    android:id=&quot;@+id/text&quot;\n\t    android:drawableTop=&quot;@drawable/ic_launcher&quot;\n\t    android:layout_width=&quot;wrap_content&quot;\n\t    android:layout_height=&quot;wrap_content&quot;\n\t    android:gravity=&quot;center_horizontal&quot;\n\t    android:text=&quot;test&quot;/&gt;\n&lt;/LinearLayout&gt;\n</pre>\n其中就是放入了一个固定的图片和固定的文字\n可以随意替换。另一个是\ntest_listview.xml\n<pre class=\"brush: xml; gutter: true; first-line: 1; highlight: []; html-script: false\">\n&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;\n&lt;com.miloisbadboy.view.PullToRefreshView xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;\n    android:id=&quot;@+id/main_pull_refresh_view&quot;\n    android:background=&quot;@android:color/white&quot;\n    android:layout_width=&quot;fill_parent&quot;\n    android:layout_height=&quot;fill_parent&quot; \n    android:orientation=&quot;vertical&quot;&gt;\n\t&lt;!-- 这里放置listview,gridview或者scrollview的布局 ,PullToRefreshView\n\t要设置android:orientation=&quot;vertical&quot;属性\n\t否则,显示不正确--&gt;\n    &lt;ListView\n        android:id=&quot;@android:id/list&quot;\n        android:cacheColorHint=&quot;#00000000&quot;\n        android:layout_width=&quot;fill_parent&quot;\n        android:layout_height=&quot;fill_parent&quot; /&gt;\n\n&lt;/com.miloisbadboy.view.PullToRefreshView&gt;\n</pre>\n这里和上边的一样都调用的私有的一个下拉刷新的头样式的view文件。这里都可以直接用。这个demo几乎不用改动xml，就是在Adapter适配器getView中\nconvertView = mInflater.inflate(R.layout.你的list样式名字, null);不同罢了。\n\n最后一个问题是下拉刷新中list数据改变的情况。这里不能在额外的thread进行数据的更改，这样会异常。另外在非主线程调用Adapter的notifyDataSetChanged方法也会抱错。这里可以参考[notifyDataSetChanged() 动态更新ListView](http://www.cnblogs.com/wangjianhui/archive/2011/06/15/2081705.html)的例子，两种方法：1利用Handler处理2利用AsyncTask异步处理。这里图鉴第二种，这里加载图片，加载大数据方面AsyncTask非常管用。 可以参考这里[Android中AsyncTask的用法实例](http://www.pin5i.com/showtopic-android-asynctask-sample.html)以及这个例子：[异步下载图片](http://pan.baidu.com/share/link?shareid=464708&uk=4195521600)。\n这是最后的效果：\n![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B7-3.jpg)\nBaseAdapter使用好可以搭配出很多用户体验很好的列表，嵌入别的linerlayout也是很不错的。","slug":"android-listview-push-update","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7m5001nuco4d54dxhj3","content":"<p>该功能基于多个成熟的博客和demo的集成，最适合开发的方式推荐。</p>\n<p>首先是利用baseAdapter开发listview，baseAdapter拓展性自由性非常高，利用activity加载适配器Adapter再加载资源进入视图view中，图片imageview textview 等都可以自由的组织布局。在一个额外的xml布局中写好单个list项目的布局就可以自由的适配载入整个list 参考<a href=\"http://www.oschina.net/code/snippet_203635_7475\" target=\"_blank\" rel=\"external\">自定义BaseAdapter</a> <a href=\"http://pan.baidu.com/share/link?shareid=464702&amp;uk=4195521600\" target=\"_blank\" rel=\"external\">demo</a>针对arrayAdapter simpleAdpter等四个适配器的比较。</p>\n<p>其次是下拉刷新的功能，虽然网上有很多例子，但是不是继承FrameLayout 就是集成activity。很少有继承listactivity并且还使用baseAdapter的例子。这里主要参考的是<a href=\"http://blog.csdn.net/berber78/article/details/7387271\" target=\"_blank\" rel=\"external\">Android中实现下拉刷新</a>以及<a href=\"http://greatwqs.iteye.com/blog/1058366\" target=\"_blank\" rel=\"external\">Android:ListView使用RelativeLayout与TableLayout比较</a> 这里的关键并不是头尾的算法和头尾的布局，关键的是如何将listview嵌入另一个布局中并保持布局的稳定和及时性。由于使用的是baseAdapter数据不是直接在activity里添加而是通过继承自baseAdapter的适配器调用getView函数获得的，因而数据的呈现极其容易出现冲突。这里展示两种方法：<br>其一是针对上边<a href=\"http://blog.csdn.net/berber78/article/details/7387271\" target=\"_blank\" rel=\"external\">Android中实现下拉刷新</a>的例子中的函数改写的。原代码是：</p>\n<p><pre class=\"brush: xml; gutter: true; first-line: 1; highlight: []; html-script: false\"><br>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br>&lt;RelativeLayout<br>  xmlns:android=&quot;<a href=\"http://schemas.android.com/apk/res/android&amp;quot\" target=\"_blank\" rel=\"external\">http://schemas.android.com/apk/res/android&amp;quot</a>;<br>  android:layout_width=&quot;fill_parent&quot;<br>  android:layout_height=&quot;fill_parent&quot;<br>  &gt;<br>  &lt;LinearLayout android:orientation=&quot;vertical&quot;<br>                android:layout_width=&quot;fill_parent&quot;<br>                android:layout_height=&quot;fill_parent&quot;<br>                android:background=&quot;#000000&quot;&gt;<br>        //将ListView改为包名.自定义的列表类名，MsgListView.java代码见后，此代码不需改通用，下拉刷新相关即此处，其他无关<br>        &lt;cn.xd.microblogging.tools.MsgListView<br>        android:id=&quot;@android:id/list&quot;<br>        android:layout_height=&quot;wrap_content&quot;<br>        android:layout_width=&quot;fill_parent&quot;<br>        android:layout_weight=&quot;1.0&quot;<br>        android:drawSelectorOnTop=&quot;false&quot;<br>        android:scrollbars=&quot;vertical&quot;<br>        android:fadingEdgeLength=&quot;0dip&quot;<br>        android:divider=&quot;@drawable/line&quot;<br>        android:dividerHeight=&quot;3.0dip&quot;<br>        android:cacheColorHint=&quot;#00000000&quot;<br>        android:paddingBottom=&quot;40dp&quot;/&gt;<br>  &lt;/LinearLayout&gt;<br>  &lt;LinearLayout<br>      android:id=&quot;@+id/msg_list_load&quot;<br>      android:layout_width=&quot;fill_parent&quot;<br>      android:layout_height=&quot;fill_parent&quot; &gt;<br>    &lt;LinearLayout android:id=&quot;@android:id/empty&quot;<br>                  android:layout_width=&quot;fill_parent&quot;<br>                  android:layout_height=&quot;fill_parent&quot; &gt;<br>      &lt;include<br>        android:id=&quot;@android:id/empty&quot;<br>        layout=&quot;@layout/empty_loading&quot;<br>        android:layout_width=&quot;fill_parent&quot;<br>        android:layout_height=&quot;fill_parent&quot; /&gt;<br>     &lt;/LinearLayout&gt;<br>  &lt;/LinearLayout&gt;<br>&lt;/RelativeLayout&gt;<br></pre><br>我的原baseAdapter的适配xml是：</p>\n<p><pre class=\"brush: xml; gutter: true; first-line: 1; highlight: []; html-script: false\"><br>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br>&lt;LinearLayout xmlns:android=&quot;<a href=\"http://schemas.android.com/apk/res/android&amp;quot\" target=\"_blank\" rel=\"external\">http://schemas.android.com/apk/res/android&amp;quot</a>;<br>    android:layout_width=&quot;fill_parent&quot;<br>    android:layout_height=&quot;fill_parent&quot;<br>    android:orientation=&quot;horizontal&quot; &gt;<br>    &lt;LinearLayout<br>        android:layout_width=&quot;wrap_content&quot;<br>        android:layout_height=&quot;wrap_content&quot;<br>        android:orientation=&quot;vertical&quot; &gt;<br>        &lt;ImageView<br>            android:id=&quot;@+id/img&quot;<br>            android:layout_width=&quot;100dp&quot;<br>            android:layout_height=&quot;wrap_content&quot;<br>            android:layout_margin=&quot;5dp&quot; /&gt;<br>        &lt;TextView<br>            android:id=&quot;@+id/msgname&quot;<br>            android:layout_width=&quot;wrap_content&quot;<br>            android:layout_height=&quot;wrap_content&quot;<br>            android:layout_gravity=&quot;center&quot;<br>            android:layout_marginBottom=&quot;4dp&quot;<br>            android:textColor=&quot;#FFFFFFFF&quot;<br>            android:textSize=&quot;12sp&quot; /&gt;<br>    &lt;/LinearLayout&gt;<br>    &lt;LinearLayout<br>        android:layout_width=&quot;wrap_content&quot;<br>        android:layout_height=&quot;wrap_content&quot;<br>        android:orientation=&quot;vertical&quot; &gt;<br>        &lt;TextView<br>            android:id=&quot;@+id/msgtext&quot;<br>            android:layout_width=&quot;wrap_content&quot;<br>            android:layout_height=&quot;100dp&quot;<br>            android:textColor=&quot;#FFFFFFFF&quot;<br>            android:textSize=&quot;22sp&quot; /&gt;<br>        &lt;LinearLayout<br>            android:layout_width=&quot;wrap_content&quot;<br>            android:layout_height=&quot;wrap_content&quot;<br>            android:orientation=&quot;horizontal&quot;<br>            android:layout_gravity=&quot;left&quot; &gt;<br>            &lt;TextView<br>                android:id=&quot;@+id/topic&quot;<br>                android:layout_width=&quot;wrap_content&quot;<br>                android:layout_height=&quot;wrap_content&quot;<br>                android:layout_gravity=&quot;left&quot;<br>                android:layout_marginRight=&quot;10dp&quot;<br>                android:textColor=&quot;#FFFFFFFF&quot;<br>                android:textSize=&quot;13sp&quot; /&gt;<br>            &lt;TextView<br>                android:id=&quot;@+id/msgtime&quot;<br>                android:layout_width=&quot;wrap_content&quot;<br>                android:layout_height=&quot;wrap_content&quot;<br>                android:layout_marginRight=&quot;10dp&quot;<br>                android:layout_gravity=&quot;left&quot;<br>                android:textColor=&quot;#FFFFFFFF&quot;<br>                android:textSize=&quot;13sp&quot; /&gt;<br>            &lt;TextView<br>                android:id=&quot;@+id/msgaddr&quot;<br>                android:layout_width=&quot;wrap_content&quot;<br>                android:layout_height=&quot;wrap_content&quot;<br>                android:layout_gravity=&quot;left&quot;<br>                 android:layout_marginRight=&quot;10dp&quot;<br>                android:textColor=&quot;#FFFFFFFF&quot;<br>                android:textSize=&quot;13sp&quot; /&gt;<br>            &lt;TextView<br>                android:id=&quot;@+id/comment&quot;<br>                android:layout_width=&quot;wrap_content&quot;<br>                android:layout_height=&quot;wrap_content&quot;<br>                android:layout_gravity=&quot;left&quot;<br>                android:textColor=&quot;#FFFFFFFF&quot;<br>                android:textSize=&quot;13sp&quot; /&gt;<br>        &lt;/LinearLayout&gt;<br>    &lt;/LinearLayout&gt;<br>&lt;/LinearLayout&gt;<br></pre><br>改写后的是：<pre class=\"brush: xml; gutter: true; first-line: 1; highlight: []; html-script: false\"><br>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br>&lt;RelativeLayout<br>  xmlns:android=&quot;<a href=\"http://schemas.android.com/apk/res/android&amp;quot\" target=\"_blank\" rel=\"external\">http://schemas.android.com/apk/res/android&amp;quot</a>;<br>  android:layout_width=&quot;fill_parent&quot;<br>  android:layout_height=&quot;fill_parent&quot;<br>  &gt;<br>  &lt;LinearLayout android:orientation=&quot;vertical&quot;<br>                android:layout_width=&quot;fill_parent&quot;<br>                android:layout_height=&quot;fill_parent&quot;<br>                android:background=&quot;#000000&quot;&gt;<br>        &lt;com.wjy.message.MsgListView<br>        android:id=&quot;@android:id/list&quot;<br>        android:layout_height=&quot;wrap_content&quot;<br>        android:layout_width=&quot;fill_parent&quot;<br>        android:layout_weight=&quot;1.0&quot;<br>        android:drawSelectorOnTop=&quot;false&quot;<br>        android:scrollbars=&quot;vertical&quot;<br>        android:fadingEdgeLength=&quot;0dip&quot;<br>        android:divider=&quot;@drawable/line&quot;<br>        android:dividerHeight=&quot;3.0dip&quot;<br>        android:cacheColorHint=&quot;#00000000&quot;<br>        android:paddingBottom=&quot;40dp&quot;/&gt;<br>  &lt;/LinearLayout&gt;<br>  &lt;LinearLayout<br>    android:layout_width=&quot;fill_parent&quot;<br>    android:layout_height=&quot;fill_parent&quot;<br>    android:orientation=&quot;horizontal&quot; &gt;<br>    &lt;LinearLayout<br>        android:layout_width=&quot;wrap_content&quot;<br>        android:layout_height=&quot;wrap_content&quot;<br>        android:orientation=&quot;vertical&quot;<br>        android:id=&quot;@+id/hehe&quot;&gt;<br>        &lt;ImageView<br>            android:id=&quot;@+id/img&quot;<br>            android:layout_width=&quot;100dp&quot;<br>            android:layout_height=&quot;wrap_content&quot;<br>            android:layout_margin=&quot;5dp&quot; /&gt;<br>        &lt;TextView<br>            android:id=&quot;@+id/msgname&quot;<br>            android:layout_width=&quot;wrap_content&quot;<br>            android:layout_height=&quot;wrap_content&quot;<br>            android:layout_gravity=&quot;center&quot;<br>            android:layout_marginBottom=&quot;4dp&quot;<br>            android:textColor=&quot;#FFFFFFFF&quot;<br>            android:textSize=&quot;12sp&quot; /&gt;<br>    &lt;/LinearLayout&gt;<br>    &lt;LinearLayout<br>        android:layout_width=&quot;wrap_content&quot;<br>        android:layout_height=&quot;wrap_content&quot;<br>        android:orientation=&quot;vertical&quot; &gt;<br>        &lt;TextView<br>            android:id=&quot;@+id/msgtext&quot;<br>            android:layout_width=&quot;wrap_content&quot;<br>            android:layout_height=&quot;100dp&quot;<br>            android:textColor=&quot;#FFFFFFFF&quot;<br>            android:textSize=&quot;22sp&quot; /&gt;</pre></p>\n<pre><code>    &amp;lt;LinearLayout\n        android:layout_width=&amp;quot;wrap_content&amp;quot;\n        android:layout_height=&amp;quot;wrap_content&amp;quot;\n        android:orientation=&amp;quot;horizontal&amp;quot;\n        android:layout_gravity=&amp;quot;left&amp;quot; &amp;gt;\n\n        &amp;lt;TextView\n            android:id=&amp;quot;@+id/topic&amp;quot;\n            android:layout_width=&amp;quot;wrap_content&amp;quot;\n            android:layout_height=&amp;quot;wrap_content&amp;quot;\n            android:layout_gravity=&amp;quot;left&amp;quot;\n            android:layout_marginRight=&amp;quot;10dp&amp;quot;\n            android:textColor=&amp;quot;#FFFFFFFF&amp;quot;\n            android:textSize=&amp;quot;13sp&amp;quot; /&amp;gt;\n        &amp;lt;TextView\n            android:id=&amp;quot;@+id/msgtime&amp;quot;\n            android:layout_width=&amp;quot;wrap_content&amp;quot;\n            android:layout_height=&amp;quot;wrap_content&amp;quot;\n            android:layout_marginRight=&amp;quot;10dp&amp;quot;\n            android:layout_gravity=&amp;quot;left&amp;quot;\n            android:textColor=&amp;quot;#FFFFFFFF&amp;quot;\n            android:textSize=&amp;quot;13sp&amp;quot; /&amp;gt;\n\n        &amp;lt;TextView\n            android:id=&amp;quot;@+id/msgaddr&amp;quot;\n            android:layout_width=&amp;quot;wrap_content&amp;quot;\n            android:layout_height=&amp;quot;wrap_content&amp;quot;\n            android:layout_gravity=&amp;quot;left&amp;quot;\n             android:layout_marginRight=&amp;quot;10dp&amp;quot;\n            android:textColor=&amp;quot;#FFFFFFFF&amp;quot;\n            android:textSize=&amp;quot;13sp&amp;quot; /&amp;gt;\n        &amp;lt;TextView\n            android:id=&amp;quot;@+id/comment&amp;quot;\n            android:layout_width=&amp;quot;wrap_content&amp;quot;\n            android:layout_height=&amp;quot;wrap_content&amp;quot;\n            android:layout_gravity=&amp;quot;left&amp;quot;\n            android:textColor=&amp;quot;#FFFFFFFF&amp;quot;\n            android:textSize=&amp;quot;13sp&amp;quot; /&amp;gt;\n    &amp;lt;/LinearLayout&amp;gt;\n&amp;lt;/LinearLayout&amp;gt;\n</code></pre><p>&lt;/LinearLayout&gt;<br>&lt;/RelativeLayout&gt;<br><br>这其中加入了一个ImageView，一些textview的横横竖竖的布局。效果如图，<img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B7-2.jpg\" alt=\"\"><br>另一种是针对这个demo的<a href=\"http://pull-to-refresh-view.googlecode.com/svn/trunk/PullToRefreshView\" target=\"_blank\" rel=\"external\">PullToRefreshView</a>这个托管在googlecode的资源非常完满的解决了很多问题，其中关于样式的xml有两个分别是：<br>grid_item.xml</p>\n<p><pre class=\"brush: xml; gutter: true; first-line: 1; highlight: []; html-script: false\"><br>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br>&lt;LinearLayout xmlns:android=&quot;<a href=\"http://schemas.android.com/apk/res/android&amp;quot\" target=\"_blank\" rel=\"external\">http://schemas.android.com/apk/res/android&amp;quot</a>;<br>    android:layout_width=&quot;wrap_content&quot;<br>    android:layout_height=&quot;wrap_content&quot;<br>    android:orientation=&quot;vertical&quot; &gt;<br>    &lt;TextView<br>        android:id=&quot;@+id/text&quot;<br>        android:drawableTop=&quot;@drawable/ic_launcher&quot;<br>        android:layout_width=&quot;wrap_content&quot;<br>        android:layout_height=&quot;wrap_content&quot;<br>        android:gravity=&quot;center_horizontal&quot;<br>        android:text=&quot;test&quot;/&gt;<br>&lt;/LinearLayout&gt;<br></pre><br>其中就是放入了一个固定的图片和固定的文字<br>可以随意替换。另一个是<br>test_listview.xml</p>\n<p><pre class=\"brush: xml; gutter: true; first-line: 1; highlight: []; html-script: false\"><br>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br>&lt;com.miloisbadboy.view.PullToRefreshView xmlns:android=&quot;<a href=\"http://schemas.android.com/apk/res/android&amp;quot\" target=\"_blank\" rel=\"external\">http://schemas.android.com/apk/res/android&amp;quot</a>;<br>    android:id=&quot;@+id/main_pull_refresh_view&quot;<br>    android:background=&quot;@android:color/white&quot;<br>    android:layout_width=&quot;fill_parent&quot;<br>    android:layout_height=&quot;fill_parent&quot;<br>    android:orientation=&quot;vertical&quot;&gt;<br>    &lt;!– 这里放置listview,gridview或者scrollview的布局 ,PullToRefreshView<br>    要设置android:orientation=&quot;vertical&quot;属性<br>    否则,显示不正确–&gt;<br>    &lt;ListView<br>        android:id=&quot;@android:id/list&quot;<br>        android:cacheColorHint=&quot;#00000000&quot;<br>        android:layout_width=&quot;fill_parent&quot;<br>        android:layout_height=&quot;fill_parent&quot; /&gt;</pre></p>\n<p>&lt;/com.miloisbadboy.view.PullToRefreshView&gt;<br><br>这里和上边的一样都调用的私有的一个下拉刷新的头样式的view文件。这里都可以直接用。这个demo几乎不用改动xml，就是在Adapter适配器getView中<br>convertView = mInflater.inflate(R.layout.你的list样式名字, null);不同罢了。</p>\n<p>最后一个问题是下拉刷新中list数据改变的情况。这里不能在额外的thread进行数据的更改，这样会异常。另外在非主线程调用Adapter的notifyDataSetChanged方法也会抱错。这里可以参考<a href=\"http://www.cnblogs.com/wangjianhui/archive/2011/06/15/2081705.html\" target=\"_blank\" rel=\"external\">notifyDataSetChanged() 动态更新ListView</a>的例子，两种方法：1利用Handler处理2利用AsyncTask异步处理。这里图鉴第二种，这里加载图片，加载大数据方面AsyncTask非常管用。 可以参考这里<a href=\"http://www.pin5i.com/showtopic-android-asynctask-sample.html\" target=\"_blank\" rel=\"external\">Android中AsyncTask的用法实例</a>以及这个例子：<a href=\"http://pan.baidu.com/share/link?shareid=464708&amp;uk=4195521600\" target=\"_blank\" rel=\"external\">异步下载图片</a>。<br>这是最后的效果：<br><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B7-3.jpg\" alt=\"\"><br>BaseAdapter使用好可以搭配出很多用户体验很好的列表，嵌入别的linerlayout也是很不错的。</p>","excerpt":"","more":"<p>该功能基于多个成熟的博客和demo的集成，最适合开发的方式推荐。</p>\n<p>首先是利用baseAdapter开发listview，baseAdapter拓展性自由性非常高，利用activity加载适配器Adapter再加载资源进入视图view中，图片imageview textview 等都可以自由的组织布局。在一个额外的xml布局中写好单个list项目的布局就可以自由的适配载入整个list 参考<a href=\"http://www.oschina.net/code/snippet_203635_7475\">自定义BaseAdapter</a> <a href=\"http://pan.baidu.com/share/link?shareid=464702&amp;uk=4195521600\">demo</a>针对arrayAdapter simpleAdpter等四个适配器的比较。</p>\n<p>其次是下拉刷新的功能，虽然网上有很多例子，但是不是继承FrameLayout 就是集成activity。很少有继承listactivity并且还使用baseAdapter的例子。这里主要参考的是<a href=\"http://blog.csdn.net/berber78/article/details/7387271\">Android中实现下拉刷新</a>以及<a href=\"http://greatwqs.iteye.com/blog/1058366\">Android:ListView使用RelativeLayout与TableLayout比较</a> 这里的关键并不是头尾的算法和头尾的布局，关键的是如何将listview嵌入另一个布局中并保持布局的稳定和及时性。由于使用的是baseAdapter数据不是直接在activity里添加而是通过继承自baseAdapter的适配器调用getView函数获得的，因而数据的呈现极其容易出现冲突。这里展示两种方法：<br>其一是针对上边<a href=\"http://blog.csdn.net/berber78/article/details/7387271\">Android中实现下拉刷新</a>的例子中的函数改写的。原代码是：</p>\n<p><pre class=\"brush: xml; gutter: true; first-line: 1; highlight: []; html-script: false\"><br>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br>&lt;RelativeLayout<br>  xmlns:android=&quot;<a href=\"http://schemas.android.com/apk/res/android&amp;quot\">http://schemas.android.com/apk/res/android&amp;quot</a>;<br>  android:layout_width=&quot;fill_parent&quot;<br>  android:layout_height=&quot;fill_parent&quot;<br>  &gt;<br>  &lt;LinearLayout android:orientation=&quot;vertical&quot;<br>                android:layout_width=&quot;fill_parent&quot;<br>                android:layout_height=&quot;fill_parent&quot;<br>                android:background=&quot;#000000&quot;&gt;<br>        //将ListView改为包名.自定义的列表类名，MsgListView.java代码见后，此代码不需改通用，下拉刷新相关即此处，其他无关<br>        &lt;cn.xd.microblogging.tools.MsgListView<br>        android:id=&quot;@android:id/list&quot;<br>        android:layout_height=&quot;wrap_content&quot;<br>        android:layout_width=&quot;fill_parent&quot;<br>        android:layout_weight=&quot;1.0&quot;<br>        android:drawSelectorOnTop=&quot;false&quot;<br>        android:scrollbars=&quot;vertical&quot;<br>        android:fadingEdgeLength=&quot;0dip&quot;<br>        android:divider=&quot;@drawable/line&quot;<br>        android:dividerHeight=&quot;3.0dip&quot;<br>        android:cacheColorHint=&quot;#00000000&quot;<br>        android:paddingBottom=&quot;40dp&quot;/&gt;<br>  &lt;/LinearLayout&gt;<br>  &lt;LinearLayout<br>      android:id=&quot;@+id/msg_list_load&quot;<br>      android:layout_width=&quot;fill_parent&quot;<br>      android:layout_height=&quot;fill_parent&quot; &gt;<br>    &lt;LinearLayout android:id=&quot;@android:id/empty&quot;<br>                  android:layout_width=&quot;fill_parent&quot;<br>                  android:layout_height=&quot;fill_parent&quot; &gt;<br>      &lt;include<br>        android:id=&quot;@android:id/empty&quot;<br>        layout=&quot;@layout/empty_loading&quot;<br>        android:layout_width=&quot;fill_parent&quot;<br>        android:layout_height=&quot;fill_parent&quot; /&gt;<br>     &lt;/LinearLayout&gt;<br>  &lt;/LinearLayout&gt;<br>&lt;/RelativeLayout&gt;<br></pre><br>我的原baseAdapter的适配xml是：</p>\n<p><pre class=\"brush: xml; gutter: true; first-line: 1; highlight: []; html-script: false\"><br>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br>&lt;LinearLayout xmlns:android=&quot;<a href=\"http://schemas.android.com/apk/res/android&amp;quot\">http://schemas.android.com/apk/res/android&amp;quot</a>;<br>    android:layout_width=&quot;fill_parent&quot;<br>    android:layout_height=&quot;fill_parent&quot;<br>    android:orientation=&quot;horizontal&quot; &gt;<br>    &lt;LinearLayout<br>        android:layout_width=&quot;wrap_content&quot;<br>        android:layout_height=&quot;wrap_content&quot;<br>        android:orientation=&quot;vertical&quot; &gt;<br>        &lt;ImageView<br>            android:id=&quot;@+id/img&quot;<br>            android:layout_width=&quot;100dp&quot;<br>            android:layout_height=&quot;wrap_content&quot;<br>            android:layout_margin=&quot;5dp&quot; /&gt;<br>        &lt;TextView<br>            android:id=&quot;@+id/msgname&quot;<br>            android:layout_width=&quot;wrap_content&quot;<br>            android:layout_height=&quot;wrap_content&quot;<br>            android:layout_gravity=&quot;center&quot;<br>            android:layout_marginBottom=&quot;4dp&quot;<br>            android:textColor=&quot;#FFFFFFFF&quot;<br>            android:textSize=&quot;12sp&quot; /&gt;<br>    &lt;/LinearLayout&gt;<br>    &lt;LinearLayout<br>        android:layout_width=&quot;wrap_content&quot;<br>        android:layout_height=&quot;wrap_content&quot;<br>        android:orientation=&quot;vertical&quot; &gt;<br>        &lt;TextView<br>            android:id=&quot;@+id/msgtext&quot;<br>            android:layout_width=&quot;wrap_content&quot;<br>            android:layout_height=&quot;100dp&quot;<br>            android:textColor=&quot;#FFFFFFFF&quot;<br>            android:textSize=&quot;22sp&quot; /&gt;<br>        &lt;LinearLayout<br>            android:layout_width=&quot;wrap_content&quot;<br>            android:layout_height=&quot;wrap_content&quot;<br>            android:orientation=&quot;horizontal&quot;<br>            android:layout_gravity=&quot;left&quot; &gt;<br>            &lt;TextView<br>                android:id=&quot;@+id/topic&quot;<br>                android:layout_width=&quot;wrap_content&quot;<br>                android:layout_height=&quot;wrap_content&quot;<br>                android:layout_gravity=&quot;left&quot;<br>                android:layout_marginRight=&quot;10dp&quot;<br>                android:textColor=&quot;#FFFFFFFF&quot;<br>                android:textSize=&quot;13sp&quot; /&gt;<br>            &lt;TextView<br>                android:id=&quot;@+id/msgtime&quot;<br>                android:layout_width=&quot;wrap_content&quot;<br>                android:layout_height=&quot;wrap_content&quot;<br>                android:layout_marginRight=&quot;10dp&quot;<br>                android:layout_gravity=&quot;left&quot;<br>                android:textColor=&quot;#FFFFFFFF&quot;<br>                android:textSize=&quot;13sp&quot; /&gt;<br>            &lt;TextView<br>                android:id=&quot;@+id/msgaddr&quot;<br>                android:layout_width=&quot;wrap_content&quot;<br>                android:layout_height=&quot;wrap_content&quot;<br>                android:layout_gravity=&quot;left&quot;<br>                 android:layout_marginRight=&quot;10dp&quot;<br>                android:textColor=&quot;#FFFFFFFF&quot;<br>                android:textSize=&quot;13sp&quot; /&gt;<br>            &lt;TextView<br>                android:id=&quot;@+id/comment&quot;<br>                android:layout_width=&quot;wrap_content&quot;<br>                android:layout_height=&quot;wrap_content&quot;<br>                android:layout_gravity=&quot;left&quot;<br>                android:textColor=&quot;#FFFFFFFF&quot;<br>                android:textSize=&quot;13sp&quot; /&gt;<br>        &lt;/LinearLayout&gt;<br>    &lt;/LinearLayout&gt;<br>&lt;/LinearLayout&gt;<br></pre><br>改写后的是：<pre class=\"brush: xml; gutter: true; first-line: 1; highlight: []; html-script: false\"><br>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br>&lt;RelativeLayout<br>  xmlns:android=&quot;<a href=\"http://schemas.android.com/apk/res/android&amp;quot\">http://schemas.android.com/apk/res/android&amp;quot</a>;<br>  android:layout_width=&quot;fill_parent&quot;<br>  android:layout_height=&quot;fill_parent&quot;<br>  &gt;<br>  &lt;LinearLayout android:orientation=&quot;vertical&quot;<br>                android:layout_width=&quot;fill_parent&quot;<br>                android:layout_height=&quot;fill_parent&quot;<br>                android:background=&quot;#000000&quot;&gt;<br>        &lt;com.wjy.message.MsgListView<br>        android:id=&quot;@android:id/list&quot;<br>        android:layout_height=&quot;wrap_content&quot;<br>        android:layout_width=&quot;fill_parent&quot;<br>        android:layout_weight=&quot;1.0&quot;<br>        android:drawSelectorOnTop=&quot;false&quot;<br>        android:scrollbars=&quot;vertical&quot;<br>        android:fadingEdgeLength=&quot;0dip&quot;<br>        android:divider=&quot;@drawable/line&quot;<br>        android:dividerHeight=&quot;3.0dip&quot;<br>        android:cacheColorHint=&quot;#00000000&quot;<br>        android:paddingBottom=&quot;40dp&quot;/&gt;<br>  &lt;/LinearLayout&gt;<br>  &lt;LinearLayout<br>    android:layout_width=&quot;fill_parent&quot;<br>    android:layout_height=&quot;fill_parent&quot;<br>    android:orientation=&quot;horizontal&quot; &gt;<br>    &lt;LinearLayout<br>        android:layout_width=&quot;wrap_content&quot;<br>        android:layout_height=&quot;wrap_content&quot;<br>        android:orientation=&quot;vertical&quot;<br>        android:id=&quot;@+id/hehe&quot;&gt;<br>        &lt;ImageView<br>            android:id=&quot;@+id/img&quot;<br>            android:layout_width=&quot;100dp&quot;<br>            android:layout_height=&quot;wrap_content&quot;<br>            android:layout_margin=&quot;5dp&quot; /&gt;<br>        &lt;TextView<br>            android:id=&quot;@+id/msgname&quot;<br>            android:layout_width=&quot;wrap_content&quot;<br>            android:layout_height=&quot;wrap_content&quot;<br>            android:layout_gravity=&quot;center&quot;<br>            android:layout_marginBottom=&quot;4dp&quot;<br>            android:textColor=&quot;#FFFFFFFF&quot;<br>            android:textSize=&quot;12sp&quot; /&gt;<br>    &lt;/LinearLayout&gt;<br>    &lt;LinearLayout<br>        android:layout_width=&quot;wrap_content&quot;<br>        android:layout_height=&quot;wrap_content&quot;<br>        android:orientation=&quot;vertical&quot; &gt;<br>        &lt;TextView<br>            android:id=&quot;@+id/msgtext&quot;<br>            android:layout_width=&quot;wrap_content&quot;<br>            android:layout_height=&quot;100dp&quot;<br>            android:textColor=&quot;#FFFFFFFF&quot;<br>            android:textSize=&quot;22sp&quot; /&gt;</pre></p>\n<pre><code>    &amp;lt;LinearLayout\n        android:layout_width=&amp;quot;wrap_content&amp;quot;\n        android:layout_height=&amp;quot;wrap_content&amp;quot;\n        android:orientation=&amp;quot;horizontal&amp;quot;\n        android:layout_gravity=&amp;quot;left&amp;quot; &amp;gt;\n\n        &amp;lt;TextView\n            android:id=&amp;quot;@+id/topic&amp;quot;\n            android:layout_width=&amp;quot;wrap_content&amp;quot;\n            android:layout_height=&amp;quot;wrap_content&amp;quot;\n            android:layout_gravity=&amp;quot;left&amp;quot;\n            android:layout_marginRight=&amp;quot;10dp&amp;quot;\n            android:textColor=&amp;quot;#FFFFFFFF&amp;quot;\n            android:textSize=&amp;quot;13sp&amp;quot; /&amp;gt;\n        &amp;lt;TextView\n            android:id=&amp;quot;@+id/msgtime&amp;quot;\n            android:layout_width=&amp;quot;wrap_content&amp;quot;\n            android:layout_height=&amp;quot;wrap_content&amp;quot;\n            android:layout_marginRight=&amp;quot;10dp&amp;quot;\n            android:layout_gravity=&amp;quot;left&amp;quot;\n            android:textColor=&amp;quot;#FFFFFFFF&amp;quot;\n            android:textSize=&amp;quot;13sp&amp;quot; /&amp;gt;\n\n        &amp;lt;TextView\n            android:id=&amp;quot;@+id/msgaddr&amp;quot;\n            android:layout_width=&amp;quot;wrap_content&amp;quot;\n            android:layout_height=&amp;quot;wrap_content&amp;quot;\n            android:layout_gravity=&amp;quot;left&amp;quot;\n             android:layout_marginRight=&amp;quot;10dp&amp;quot;\n            android:textColor=&amp;quot;#FFFFFFFF&amp;quot;\n            android:textSize=&amp;quot;13sp&amp;quot; /&amp;gt;\n        &amp;lt;TextView\n            android:id=&amp;quot;@+id/comment&amp;quot;\n            android:layout_width=&amp;quot;wrap_content&amp;quot;\n            android:layout_height=&amp;quot;wrap_content&amp;quot;\n            android:layout_gravity=&amp;quot;left&amp;quot;\n            android:textColor=&amp;quot;#FFFFFFFF&amp;quot;\n            android:textSize=&amp;quot;13sp&amp;quot; /&amp;gt;\n    &amp;lt;/LinearLayout&amp;gt;\n&amp;lt;/LinearLayout&amp;gt;\n</code></pre><p>&lt;/LinearLayout&gt;<br>&lt;/RelativeLayout&gt;<br><br>这其中加入了一个ImageView，一些textview的横横竖竖的布局。效果如图，<img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B7-2.jpg\" alt=\"\"><br>另一种是针对这个demo的<a href=\"http://pull-to-refresh-view.googlecode.com/svn/trunk/PullToRefreshView\">PullToRefreshView</a>这个托管在googlecode的资源非常完满的解决了很多问题，其中关于样式的xml有两个分别是：<br>grid_item.xml</p>\n<p><pre class=\"brush: xml; gutter: true; first-line: 1; highlight: []; html-script: false\"><br>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br>&lt;LinearLayout xmlns:android=&quot;<a href=\"http://schemas.android.com/apk/res/android&amp;quot\">http://schemas.android.com/apk/res/android&amp;quot</a>;<br>    android:layout_width=&quot;wrap_content&quot;<br>    android:layout_height=&quot;wrap_content&quot;<br>    android:orientation=&quot;vertical&quot; &gt;<br>    &lt;TextView<br>        android:id=&quot;@+id/text&quot;<br>        android:drawableTop=&quot;@drawable/ic_launcher&quot;<br>        android:layout_width=&quot;wrap_content&quot;<br>        android:layout_height=&quot;wrap_content&quot;<br>        android:gravity=&quot;center_horizontal&quot;<br>        android:text=&quot;test&quot;/&gt;<br>&lt;/LinearLayout&gt;<br></pre><br>其中就是放入了一个固定的图片和固定的文字<br>可以随意替换。另一个是<br>test_listview.xml</p>\n<p><pre class=\"brush: xml; gutter: true; first-line: 1; highlight: []; html-script: false\"><br>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;<br>&lt;com.miloisbadboy.view.PullToRefreshView xmlns:android=&quot;<a href=\"http://schemas.android.com/apk/res/android&amp;quot\">http://schemas.android.com/apk/res/android&amp;quot</a>;<br>    android:id=&quot;@+id/main_pull_refresh_view&quot;<br>    android:background=&quot;@android:color/white&quot;<br>    android:layout_width=&quot;fill_parent&quot;<br>    android:layout_height=&quot;fill_parent&quot;<br>    android:orientation=&quot;vertical&quot;&gt;<br>    &lt;!– 这里放置listview,gridview或者scrollview的布局 ,PullToRefreshView<br>    要设置android:orientation=&quot;vertical&quot;属性<br>    否则,显示不正确–&gt;<br>    &lt;ListView<br>        android:id=&quot;@android:id/list&quot;<br>        android:cacheColorHint=&quot;#00000000&quot;<br>        android:layout_width=&quot;fill_parent&quot;<br>        android:layout_height=&quot;fill_parent&quot; /&gt;</pre></p>\n<p>&lt;/com.miloisbadboy.view.PullToRefreshView&gt;<br><br>这里和上边的一样都调用的私有的一个下拉刷新的头样式的view文件。这里都可以直接用。这个demo几乎不用改动xml，就是在Adapter适配器getView中<br>convertView = mInflater.inflate(R.layout.你的list样式名字, null);不同罢了。</p>\n<p>最后一个问题是下拉刷新中list数据改变的情况。这里不能在额外的thread进行数据的更改，这样会异常。另外在非主线程调用Adapter的notifyDataSetChanged方法也会抱错。这里可以参考<a href=\"http://www.cnblogs.com/wangjianhui/archive/2011/06/15/2081705.html\">notifyDataSetChanged() 动态更新ListView</a>的例子，两种方法：1利用Handler处理2利用AsyncTask异步处理。这里图鉴第二种，这里加载图片，加载大数据方面AsyncTask非常管用。 可以参考这里<a href=\"http://www.pin5i.com/showtopic-android-asynctask-sample.html\">Android中AsyncTask的用法实例</a>以及这个例子：<a href=\"http://pan.baidu.com/share/link?shareid=464708&amp;uk=4195521600\">异步下载图片</a>。<br>这是最后的效果：<br><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B7-3.jpg\" alt=\"\"><br>BaseAdapter使用好可以搭配出很多用户体验很好的列表，嵌入别的linerlayout也是很不错的。</p>"},{"title":"avd调试加速解决方案","id":"197","date":"2013-05-18T04:09:16.000Z","_content":"\n[ADT中使用Android SDK Manager安装X86的System Image](http://www.crifan.com/adt_use_android_sdk_manager_install_x86_system_image/)","source":"_posts/avd调试加速解决方案.md","raw":"---\ntitle: avd调试加速解决方案\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - Android\nid: 197\ndate: 2013-05-18 12:09:16\n---\n\n[ADT中使用Android SDK Manager安装X86的System Image](http://www.crifan.com/adt_use_android_sdk_manager_install_x86_system_image/)","slug":"avd调试加速解决方案","published":1,"updated":"2016-04-13T09:02:40.999Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7m9001ruco4obz1ossx","content":"<p><a href=\"http://www.crifan.com/adt_use_android_sdk_manager_install_x86_system_image/\" target=\"_blank\" rel=\"external\">ADT中使用Android SDK Manager安装X86的System Image</a></p>","excerpt":"","more":"<p><a href=\"http://www.crifan.com/adt_use_android_sdk_manager_install_x86_system_image/\">ADT中使用Android SDK Manager安装X86的System Image</a></p>"},{"title":"关于bae的java环境下的几点提示","id":"98","date":"2013-05-08T04:09:32.000Z","_content":"\n1.要加入session的话需要在duapp.xml中加入\n2.不能部署在本机tomcat的问题 以myeclipse为例\n在项目根目录的 .mymetadata中id=\"XXX\"后面 加入 context-root=\"/项目名字\"（不带后缀，随便起名字 最好和 name=\"XX\"中一样）![bae的本机部署](http://i1061.photobucket.com/albums/t476/ov_beeshoot/bae90E87F72.jpg)\n3.log4j要参考文档进行配置。否则直接使用会有异常抛出。\n4.连接云百度数据库 必须要在百度的云环境（即svn或者git在本地编辑的工程。BaeEnv是云环境的变量 不用导入包即可使用）\n注意的是 连接云数库只能在云环境使用 使用tomcat等在本地的无法连接云数据库。\n在java环境中为例：\n在云环境基本信息中获取ApIkey 和secretKey![bae基本信息](http://i1061.photobucket.com/albums/t476/ov_beeshoot/bae768457FA672C4FE1606F.jpg)\n在版本管理中新建一个版本 并在本地用svn同步（不知道什么是svn...算了）\n在云数据库中新建一个数据库 可以获取免费的1G配额\n数据库可以利用phpAdmin管理 也可以在本地建好导出sql脚本（最好在本地建好 否则phpAdmin比较难操作 在本地可以利用MysqlFont我比较喜欢这个）如图建立了一个User表 里面有username和password两个字段\n![bae数据库](http://i1061.photobucket.com/albums/t476/ov_beeshoot/bae6570636E5E93.jpg)\n在同步的javaweb中建以下几个东西\n一个DBManager.java以连接数据库\n\n'''java\nimport java.sql.DriverManager;\nimport java.sql.SQLException;\nimport com.mysql.jdbc.Connection;\npublic class  DBManager {\n    private static Connection con=null;\n    /**\n     * \n     * 构造方法私有 外部方法不能创建对象\n     * @author Wjy\n     * 懒汉单态模式\n     */\n    private DBManager()\n    {}\n    public synchronized static Connection getCon() \n        throws ClassNotFoundException, SQLException\n    {\n//      String host = BaeEnv.getBaeHeader(BaeEnv.BAE_ENV_ADDR_SQL_IP);\n//      String port = BaeEnv.getBaeHeader(BaeEnv.BAE_ENV_ADDR_SQL_PORT);\n//      String username = BaeEnv.getBaeHeader(BaeEnv.BAE_ENV_AK);\n//      String password = BaeEnv.getBaeHeader(BaeEnv.BAE_ENV_SK);\n          String DRIVERNAME = &quot;com.mysql.jdbc.Driver&quot;;\n          String URL = &quot;jdbc:mysql://sqld.duapp.com:4050/rMDtIBgOtaeTHVuKjaep&quot;;\n          String USER = &quot;uK2b4AyjaNTGCcxUbR9Drmo8&quot;;\n          String PWD = &quot;LGN4LjqH0bTFMGhtTMoQMCeDFQ6tzeRW&quot;;\n        //String driverName = &quot;com.mysql.jdbc.Driver&quot;;\n        //String dbUrl = &quot;jdbc:mysql://&quot;;\n        //String serverName = host + &quot;:&quot; + port + &quot;/&quot;;   \n            //从平台查询应用要使用的数据库名\n        String databaseName = &quot;rMDtIBgOtaeTHVuKjaep&quot;;\n        //String connName = dbUrl + serverName + databaseName; \n        Connection connection = null;   \n        Class.forName(DRIVERNAME);\n        connection = (Connection) DriverManager.getConnection(URL, USER,PWD); // 链接数据库  \n        if(connection!=null){return connection;}\n        else{return null;}//具体的数据库操作逻辑\n\n    } \n}\n'''\n\n一个实体类User.java\n\n'''java\npublic class User {\n    private String userName;\n    private String psw;\n    public String getUserName() {\n        return userName;\n    }\n    public void setUserName(String userName) {\n        this.userName = userName;\n    }\n    public String getPsw() {\n        return psw;\n    }\n    public void setPsw(String psw) {\n        this.psw = psw;\n    }\n    public User(String userName, String psw) {\n        super();\n        this.userName = userName;\n        this.psw = psw;\n    }\n    @Override\n    public String toString() {\n        return &quot;User [userName=&quot; + userName + &quot;, psw=&quot; + psw + &quot;]&quot;;\n    }\n\n}\n'''\n\n一个把sql查询的结果集转换成实体类的接口和实现类\nEntityMapping .java\n\n'''java\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\npublic interface EntityMapping {\n    public Object mapping(ResultSet rs)throws SQLException ;\n}\n'''\n\nUserMapping.java\n\n'''java\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\npublic class UserMapping  implements EntityMapping{\n\n    @Override\n    public User mapping(ResultSet rs) throws SQLException {\n        int i = 1;\n        User user = new User(rs.getString(i++),rs.getString(i++));\n        return user;\n    }\n\n}\n'''\n\n一个万能！！！的！！！操作数据库的类。。在任何地方也可以使用\nJdbcTemplate.java\n\n'''java \nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Vector;\n\n//代替原来DBmamager功能\npublic class JdbcTemplate {\n    public  boolean update(String sql,Object... values) throws ClassNotFoundException, SQLException\n    {\n        PreparedStatement psta=null;\n        int row=0;\n        try {\n            Connection con=DBManager.getCon();\n            psta= con.prepareStatement(sql);    \n                for (int i = 0; i &lt; values.length; i++) {\n                psta.setObject(i+1, values[i]);\n            }\n            row=psta.executeUpdate();\n        } catch (Exception e) {\n            // TODO: handle exception\n        }finally\n        {\n            if (psta!=null) {\n                psta.close();\n                psta=null;\n            }\n        }       \n\n        return (row==1);\n    }\n    public List findAll(String sql,EntityMapping EnMp,Object...Objects) throws SQLException\n    {   PreparedStatement psta=null;\n        ResultSet rs=null;\n        List list=new Vector();\n        try {\n            Connection con=DBManager.getCon();\n            psta= con.prepareStatement(sql);    \n        for (int i = 0; i &lt; Objects.length; i++) {\n             psta.setObject(i+1, Objects[i]);\n        }\n             rs=psta.executeQuery();\n            if(rs==null)\n            {System.out.println(&quot;为空！&quot;);}\n        while(rs.next())\n        {\n             list.add(EnMp.mapping(rs));\n        }\n\n    } catch (Exception e) {\n    }finally\n    {\n        if (rs!=null) {\n            rs.close();\n            rs=null;\n        }\n        if (psta!=null) {\n            psta.close();\n            psta=null;\n        }\n    }       \n        return list;\n    }\n}\n'''\n\n连接数据库的servlet\nGetUser.java\n\n'''java\nimport java.io.IOException;\nimport java.sql.SQLException;\nimport java.util.List;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\npublic class GetUser extends HttpServlet {\n    public GetUser() {\n        super();\n    }\n    public void doGet(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        this.doPost(request, response);\n    }\n    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n         JdbcTemplate template=new JdbcTemplate();\n         List  list=null;        \n         try {\n             list=template.findAll(&quot;select * from User&quot;, new UserMapping());\n        } catch (SQLException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();}\n         request.setAttribute(&quot;User&quot;, list);\n         request.getRequestDispatcher(&quot;/User.jsp&quot;).forward(request, response);}\n}\n'''\n\n最后是显示信息的页面User.jsp\n\n'''html\n&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*,java.net.URL&quot; contentType=&quot;text/html; charset=UTF-8&quot;%&gt;\n&lt;%@page import=&quot;你的类名！&quot;%&gt;\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;User&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;%Object info=request.getAttribute(&quot;User&quot;);\n    if (info!=null)\n    {  List&lt;User&gt; uu=(List&lt;User&gt;)info;\n        for (User user : uu) {\n            %&gt;&lt;%=user%&gt;&lt;br&gt;&lt;% \n        }}\n   %&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n'''\n\n记住的是要把web.xml中的welcome-filelist设成servlet的名字或者直接输入地址\nhttp://1.你的app名字.duapp.com/GetUser","source":"_posts/bae-java.md","raw":"---\ntitle: 关于bae的java环境下的几点提示\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - bae\n  - java\nid: 98\ndate: 2013-05-08 12:09:32\n---\n\n1.要加入session的话需要在duapp.xml中加入\n2.不能部署在本机tomcat的问题 以myeclipse为例\n在项目根目录的 .mymetadata中id=\"XXX\"后面 加入 context-root=\"/项目名字\"（不带后缀，随便起名字 最好和 name=\"XX\"中一样）![bae的本机部署](http://i1061.photobucket.com/albums/t476/ov_beeshoot/bae90E87F72.jpg)\n3.log4j要参考文档进行配置。否则直接使用会有异常抛出。\n4.连接云百度数据库 必须要在百度的云环境（即svn或者git在本地编辑的工程。BaeEnv是云环境的变量 不用导入包即可使用）\n注意的是 连接云数库只能在云环境使用 使用tomcat等在本地的无法连接云数据库。\n在java环境中为例：\n在云环境基本信息中获取ApIkey 和secretKey![bae基本信息](http://i1061.photobucket.com/albums/t476/ov_beeshoot/bae768457FA672C4FE1606F.jpg)\n在版本管理中新建一个版本 并在本地用svn同步（不知道什么是svn...算了）\n在云数据库中新建一个数据库 可以获取免费的1G配额\n数据库可以利用phpAdmin管理 也可以在本地建好导出sql脚本（最好在本地建好 否则phpAdmin比较难操作 在本地可以利用MysqlFont我比较喜欢这个）如图建立了一个User表 里面有username和password两个字段\n![bae数据库](http://i1061.photobucket.com/albums/t476/ov_beeshoot/bae6570636E5E93.jpg)\n在同步的javaweb中建以下几个东西\n一个DBManager.java以连接数据库\n\n'''java\nimport java.sql.DriverManager;\nimport java.sql.SQLException;\nimport com.mysql.jdbc.Connection;\npublic class  DBManager {\n    private static Connection con=null;\n    /**\n     * \n     * 构造方法私有 外部方法不能创建对象\n     * @author Wjy\n     * 懒汉单态模式\n     */\n    private DBManager()\n    {}\n    public synchronized static Connection getCon() \n        throws ClassNotFoundException, SQLException\n    {\n//      String host = BaeEnv.getBaeHeader(BaeEnv.BAE_ENV_ADDR_SQL_IP);\n//      String port = BaeEnv.getBaeHeader(BaeEnv.BAE_ENV_ADDR_SQL_PORT);\n//      String username = BaeEnv.getBaeHeader(BaeEnv.BAE_ENV_AK);\n//      String password = BaeEnv.getBaeHeader(BaeEnv.BAE_ENV_SK);\n          String DRIVERNAME = &quot;com.mysql.jdbc.Driver&quot;;\n          String URL = &quot;jdbc:mysql://sqld.duapp.com:4050/rMDtIBgOtaeTHVuKjaep&quot;;\n          String USER = &quot;uK2b4AyjaNTGCcxUbR9Drmo8&quot;;\n          String PWD = &quot;LGN4LjqH0bTFMGhtTMoQMCeDFQ6tzeRW&quot;;\n        //String driverName = &quot;com.mysql.jdbc.Driver&quot;;\n        //String dbUrl = &quot;jdbc:mysql://&quot;;\n        //String serverName = host + &quot;:&quot; + port + &quot;/&quot;;   \n            //从平台查询应用要使用的数据库名\n        String databaseName = &quot;rMDtIBgOtaeTHVuKjaep&quot;;\n        //String connName = dbUrl + serverName + databaseName; \n        Connection connection = null;   \n        Class.forName(DRIVERNAME);\n        connection = (Connection) DriverManager.getConnection(URL, USER,PWD); // 链接数据库  \n        if(connection!=null){return connection;}\n        else{return null;}//具体的数据库操作逻辑\n\n    } \n}\n'''\n\n一个实体类User.java\n\n'''java\npublic class User {\n    private String userName;\n    private String psw;\n    public String getUserName() {\n        return userName;\n    }\n    public void setUserName(String userName) {\n        this.userName = userName;\n    }\n    public String getPsw() {\n        return psw;\n    }\n    public void setPsw(String psw) {\n        this.psw = psw;\n    }\n    public User(String userName, String psw) {\n        super();\n        this.userName = userName;\n        this.psw = psw;\n    }\n    @Override\n    public String toString() {\n        return &quot;User [userName=&quot; + userName + &quot;, psw=&quot; + psw + &quot;]&quot;;\n    }\n\n}\n'''\n\n一个把sql查询的结果集转换成实体类的接口和实现类\nEntityMapping .java\n\n'''java\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\npublic interface EntityMapping {\n    public Object mapping(ResultSet rs)throws SQLException ;\n}\n'''\n\nUserMapping.java\n\n'''java\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\npublic class UserMapping  implements EntityMapping{\n\n    @Override\n    public User mapping(ResultSet rs) throws SQLException {\n        int i = 1;\n        User user = new User(rs.getString(i++),rs.getString(i++));\n        return user;\n    }\n\n}\n'''\n\n一个万能！！！的！！！操作数据库的类。。在任何地方也可以使用\nJdbcTemplate.java\n\n'''java \nimport java.sql.Connection;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\nimport java.util.ArrayList;\nimport java.util.List;\nimport java.util.Vector;\n\n//代替原来DBmamager功能\npublic class JdbcTemplate {\n    public  boolean update(String sql,Object... values) throws ClassNotFoundException, SQLException\n    {\n        PreparedStatement psta=null;\n        int row=0;\n        try {\n            Connection con=DBManager.getCon();\n            psta= con.prepareStatement(sql);    \n                for (int i = 0; i &lt; values.length; i++) {\n                psta.setObject(i+1, values[i]);\n            }\n            row=psta.executeUpdate();\n        } catch (Exception e) {\n            // TODO: handle exception\n        }finally\n        {\n            if (psta!=null) {\n                psta.close();\n                psta=null;\n            }\n        }       \n\n        return (row==1);\n    }\n    public List findAll(String sql,EntityMapping EnMp,Object...Objects) throws SQLException\n    {   PreparedStatement psta=null;\n        ResultSet rs=null;\n        List list=new Vector();\n        try {\n            Connection con=DBManager.getCon();\n            psta= con.prepareStatement(sql);    \n        for (int i = 0; i &lt; Objects.length; i++) {\n             psta.setObject(i+1, Objects[i]);\n        }\n             rs=psta.executeQuery();\n            if(rs==null)\n            {System.out.println(&quot;为空！&quot;);}\n        while(rs.next())\n        {\n             list.add(EnMp.mapping(rs));\n        }\n\n    } catch (Exception e) {\n    }finally\n    {\n        if (rs!=null) {\n            rs.close();\n            rs=null;\n        }\n        if (psta!=null) {\n            psta.close();\n            psta=null;\n        }\n    }       \n        return list;\n    }\n}\n'''\n\n连接数据库的servlet\nGetUser.java\n\n'''java\nimport java.io.IOException;\nimport java.sql.SQLException;\nimport java.util.List;\n\nimport javax.servlet.ServletException;\nimport javax.servlet.http.HttpServlet;\nimport javax.servlet.http.HttpServletRequest;\nimport javax.servlet.http.HttpServletResponse;\n\npublic class GetUser extends HttpServlet {\n    public GetUser() {\n        super();\n    }\n    public void doGet(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        this.doPost(request, response);\n    }\n    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n         JdbcTemplate template=new JdbcTemplate();\n         List  list=null;        \n         try {\n             list=template.findAll(&quot;select * from User&quot;, new UserMapping());\n        } catch (SQLException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();}\n         request.setAttribute(&quot;User&quot;, list);\n         request.getRequestDispatcher(&quot;/User.jsp&quot;).forward(request, response);}\n}\n'''\n\n最后是显示信息的页面User.jsp\n\n'''html\n&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*,java.net.URL&quot; contentType=&quot;text/html; charset=UTF-8&quot;%&gt;\n&lt;%@page import=&quot;你的类名！&quot;%&gt;\n&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;\n&lt;html&gt;\n  &lt;head&gt;\n    &lt;title&gt;User&lt;/title&gt;\n  &lt;/head&gt;\n  &lt;body&gt;\n    &lt;%Object info=request.getAttribute(&quot;User&quot;);\n    if (info!=null)\n    {  List&lt;User&gt; uu=(List&lt;User&gt;)info;\n        for (User user : uu) {\n            %&gt;&lt;%=user%&gt;&lt;br&gt;&lt;% \n        }}\n   %&gt;\n  &lt;/body&gt;\n&lt;/html&gt;\n'''\n\n记住的是要把web.xml中的welcome-filelist设成servlet的名字或者直接输入地址\nhttp://1.你的app名字.duapp.com/GetUser","slug":"bae-java","published":1,"updated":"2016-04-11T14:20:20.862Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7me001uuco4cgo8wqxm","content":"<p>1.要加入session的话需要在duapp.xml中加入<br>2.不能部署在本机tomcat的问题 以myeclipse为例<br>在项目根目录的 .mymetadata中id=”XXX”后面 加入 context-root=”/项目名字”（不带后缀，随便起名字 最好和 name=”XX”中一样）<img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/bae90E87F72.jpg\" alt=\"bae的本机部署\"><br>3.log4j要参考文档进行配置。否则直接使用会有异常抛出。<br>4.连接云百度数据库 必须要在百度的云环境（即svn或者git在本地编辑的工程。BaeEnv是云环境的变量 不用导入包即可使用）<br>注意的是 连接云数库只能在云环境使用 使用tomcat等在本地的无法连接云数据库。<br>在java环境中为例：<br>在云环境基本信息中获取ApIkey 和secretKey<img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/bae768457FA672C4FE1606F.jpg\" alt=\"bae基本信息\"><br>在版本管理中新建一个版本 并在本地用svn同步（不知道什么是svn…算了）<br>在云数据库中新建一个数据库 可以获取免费的1G配额<br>数据库可以利用phpAdmin管理 也可以在本地建好导出sql脚本（最好在本地建好 否则phpAdmin比较难操作 在本地可以利用MysqlFont我比较喜欢这个）如图建立了一个User表 里面有username和password两个字段<br><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/bae6570636E5E93.jpg\" alt=\"bae数据库\"><br>在同步的javaweb中建以下几个东西<br>一个DBManager.java以连接数据库</p>\n<p>‘’’java<br>import java.sql.DriverManager;<br>import java.sql.SQLException;<br>import com.mysql.jdbc.Connection;<br>public class  DBManager {<br>    private static Connection con=null;<br>    /**</p>\n<pre><code> * \n * 构造方法私有 外部方法不能创建对象\n * @author Wjy\n * 懒汉单态模式\n */\nprivate DBManager()\n{}\npublic synchronized static Connection getCon() \n    throws ClassNotFoundException, SQLException\n{\n</code></pre><p>//      String host = BaeEnv.getBaeHeader(BaeEnv.BAE_ENV_ADDR_SQL_IP);<br>//      String port = BaeEnv.getBaeHeader(BaeEnv.BAE_ENV_ADDR_SQL_PORT);<br>//      String username = BaeEnv.getBaeHeader(BaeEnv.BAE_ENV_AK);<br>//      String password = BaeEnv.getBaeHeader(BaeEnv.BAE_ENV_SK);<br>          String DRIVERNAME = &quot;com.mysql.jdbc.Driver&quot;;<br>          String URL = &quot;jdbc:mysql://sqld.duapp.com:4050/rMDtIBgOtaeTHVuKjaep&quot;;<br>          String USER = &quot;uK2b4AyjaNTGCcxUbR9Drmo8&quot;;<br>          String PWD = &quot;LGN4LjqH0bTFMGhtTMoQMCeDFQ6tzeRW&quot;;<br>        //String driverName = &quot;com.mysql.jdbc.Driver&quot;;<br>        //String dbUrl = &quot;jdbc:mysql://&quot;;<br>        //String serverName = host + &quot;:&quot; + port + &quot;/&quot;;<br>            //从平台查询应用要使用的数据库名<br>        String databaseName = &quot;rMDtIBgOtaeTHVuKjaep&quot;;<br>        //String connName = dbUrl + serverName + databaseName;<br>        Connection connection = null;<br>        Class.forName(DRIVERNAME);<br>        connection = (Connection) DriverManager.getConnection(URL, USER,PWD); // 链接数据库<br>        if(connection!=null){return connection;}<br>        else{return null;}//具体的数据库操作逻辑</p>\n<pre><code>} \n</code></pre><p>}<br>‘’’</p>\n<p>一个实体类User.java</p>\n<p>‘’’java<br>public class User {<br>    private String userName;<br>    private String psw;<br>    public String getUserName() {<br>        return userName;<br>    }<br>    public void setUserName(String userName) {<br>        this.userName = userName;<br>    }<br>    public String getPsw() {<br>        return psw;<br>    }<br>    public void setPsw(String psw) {<br>        this.psw = psw;<br>    }<br>    public User(String userName, String psw) {<br>        super();<br>        this.userName = userName;<br>        this.psw = psw;<br>    }<br>    @Override<br>    public String toString() {<br>        return &quot;User [userName=&quot; + userName + &quot;, psw=&quot; + psw + &quot;]&quot;;<br>    }</p>\n<p>}<br>‘’’</p>\n<p>一个把sql查询的结果集转换成实体类的接口和实现类<br>EntityMapping .java</p>\n<p>‘’’java<br>import java.sql.ResultSet;<br>import java.sql.SQLException;<br>public interface EntityMapping {<br>    public Object mapping(ResultSet rs)throws SQLException ;<br>}<br>‘’’</p>\n<p>UserMapping.java</p>\n<p>‘’’java<br>import java.sql.ResultSet;<br>import java.sql.SQLException;<br>public class UserMapping  implements EntityMapping{</p>\n<pre><code>@Override\npublic User mapping(ResultSet rs) throws SQLException {\n    int i = 1;\n    User user = new User(rs.getString(i++),rs.getString(i++));\n    return user;\n}\n</code></pre><p>}<br>‘’’</p>\n<p>一个万能！！！的！！！操作数据库的类。。在任何地方也可以使用<br>JdbcTemplate.java</p>\n<p>‘’’java<br>import java.sql.Connection;<br>import java.sql.PreparedStatement;<br>import java.sql.ResultSet;<br>import java.sql.SQLException;<br>import java.util.ArrayList;<br>import java.util.List;<br>import java.util.Vector;</p>\n<p>//代替原来DBmamager功能<br>public class JdbcTemplate {<br>    public  boolean update(String sql,Object… values) throws ClassNotFoundException, SQLException<br>    {<br>        PreparedStatement psta=null;<br>        int row=0;<br>        try {<br>            Connection con=DBManager.getCon();<br>            psta= con.prepareStatement(sql);<br>                for (int i = 0; i &lt; values.length; i++) {<br>                psta.setObject(i+1, values[i]);<br>            }<br>            row=psta.executeUpdate();<br>        } catch (Exception e) {<br>            // TODO: handle exception<br>        }finally<br>        {<br>            if (psta!=null) {<br>                psta.close();<br>                psta=null;<br>            }<br>        }       </p>\n<pre><code>    return (row==1);\n}\npublic List findAll(String sql,EntityMapping EnMp,Object...Objects) throws SQLException\n{   PreparedStatement psta=null;\n    ResultSet rs=null;\n    List list=new Vector();\n    try {\n        Connection con=DBManager.getCon();\n        psta= con.prepareStatement(sql);    \n    for (int i = 0; i &amp;lt; Objects.length; i++) {\n         psta.setObject(i+1, Objects[i]);\n    }\n         rs=psta.executeQuery();\n        if(rs==null)\n        {System.out.println(&amp;quot;为空！&amp;quot;);}\n    while(rs.next())\n    {\n         list.add(EnMp.mapping(rs));\n    }\n\n} catch (Exception e) {\n}finally\n{\n    if (rs!=null) {\n        rs.close();\n        rs=null;\n    }\n    if (psta!=null) {\n        psta.close();\n        psta=null;\n    }\n}       \n    return list;\n}\n</code></pre><p>}<br>‘’’</p>\n<p>连接数据库的servlet<br>GetUser.java</p>\n<p>‘’’java<br>import java.io.IOException;<br>import java.sql.SQLException;<br>import java.util.List;</p>\n<p>import javax.servlet.ServletException;<br>import javax.servlet.http.HttpServlet;<br>import javax.servlet.http.HttpServletRequest;<br>import javax.servlet.http.HttpServletResponse;</p>\n<p>public class GetUser extends HttpServlet {<br>    public GetUser() {<br>        super();<br>    }<br>    public void doGet(HttpServletRequest request, HttpServletResponse response)<br>            throws ServletException, IOException {<br>        this.doPost(request, response);<br>    }<br>    public void doPost(HttpServletRequest request, HttpServletResponse response)<br>            throws ServletException, IOException {<br>         JdbcTemplate template=new JdbcTemplate();<br>         List  list=null;<br>         try {<br>             list=template.findAll(&quot;select * from User&quot;, new UserMapping());<br>        } catch (SQLException e) {<br>            // TODO Auto-generated catch block<br>            e.printStackTrace();}<br>         request.setAttribute(&quot;User&quot;, list);<br>         request.getRequestDispatcher(&quot;/User.jsp&quot;).forward(request, response);}<br>}<br>‘’’</p>\n<p>最后是显示信息的页面User.jsp</p>\n<p>‘’’html<br>&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*,java.net.URL&quot; contentType=&quot;text/html; charset=UTF-8&quot;%&gt;<br>&lt;%@page import=&quot;你的类名！&quot;%&gt;<br>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;<br>&lt;html&gt;<br>  &lt;head&gt;<br>    &lt;title&gt;User&lt;/title&gt;<br>  &lt;/head&gt;<br>  &lt;body&gt;<br>    &lt;%Object info=request.getAttribute(&quot;User&quot;);<br>    if (info!=null)<br>    {  List&lt;User&gt; uu=(List&lt;User&gt;)info;<br>        for (User user : uu) {<br>            %&gt;&lt;%=user%&gt;&lt;br&gt;&lt;%<br>        }}<br>   %&gt;<br>  &lt;/body&gt;<br>&lt;/html&gt;<br>‘’’</p>\n<p>记住的是要把web.xml中的welcome-filelist设成servlet的名字或者直接输入地址<br><a href=\"http://1.你的app名字.duapp.com/GetUser\" target=\"_blank\" rel=\"external\">http://1.你的app名字.duapp.com/GetUser</a></p>","excerpt":"","more":"<p>1.要加入session的话需要在duapp.xml中加入<br>2.不能部署在本机tomcat的问题 以myeclipse为例<br>在项目根目录的 .mymetadata中id=”XXX”后面 加入 context-root=”/项目名字”（不带后缀，随便起名字 最好和 name=”XX”中一样）<img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/bae90E87F72.jpg\" alt=\"bae的本机部署\"><br>3.log4j要参考文档进行配置。否则直接使用会有异常抛出。<br>4.连接云百度数据库 必须要在百度的云环境（即svn或者git在本地编辑的工程。BaeEnv是云环境的变量 不用导入包即可使用）<br>注意的是 连接云数库只能在云环境使用 使用tomcat等在本地的无法连接云数据库。<br>在java环境中为例：<br>在云环境基本信息中获取ApIkey 和secretKey<img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/bae768457FA672C4FE1606F.jpg\" alt=\"bae基本信息\"><br>在版本管理中新建一个版本 并在本地用svn同步（不知道什么是svn…算了）<br>在云数据库中新建一个数据库 可以获取免费的1G配额<br>数据库可以利用phpAdmin管理 也可以在本地建好导出sql脚本（最好在本地建好 否则phpAdmin比较难操作 在本地可以利用MysqlFont我比较喜欢这个）如图建立了一个User表 里面有username和password两个字段<br><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/bae6570636E5E93.jpg\" alt=\"bae数据库\"><br>在同步的javaweb中建以下几个东西<br>一个DBManager.java以连接数据库</p>\n<p>‘’’java<br>import java.sql.DriverManager;<br>import java.sql.SQLException;<br>import com.mysql.jdbc.Connection;<br>public class  DBManager {<br>    private static Connection con=null;<br>    /**</p>\n<pre><code> * \n * 构造方法私有 外部方法不能创建对象\n * @author Wjy\n * 懒汉单态模式\n */\nprivate DBManager()\n{}\npublic synchronized static Connection getCon() \n    throws ClassNotFoundException, SQLException\n{\n</code></pre><p>//      String host = BaeEnv.getBaeHeader(BaeEnv.BAE_ENV_ADDR_SQL_IP);<br>//      String port = BaeEnv.getBaeHeader(BaeEnv.BAE_ENV_ADDR_SQL_PORT);<br>//      String username = BaeEnv.getBaeHeader(BaeEnv.BAE_ENV_AK);<br>//      String password = BaeEnv.getBaeHeader(BaeEnv.BAE_ENV_SK);<br>          String DRIVERNAME = &quot;com.mysql.jdbc.Driver&quot;;<br>          String URL = &quot;jdbc:mysql://sqld.duapp.com:4050/rMDtIBgOtaeTHVuKjaep&quot;;<br>          String USER = &quot;uK2b4AyjaNTGCcxUbR9Drmo8&quot;;<br>          String PWD = &quot;LGN4LjqH0bTFMGhtTMoQMCeDFQ6tzeRW&quot;;<br>        //String driverName = &quot;com.mysql.jdbc.Driver&quot;;<br>        //String dbUrl = &quot;jdbc:mysql://&quot;;<br>        //String serverName = host + &quot;:&quot; + port + &quot;/&quot;;<br>            //从平台查询应用要使用的数据库名<br>        String databaseName = &quot;rMDtIBgOtaeTHVuKjaep&quot;;<br>        //String connName = dbUrl + serverName + databaseName;<br>        Connection connection = null;<br>        Class.forName(DRIVERNAME);<br>        connection = (Connection) DriverManager.getConnection(URL, USER,PWD); // 链接数据库<br>        if(connection!=null){return connection;}<br>        else{return null;}//具体的数据库操作逻辑</p>\n<pre><code>} \n</code></pre><p>}<br>‘’’</p>\n<p>一个实体类User.java</p>\n<p>‘’’java<br>public class User {<br>    private String userName;<br>    private String psw;<br>    public String getUserName() {<br>        return userName;<br>    }<br>    public void setUserName(String userName) {<br>        this.userName = userName;<br>    }<br>    public String getPsw() {<br>        return psw;<br>    }<br>    public void setPsw(String psw) {<br>        this.psw = psw;<br>    }<br>    public User(String userName, String psw) {<br>        super();<br>        this.userName = userName;<br>        this.psw = psw;<br>    }<br>    @Override<br>    public String toString() {<br>        return &quot;User [userName=&quot; + userName + &quot;, psw=&quot; + psw + &quot;]&quot;;<br>    }</p>\n<p>}<br>‘’’</p>\n<p>一个把sql查询的结果集转换成实体类的接口和实现类<br>EntityMapping .java</p>\n<p>‘’’java<br>import java.sql.ResultSet;<br>import java.sql.SQLException;<br>public interface EntityMapping {<br>    public Object mapping(ResultSet rs)throws SQLException ;<br>}<br>‘’’</p>\n<p>UserMapping.java</p>\n<p>‘’’java<br>import java.sql.ResultSet;<br>import java.sql.SQLException;<br>public class UserMapping  implements EntityMapping{</p>\n<pre><code>@Override\npublic User mapping(ResultSet rs) throws SQLException {\n    int i = 1;\n    User user = new User(rs.getString(i++),rs.getString(i++));\n    return user;\n}\n</code></pre><p>}<br>‘’’</p>\n<p>一个万能！！！的！！！操作数据库的类。。在任何地方也可以使用<br>JdbcTemplate.java</p>\n<p>‘’’java<br>import java.sql.Connection;<br>import java.sql.PreparedStatement;<br>import java.sql.ResultSet;<br>import java.sql.SQLException;<br>import java.util.ArrayList;<br>import java.util.List;<br>import java.util.Vector;</p>\n<p>//代替原来DBmamager功能<br>public class JdbcTemplate {<br>    public  boolean update(String sql,Object… values) throws ClassNotFoundException, SQLException<br>    {<br>        PreparedStatement psta=null;<br>        int row=0;<br>        try {<br>            Connection con=DBManager.getCon();<br>            psta= con.prepareStatement(sql);<br>                for (int i = 0; i &lt; values.length; i++) {<br>                psta.setObject(i+1, values[i]);<br>            }<br>            row=psta.executeUpdate();<br>        } catch (Exception e) {<br>            // TODO: handle exception<br>        }finally<br>        {<br>            if (psta!=null) {<br>                psta.close();<br>                psta=null;<br>            }<br>        }       </p>\n<pre><code>    return (row==1);\n}\npublic List findAll(String sql,EntityMapping EnMp,Object...Objects) throws SQLException\n{   PreparedStatement psta=null;\n    ResultSet rs=null;\n    List list=new Vector();\n    try {\n        Connection con=DBManager.getCon();\n        psta= con.prepareStatement(sql);    \n    for (int i = 0; i &amp;lt; Objects.length; i++) {\n         psta.setObject(i+1, Objects[i]);\n    }\n         rs=psta.executeQuery();\n        if(rs==null)\n        {System.out.println(&amp;quot;为空！&amp;quot;);}\n    while(rs.next())\n    {\n         list.add(EnMp.mapping(rs));\n    }\n\n} catch (Exception e) {\n}finally\n{\n    if (rs!=null) {\n        rs.close();\n        rs=null;\n    }\n    if (psta!=null) {\n        psta.close();\n        psta=null;\n    }\n}       \n    return list;\n}\n</code></pre><p>}<br>‘’’</p>\n<p>连接数据库的servlet<br>GetUser.java</p>\n<p>‘’’java<br>import java.io.IOException;<br>import java.sql.SQLException;<br>import java.util.List;</p>\n<p>import javax.servlet.ServletException;<br>import javax.servlet.http.HttpServlet;<br>import javax.servlet.http.HttpServletRequest;<br>import javax.servlet.http.HttpServletResponse;</p>\n<p>public class GetUser extends HttpServlet {<br>    public GetUser() {<br>        super();<br>    }<br>    public void doGet(HttpServletRequest request, HttpServletResponse response)<br>            throws ServletException, IOException {<br>        this.doPost(request, response);<br>    }<br>    public void doPost(HttpServletRequest request, HttpServletResponse response)<br>            throws ServletException, IOException {<br>         JdbcTemplate template=new JdbcTemplate();<br>         List  list=null;<br>         try {<br>             list=template.findAll(&quot;select * from User&quot;, new UserMapping());<br>        } catch (SQLException e) {<br>            // TODO Auto-generated catch block<br>            e.printStackTrace();}<br>         request.setAttribute(&quot;User&quot;, list);<br>         request.getRequestDispatcher(&quot;/User.jsp&quot;).forward(request, response);}<br>}<br>‘’’</p>\n<p>最后是显示信息的页面User.jsp</p>\n<p>‘’’html<br>&lt;%@ page language=&quot;java&quot; import=&quot;java.util.*,java.net.URL&quot; contentType=&quot;text/html; charset=UTF-8&quot;%&gt;<br>&lt;%@page import=&quot;你的类名！&quot;%&gt;<br>&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot;&gt;<br>&lt;html&gt;<br>  &lt;head&gt;<br>    &lt;title&gt;User&lt;/title&gt;<br>  &lt;/head&gt;<br>  &lt;body&gt;<br>    &lt;%Object info=request.getAttribute(&quot;User&quot;);<br>    if (info!=null)<br>    {  List&lt;User&gt; uu=(List&lt;User&gt;)info;<br>        for (User user : uu) {<br>            %&gt;&lt;%=user%&gt;&lt;br&gt;&lt;%<br>        }}<br>   %&gt;<br>  &lt;/body&gt;<br>&lt;/html&gt;<br>‘’’</p>\n<p>记住的是要把web.xml中的welcome-filelist设成servlet的名字或者直接输入地址<br><a href=\"http://1.你的app名字.duapp.com/GetUser\">http://1.你的app名字.duapp.com/GetUser</a></p>"},{"title":"Cmake+qt5.0 with Opengl编译CloudCompare","id":"558","date":"2015-04-21T13:31:35.000Z","_content":"\n最近有使用到CloudCompare，是一个开源的可视化显示三维点云的程序。\n[![](http://ww4.sinaimg.cn/large/68eb7c93gw1erdnmdd9qqj202j02sjrc.jpg)](http://ww4.sinaimg.cn/large/68eb7c93gw1erdnmdd9qqj202j02sjrc.jpg)\n\n*   [项目首页](http://www.danielgm.net/cc/ \"Cloudcompare项目首页\")\n*   [Github](https://github.com/cloudcompare/trunk \"git地址\")\n*   [wiki](http://www.cloudcompare.org/doc/wiki/index.php?title=Main_Page \"wiki\")\n\nCloudCompare功能较为丰富，可以处理3d点云数据，可以比较两幅3d点云图像（例如激光扫描获取的图像）亦或者比较一副点云图像和一副三角网。它基于独特的八叉树结构使得性能极大的提升，一般可同时处理超过一千万点云数据，最高可在2Gb的内存下处理1.2亿个点云数据。该软件有可执行文件exe,也可以在linux、mac、windows中编译后使用最新的功能。项目首页有exe、7z版本的完整版、7z简化版的CCviewer，本次编译使用Windows8.1 64bit系统、MS Visual Studio2013 64bit，使用项目的github代码在Cmake下编译。\n\n编译环境：\n\n1.  [Qt5.4](http://www.qt.io/download-open-source/#section-2)  Qt中需要下载一个Qt 5.4.1 for Windows 64-bit (VS 2013, OpenGL, 711 MB) (info)来安装Qt的环境，还需要下载一个Visual Studio Add-in 1.2.4 for Qt5 (156 MB) (info)来在VS中进行可视化编辑。\n2.  [Cmake ](http://www.cmake.org/download/)Cmake是一个根据不同系统和配置进行编译的工具，在windows、linux和mac都可以使用。windows下64位系统可以正常安装32位版本。\n3.  利用svn checkoutgithub中的最新项目。这里地址为G:\\CCViewer\\trunk\n\n参考[这里](http://www.cloudcompare.org/doc/wiki/index.php?title=Compilation \"Compilation\")开始编译：\n\n[![](http://ww2.sinaimg.cn/large/68eb7c93gw1erdnius1ayj20uo0o9qaq.jpg)](http://ww2.sinaimg.cn/large/68eb7c93gw1erdnius1ayj20uo0o9qaq.jpg)\n\n1.  在编译好的文件G:/build中打开sln，先重新生成解决方案。打不开。参考[这里](http://www.danielgm.net/cc/forum/viewtopic.php?t=992)，先右键在项目属性中选择debug（编译）将命令那一栏改成debug文件夹下的CloudCompare.exe文件。\n2.  最后找不到各种*.dll，在qt的安装文件夹中找到，放到项目的debug文件夹中，若是qcc是完整版，ccviewer是浏览器简版，均是放在相应的debug文件夹下。\n\n这样就完成了编译，若需要在vs中编辑qt的窗口，需要在qt的菜单栏选项中指定qt版本和相应的地址，参考[这里](http://www.bogotobogo.com/Qt/Qt5_Visual_Studio_Add_in.php)，点击Add，写入 版本号5.4.1和地址E:\\Qt\\Qt5.4.1\\msvc2013_64_opengl,这样双击项目中的ui就可以在qt的可视化编辑器中编写qt窗口。。里面的函数封装好复杂，，窝先匿去研究一会儿了。[![](http://ww4.sinaimg.cn/large/68eb7c93gw1erdl1rx0bpj214e0sj13b.jpg)](http://ww4.sinaimg.cn/large/68eb7c93gw1erdl1rx0bpj214e0sj13b.jpg)","source":"_posts/cmakeqt5-0-with-opengl-e7-bc-96-e8-af-91cloudcompare.md","raw":"---\ntitle: Cmake+qt5.0 with Opengl编译CloudCompare\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - 点云\n  - cmake\nid: 558\ndate: 2015-04-21 21:31:35\n---\n\n最近有使用到CloudCompare，是一个开源的可视化显示三维点云的程序。\n[![](http://ww4.sinaimg.cn/large/68eb7c93gw1erdnmdd9qqj202j02sjrc.jpg)](http://ww4.sinaimg.cn/large/68eb7c93gw1erdnmdd9qqj202j02sjrc.jpg)\n\n*   [项目首页](http://www.danielgm.net/cc/ \"Cloudcompare项目首页\")\n*   [Github](https://github.com/cloudcompare/trunk \"git地址\")\n*   [wiki](http://www.cloudcompare.org/doc/wiki/index.php?title=Main_Page \"wiki\")\n\nCloudCompare功能较为丰富，可以处理3d点云数据，可以比较两幅3d点云图像（例如激光扫描获取的图像）亦或者比较一副点云图像和一副三角网。它基于独特的八叉树结构使得性能极大的提升，一般可同时处理超过一千万点云数据，最高可在2Gb的内存下处理1.2亿个点云数据。该软件有可执行文件exe,也可以在linux、mac、windows中编译后使用最新的功能。项目首页有exe、7z版本的完整版、7z简化版的CCviewer，本次编译使用Windows8.1 64bit系统、MS Visual Studio2013 64bit，使用项目的github代码在Cmake下编译。\n\n编译环境：\n\n1.  [Qt5.4](http://www.qt.io/download-open-source/#section-2)  Qt中需要下载一个Qt 5.4.1 for Windows 64-bit (VS 2013, OpenGL, 711 MB) (info)来安装Qt的环境，还需要下载一个Visual Studio Add-in 1.2.4 for Qt5 (156 MB) (info)来在VS中进行可视化编辑。\n2.  [Cmake ](http://www.cmake.org/download/)Cmake是一个根据不同系统和配置进行编译的工具，在windows、linux和mac都可以使用。windows下64位系统可以正常安装32位版本。\n3.  利用svn checkoutgithub中的最新项目。这里地址为G:\\CCViewer\\trunk\n\n参考[这里](http://www.cloudcompare.org/doc/wiki/index.php?title=Compilation \"Compilation\")开始编译：\n\n[![](http://ww2.sinaimg.cn/large/68eb7c93gw1erdnius1ayj20uo0o9qaq.jpg)](http://ww2.sinaimg.cn/large/68eb7c93gw1erdnius1ayj20uo0o9qaq.jpg)\n\n1.  在编译好的文件G:/build中打开sln，先重新生成解决方案。打不开。参考[这里](http://www.danielgm.net/cc/forum/viewtopic.php?t=992)，先右键在项目属性中选择debug（编译）将命令那一栏改成debug文件夹下的CloudCompare.exe文件。\n2.  最后找不到各种*.dll，在qt的安装文件夹中找到，放到项目的debug文件夹中，若是qcc是完整版，ccviewer是浏览器简版，均是放在相应的debug文件夹下。\n\n这样就完成了编译，若需要在vs中编辑qt的窗口，需要在qt的菜单栏选项中指定qt版本和相应的地址，参考[这里](http://www.bogotobogo.com/Qt/Qt5_Visual_Studio_Add_in.php)，点击Add，写入 版本号5.4.1和地址E:\\Qt\\Qt5.4.1\\msvc2013_64_opengl,这样双击项目中的ui就可以在qt的可视化编辑器中编写qt窗口。。里面的函数封装好复杂，，窝先匿去研究一会儿了。[![](http://ww4.sinaimg.cn/large/68eb7c93gw1erdl1rx0bpj214e0sj13b.jpg)](http://ww4.sinaimg.cn/large/68eb7c93gw1erdl1rx0bpj214e0sj13b.jpg)","slug":"cmakeqt5-0-with-opengl-e7-bc-96-e8-af-91cloudcompare","published":1,"updated":"2016-04-13T09:04:36.214Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7mh001yuco46pq0uu5d","content":"<p>最近有使用到CloudCompare，是一个开源的可视化显示三维点云的程序。<br><a href=\"http://ww4.sinaimg.cn/large/68eb7c93gw1erdnmdd9qqj202j02sjrc.jpg\" target=\"_blank\" rel=\"external\"><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1erdnmdd9qqj202j02sjrc.jpg\" alt=\"\"></a></p>\n<ul>\n<li><a href=\"http://www.danielgm.net/cc/\" title=\"Cloudcompare项目首页\" target=\"_blank\" rel=\"external\">项目首页</a></li>\n<li><a href=\"https://github.com/cloudcompare/trunk\" title=\"git地址\" target=\"_blank\" rel=\"external\">Github</a></li>\n<li><a href=\"http://www.cloudcompare.org/doc/wiki/index.php?title=Main_Page\" title=\"wiki\" target=\"_blank\" rel=\"external\">wiki</a></li>\n</ul>\n<p>CloudCompare功能较为丰富，可以处理3d点云数据，可以比较两幅3d点云图像（例如激光扫描获取的图像）亦或者比较一副点云图像和一副三角网。它基于独特的八叉树结构使得性能极大的提升，一般可同时处理超过一千万点云数据，最高可在2Gb的内存下处理1.2亿个点云数据。该软件有可执行文件exe,也可以在linux、mac、windows中编译后使用最新的功能。项目首页有exe、7z版本的完整版、7z简化版的CCviewer，本次编译使用Windows8.1 64bit系统、MS Visual Studio2013 64bit，使用项目的github代码在Cmake下编译。</p>\n<p>编译环境：</p>\n<ol>\n<li><a href=\"http://www.qt.io/download-open-source/#section-2\" target=\"_blank\" rel=\"external\">Qt5.4</a>  Qt中需要下载一个Qt 5.4.1 for Windows 64-bit (VS 2013, OpenGL, 711 MB) (info)来安装Qt的环境，还需要下载一个Visual Studio Add-in 1.2.4 for Qt5 (156 MB) (info)来在VS中进行可视化编辑。</li>\n<li><a href=\"http://www.cmake.org/download/\" target=\"_blank\" rel=\"external\">Cmake </a>Cmake是一个根据不同系统和配置进行编译的工具，在windows、linux和mac都可以使用。windows下64位系统可以正常安装32位版本。</li>\n<li>利用svn checkoutgithub中的最新项目。这里地址为G:\\CCViewer\\trunk</li>\n</ol>\n<p>参考<a href=\"http://www.cloudcompare.org/doc/wiki/index.php?title=Compilation\" title=\"Compilation\" target=\"_blank\" rel=\"external\">这里</a>开始编译：</p>\n<p><a href=\"http://ww2.sinaimg.cn/large/68eb7c93gw1erdnius1ayj20uo0o9qaq.jpg\" target=\"_blank\" rel=\"external\"><img src=\"http://ww2.sinaimg.cn/large/68eb7c93gw1erdnius1ayj20uo0o9qaq.jpg\" alt=\"\"></a></p>\n<ol>\n<li>在编译好的文件G:/build中打开sln，先重新生成解决方案。打不开。参考<a href=\"http://www.danielgm.net/cc/forum/viewtopic.php?t=992\" target=\"_blank\" rel=\"external\">这里</a>，先右键在项目属性中选择debug（编译）将命令那一栏改成debug文件夹下的CloudCompare.exe文件。</li>\n<li>最后找不到各种*.dll，在qt的安装文件夹中找到，放到项目的debug文件夹中，若是qcc是完整版，ccviewer是浏览器简版，均是放在相应的debug文件夹下。</li>\n</ol>\n<p>这样就完成了编译，若需要在vs中编辑qt的窗口，需要在qt的菜单栏选项中指定qt版本和相应的地址，参考<a href=\"http://www.bogotobogo.com/Qt/Qt5_Visual_Studio_Add_in.php\" target=\"_blank\" rel=\"external\">这里</a>，点击Add，写入 版本号5.4.1和地址E:\\Qt\\Qt5.4.1\\msvc2013_64_opengl,这样双击项目中的ui就可以在qt的可视化编辑器中编写qt窗口。。里面的函数封装好复杂，，窝先匿去研究一会儿了。<a href=\"http://ww4.sinaimg.cn/large/68eb7c93gw1erdl1rx0bpj214e0sj13b.jpg\" target=\"_blank\" rel=\"external\"><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1erdl1rx0bpj214e0sj13b.jpg\" alt=\"\"></a></p>","excerpt":"","more":"<p>最近有使用到CloudCompare，是一个开源的可视化显示三维点云的程序。<br><a href=\"http://ww4.sinaimg.cn/large/68eb7c93gw1erdnmdd9qqj202j02sjrc.jpg\"><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1erdnmdd9qqj202j02sjrc.jpg\" alt=\"\"></a></p>\n<ul>\n<li><a href=\"http://www.danielgm.net/cc/\" title=\"Cloudcompare项目首页\">项目首页</a></li>\n<li><a href=\"https://github.com/cloudcompare/trunk\" title=\"git地址\">Github</a></li>\n<li><a href=\"http://www.cloudcompare.org/doc/wiki/index.php?title=Main_Page\" title=\"wiki\">wiki</a></li>\n</ul>\n<p>CloudCompare功能较为丰富，可以处理3d点云数据，可以比较两幅3d点云图像（例如激光扫描获取的图像）亦或者比较一副点云图像和一副三角网。它基于独特的八叉树结构使得性能极大的提升，一般可同时处理超过一千万点云数据，最高可在2Gb的内存下处理1.2亿个点云数据。该软件有可执行文件exe,也可以在linux、mac、windows中编译后使用最新的功能。项目首页有exe、7z版本的完整版、7z简化版的CCviewer，本次编译使用Windows8.1 64bit系统、MS Visual Studio2013 64bit，使用项目的github代码在Cmake下编译。</p>\n<p>编译环境：</p>\n<ol>\n<li><a href=\"http://www.qt.io/download-open-source/#section-2\">Qt5.4</a>  Qt中需要下载一个Qt 5.4.1 for Windows 64-bit (VS 2013, OpenGL, 711 MB) (info)来安装Qt的环境，还需要下载一个Visual Studio Add-in 1.2.4 for Qt5 (156 MB) (info)来在VS中进行可视化编辑。</li>\n<li><a href=\"http://www.cmake.org/download/\">Cmake </a>Cmake是一个根据不同系统和配置进行编译的工具，在windows、linux和mac都可以使用。windows下64位系统可以正常安装32位版本。</li>\n<li>利用svn checkoutgithub中的最新项目。这里地址为G:\\CCViewer\\trunk</li>\n</ol>\n<p>参考<a href=\"http://www.cloudcompare.org/doc/wiki/index.php?title=Compilation\" title=\"Compilation\">这里</a>开始编译：</p>\n<p><a href=\"http://ww2.sinaimg.cn/large/68eb7c93gw1erdnius1ayj20uo0o9qaq.jpg\"><img src=\"http://ww2.sinaimg.cn/large/68eb7c93gw1erdnius1ayj20uo0o9qaq.jpg\" alt=\"\"></a></p>\n<ol>\n<li>在编译好的文件G:/build中打开sln，先重新生成解决方案。打不开。参考<a href=\"http://www.danielgm.net/cc/forum/viewtopic.php?t=992\">这里</a>，先右键在项目属性中选择debug（编译）将命令那一栏改成debug文件夹下的CloudCompare.exe文件。</li>\n<li>最后找不到各种*.dll，在qt的安装文件夹中找到，放到项目的debug文件夹中，若是qcc是完整版，ccviewer是浏览器简版，均是放在相应的debug文件夹下。</li>\n</ol>\n<p>这样就完成了编译，若需要在vs中编辑qt的窗口，需要在qt的菜单栏选项中指定qt版本和相应的地址，参考<a href=\"http://www.bogotobogo.com/Qt/Qt5_Visual_Studio_Add_in.php\">这里</a>，点击Add，写入 版本号5.4.1和地址E:\\Qt\\Qt5.4.1\\msvc2013_64_opengl,这样双击项目中的ui就可以在qt的可视化编辑器中编写qt窗口。。里面的函数封装好复杂，，窝先匿去研究一会儿了。<a href=\"http://ww4.sinaimg.cn/large/68eb7c93gw1erdl1rx0bpj214e0sj13b.jpg\"><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1erdl1rx0bpj214e0sj13b.jpg\" alt=\"\"></a></p>"},{"title":"defy miui3.9.6升级记录","id":"342","date":"2013-09-11T21:22:05.000Z","_content":"\nnote\n1.貌似ota升级不是很管用了。。也可能使我版本太旧了\n2.miui的话不要用刷机精灵好了。这是个坑从来没有自动重启过。\n\n本次流程-刷2.2国行底包（rsd+电源+上）--菜单键跳过设置-未知源-装入bootmenu-安装bootmenu-调到刷机模式!!!-进入回复模式-爽wipe刷入包\n\n目测的话--不用刷底包-安一个有recovery的软件双wipe就好，，，亦或是miui里面有我没找到。备份和还原真是久。。。好了岁了","source":"_posts/defy miui3.9.6升级记录.md","raw":"---\ntitle: defy miui3.9.6升级记录\ncategories:\n  - 软件测评\n  - 软文\ntags:\n  - Android\nid: 342\ndate: 2013-09-12 05:22:05\n---\n\nnote\n1.貌似ota升级不是很管用了。。也可能使我版本太旧了\n2.miui的话不要用刷机精灵好了。这是个坑从来没有自动重启过。\n\n本次流程-刷2.2国行底包（rsd+电源+上）--菜单键跳过设置-未知源-装入bootmenu-安装bootmenu-调到刷机模式!!!-进入回复模式-爽wipe刷入包\n\n目测的话--不用刷底包-安一个有recovery的软件双wipe就好，，，亦或是miui里面有我没找到。备份和还原真是久。。。好了岁了","slug":"defy miui3.9.6升级记录","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7mk0022uco4aforhncm","content":"<p>note<br>1.貌似ota升级不是很管用了。。也可能使我版本太旧了<br>2.miui的话不要用刷机精灵好了。这是个坑从来没有自动重启过。</p>\n<p>本次流程-刷2.2国行底包（rsd+电源+上）–菜单键跳过设置-未知源-装入bootmenu-安装bootmenu-调到刷机模式!!!-进入回复模式-爽wipe刷入包</p>\n<p>目测的话–不用刷底包-安一个有recovery的软件双wipe就好，，，亦或是miui里面有我没找到。备份和还原真是久。。。好了岁了</p>","excerpt":"","more":"<p>note<br>1.貌似ota升级不是很管用了。。也可能使我版本太旧了<br>2.miui的话不要用刷机精灵好了。这是个坑从来没有自动重启过。</p>\n<p>本次流程-刷2.2国行底包（rsd+电源+上）–菜单键跳过设置-未知源-装入bootmenu-安装bootmenu-调到刷机模式!!!-进入回复模式-爽wipe刷入包</p>\n<p>目测的话–不用刷底包-安一个有recovery的软件双wipe就好，，，亦或是miui里面有我没找到。备份和还原真是久。。。好了岁了</p>"},{"title":"easy come easy go( ^_^ )/~~","id":"390","date":"2013-11-08T05:53:16.000Z","_content":"\n[xiami id=\"1771840321\"]Easy Come Easy Go -- 蔡健雅[/xiami] \nright!","source":"_posts/easy-come-easy-go.md","raw":"---\ntitle: easy come easy go( ^_^ )/~~\ncategories:\n  - 槽\ntags:\n  - 呵呵\nid: 390\ndate: 2013-11-08 13:53:16\n---\n\n[xiami id=\"1771840321\"]Easy Come Easy Go -- 蔡健雅[/xiami] \nright!","slug":"easy-come-easy-go","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7mn0025uco4le39dmuj","content":"<p>[xiami id=”1771840321”]Easy Come Easy Go – 蔡健雅[/xiami]<br>right!</p>","excerpt":"","more":"<p>[xiami id=”1771840321”]Easy Come Easy Go – 蔡健雅[/xiami]<br>right!</p>"},{"title":"effective java 笔记--创建对象的几个tips","date":"2016-04-27T03:50:01.000Z","_content":"第一章-创建和销毁对象 的一些 小tips\n\n<!-- more -->\n# 不希望被实例化 又不想抽象化\n某些类不希望被实例化出毫无意义的对象 但不编写显示构造器类会自定义一个隐式无参的构造器 因此可以用一下方式，编写不能实例化的类：\n\n```java\n\n  public class UtilityClass{\n    private UtilityClass(){\n      throw new AssertionError();//直接抛出assert验证异常 好坏\n    }\n  }\n```\n该构造器是私有的。其他类不能过访问（即使同包）。\n\n# 不要创建没必要的对象\n\n不可变的对象一定要重用（singleton）；重用绝逼不会变的对象（例如计时初始时间、例如物种的属性）。例如，实例化Person对象的时候判断是不是计划生育年代出生的，即判断出生年份是否在1983-2015年。\n\n```\n\nclass Person{\n   private final Date birthDate;\n   private static final Date BIRTH_START;\n   //这俩参数都是不变的 为了对比出生时间 \n   //没必要每次都创建一个日期对象，只在初始化时调用。\n   private static final Date BIRTH_END; \n\n//静态块的方法 第一次声明Person对象时构建（不用实例化）\n// 后面占用一块内存 不用再次创建\n   static{\n        Calendar gmtCal = Calendar.getInstance(TimeZone.getTimeZone(\"GMT\"));\n        gmtCal.set(1983,Calendar.JANUARY,1,0,0,0);\n        //这里对日期做了时区判断 \n        //保证都是从某一客观时间点出生的\n        BIRTH_START = gmtCal.getTime();\n        gmtCal.set(2016,Calendar.JANUARY,1,0,0,0);\n        //截止2015年年底 所以取2016年年初\n        BIRTH_END = gmtCal.getTime();\n   }\n\n    public boolean isJiHuaShengYu(){\n        return birthDate.compareTo(BIRTH_START) >=0 &&\n            birthDate.compareTo(BIRTH_END) <=0;\n    }\n}\n```\n\n如果isJiHuaShengYu方法<font color=\"red\">从未调用</font>，这个方法就显得不合时宜了，这块静态块的内存就一直占着，因此，可以采用延时初始化的方式，在第一次调用该方法时调用。\n\nadapter适配器模式可以提供一个后备对象，使实例化次数减少（包括类适配器和对象适配器）；autoboxing自动装箱模式能够自动创建多余对象，所以尽量少用，而使用基本数据类型。\n\n## 适配器Adapter\n\n>adapter工作场景\n\n适配器模式工作场景是：给定的一个接口不满足需求，需要其一些功能与其他的接口或类配合使用.正如已经给了电压和充电插座，但是插座电压与设备工作电压，这是时候就需要一个转换接头。\n\n>adapter分类 \n\n一般分为类适配器和对象适配器。**类适配器**一般继承了给定接口的被适配类，同时拓展实现了标准的接口；而**对象适配器**则直接关联，以委托的方式完成已知接口的特殊功能。\n\n>类适配器实例：Adaptee（已知的待适配的类） Target（目标类） Adapter（适配器类）\n\n可以看到，类适配器的方式通过继承或实现接口的方式，来传递某些功能或方法，以达到利用已知功能的目的。\n\n```java\n\n    // 已存在的、具有特殊功能、但不符合我们既有的标准接口的类\nclass Adaptee {\n    public void specificRequest() {\n        System.out.println(\"被适配类具有 特殊功能...\");\n    }\n}\n```\n\n```java\n\n// 目标接口，或称为标准接口\ninterface Target {\n    public void request();\n}\n\n// 具体目标类，只提供普通功能\nclass ConcreteTarget implements Target {\n    public void request() {\n        System.out.println(\"普通类 具有 普通功能...\");\n    }\n}\n```\n\n```java\n\n// 适配器类，继承了被适配类，同时实现标准接口\nclass Adapter extends Adaptee implements Target{\n    public void request() {\n        super.specificRequest();\n    }\n}\n```\n\n```java\n\n// 测试类\n    public class Client {\n        public static void main(String[] args) {\n            // 使用普通功能类\n            Target concreteTarget = new ConcreteTarget();\n            concreteTarget.request();\n            \n            // 使用特殊功能类，即适配类\n            Target adapter = new Adapter();\n            adapter.request();\n        }\n    }\n```\n\n> 对象适配器实例 Adapter适配器类 被适配器同上\n\n对象适配器则通过对被适配类实例化，通过其对象获取其中部分功能，委托这一实例来完成想要传递的方法。\n```\n\n// 适配器类，直接关联被适配类，同时实现标准接口\nclass Adapter implements Target{\n    // 直接关联被适配类\n    private Adaptee adaptee;\n    \n    // 可以通过构造函数传入具体需要适配的被适配类对象\n    public Adapter (Adaptee adaptee) {\n        this.adaptee = adaptee;\n    }\n    \n    public void request() {\n        // 这里是使用委托的方式完成特殊功能\n        this.adaptee.specificRequest();\n    }\n}\n```\n\n```\n\npublic class Client {\n    public static void main(String[] args) {\n        // 使用普通功能类\n        Target concreteTarget = new ConcreteTarget();\n        concreteTarget.request();\n        \n        // 使用特殊功能类，即适配类，\n        // 需要先创建一个被适配类的对象作为参数\n        Target adapter = new Adapter(new Adaptee());\n        adapter.request();\n    }\n}\n```\n参考[这里](http://haolloyin.blog.51cto.com/1177454/346128)\n##\n> autoboxing方式\n\n","source":"_posts/effective java 笔记--创建对象的几个tips.md","raw":"---\ntitle: effective java 笔记--创建对象的几个tips\ndate: 2016-04-27 11:50:01\ntags:\n---\n第一章-创建和销毁对象 的一些 小tips\n\n<!-- more -->\n# 不希望被实例化 又不想抽象化\n某些类不希望被实例化出毫无意义的对象 但不编写显示构造器类会自定义一个隐式无参的构造器 因此可以用一下方式，编写不能实例化的类：\n\n```java\n\n  public class UtilityClass{\n    private UtilityClass(){\n      throw new AssertionError();//直接抛出assert验证异常 好坏\n    }\n  }\n```\n该构造器是私有的。其他类不能过访问（即使同包）。\n\n# 不要创建没必要的对象\n\n不可变的对象一定要重用（singleton）；重用绝逼不会变的对象（例如计时初始时间、例如物种的属性）。例如，实例化Person对象的时候判断是不是计划生育年代出生的，即判断出生年份是否在1983-2015年。\n\n```\n\nclass Person{\n   private final Date birthDate;\n   private static final Date BIRTH_START;\n   //这俩参数都是不变的 为了对比出生时间 \n   //没必要每次都创建一个日期对象，只在初始化时调用。\n   private static final Date BIRTH_END; \n\n//静态块的方法 第一次声明Person对象时构建（不用实例化）\n// 后面占用一块内存 不用再次创建\n   static{\n        Calendar gmtCal = Calendar.getInstance(TimeZone.getTimeZone(\"GMT\"));\n        gmtCal.set(1983,Calendar.JANUARY,1,0,0,0);\n        //这里对日期做了时区判断 \n        //保证都是从某一客观时间点出生的\n        BIRTH_START = gmtCal.getTime();\n        gmtCal.set(2016,Calendar.JANUARY,1,0,0,0);\n        //截止2015年年底 所以取2016年年初\n        BIRTH_END = gmtCal.getTime();\n   }\n\n    public boolean isJiHuaShengYu(){\n        return birthDate.compareTo(BIRTH_START) >=0 &&\n            birthDate.compareTo(BIRTH_END) <=0;\n    }\n}\n```\n\n如果isJiHuaShengYu方法<font color=\"red\">从未调用</font>，这个方法就显得不合时宜了，这块静态块的内存就一直占着，因此，可以采用延时初始化的方式，在第一次调用该方法时调用。\n\nadapter适配器模式可以提供一个后备对象，使实例化次数减少（包括类适配器和对象适配器）；autoboxing自动装箱模式能够自动创建多余对象，所以尽量少用，而使用基本数据类型。\n\n## 适配器Adapter\n\n>adapter工作场景\n\n适配器模式工作场景是：给定的一个接口不满足需求，需要其一些功能与其他的接口或类配合使用.正如已经给了电压和充电插座，但是插座电压与设备工作电压，这是时候就需要一个转换接头。\n\n>adapter分类 \n\n一般分为类适配器和对象适配器。**类适配器**一般继承了给定接口的被适配类，同时拓展实现了标准的接口；而**对象适配器**则直接关联，以委托的方式完成已知接口的特殊功能。\n\n>类适配器实例：Adaptee（已知的待适配的类） Target（目标类） Adapter（适配器类）\n\n可以看到，类适配器的方式通过继承或实现接口的方式，来传递某些功能或方法，以达到利用已知功能的目的。\n\n```java\n\n    // 已存在的、具有特殊功能、但不符合我们既有的标准接口的类\nclass Adaptee {\n    public void specificRequest() {\n        System.out.println(\"被适配类具有 特殊功能...\");\n    }\n}\n```\n\n```java\n\n// 目标接口，或称为标准接口\ninterface Target {\n    public void request();\n}\n\n// 具体目标类，只提供普通功能\nclass ConcreteTarget implements Target {\n    public void request() {\n        System.out.println(\"普通类 具有 普通功能...\");\n    }\n}\n```\n\n```java\n\n// 适配器类，继承了被适配类，同时实现标准接口\nclass Adapter extends Adaptee implements Target{\n    public void request() {\n        super.specificRequest();\n    }\n}\n```\n\n```java\n\n// 测试类\n    public class Client {\n        public static void main(String[] args) {\n            // 使用普通功能类\n            Target concreteTarget = new ConcreteTarget();\n            concreteTarget.request();\n            \n            // 使用特殊功能类，即适配类\n            Target adapter = new Adapter();\n            adapter.request();\n        }\n    }\n```\n\n> 对象适配器实例 Adapter适配器类 被适配器同上\n\n对象适配器则通过对被适配类实例化，通过其对象获取其中部分功能，委托这一实例来完成想要传递的方法。\n```\n\n// 适配器类，直接关联被适配类，同时实现标准接口\nclass Adapter implements Target{\n    // 直接关联被适配类\n    private Adaptee adaptee;\n    \n    // 可以通过构造函数传入具体需要适配的被适配类对象\n    public Adapter (Adaptee adaptee) {\n        this.adaptee = adaptee;\n    }\n    \n    public void request() {\n        // 这里是使用委托的方式完成特殊功能\n        this.adaptee.specificRequest();\n    }\n}\n```\n\n```\n\npublic class Client {\n    public static void main(String[] args) {\n        // 使用普通功能类\n        Target concreteTarget = new ConcreteTarget();\n        concreteTarget.request();\n        \n        // 使用特殊功能类，即适配类，\n        // 需要先创建一个被适配类的对象作为参数\n        Target adapter = new Adapter(new Adaptee());\n        adapter.request();\n    }\n}\n```\n参考[这里](http://haolloyin.blog.51cto.com/1177454/346128)\n##\n> autoboxing方式\n\n","slug":"effective java 笔记--创建对象的几个tips","published":1,"updated":"2016-04-28T15:23:29.022Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7mq002auco4ct0engej","content":"<p>第一章-创建和销毁对象 的一些 小tips</p>\n<a id=\"more\"></a>\n<h1 id=\"不希望被实例化-又不想抽象化\"><a href=\"#不希望被实例化-又不想抽象化\" class=\"headerlink\" title=\"不希望被实例化 又不想抽象化\"></a>不希望被实例化 又不想抽象化</h1><p>某些类不希望被实例化出毫无意义的对象 但不编写显示构造器类会自定义一个隐式无参的构造器 因此可以用一下方式，编写不能实例化的类：</p>\n<pre><code class=\"java\">\n  public class UtilityClass{\n    private UtilityClass(){\n      throw new AssertionError();//直接抛出assert验证异常 好坏\n    }\n  }\n</code></pre>\n<p>该构造器是私有的。其他类不能过访问（即使同包）。</p>\n<h1 id=\"不要创建没必要的对象\"><a href=\"#不要创建没必要的对象\" class=\"headerlink\" title=\"不要创建没必要的对象\"></a>不要创建没必要的对象</h1><p>不可变的对象一定要重用（singleton）；重用绝逼不会变的对象（例如计时初始时间、例如物种的属性）。例如，实例化Person对象的时候判断是不是计划生育年代出生的，即判断出生年份是否在1983-2015年。</p>\n<pre><code>\nclass Person{\n   private final Date birthDate;\n   private static final Date BIRTH_START;\n   //这俩参数都是不变的 为了对比出生时间 \n   //没必要每次都创建一个日期对象，只在初始化时调用。\n   private static final Date BIRTH_END; \n\n//静态块的方法 第一次声明Person对象时构建（不用实例化）\n// 后面占用一块内存 不用再次创建\n   static{\n        Calendar gmtCal = Calendar.getInstance(TimeZone.getTimeZone(&quot;GMT&quot;));\n        gmtCal.set(1983,Calendar.JANUARY,1,0,0,0);\n        //这里对日期做了时区判断 \n        //保证都是从某一客观时间点出生的\n        BIRTH_START = gmtCal.getTime();\n        gmtCal.set(2016,Calendar.JANUARY,1,0,0,0);\n        //截止2015年年底 所以取2016年年初\n        BIRTH_END = gmtCal.getTime();\n   }\n\n    public boolean isJiHuaShengYu(){\n        return birthDate.compareTo(BIRTH_START) &gt;=0 &amp;&amp;\n            birthDate.compareTo(BIRTH_END) &lt;=0;\n    }\n}\n</code></pre><p>如果isJiHuaShengYu方法<font color=\"red\">从未调用</font>，这个方法就显得不合时宜了，这块静态块的内存就一直占着，因此，可以采用延时初始化的方式，在第一次调用该方法时调用。</p>\n<p>adapter适配器模式可以提供一个后备对象，使实例化次数减少（包括类适配器和对象适配器）；autoboxing自动装箱模式能够自动创建多余对象，所以尽量少用，而使用基本数据类型。</p>\n<h2 id=\"适配器Adapter\"><a href=\"#适配器Adapter\" class=\"headerlink\" title=\"适配器Adapter\"></a>适配器Adapter</h2><blockquote>\n<p>adapter工作场景</p>\n</blockquote>\n<p>适配器模式工作场景是：给定的一个接口不满足需求，需要其一些功能与其他的接口或类配合使用.正如已经给了电压和充电插座，但是插座电压与设备工作电压，这是时候就需要一个转换接头。</p>\n<blockquote>\n<p>adapter分类 </p>\n</blockquote>\n<p>一般分为类适配器和对象适配器。<strong>类适配器</strong>一般继承了给定接口的被适配类，同时拓展实现了标准的接口；而<strong>对象适配器</strong>则直接关联，以委托的方式完成已知接口的特殊功能。</p>\n<blockquote>\n<p>类适配器实例：Adaptee（已知的待适配的类） Target（目标类） Adapter（适配器类）</p>\n</blockquote>\n<p>可以看到，类适配器的方式通过继承或实现接口的方式，来传递某些功能或方法，以达到利用已知功能的目的。</p>\n<pre><code class=\"java\">\n    // 已存在的、具有特殊功能、但不符合我们既有的标准接口的类\nclass Adaptee {\n    public void specificRequest() {\n        System.out.println(&quot;被适配类具有 特殊功能...&quot;);\n    }\n}\n</code></pre>\n<pre><code class=\"java\">\n// 目标接口，或称为标准接口\ninterface Target {\n    public void request();\n}\n\n// 具体目标类，只提供普通功能\nclass ConcreteTarget implements Target {\n    public void request() {\n        System.out.println(&quot;普通类 具有 普通功能...&quot;);\n    }\n}\n</code></pre>\n<pre><code class=\"java\">\n// 适配器类，继承了被适配类，同时实现标准接口\nclass Adapter extends Adaptee implements Target{\n    public void request() {\n        super.specificRequest();\n    }\n}\n</code></pre>\n<pre><code class=\"java\">\n// 测试类\n    public class Client {\n        public static void main(String[] args) {\n            // 使用普通功能类\n            Target concreteTarget = new ConcreteTarget();\n            concreteTarget.request();\n\n            // 使用特殊功能类，即适配类\n            Target adapter = new Adapter();\n            adapter.request();\n        }\n    }\n</code></pre>\n<blockquote>\n<p>对象适配器实例 Adapter适配器类 被适配器同上</p>\n</blockquote>\n<p>对象适配器则通过对被适配类实例化，通过其对象获取其中部分功能，委托这一实例来完成想要传递的方法。</p>\n<pre><code>\n// 适配器类，直接关联被适配类，同时实现标准接口\nclass Adapter implements Target{\n    // 直接关联被适配类\n    private Adaptee adaptee;\n\n    // 可以通过构造函数传入具体需要适配的被适配类对象\n    public Adapter (Adaptee adaptee) {\n        this.adaptee = adaptee;\n    }\n\n    public void request() {\n        // 这里是使用委托的方式完成特殊功能\n        this.adaptee.specificRequest();\n    }\n}\n</code></pre><pre><code>\npublic class Client {\n    public static void main(String[] args) {\n        // 使用普通功能类\n        Target concreteTarget = new ConcreteTarget();\n        concreteTarget.request();\n\n        // 使用特殊功能类，即适配类，\n        // 需要先创建一个被适配类的对象作为参数\n        Target adapter = new Adapter(new Adaptee());\n        adapter.request();\n    }\n}\n</code></pre><p>参考<a href=\"http://haolloyin.blog.51cto.com/1177454/346128\" target=\"_blank\" rel=\"external\">这里</a></p>\n<p>##</p>\n<blockquote>\n<p>autoboxing方式</p>\n</blockquote>","excerpt":"<p>第一章-创建和销毁对象 的一些 小tips</p>","more":"<h1 id=\"不希望被实例化-又不想抽象化\"><a href=\"#不希望被实例化-又不想抽象化\" class=\"headerlink\" title=\"不希望被实例化 又不想抽象化\"></a>不希望被实例化 又不想抽象化</h1><p>某些类不希望被实例化出毫无意义的对象 但不编写显示构造器类会自定义一个隐式无参的构造器 因此可以用一下方式，编写不能实例化的类：</p>\n<pre><code class=\"java\">\n  public class UtilityClass{\n    private UtilityClass(){\n      throw new AssertionError();//直接抛出assert验证异常 好坏\n    }\n  }\n</code></pre>\n<p>该构造器是私有的。其他类不能过访问（即使同包）。</p>\n<h1 id=\"不要创建没必要的对象\"><a href=\"#不要创建没必要的对象\" class=\"headerlink\" title=\"不要创建没必要的对象\"></a>不要创建没必要的对象</h1><p>不可变的对象一定要重用（singleton）；重用绝逼不会变的对象（例如计时初始时间、例如物种的属性）。例如，实例化Person对象的时候判断是不是计划生育年代出生的，即判断出生年份是否在1983-2015年。</p>\n<pre><code>\nclass Person{\n   private final Date birthDate;\n   private static final Date BIRTH_START;\n   //这俩参数都是不变的 为了对比出生时间 \n   //没必要每次都创建一个日期对象，只在初始化时调用。\n   private static final Date BIRTH_END; \n\n//静态块的方法 第一次声明Person对象时构建（不用实例化）\n// 后面占用一块内存 不用再次创建\n   static{\n        Calendar gmtCal = Calendar.getInstance(TimeZone.getTimeZone(&quot;GMT&quot;));\n        gmtCal.set(1983,Calendar.JANUARY,1,0,0,0);\n        //这里对日期做了时区判断 \n        //保证都是从某一客观时间点出生的\n        BIRTH_START = gmtCal.getTime();\n        gmtCal.set(2016,Calendar.JANUARY,1,0,0,0);\n        //截止2015年年底 所以取2016年年初\n        BIRTH_END = gmtCal.getTime();\n   }\n\n    public boolean isJiHuaShengYu(){\n        return birthDate.compareTo(BIRTH_START) &gt;=0 &amp;&amp;\n            birthDate.compareTo(BIRTH_END) &lt;=0;\n    }\n}\n</code></pre><p>如果isJiHuaShengYu方法<font color=\"red\">从未调用</font>，这个方法就显得不合时宜了，这块静态块的内存就一直占着，因此，可以采用延时初始化的方式，在第一次调用该方法时调用。</p>\n<p>adapter适配器模式可以提供一个后备对象，使实例化次数减少（包括类适配器和对象适配器）；autoboxing自动装箱模式能够自动创建多余对象，所以尽量少用，而使用基本数据类型。</p>\n<h2 id=\"适配器Adapter\"><a href=\"#适配器Adapter\" class=\"headerlink\" title=\"适配器Adapter\"></a>适配器Adapter</h2><blockquote>\n<p>adapter工作场景</p>\n</blockquote>\n<p>适配器模式工作场景是：给定的一个接口不满足需求，需要其一些功能与其他的接口或类配合使用.正如已经给了电压和充电插座，但是插座电压与设备工作电压，这是时候就需要一个转换接头。</p>\n<blockquote>\n<p>adapter分类 </p>\n</blockquote>\n<p>一般分为类适配器和对象适配器。<strong>类适配器</strong>一般继承了给定接口的被适配类，同时拓展实现了标准的接口；而<strong>对象适配器</strong>则直接关联，以委托的方式完成已知接口的特殊功能。</p>\n<blockquote>\n<p>类适配器实例：Adaptee（已知的待适配的类） Target（目标类） Adapter（适配器类）</p>\n</blockquote>\n<p>可以看到，类适配器的方式通过继承或实现接口的方式，来传递某些功能或方法，以达到利用已知功能的目的。</p>\n<pre><code class=\"java\">\n    // 已存在的、具有特殊功能、但不符合我们既有的标准接口的类\nclass Adaptee {\n    public void specificRequest() {\n        System.out.println(&quot;被适配类具有 特殊功能...&quot;);\n    }\n}\n</code></pre>\n<pre><code class=\"java\">\n// 目标接口，或称为标准接口\ninterface Target {\n    public void request();\n}\n\n// 具体目标类，只提供普通功能\nclass ConcreteTarget implements Target {\n    public void request() {\n        System.out.println(&quot;普通类 具有 普通功能...&quot;);\n    }\n}\n</code></pre>\n<pre><code class=\"java\">\n// 适配器类，继承了被适配类，同时实现标准接口\nclass Adapter extends Adaptee implements Target{\n    public void request() {\n        super.specificRequest();\n    }\n}\n</code></pre>\n<pre><code class=\"java\">\n// 测试类\n    public class Client {\n        public static void main(String[] args) {\n            // 使用普通功能类\n            Target concreteTarget = new ConcreteTarget();\n            concreteTarget.request();\n\n            // 使用特殊功能类，即适配类\n            Target adapter = new Adapter();\n            adapter.request();\n        }\n    }\n</code></pre>\n<blockquote>\n<p>对象适配器实例 Adapter适配器类 被适配器同上</p>\n</blockquote>\n<p>对象适配器则通过对被适配类实例化，通过其对象获取其中部分功能，委托这一实例来完成想要传递的方法。</p>\n<pre><code>\n// 适配器类，直接关联被适配类，同时实现标准接口\nclass Adapter implements Target{\n    // 直接关联被适配类\n    private Adaptee adaptee;\n\n    // 可以通过构造函数传入具体需要适配的被适配类对象\n    public Adapter (Adaptee adaptee) {\n        this.adaptee = adaptee;\n    }\n\n    public void request() {\n        // 这里是使用委托的方式完成特殊功能\n        this.adaptee.specificRequest();\n    }\n}\n</code></pre><pre><code>\npublic class Client {\n    public static void main(String[] args) {\n        // 使用普通功能类\n        Target concreteTarget = new ConcreteTarget();\n        concreteTarget.request();\n\n        // 使用特殊功能类，即适配类，\n        // 需要先创建一个被适配类的对象作为参数\n        Target adapter = new Adapter(new Adaptee());\n        adapter.request();\n    }\n}\n</code></pre><p>参考<a href=\"http://haolloyin.blog.51cto.com/1177454/346128\">这里</a></p>\n<p>##</p>\n<blockquote>\n<p>autoboxing方式</p>\n</blockquote>"},{"title":"effective java--builer构造器","date":"2016-04-22T09:10:48.000Z","_content":"一个实体类往往有不同的属性 属性有的用于构造器 视为构造时的必需参数 而有的可有可无 类似json和xml一般，有多少个属性，每个属性有多少个赋值都不确定 。e.g.动物 名称string name和是否有尾巴istail是必须的，是否吃草iseatgrass 多重weight 交配手段sexmethod 科目等为非必须字段。解决这一构造问题一般有三种方式。\n<!-- more -->\n1.  可以采用不同的构造函数，一般的，把调用最多的构造出来，其余的按字段个数构造1-n个。诚然，有的字段并不需要，可能赋为空或者0。这样严重的影响了效率，同时字段多时构造函数也异常的多。\n\n2.  采用类似c#的方式 采用一个空字段构造器，使用setter和getter赋值和取值。这样的好处避免了过度的编写构造函数。但是在异步交互中，不能保证该对象的正确性和一致性。因此很可能需要冷冻。例如，名字叫草泥马的动物，是不具有排卵受精的性爱方式的。这样的setter不能及时维护数据的统一。又或者必须给予字段的动物名字和是否有尾巴在构造中并未赋值，造成的结果很可能在后面的调用中无法get到对应属性报异常。\n\n3. 强悍的builder.在实体类中，再编写一个builder用于构造和赋值，必须的字段出现在构造函数中，需要赋值的字段在后面以.setter的方式调用，相当简洁高效，同时易于观察和修正。类似jQuery和python中一样。棒呆。\n\n最丑的长字段实体类原本是这么写的\n\n```\nclass Animal{\n    private string name;//必须参数\n    private bool isTail;//必须参数\n    private bool isEatGrass;//可选参数\n    private double weight;//可选参数\n    privaet int sexMethod;//可选参数\n\n    Animal(string name,bool isTail)//这两个字段我特么就想要{\n        this.name = name;\n        this.isTail = isTail;\n    }\n    Animal(string name,bool isTail)//这两个字段我特么就想要{\n        this.name = name;\n        this.isTail = isTail;\n    }\n    Animal(string name,bool isTail,bool isEatGrass){\n        this.name = name;\n        this.isTail = isTail;\n        this.isEatGrass = isEatGrass;\n    }\n    Animal(string name,bool isTail,bool isEatGrass,double weight){\n        this.name = name;\n        this.isTail = isTail;\n        this.isEatGrass = isEatGrass;\n        this.weight = weight;\n    }\n    Animal(string name,bool isTail,bool isEatGrass,double weight,int sexMe){\n        this.name = name;\n        this.isTail = isTail;\n        this.isEatGrass = isEatGrass;\n        this.weight = weight;\n        this.sexMethon = sexMe;\n    }\n}\n```\n在某处调用就可能是这样\n\n```java\nAnimal animal = new Animal(\"caonima\",true,true,-1,3);\n//由于我并不想知道体重，但又因为构造函数的关系不得不加上。\n//所以相当繁琐。当字段达到几十个时，调用构造函数都分不清参数是否对应上。\n```\n​将上文的动物实体类以builder的方式写出来，大概是这样的\n\n```\nclass Animal{\n    private final string name;\n    private final bool isTail;\n    private final bool isEatGrass;\n    private final double weight;\n    private final int sexMethod;\n\n    public static class Builder{//类内嵌套的静态类，可以通过类名的类名调用构造函数\n        private final string name;\n        //注意这里 final只对必需字段定义 表明不可修改 区分不同对象\n        private final bool isTail;\n        //给非必需字段设置默认值\n        private bool isEatGrass =false;\n        private double weight = 0.0;\n        privaet int sexMethod =1;\n        public Builder(string name,bool isTail){\n            //构造函数只取必需字段\n            this.name = name;\n            this.isTail = isTail;\n        }\n        public Builder setISEatGrass(bool isEatGrass){\n            this.isEatGrass = isEatGrass;\n            return this;\n        }\n        public Builder setISEatGrass(double weight){\n            this.weight = weight;\n            return this;\n        }\n        public Builder setSexMethod(int sexMetho){\n            this.sexMetho = sexMetho;\n            return this;\n        }\n\n        public Animal build(){//在builder类内声明一个构造器 返回animal对象\n            return new Animal(this);\n        }\n    }\n    //当然 在animal类的最后 也需要把builder的参数取出来\n    private Animal(Builder builder){\n        name = builder.name;\n        isTail = builder.isTail;\n        isEatGrass = builder.isEatGrass;\n        weigth = builder.weigth;\n        sexMethod = builder.sexMethod;\n    }\n}\n```\n在某处构造该类对象时，即可像下面一样声明\n\n```\n    Animal dog = new Animal.Builder(\"旺财\",true).setIsEatGrass(false).setSexMethod(3).setWeight(20.0)\n```\nbuilder类似一个抽象工厂 客户端可以将这样一个builder传给方法，在方法中生成需要数量的对象。1.5+版本可以使用泛型定义。\n\n```\npublic interface Builder{\n    public T build();\n}\n```\n在类似生成二叉树，kd树的时候，往往用户只需要将数据push进入，然后调用一个builder整棵树就构造好了。这种方式往往类似于带限制通配符类型的builder.\n\n​\n\n还有一点值得注意的是，新增字段时，不比增加更多的构造函数 ！\n\ncaution!\n\n1. 增加了类长度，当字段较多时才较好的使用。\n\n2. 创建对象首先得创建构造器，在强调性能的地方会比较麻烦。\n\n","source":"_posts/effective java--builer构造器.md","raw":"---\ntitle: effective java--builer构造器\ndate: 2016-04-22 17:10:48\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - java\n---\n一个实体类往往有不同的属性 属性有的用于构造器 视为构造时的必需参数 而有的可有可无 类似json和xml一般，有多少个属性，每个属性有多少个赋值都不确定 。e.g.动物 名称string name和是否有尾巴istail是必须的，是否吃草iseatgrass 多重weight 交配手段sexmethod 科目等为非必须字段。解决这一构造问题一般有三种方式。\n<!-- more -->\n1.  可以采用不同的构造函数，一般的，把调用最多的构造出来，其余的按字段个数构造1-n个。诚然，有的字段并不需要，可能赋为空或者0。这样严重的影响了效率，同时字段多时构造函数也异常的多。\n\n2.  采用类似c#的方式 采用一个空字段构造器，使用setter和getter赋值和取值。这样的好处避免了过度的编写构造函数。但是在异步交互中，不能保证该对象的正确性和一致性。因此很可能需要冷冻。例如，名字叫草泥马的动物，是不具有排卵受精的性爱方式的。这样的setter不能及时维护数据的统一。又或者必须给予字段的动物名字和是否有尾巴在构造中并未赋值，造成的结果很可能在后面的调用中无法get到对应属性报异常。\n\n3. 强悍的builder.在实体类中，再编写一个builder用于构造和赋值，必须的字段出现在构造函数中，需要赋值的字段在后面以.setter的方式调用，相当简洁高效，同时易于观察和修正。类似jQuery和python中一样。棒呆。\n\n最丑的长字段实体类原本是这么写的\n\n```\nclass Animal{\n    private string name;//必须参数\n    private bool isTail;//必须参数\n    private bool isEatGrass;//可选参数\n    private double weight;//可选参数\n    privaet int sexMethod;//可选参数\n\n    Animal(string name,bool isTail)//这两个字段我特么就想要{\n        this.name = name;\n        this.isTail = isTail;\n    }\n    Animal(string name,bool isTail)//这两个字段我特么就想要{\n        this.name = name;\n        this.isTail = isTail;\n    }\n    Animal(string name,bool isTail,bool isEatGrass){\n        this.name = name;\n        this.isTail = isTail;\n        this.isEatGrass = isEatGrass;\n    }\n    Animal(string name,bool isTail,bool isEatGrass,double weight){\n        this.name = name;\n        this.isTail = isTail;\n        this.isEatGrass = isEatGrass;\n        this.weight = weight;\n    }\n    Animal(string name,bool isTail,bool isEatGrass,double weight,int sexMe){\n        this.name = name;\n        this.isTail = isTail;\n        this.isEatGrass = isEatGrass;\n        this.weight = weight;\n        this.sexMethon = sexMe;\n    }\n}\n```\n在某处调用就可能是这样\n\n```java\nAnimal animal = new Animal(\"caonima\",true,true,-1,3);\n//由于我并不想知道体重，但又因为构造函数的关系不得不加上。\n//所以相当繁琐。当字段达到几十个时，调用构造函数都分不清参数是否对应上。\n```\n​将上文的动物实体类以builder的方式写出来，大概是这样的\n\n```\nclass Animal{\n    private final string name;\n    private final bool isTail;\n    private final bool isEatGrass;\n    private final double weight;\n    private final int sexMethod;\n\n    public static class Builder{//类内嵌套的静态类，可以通过类名的类名调用构造函数\n        private final string name;\n        //注意这里 final只对必需字段定义 表明不可修改 区分不同对象\n        private final bool isTail;\n        //给非必需字段设置默认值\n        private bool isEatGrass =false;\n        private double weight = 0.0;\n        privaet int sexMethod =1;\n        public Builder(string name,bool isTail){\n            //构造函数只取必需字段\n            this.name = name;\n            this.isTail = isTail;\n        }\n        public Builder setISEatGrass(bool isEatGrass){\n            this.isEatGrass = isEatGrass;\n            return this;\n        }\n        public Builder setISEatGrass(double weight){\n            this.weight = weight;\n            return this;\n        }\n        public Builder setSexMethod(int sexMetho){\n            this.sexMetho = sexMetho;\n            return this;\n        }\n\n        public Animal build(){//在builder类内声明一个构造器 返回animal对象\n            return new Animal(this);\n        }\n    }\n    //当然 在animal类的最后 也需要把builder的参数取出来\n    private Animal(Builder builder){\n        name = builder.name;\n        isTail = builder.isTail;\n        isEatGrass = builder.isEatGrass;\n        weigth = builder.weigth;\n        sexMethod = builder.sexMethod;\n    }\n}\n```\n在某处构造该类对象时，即可像下面一样声明\n\n```\n    Animal dog = new Animal.Builder(\"旺财\",true).setIsEatGrass(false).setSexMethod(3).setWeight(20.0)\n```\nbuilder类似一个抽象工厂 客户端可以将这样一个builder传给方法，在方法中生成需要数量的对象。1.5+版本可以使用泛型定义。\n\n```\npublic interface Builder{\n    public T build();\n}\n```\n在类似生成二叉树，kd树的时候，往往用户只需要将数据push进入，然后调用一个builder整棵树就构造好了。这种方式往往类似于带限制通配符类型的builder.\n\n​\n\n还有一点值得注意的是，新增字段时，不比增加更多的构造函数 ！\n\ncaution!\n\n1. 增加了类长度，当字段较多时才较好的使用。\n\n2. 创建对象首先得创建构造器，在强调性能的地方会比较麻烦。\n\n","slug":"effective java--builer构造器","published":1,"updated":"2016-05-16T13:18:24.708Z","_id":"cio8sn7ms002duco41y592jkn","comments":1,"layout":"post","photos":[],"link":"","content":"<p>一个实体类往往有不同的属性 属性有的用于构造器 视为构造时的必需参数 而有的可有可无 类似json和xml一般，有多少个属性，每个属性有多少个赋值都不确定 。e.g.动物 名称string name和是否有尾巴istail是必须的，是否吃草iseatgrass 多重weight 交配手段sexmethod 科目等为非必须字段。解决这一构造问题一般有三种方式。<br><a id=\"more\"></a></p>\n<ol>\n<li><p>可以采用不同的构造函数，一般的，把调用最多的构造出来，其余的按字段个数构造1-n个。诚然，有的字段并不需要，可能赋为空或者0。这样严重的影响了效率，同时字段多时构造函数也异常的多。</p>\n</li>\n<li><p>采用类似c#的方式 采用一个空字段构造器，使用setter和getter赋值和取值。这样的好处避免了过度的编写构造函数。但是在异步交互中，不能保证该对象的正确性和一致性。因此很可能需要冷冻。例如，名字叫草泥马的动物，是不具有排卵受精的性爱方式的。这样的setter不能及时维护数据的统一。又或者必须给予字段的动物名字和是否有尾巴在构造中并未赋值，造成的结果很可能在后面的调用中无法get到对应属性报异常。</p>\n</li>\n<li><p>强悍的builder.在实体类中，再编写一个builder用于构造和赋值，必须的字段出现在构造函数中，需要赋值的字段在后面以.setter的方式调用，相当简洁高效，同时易于观察和修正。类似jQuery和python中一样。棒呆。</p>\n</li>\n</ol>\n<p>最丑的长字段实体类原本是这么写的</p>\n<pre><code>class Animal{\n    private string name;//必须参数\n    private bool isTail;//必须参数\n    private bool isEatGrass;//可选参数\n    private double weight;//可选参数\n    privaet int sexMethod;//可选参数\n\n    Animal(string name,bool isTail)//这两个字段我特么就想要{\n        this.name = name;\n        this.isTail = isTail;\n    }\n    Animal(string name,bool isTail)//这两个字段我特么就想要{\n        this.name = name;\n        this.isTail = isTail;\n    }\n    Animal(string name,bool isTail,bool isEatGrass){\n        this.name = name;\n        this.isTail = isTail;\n        this.isEatGrass = isEatGrass;\n    }\n    Animal(string name,bool isTail,bool isEatGrass,double weight){\n        this.name = name;\n        this.isTail = isTail;\n        this.isEatGrass = isEatGrass;\n        this.weight = weight;\n    }\n    Animal(string name,bool isTail,bool isEatGrass,double weight,int sexMe){\n        this.name = name;\n        this.isTail = isTail;\n        this.isEatGrass = isEatGrass;\n        this.weight = weight;\n        this.sexMethon = sexMe;\n    }\n}\n</code></pre><p>在某处调用就可能是这样</p>\n<pre><code class=\"java\">Animal animal = new Animal(&quot;caonima&quot;,true,true,-1,3);\n//由于我并不想知道体重，但又因为构造函数的关系不得不加上。\n//所以相当繁琐。当字段达到几十个时，调用构造函数都分不清参数是否对应上。\n</code></pre>\n<p>​将上文的动物实体类以builder的方式写出来，大概是这样的</p>\n<pre><code>class Animal{\n    private final string name;\n    private final bool isTail;\n    private final bool isEatGrass;\n    private final double weight;\n    private final int sexMethod;\n\n    public static class Builder{//类内嵌套的静态类，可以通过类名的类名调用构造函数\n        private final string name;\n        //注意这里 final只对必需字段定义 表明不可修改 区分不同对象\n        private final bool isTail;\n        //给非必需字段设置默认值\n        private bool isEatGrass =false;\n        private double weight = 0.0;\n        privaet int sexMethod =1;\n        public Builder(string name,bool isTail){\n            //构造函数只取必需字段\n            this.name = name;\n            this.isTail = isTail;\n        }\n        public Builder setISEatGrass(bool isEatGrass){\n            this.isEatGrass = isEatGrass;\n            return this;\n        }\n        public Builder setISEatGrass(double weight){\n            this.weight = weight;\n            return this;\n        }\n        public Builder setSexMethod(int sexMetho){\n            this.sexMetho = sexMetho;\n            return this;\n        }\n\n        public Animal build(){//在builder类内声明一个构造器 返回animal对象\n            return new Animal(this);\n        }\n    }\n    //当然 在animal类的最后 也需要把builder的参数取出来\n    private Animal(Builder builder){\n        name = builder.name;\n        isTail = builder.isTail;\n        isEatGrass = builder.isEatGrass;\n        weigth = builder.weigth;\n        sexMethod = builder.sexMethod;\n    }\n}\n</code></pre><p>在某处构造该类对象时，即可像下面一样声明</p>\n<pre><code>    Animal dog = new Animal.Builder(&quot;旺财&quot;,true).setIsEatGrass(false).setSexMethod(3).setWeight(20.0)\n</code></pre><p>builder类似一个抽象工厂 客户端可以将这样一个builder传给方法，在方法中生成需要数量的对象。1.5+版本可以使用泛型定义。</p>\n<pre><code>public interface Builder{\n    public T build();\n}\n</code></pre><p>在类似生成二叉树，kd树的时候，往往用户只需要将数据push进入，然后调用一个builder整棵树就构造好了。这种方式往往类似于带限制通配符类型的builder.</p>\n<p>​</p>\n<p>还有一点值得注意的是，新增字段时，不比增加更多的构造函数 ！</p>\n<p>caution!</p>\n<ol>\n<li><p>增加了类长度，当字段较多时才较好的使用。</p>\n</li>\n<li><p>创建对象首先得创建构造器，在强调性能的地方会比较麻烦。</p>\n</li>\n</ol>","excerpt":"<p>一个实体类往往有不同的属性 属性有的用于构造器 视为构造时的必需参数 而有的可有可无 类似json和xml一般，有多少个属性，每个属性有多少个赋值都不确定 。e.g.动物 名称string name和是否有尾巴istail是必须的，是否吃草iseatgrass 多重weight 交配手段sexmethod 科目等为非必须字段。解决这一构造问题一般有三种方式。<br>","more":"</p>\n<ol>\n<li><p>可以采用不同的构造函数，一般的，把调用最多的构造出来，其余的按字段个数构造1-n个。诚然，有的字段并不需要，可能赋为空或者0。这样严重的影响了效率，同时字段多时构造函数也异常的多。</p>\n</li>\n<li><p>采用类似c#的方式 采用一个空字段构造器，使用setter和getter赋值和取值。这样的好处避免了过度的编写构造函数。但是在异步交互中，不能保证该对象的正确性和一致性。因此很可能需要冷冻。例如，名字叫草泥马的动物，是不具有排卵受精的性爱方式的。这样的setter不能及时维护数据的统一。又或者必须给予字段的动物名字和是否有尾巴在构造中并未赋值，造成的结果很可能在后面的调用中无法get到对应属性报异常。</p>\n</li>\n<li><p>强悍的builder.在实体类中，再编写一个builder用于构造和赋值，必须的字段出现在构造函数中，需要赋值的字段在后面以.setter的方式调用，相当简洁高效，同时易于观察和修正。类似jQuery和python中一样。棒呆。</p>\n</li>\n</ol>\n<p>最丑的长字段实体类原本是这么写的</p>\n<pre><code>class Animal{\n    private string name;//必须参数\n    private bool isTail;//必须参数\n    private bool isEatGrass;//可选参数\n    private double weight;//可选参数\n    privaet int sexMethod;//可选参数\n\n    Animal(string name,bool isTail)//这两个字段我特么就想要{\n        this.name = name;\n        this.isTail = isTail;\n    }\n    Animal(string name,bool isTail)//这两个字段我特么就想要{\n        this.name = name;\n        this.isTail = isTail;\n    }\n    Animal(string name,bool isTail,bool isEatGrass){\n        this.name = name;\n        this.isTail = isTail;\n        this.isEatGrass = isEatGrass;\n    }\n    Animal(string name,bool isTail,bool isEatGrass,double weight){\n        this.name = name;\n        this.isTail = isTail;\n        this.isEatGrass = isEatGrass;\n        this.weight = weight;\n    }\n    Animal(string name,bool isTail,bool isEatGrass,double weight,int sexMe){\n        this.name = name;\n        this.isTail = isTail;\n        this.isEatGrass = isEatGrass;\n        this.weight = weight;\n        this.sexMethon = sexMe;\n    }\n}\n</code></pre><p>在某处调用就可能是这样</p>\n<pre><code class=\"java\">Animal animal = new Animal(&quot;caonima&quot;,true,true,-1,3);\n//由于我并不想知道体重，但又因为构造函数的关系不得不加上。\n//所以相当繁琐。当字段达到几十个时，调用构造函数都分不清参数是否对应上。\n</code></pre>\n<p>​将上文的动物实体类以builder的方式写出来，大概是这样的</p>\n<pre><code>class Animal{\n    private final string name;\n    private final bool isTail;\n    private final bool isEatGrass;\n    private final double weight;\n    private final int sexMethod;\n\n    public static class Builder{//类内嵌套的静态类，可以通过类名的类名调用构造函数\n        private final string name;\n        //注意这里 final只对必需字段定义 表明不可修改 区分不同对象\n        private final bool isTail;\n        //给非必需字段设置默认值\n        private bool isEatGrass =false;\n        private double weight = 0.0;\n        privaet int sexMethod =1;\n        public Builder(string name,bool isTail){\n            //构造函数只取必需字段\n            this.name = name;\n            this.isTail = isTail;\n        }\n        public Builder setISEatGrass(bool isEatGrass){\n            this.isEatGrass = isEatGrass;\n            return this;\n        }\n        public Builder setISEatGrass(double weight){\n            this.weight = weight;\n            return this;\n        }\n        public Builder setSexMethod(int sexMetho){\n            this.sexMetho = sexMetho;\n            return this;\n        }\n\n        public Animal build(){//在builder类内声明一个构造器 返回animal对象\n            return new Animal(this);\n        }\n    }\n    //当然 在animal类的最后 也需要把builder的参数取出来\n    private Animal(Builder builder){\n        name = builder.name;\n        isTail = builder.isTail;\n        isEatGrass = builder.isEatGrass;\n        weigth = builder.weigth;\n        sexMethod = builder.sexMethod;\n    }\n}\n</code></pre><p>在某处构造该类对象时，即可像下面一样声明</p>\n<pre><code>    Animal dog = new Animal.Builder(&quot;旺财&quot;,true).setIsEatGrass(false).setSexMethod(3).setWeight(20.0)\n</code></pre><p>builder类似一个抽象工厂 客户端可以将这样一个builder传给方法，在方法中生成需要数量的对象。1.5+版本可以使用泛型定义。</p>\n<pre><code>public interface Builder{\n    public T build();\n}\n</code></pre><p>在类似生成二叉树，kd树的时候，往往用户只需要将数据push进入，然后调用一个builder整棵树就构造好了。这种方式往往类似于带限制通配符类型的builder.</p>\n<p>​</p>\n<p>还有一点值得注意的是，新增字段时，不比增加更多的构造函数 ！</p>\n<p>caution!</p>\n<ol>\n<li><p>增加了类长度，当字段较多时才较好的使用。</p>\n</li>\n<li><p>创建对象首先得创建构造器，在强调性能的地方会比较麻烦。</p>\n</li>\n</ol>"},{"title":"effective java笔记--静态工厂和Builder模式","date":"2016-04-13T07:15:14.000Z","_content":"\n# 静态工厂 #\n```java\n    public static Boolean valueOf (boolean b){\n        return b?Boolean.True:Boolean.False;\n    }\n```\n静态工厂以其名字显见，以[类名.方法名]的方式调用，其静态函数主要返回其类的对象，一般是引用值。返回什么东西，由参数决定，这个工厂给你产出来。其在API开发中使用广泛。\n<!-- more -->\n静态工厂最有趣的地方在于把方法**提供者**同方法**使用者**剥离开来，使用者不能明细地看到对象构造的具体过程，而是可见可得地获得所需的对象。当然好处有很多，例如返回的对象可以是该类的子类，能让被调用静态工厂方法的类不成为公有；例如有效的降低了构造对象的成本，静态工厂**「**不生产对像，一般只是对象的搬运工**」**。使用静态方法返回对象的方式在单态中使用广泛。\n\nList、Set有着相似的方式。它们都继承自Collection，同时不能实例化为该类的对象，必须通过子类实现父类的方法来实例化不同属性的对象。ArrayList HashSet等都通过注册的方式进行映射。\n>单态就是整个类能且只能有一个对象存在，为null则构造一个，不为null应返回该对象。例如购物车只能有一个、聊天平台只能有一个、饭馆的点菜平台只能有一个 这种类似的场景。\n\n与不同参数的构造函数不同，不同参数的静态工厂可能返回同一属性的该(子)类的对象。该方式抛弃了重复冗杂的new形式，在C#常见newInstance()构造新对象，而在Java里就比较少的出现，一般都是左右对等的。\n\n最上面这段代码最有趣的地方在于，它是Boolean的包装类，输入的是值类型而返回的是Boolean对象,当然Boolean只实例化了两个对象。但当新的子类构建，简单的静态工厂必须重写，常用的改进方法有：\n\n## 反射机制+配置\n  例如下面一段就是根据不同的类名，返回不同的对象\n\n```java\n    public static InterFace_Name staticFactory(String name)throws\n                                InstantiationException,\n                                IllegalAccessException,\n                                ClassNotFoundException{     \n        // 这边使用的是Java的Reflection机制来产生实例\n        // 以后就算改变了这边的程式，客户端程式是不用更改的\n        return (InterFace_Name) Class.forName(name).newInstance();\n    }\n```\n## 注册方式(Service Provider Framework)\n\n>注册方式需要\n1. 服务具体实现类(由服务提供商实现)\n2. 服务提供者实现类，1为2的实例，(由服务提供商实现)\n3. 服务定义接口，定义服务内容，不包含实现。\n4. 服务提供者接口，3为4的实例，定义获取提供者的方式，不包含实现。\n5. 服务提供者注册类\n最常见的实例就是JDBC(Java DataBase Connection)。下面这段最常见的连接mysql的标准函数就很好的体现了注册的方式。\n```java\n    public synchronized static Connection getCon() \n        throws ClassNotFoundException, SQLException\n    {\n        //服务提供者接口\n          String DRIVERNAME = \"com.mysql.jdbc.Driver\";\n          //java.sql.Driver.class这个是服务提供者接口，\n          //服务提供者若使mysql，那就使用\"com.mysql.jdbc.Driver\"；\n          //如果是sql server，那就使用\"com.microsoft.sqlserver.jdbc.SQLServerDriver\";\n          //如果是Oracle，那就要用\"oracle.jdbc.driver.OracleDriver\"...\n          String URL = \"jdbc:mysql://URL/DataBase_Names\";\n          String USER = \"USER\";\n          String PWD = \"PWD\"; \n          Connection connection = null;//接口 由服务提供者提供并实现具体服务 \n          Class.forName(DRIVERNAME);\n          //这里映射通过DriverManager判断获取的是哪个服务\n          connection = (Connection) DriverManager.getConnection(URL, USER,PWD);\n          //链接数据库  mysql已经在驱动管理注册了API(本机装mysql的时候)\n          //这里使用者编写的服务访问getConnection这个API，\n          if(connection!=null){return connection;}\n          else{return null;}//具体的数据库操作逻辑   \n    }  \n```\n上式的意义就是，使用**Java**连接上**数据库**。注意，不是某种数据库，是数据库。数据库的提供商按照定义的接口（Java提供的,增删改查等数据库操作），都可以顺利的连接上它们的数据库。  \n- ``Class.forName(\"...\")``这句实例化一个mysql等数据库提供商的<font color=\"red\">服务提供者实现类</font>，并将这个类的实例注册到DriverManager即<font color=\"red\">服务提供者注册类</font>。\n- 通过URL指明连接的地址和端口，判断所连接的数据库类别，在利用USERNAME PWD参数连接到数据库获取操作数据库的一个连接Connection。\n- Connection作为一个实现类，客户端的程序得到了这个实例就可以操作各种数据库，但其内部的原理对客户端不可见的，这就是所谓的面向接口编程。\n\n这里举一个炸裂的例子。\n1. 具体服务接口定义了live和die，然后实现类实现了具体的方法\n2. 服务提供者接口定义了获取服务实例的函数，然后服务提供者实现类实现了注册方式获取实例\n3. 注册类则对ClassName和服务提供者接口进行绑定。相当于，对不同的服务提供商通过名字进行映射\n4. 调用类则通过常规步骤，调用具体服务。\n\nHaInterface.java\n{% codeblock lang:java %}\n    package com.gua.com;\n    public interface HaInterface {\n        public void Live();\n        public void Die();\n    }\n{% endcodeblock %}  \nHaClass.java\n{% codeblock lang:java %}\n    package com.gua.com;\n    public class HaClass implements HaInterface{\n        @Override\n        public void Live() {\n            System.out.println(\"给你们一些人生经验\");\n        }\n        @Override\n        public void Die() {\n            System.out.println(\"又想搞大新闻!\");\n        }\n    }\n{% endcodeblock %}  \nXuyimiao.java\n{% codeblock lang:java %}\n    package com.gua.com;\n    public interface Xuyimiao {\n        public HaInterface HahaGo();\n    }\n{% endcodeblock %}  \nWoyaoXuyimiao.java\n{% codeblock lang:java %}\n    package com.gua.com;\n    public class WoyaoXuyimiao implements  Xuyimiao{\n        static{\n            MingwangManager.registerProvider(\"辣妹子辣\", new WoyaoXuyimiao());  \n        }\n        @Override\n        public HaInterface HahaGo() {\n            return new HaClass(); \n        }\n    }\n{% endcodeblock %}  \nMingwangManager.java\n\n```\npackage com.gua.com;\nimport java.util.Map;\nimport java.util.concurrent.ConcurrentHashMap;\npublic class MingwangManager {\n    public MingwangManager(){};\n    private static final Map<String, Xuyimiao> providers = new ConcurrentHashMap<String, Xuyimiao>();  \n    public static void registerProvider(String name, Xuyimiao p) {\n            providers.put(name, p);  \n        }  \n    public static HaInterface getService(String name) {       \n            Xuyimiao p = providers.get(name);  \n            if (p == null) {  \n                throw new IllegalArgumentException(  \n                        \"No provider registered with name:\" + name);  \n            } \n            return p.HahaGo();\n        }  \n}\n```  \nTestHa.java\n{% codeblock lang:java %}\n    package com.gua.com; \n    public class TestHa {  \n        public static void main(String[] args) throws ClassNotFoundException {\n            Class.forName(\"com.gua.com.WoyaoXuyimiao\");  \n            HaInterface hi = MingwangManager.getService(\"辣妹子辣\");  \n            hi.Live();  \n            hi.Die();  \n        }\n    }\n{% endcodeblock %}\n## 这种方式已经不推荐-工厂模式\n[工厂方法](https://zh.wikipedia.org/wiki/%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95)  [抽象工厂](https://zh.wikipedia.org/wiki/%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82)\n\n\n\n参考文章:[JAVA 服务提供者框架介绍]、[构造器和静态方法]\n[JAVA 服务提供者框架介绍]:(http://liwenshui322.iteye.com/blog/1267202) \n[构造器和静态方法]:(http://blog.csdn.net/csdn0123/article/details/7388445)\n\n<script src=\"../../../../js/highlight.min.js\"></script>\n<link href=\"../../../../css/monokai_sublime.min.css\" rel=\"stylesheet\">\n<script>hljs.initHighlightingOnLoad();</script>  ","source":"_posts/effective java--静态工厂.md","raw":"---\ntitle: 'effective java笔记--静态工厂和Builder模式'\ndate: 2016-04-13 15:15:14\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - test\n---\n\n# 静态工厂 #\n```java\n    public static Boolean valueOf (boolean b){\n        return b?Boolean.True:Boolean.False;\n    }\n```\n静态工厂以其名字显见，以[类名.方法名]的方式调用，其静态函数主要返回其类的对象，一般是引用值。返回什么东西，由参数决定，这个工厂给你产出来。其在API开发中使用广泛。\n<!-- more -->\n静态工厂最有趣的地方在于把方法**提供者**同方法**使用者**剥离开来，使用者不能明细地看到对象构造的具体过程，而是可见可得地获得所需的对象。当然好处有很多，例如返回的对象可以是该类的子类，能让被调用静态工厂方法的类不成为公有；例如有效的降低了构造对象的成本，静态工厂**「**不生产对像，一般只是对象的搬运工**」**。使用静态方法返回对象的方式在单态中使用广泛。\n\nList、Set有着相似的方式。它们都继承自Collection，同时不能实例化为该类的对象，必须通过子类实现父类的方法来实例化不同属性的对象。ArrayList HashSet等都通过注册的方式进行映射。\n>单态就是整个类能且只能有一个对象存在，为null则构造一个，不为null应返回该对象。例如购物车只能有一个、聊天平台只能有一个、饭馆的点菜平台只能有一个 这种类似的场景。\n\n与不同参数的构造函数不同，不同参数的静态工厂可能返回同一属性的该(子)类的对象。该方式抛弃了重复冗杂的new形式，在C#常见newInstance()构造新对象，而在Java里就比较少的出现，一般都是左右对等的。\n\n最上面这段代码最有趣的地方在于，它是Boolean的包装类，输入的是值类型而返回的是Boolean对象,当然Boolean只实例化了两个对象。但当新的子类构建，简单的静态工厂必须重写，常用的改进方法有：\n\n## 反射机制+配置\n  例如下面一段就是根据不同的类名，返回不同的对象\n\n```java\n    public static InterFace_Name staticFactory(String name)throws\n                                InstantiationException,\n                                IllegalAccessException,\n                                ClassNotFoundException{     \n        // 这边使用的是Java的Reflection机制来产生实例\n        // 以后就算改变了这边的程式，客户端程式是不用更改的\n        return (InterFace_Name) Class.forName(name).newInstance();\n    }\n```\n## 注册方式(Service Provider Framework)\n\n>注册方式需要\n1. 服务具体实现类(由服务提供商实现)\n2. 服务提供者实现类，1为2的实例，(由服务提供商实现)\n3. 服务定义接口，定义服务内容，不包含实现。\n4. 服务提供者接口，3为4的实例，定义获取提供者的方式，不包含实现。\n5. 服务提供者注册类\n最常见的实例就是JDBC(Java DataBase Connection)。下面这段最常见的连接mysql的标准函数就很好的体现了注册的方式。\n```java\n    public synchronized static Connection getCon() \n        throws ClassNotFoundException, SQLException\n    {\n        //服务提供者接口\n          String DRIVERNAME = \"com.mysql.jdbc.Driver\";\n          //java.sql.Driver.class这个是服务提供者接口，\n          //服务提供者若使mysql，那就使用\"com.mysql.jdbc.Driver\"；\n          //如果是sql server，那就使用\"com.microsoft.sqlserver.jdbc.SQLServerDriver\";\n          //如果是Oracle，那就要用\"oracle.jdbc.driver.OracleDriver\"...\n          String URL = \"jdbc:mysql://URL/DataBase_Names\";\n          String USER = \"USER\";\n          String PWD = \"PWD\"; \n          Connection connection = null;//接口 由服务提供者提供并实现具体服务 \n          Class.forName(DRIVERNAME);\n          //这里映射通过DriverManager判断获取的是哪个服务\n          connection = (Connection) DriverManager.getConnection(URL, USER,PWD);\n          //链接数据库  mysql已经在驱动管理注册了API(本机装mysql的时候)\n          //这里使用者编写的服务访问getConnection这个API，\n          if(connection!=null){return connection;}\n          else{return null;}//具体的数据库操作逻辑   \n    }  \n```\n上式的意义就是，使用**Java**连接上**数据库**。注意，不是某种数据库，是数据库。数据库的提供商按照定义的接口（Java提供的,增删改查等数据库操作），都可以顺利的连接上它们的数据库。  \n- ``Class.forName(\"...\")``这句实例化一个mysql等数据库提供商的<font color=\"red\">服务提供者实现类</font>，并将这个类的实例注册到DriverManager即<font color=\"red\">服务提供者注册类</font>。\n- 通过URL指明连接的地址和端口，判断所连接的数据库类别，在利用USERNAME PWD参数连接到数据库获取操作数据库的一个连接Connection。\n- Connection作为一个实现类，客户端的程序得到了这个实例就可以操作各种数据库，但其内部的原理对客户端不可见的，这就是所谓的面向接口编程。\n\n这里举一个炸裂的例子。\n1. 具体服务接口定义了live和die，然后实现类实现了具体的方法\n2. 服务提供者接口定义了获取服务实例的函数，然后服务提供者实现类实现了注册方式获取实例\n3. 注册类则对ClassName和服务提供者接口进行绑定。相当于，对不同的服务提供商通过名字进行映射\n4. 调用类则通过常规步骤，调用具体服务。\n\nHaInterface.java\n{% codeblock lang:java %}\n    package com.gua.com;\n    public interface HaInterface {\n        public void Live();\n        public void Die();\n    }\n{% endcodeblock %}  \nHaClass.java\n{% codeblock lang:java %}\n    package com.gua.com;\n    public class HaClass implements HaInterface{\n        @Override\n        public void Live() {\n            System.out.println(\"给你们一些人生经验\");\n        }\n        @Override\n        public void Die() {\n            System.out.println(\"又想搞大新闻!\");\n        }\n    }\n{% endcodeblock %}  \nXuyimiao.java\n{% codeblock lang:java %}\n    package com.gua.com;\n    public interface Xuyimiao {\n        public HaInterface HahaGo();\n    }\n{% endcodeblock %}  \nWoyaoXuyimiao.java\n{% codeblock lang:java %}\n    package com.gua.com;\n    public class WoyaoXuyimiao implements  Xuyimiao{\n        static{\n            MingwangManager.registerProvider(\"辣妹子辣\", new WoyaoXuyimiao());  \n        }\n        @Override\n        public HaInterface HahaGo() {\n            return new HaClass(); \n        }\n    }\n{% endcodeblock %}  \nMingwangManager.java\n\n```\npackage com.gua.com;\nimport java.util.Map;\nimport java.util.concurrent.ConcurrentHashMap;\npublic class MingwangManager {\n    public MingwangManager(){};\n    private static final Map<String, Xuyimiao> providers = new ConcurrentHashMap<String, Xuyimiao>();  \n    public static void registerProvider(String name, Xuyimiao p) {\n            providers.put(name, p);  \n        }  \n    public static HaInterface getService(String name) {       \n            Xuyimiao p = providers.get(name);  \n            if (p == null) {  \n                throw new IllegalArgumentException(  \n                        \"No provider registered with name:\" + name);  \n            } \n            return p.HahaGo();\n        }  \n}\n```  \nTestHa.java\n{% codeblock lang:java %}\n    package com.gua.com; \n    public class TestHa {  \n        public static void main(String[] args) throws ClassNotFoundException {\n            Class.forName(\"com.gua.com.WoyaoXuyimiao\");  \n            HaInterface hi = MingwangManager.getService(\"辣妹子辣\");  \n            hi.Live();  \n            hi.Die();  \n        }\n    }\n{% endcodeblock %}\n## 这种方式已经不推荐-工厂模式\n[工厂方法](https://zh.wikipedia.org/wiki/%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95)  [抽象工厂](https://zh.wikipedia.org/wiki/%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82)\n\n\n\n参考文章:[JAVA 服务提供者框架介绍]、[构造器和静态方法]\n[JAVA 服务提供者框架介绍]:(http://liwenshui322.iteye.com/blog/1267202) \n[构造器和静态方法]:(http://blog.csdn.net/csdn0123/article/details/7388445)\n\n<script src=\"../../../../js/highlight.min.js\"></script>\n<link href=\"../../../../css/monokai_sublime.min.css\" rel=\"stylesheet\">\n<script>hljs.initHighlightingOnLoad();</script>  ","slug":"effective java--静态工厂","published":1,"updated":"2016-05-16T15:21:17.911Z","_id":"cio8sn7n4002huco48p4r6rwi","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"静态工厂\"><a href=\"#静态工厂\" class=\"headerlink\" title=\"静态工厂\"></a>静态工厂</h1><pre><code class=\"java\">    public static Boolean valueOf (boolean b){\n        return b?Boolean.True:Boolean.False;\n    }\n</code></pre>\n<p>静态工厂以其名字显见，以[类名.方法名]的方式调用，其静态函数主要返回其类的对象，一般是引用值。返回什么东西，由参数决定，这个工厂给你产出来。其在API开发中使用广泛。<br><a id=\"more\"></a><br>静态工厂最有趣的地方在于把方法<strong>提供者</strong>同方法<strong>使用者</strong>剥离开来，使用者不能明细地看到对象构造的具体过程，而是可见可得地获得所需的对象。当然好处有很多，例如返回的对象可以是该类的子类，能让被调用静态工厂方法的类不成为公有；例如有效的降低了构造对象的成本，静态工厂<strong>「</strong>不生产对像，一般只是对象的搬运工<strong>」</strong>。使用静态方法返回对象的方式在单态中使用广泛。</p>\n<p>List、Set有着相似的方式。它们都继承自Collection，同时不能实例化为该类的对象，必须通过子类实现父类的方法来实例化不同属性的对象。ArrayList HashSet等都通过注册的方式进行映射。</p>\n<blockquote>\n<p>单态就是整个类能且只能有一个对象存在，为null则构造一个，不为null应返回该对象。例如购物车只能有一个、聊天平台只能有一个、饭馆的点菜平台只能有一个 这种类似的场景。</p>\n</blockquote>\n<p>与不同参数的构造函数不同，不同参数的静态工厂可能返回同一属性的该(子)类的对象。该方式抛弃了重复冗杂的new形式，在C#常见newInstance()构造新对象，而在Java里就比较少的出现，一般都是左右对等的。</p>\n<p>最上面这段代码最有趣的地方在于，它是Boolean的包装类，输入的是值类型而返回的是Boolean对象,当然Boolean只实例化了两个对象。但当新的子类构建，简单的静态工厂必须重写，常用的改进方法有：</p>\n<h2 id=\"反射机制-配置\"><a href=\"#反射机制-配置\" class=\"headerlink\" title=\"反射机制+配置\"></a>反射机制+配置</h2><p>  例如下面一段就是根据不同的类名，返回不同的对象</p>\n<pre><code class=\"java\">    public static InterFace_Name staticFactory(String name)throws\n                                InstantiationException,\n                                IllegalAccessException,\n                                ClassNotFoundException{     \n        // 这边使用的是Java的Reflection机制来产生实例\n        // 以后就算改变了这边的程式，客户端程式是不用更改的\n        return (InterFace_Name) Class.forName(name).newInstance();\n    }\n</code></pre>\n<h2 id=\"注册方式-Service-Provider-Framework\"><a href=\"#注册方式-Service-Provider-Framework\" class=\"headerlink\" title=\"注册方式(Service Provider Framework)\"></a>注册方式(Service Provider Framework)</h2><blockquote>\n<p>注册方式需要</p>\n<ol>\n<li>服务具体实现类(由服务提供商实现)</li>\n<li>服务提供者实现类，1为2的实例，(由服务提供商实现)</li>\n<li>服务定义接口，定义服务内容，不包含实现。</li>\n<li>服务提供者接口，3为4的实例，定义获取提供者的方式，不包含实现。</li>\n<li>服务提供者注册类<br>最常见的实例就是JDBC(Java DataBase Connection)。下面这段最常见的连接mysql的标准函数就很好的体现了注册的方式。<pre><code class=\"java\"> public synchronized static Connection getCon() \n     throws ClassNotFoundException, SQLException\n {\n     //服务提供者接口\n       String DRIVERNAME = &quot;com.mysql.jdbc.Driver&quot;;\n       //java.sql.Driver.class这个是服务提供者接口，\n       //服务提供者若使mysql，那就使用&quot;com.mysql.jdbc.Driver&quot;；\n       //如果是sql server，那就使用&quot;com.microsoft.sqlserver.jdbc.SQLServerDriver&quot;;\n       //如果是Oracle，那就要用&quot;oracle.jdbc.driver.OracleDriver&quot;...\n       String URL = &quot;jdbc:mysql://URL/DataBase_Names&quot;;\n       String USER = &quot;USER&quot;;\n       String PWD = &quot;PWD&quot;; \n       Connection connection = null;//接口 由服务提供者提供并实现具体服务 \n       Class.forName(DRIVERNAME);\n       //这里映射通过DriverManager判断获取的是哪个服务\n       connection = (Connection) DriverManager.getConnection(URL, USER,PWD);\n       //链接数据库  mysql已经在驱动管理注册了API(本机装mysql的时候)\n       //这里使用者编写的服务访问getConnection这个API，\n       if(connection!=null){return connection;}\n       else{return null;}//具体的数据库操作逻辑   \n }\n</code></pre>\n上式的意义就是，使用<strong>Java</strong>连接上<strong>数据库</strong>。注意，不是某种数据库，是数据库。数据库的提供商按照定义的接口（Java提供的,增删改查等数据库操作），都可以顺利的连接上它们的数据库。  </li>\n</ol>\n<ul>\n<li><code>Class.forName(&quot;...&quot;)</code>这句实例化一个mysql等数据库提供商的<font color=\"red\">服务提供者实现类</font>，并将这个类的实例注册到DriverManager即<font color=\"red\">服务提供者注册类</font>。</li>\n<li>通过URL指明连接的地址和端口，判断所连接的数据库类别，在利用USERNAME PWD参数连接到数据库获取操作数据库的一个连接Connection。</li>\n<li>Connection作为一个实现类，客户端的程序得到了这个实例就可以操作各种数据库，但其内部的原理对客户端不可见的，这就是所谓的面向接口编程。</li>\n</ul>\n</blockquote>\n<p>这里举一个炸裂的例子。</p>\n<ol>\n<li>具体服务接口定义了live和die，然后实现类实现了具体的方法</li>\n<li>服务提供者接口定义了获取服务实例的函数，然后服务提供者实现类实现了注册方式获取实例</li>\n<li>注册类则对ClassName和服务提供者接口进行绑定。相当于，对不同的服务提供商通过名字进行映射</li>\n<li>调用类则通过常规步骤，调用具体服务。</li>\n</ol>\n<p>HaInterface.java<br><pre><code>package com.gua.com;\npublic interface HaInterface {\n    public void Live();\n    public void Die();\n}</code></pre><br>HaClass.java<br><pre><code>package com.gua.com;\npublic class HaClass implements HaInterface{\n    @Override\n    public void Live() {\n        System.out.println(\"给你们一些人生经验\");\n    }\n    @Override\n    public void Die() {\n        System.out.println(\"又想搞大新闻!\");\n    }\n}</code></pre><br>Xuyimiao.java<br><pre><code>package com.gua.com;\npublic interface Xuyimiao {\n    public HaInterface HahaGo();\n}</code></pre><br>WoyaoXuyimiao.java<br><pre><code>package com.gua.com;\npublic class WoyaoXuyimiao implements  Xuyimiao{\n    static{\n        MingwangManager.registerProvider(\"辣妹子辣\", new WoyaoXuyimiao());  \n    }\n    @Override\n    public HaInterface HahaGo() {\n        return new HaClass(); \n    }\n}</code></pre><br>MingwangManager.java</p>\n<pre><code>package com.gua.com;\nimport java.util.Map;\nimport java.util.concurrent.ConcurrentHashMap;\npublic class MingwangManager {\n    public MingwangManager(){};\n    private static final Map&lt;String, Xuyimiao&gt; providers = new ConcurrentHashMap&lt;String, Xuyimiao&gt;();  \n    public static void registerProvider(String name, Xuyimiao p) {\n            providers.put(name, p);  \n        }  \n    public static HaInterface getService(String name) {       \n            Xuyimiao p = providers.get(name);  \n            if (p == null) {  \n                throw new IllegalArgumentException(  \n                        &quot;No provider registered with name:&quot; + name);  \n            } \n            return p.HahaGo();\n        }  \n}\n</code></pre><p>TestHa.java<br><pre><code>package com.gua.com; \npublic class TestHa {  \n    public static void main(String[] args) throws ClassNotFoundException {\n        Class.forName(\"com.gua.com.WoyaoXuyimiao\");  \n        HaInterface hi = MingwangManager.getService(\"辣妹子辣\");  \n        hi.Live();  \n        hi.Die();  \n    }\n}</code></pre></p>\n<h2 id=\"这种方式已经不推荐-工厂模式\"><a href=\"#这种方式已经不推荐-工厂模式\" class=\"headerlink\" title=\"这种方式已经不推荐-工厂模式\"></a>这种方式已经不推荐-工厂模式</h2><p><a href=\"https://zh.wikipedia.org/wiki/%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95\" target=\"_blank\" rel=\"external\">工厂方法</a>  <a href=\"https://zh.wikipedia.org/wiki/%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82\" target=\"_blank\" rel=\"external\">抽象工厂</a></p>\n<p>参考文章:<a href=\"(http://liwenshui322.iteye.com/blog/1267202)\">JAVA 服务提供者框架介绍</a>、<a href=\"(http://blog.csdn.net/csdn0123/article/details/7388445)\">构造器和静态方法</a></p>\n<script src=\"../../../../js/highlight.min.js\"></script>\n<link href=\"../../../../css/monokai_sublime.min.css\" rel=\"stylesheet\">\n<script>hljs.initHighlightingOnLoad();</script>","excerpt":"<h1 id=\"静态工厂\"><a href=\"#静态工厂\" class=\"headerlink\" title=\"静态工厂\"></a>静态工厂</h1><pre><code class=\"java\">    public static Boolean valueOf (boolean b){\n        return b?Boolean.True:Boolean.False;\n    }\n</code></pre>\n<p>静态工厂以其名字显见，以[类名.方法名]的方式调用，其静态函数主要返回其类的对象，一般是引用值。返回什么东西，由参数决定，这个工厂给你产出来。其在API开发中使用广泛。<br>","more":"<br>静态工厂最有趣的地方在于把方法<strong>提供者</strong>同方法<strong>使用者</strong>剥离开来，使用者不能明细地看到对象构造的具体过程，而是可见可得地获得所需的对象。当然好处有很多，例如返回的对象可以是该类的子类，能让被调用静态工厂方法的类不成为公有；例如有效的降低了构造对象的成本，静态工厂<strong>「</strong>不生产对像，一般只是对象的搬运工<strong>」</strong>。使用静态方法返回对象的方式在单态中使用广泛。</p>\n<p>List、Set有着相似的方式。它们都继承自Collection，同时不能实例化为该类的对象，必须通过子类实现父类的方法来实例化不同属性的对象。ArrayList HashSet等都通过注册的方式进行映射。</p>\n<blockquote>\n<p>单态就是整个类能且只能有一个对象存在，为null则构造一个，不为null应返回该对象。例如购物车只能有一个、聊天平台只能有一个、饭馆的点菜平台只能有一个 这种类似的场景。</p>\n</blockquote>\n<p>与不同参数的构造函数不同，不同参数的静态工厂可能返回同一属性的该(子)类的对象。该方式抛弃了重复冗杂的new形式，在C#常见newInstance()构造新对象，而在Java里就比较少的出现，一般都是左右对等的。</p>\n<p>最上面这段代码最有趣的地方在于，它是Boolean的包装类，输入的是值类型而返回的是Boolean对象,当然Boolean只实例化了两个对象。但当新的子类构建，简单的静态工厂必须重写，常用的改进方法有：</p>\n<h2 id=\"反射机制-配置\"><a href=\"#反射机制-配置\" class=\"headerlink\" title=\"反射机制+配置\"></a>反射机制+配置</h2><p>  例如下面一段就是根据不同的类名，返回不同的对象</p>\n<pre><code class=\"java\">    public static InterFace_Name staticFactory(String name)throws\n                                InstantiationException,\n                                IllegalAccessException,\n                                ClassNotFoundException{     \n        // 这边使用的是Java的Reflection机制来产生实例\n        // 以后就算改变了这边的程式，客户端程式是不用更改的\n        return (InterFace_Name) Class.forName(name).newInstance();\n    }\n</code></pre>\n<h2 id=\"注册方式-Service-Provider-Framework\"><a href=\"#注册方式-Service-Provider-Framework\" class=\"headerlink\" title=\"注册方式(Service Provider Framework)\"></a>注册方式(Service Provider Framework)</h2><blockquote>\n<p>注册方式需要</p>\n<ol>\n<li>服务具体实现类(由服务提供商实现)</li>\n<li>服务提供者实现类，1为2的实例，(由服务提供商实现)</li>\n<li>服务定义接口，定义服务内容，不包含实现。</li>\n<li>服务提供者接口，3为4的实例，定义获取提供者的方式，不包含实现。</li>\n<li>服务提供者注册类<br>最常见的实例就是JDBC(Java DataBase Connection)。下面这段最常见的连接mysql的标准函数就很好的体现了注册的方式。<pre><code class=\"java\"> public synchronized static Connection getCon() \n     throws ClassNotFoundException, SQLException\n {\n     //服务提供者接口\n       String DRIVERNAME = &quot;com.mysql.jdbc.Driver&quot;;\n       //java.sql.Driver.class这个是服务提供者接口，\n       //服务提供者若使mysql，那就使用&quot;com.mysql.jdbc.Driver&quot;；\n       //如果是sql server，那就使用&quot;com.microsoft.sqlserver.jdbc.SQLServerDriver&quot;;\n       //如果是Oracle，那就要用&quot;oracle.jdbc.driver.OracleDriver&quot;...\n       String URL = &quot;jdbc:mysql://URL/DataBase_Names&quot;;\n       String USER = &quot;USER&quot;;\n       String PWD = &quot;PWD&quot;; \n       Connection connection = null;//接口 由服务提供者提供并实现具体服务 \n       Class.forName(DRIVERNAME);\n       //这里映射通过DriverManager判断获取的是哪个服务\n       connection = (Connection) DriverManager.getConnection(URL, USER,PWD);\n       //链接数据库  mysql已经在驱动管理注册了API(本机装mysql的时候)\n       //这里使用者编写的服务访问getConnection这个API，\n       if(connection!=null){return connection;}\n       else{return null;}//具体的数据库操作逻辑   \n }\n</code></pre>\n上式的意义就是，使用<strong>Java</strong>连接上<strong>数据库</strong>。注意，不是某种数据库，是数据库。数据库的提供商按照定义的接口（Java提供的,增删改查等数据库操作），都可以顺利的连接上它们的数据库。  </li>\n</ol>\n<ul>\n<li><code>Class.forName(&quot;...&quot;)</code>这句实例化一个mysql等数据库提供商的<font color=\"red\">服务提供者实现类</font>，并将这个类的实例注册到DriverManager即<font color=\"red\">服务提供者注册类</font>。</li>\n<li>通过URL指明连接的地址和端口，判断所连接的数据库类别，在利用USERNAME PWD参数连接到数据库获取操作数据库的一个连接Connection。</li>\n<li>Connection作为一个实现类，客户端的程序得到了这个实例就可以操作各种数据库，但其内部的原理对客户端不可见的，这就是所谓的面向接口编程。</li>\n</ul>\n</blockquote>\n<p>这里举一个炸裂的例子。</p>\n<ol>\n<li>具体服务接口定义了live和die，然后实现类实现了具体的方法</li>\n<li>服务提供者接口定义了获取服务实例的函数，然后服务提供者实现类实现了注册方式获取实例</li>\n<li>注册类则对ClassName和服务提供者接口进行绑定。相当于，对不同的服务提供商通过名字进行映射</li>\n<li>调用类则通过常规步骤，调用具体服务。</li>\n</ol>\n<p>HaInterface.java<br><pre><code>package com.gua.com;\npublic interface HaInterface {\n    public void Live();\n    public void Die();\n}</code></pre><br>HaClass.java<br><pre><code>package com.gua.com;\npublic class HaClass implements HaInterface{\n    @Override\n    public void Live() {\n        System.out.println(\"给你们一些人生经验\");\n    }\n    @Override\n    public void Die() {\n        System.out.println(\"又想搞大新闻!\");\n    }\n}</code></pre><br>Xuyimiao.java<br><pre><code>package com.gua.com;\npublic interface Xuyimiao {\n    public HaInterface HahaGo();\n}</code></pre><br>WoyaoXuyimiao.java<br><pre><code>package com.gua.com;\npublic class WoyaoXuyimiao implements  Xuyimiao{\n    static{\n        MingwangManager.registerProvider(\"辣妹子辣\", new WoyaoXuyimiao());  \n    }\n    @Override\n    public HaInterface HahaGo() {\n        return new HaClass(); \n    }\n}</code></pre><br>MingwangManager.java</p>\n<pre><code>package com.gua.com;\nimport java.util.Map;\nimport java.util.concurrent.ConcurrentHashMap;\npublic class MingwangManager {\n    public MingwangManager(){};\n    private static final Map&lt;String, Xuyimiao&gt; providers = new ConcurrentHashMap&lt;String, Xuyimiao&gt;();  \n    public static void registerProvider(String name, Xuyimiao p) {\n            providers.put(name, p);  \n        }  \n    public static HaInterface getService(String name) {       \n            Xuyimiao p = providers.get(name);  \n            if (p == null) {  \n                throw new IllegalArgumentException(  \n                        &quot;No provider registered with name:&quot; + name);  \n            } \n            return p.HahaGo();\n        }  \n}\n</code></pre><p>TestHa.java<br><pre><code>package com.gua.com; \npublic class TestHa {  \n    public static void main(String[] args) throws ClassNotFoundException {\n        Class.forName(\"com.gua.com.WoyaoXuyimiao\");  \n        HaInterface hi = MingwangManager.getService(\"辣妹子辣\");  \n        hi.Live();  \n        hi.Die();  \n    }\n}</code></pre></p>\n<h2 id=\"这种方式已经不推荐-工厂模式\"><a href=\"#这种方式已经不推荐-工厂模式\" class=\"headerlink\" title=\"这种方式已经不推荐-工厂模式\"></a>这种方式已经不推荐-工厂模式</h2><p><a href=\"https://zh.wikipedia.org/wiki/%E5%B7%A5%E5%8E%82%E6%96%B9%E6%B3%95\">工厂方法</a>  <a href=\"https://zh.wikipedia.org/wiki/%E6%8A%BD%E8%B1%A1%E5%B7%A5%E5%8E%82\">抽象工厂</a></p>\n<p>参考文章:<a href=\"(http://liwenshui322.iteye.com/blog/1267202)\">JAVA 服务提供者框架介绍</a>、<a href=\"(http://blog.csdn.net/csdn0123/article/details/7388445)\">构造器和静态方法</a></p>\n<script src=\"../../../../js/highlight.min.js\"></script>\n<link href=\"../../../../css/monokai_sublime.min.css\" rel=\"stylesheet\">\n<script>hljs.initHighlightingOnLoad();</script>"},{"title":"erdas9.2+lps安装","id":"504","date":"2014-10-12T11:09:00.000Z","_content":"\n[主程序 csdn种子](http://download.csdn.net/download/lxfcolor/3531297) 速度略快\n[安装步骤和破解方法](http://jingyan.baidu.com/article/3aed632e7d5c8c70108091e6.html)\n其中，crack文件使用[csdn的crack](http://download.csdn.net/download/huahua0079/5015925)\n安装时注意和arcgis的兼容性问题","source":"_posts/erdas9.2+lps安装.md","raw":"---\ntitle: erdas9.2+lps安装\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - erdas\nid: 504\ndate: 2014-10-12 19:09:00\n---\n\n[主程序 csdn种子](http://download.csdn.net/download/lxfcolor/3531297) 速度略快\n[安装步骤和破解方法](http://jingyan.baidu.com/article/3aed632e7d5c8c70108091e6.html)\n其中，crack文件使用[csdn的crack](http://download.csdn.net/download/huahua0079/5015925)\n安装时注意和arcgis的兼容性问题","slug":"erdas9.2+lps安装","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7n6002kuco4ko5tp6e1","content":"<p><a href=\"http://download.csdn.net/download/lxfcolor/3531297\" target=\"_blank\" rel=\"external\">主程序 csdn种子</a> 速度略快<br><a href=\"http://jingyan.baidu.com/article/3aed632e7d5c8c70108091e6.html\" target=\"_blank\" rel=\"external\">安装步骤和破解方法</a><br>其中，crack文件使用<a href=\"http://download.csdn.net/download/huahua0079/5015925\" target=\"_blank\" rel=\"external\">csdn的crack</a><br>安装时注意和arcgis的兼容性问题</p>","excerpt":"","more":"<p><a href=\"http://download.csdn.net/download/lxfcolor/3531297\">主程序 csdn种子</a> 速度略快<br><a href=\"http://jingyan.baidu.com/article/3aed632e7d5c8c70108091e6.html\">安装步骤和破解方法</a><br>其中，crack文件使用<a href=\"http://download.csdn.net/download/huahua0079/5015925\">csdn的crack</a><br>安装时注意和arcgis的兼容性问题</p>"},{"title":"利用Gson转换json数据和java对象","id":"189","date":"2013-05-17T02:03:39.000Z","_content":"\n一直在使用json-lib包\n每次得到数据都得转换半天 除了实体类外还要写一个影射类 非常的麻烦\n利用Gson包就可以直接导入整个实体类以转换 不过需要的是json的数据名称与实体类的名称要一致\n首先是实体类\n```java\npublic class User {\n\tprivate String userName;\n\tprivate String psw;\n\tpublic String getUserName() {\n\t\treturn userName;\n\t}\n\tpublic void setUserName(String userName) {\n\t\tthis.userName = userName;\n\t}\n\tpublic String getPsw() {\n\t\treturn psw;\n\t}\n\tpublic void setPsw(String psw) {\n\t\tthis.psw = psw;\n\t}\n\tpublic User(String userName, String psw) {\n\t\tsuper();\n\t\tthis.userName = userName;\n\t\tthis.psw = psw;\n\t}\n\t@Override\n\tpublic String toString() {\n\t\treturn &quot;userName= &quot; + userName + &quot; psw= &quot; + psw;\n\t}\n\n}\n```\n利用Gson输出Json数据\n----原版的利用影射类\n```java\npublic class MyServlet extends HttpServlet {\n\n\tprivate static final long serialVersionUID = 1L;\n\tpublic MyServlet() {\n\t\tsuper();\n\t}\n\tpublic void destroy() {\n\t\tsuper.destroy(); \n\t}\n\n\tpublic void doGet(HttpServletRequest request, HttpServletResponse response)\n\t\t\tthrows ServletException, IOException {\n\t\tthis.doPost(request, response);\n\t}\n\n\tpublic void doPost(HttpServletRequest request, HttpServletResponse response)\n\t\t\tthrows ServletException, IOException {\n\t\tresponse.setContentType(&quot;text/html;charset=UTF-8&quot;);\n\t\tPrintWriter out = response.getWriter();\n\t\tJSONArray array = new JSONArray();\n\t\t JdbcTemplate template=new JdbcTemplate();\n\t\t List&lt;User&gt;  list=null;\t\t \n\t\t try {\n\t\t\t list=(List&lt;User&gt;)template.findAll(&quot;select * from User&quot;, new UserMapping());\n//数据库已连接好的情况下...User是表 UserMapping是实体类\n\t\t} catch (SQLException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t\t \tfor (int i = 0; i &lt; list.size(); i++) \n\t\t \t\t{\n\t\t\t\t JSONObject temp = new JSONObject()   \n\t\t         .element( &quot;Name&quot;,list.get(i).getUserName() )  \n\t\t         .element( &quot;password&quot;, list.get(i).getPsw() );\t\t   \n\t\t\t\t array.add(temp);\t}\n\t\t\tout.print(array.toString());\n\t\t\tSystem.out.println(array.toString());\n\t\t} \n\t\t}\n```\n现在利用Gson就可以了\n\n```java\n                Gson gson = new Gson();\n\t\tString msgJson = gson.toJson(list);\n```\n利用Gson转换json数据\n转换单一字符串 如：\n[{\"userName\":\"userName\",\"pwd\":123}]\nUser user= gson.fromJson(str, User.class);\n转换字符串组， 如：\n```java\nList<User> users = gson.fromJson(str, new TypeToken<List<User>>(){}.getType());\nfor(int i = 0; i < users.size() ; i++)\n{\n     User user = users.get(i);\n     System.out.println(user.toString());//这里想做什么都可以了 记住必须是实体类的名字和json中传送的名字相同\n}\n```","source":"_posts/gson-json-java.md","raw":"---\ntitle: 利用Gson转换json数据和java对象\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - java\nid: 189\ndate: 2013-05-17 10:03:39\n---\n\n一直在使用json-lib包\n每次得到数据都得转换半天 除了实体类外还要写一个影射类 非常的麻烦\n利用Gson包就可以直接导入整个实体类以转换 不过需要的是json的数据名称与实体类的名称要一致\n首先是实体类\n```java\npublic class User {\n\tprivate String userName;\n\tprivate String psw;\n\tpublic String getUserName() {\n\t\treturn userName;\n\t}\n\tpublic void setUserName(String userName) {\n\t\tthis.userName = userName;\n\t}\n\tpublic String getPsw() {\n\t\treturn psw;\n\t}\n\tpublic void setPsw(String psw) {\n\t\tthis.psw = psw;\n\t}\n\tpublic User(String userName, String psw) {\n\t\tsuper();\n\t\tthis.userName = userName;\n\t\tthis.psw = psw;\n\t}\n\t@Override\n\tpublic String toString() {\n\t\treturn &quot;userName= &quot; + userName + &quot; psw= &quot; + psw;\n\t}\n\n}\n```\n利用Gson输出Json数据\n----原版的利用影射类\n```java\npublic class MyServlet extends HttpServlet {\n\n\tprivate static final long serialVersionUID = 1L;\n\tpublic MyServlet() {\n\t\tsuper();\n\t}\n\tpublic void destroy() {\n\t\tsuper.destroy(); \n\t}\n\n\tpublic void doGet(HttpServletRequest request, HttpServletResponse response)\n\t\t\tthrows ServletException, IOException {\n\t\tthis.doPost(request, response);\n\t}\n\n\tpublic void doPost(HttpServletRequest request, HttpServletResponse response)\n\t\t\tthrows ServletException, IOException {\n\t\tresponse.setContentType(&quot;text/html;charset=UTF-8&quot;);\n\t\tPrintWriter out = response.getWriter();\n\t\tJSONArray array = new JSONArray();\n\t\t JdbcTemplate template=new JdbcTemplate();\n\t\t List&lt;User&gt;  list=null;\t\t \n\t\t try {\n\t\t\t list=(List&lt;User&gt;)template.findAll(&quot;select * from User&quot;, new UserMapping());\n//数据库已连接好的情况下...User是表 UserMapping是实体类\n\t\t} catch (SQLException e) {\n\t\t\t// TODO Auto-generated catch block\n\t\t\te.printStackTrace();\n\t\t}\n\t\t \tfor (int i = 0; i &lt; list.size(); i++) \n\t\t \t\t{\n\t\t\t\t JSONObject temp = new JSONObject()   \n\t\t         .element( &quot;Name&quot;,list.get(i).getUserName() )  \n\t\t         .element( &quot;password&quot;, list.get(i).getPsw() );\t\t   \n\t\t\t\t array.add(temp);\t}\n\t\t\tout.print(array.toString());\n\t\t\tSystem.out.println(array.toString());\n\t\t} \n\t\t}\n```\n现在利用Gson就可以了\n\n```java\n                Gson gson = new Gson();\n\t\tString msgJson = gson.toJson(list);\n```\n利用Gson转换json数据\n转换单一字符串 如：\n[{\"userName\":\"userName\",\"pwd\":123}]\nUser user= gson.fromJson(str, User.class);\n转换字符串组， 如：\n```java\nList<User> users = gson.fromJson(str, new TypeToken<List<User>>(){}.getType());\nfor(int i = 0; i < users.size() ; i++)\n{\n     User user = users.get(i);\n     System.out.println(user.toString());//这里想做什么都可以了 记住必须是实体类的名字和json中传送的名字相同\n}\n```","slug":"gson-json-java","published":1,"updated":"2016-04-11T14:22:34.439Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7n8002ouco4zjdhpxk0","content":"<p>一直在使用json-lib包<br>每次得到数据都得转换半天 除了实体类外还要写一个影射类 非常的麻烦<br>利用Gson包就可以直接导入整个实体类以转换 不过需要的是json的数据名称与实体类的名称要一致<br>首先是实体类</p>\n<pre><code class=\"java\">public class User {\n    private String userName;\n    private String psw;\n    public String getUserName() {\n        return userName;\n    }\n    public void setUserName(String userName) {\n        this.userName = userName;\n    }\n    public String getPsw() {\n        return psw;\n    }\n    public void setPsw(String psw) {\n        this.psw = psw;\n    }\n    public User(String userName, String psw) {\n        super();\n        this.userName = userName;\n        this.psw = psw;\n    }\n    @Override\n    public String toString() {\n        return &amp;quot;userName= &amp;quot; + userName + &amp;quot; psw= &amp;quot; + psw;\n    }\n\n}\n</code></pre>\n<p>利用Gson输出Json数据<br>—-原版的利用影射类</p>\n<pre><code class=\"java\">public class MyServlet extends HttpServlet {\n\n    private static final long serialVersionUID = 1L;\n    public MyServlet() {\n        super();\n    }\n    public void destroy() {\n        super.destroy(); \n    }\n\n    public void doGet(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        this.doPost(request, response);\n    }\n\n    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        response.setContentType(&amp;quot;text/html;charset=UTF-8&amp;quot;);\n        PrintWriter out = response.getWriter();\n        JSONArray array = new JSONArray();\n         JdbcTemplate template=new JdbcTemplate();\n         List&amp;lt;User&amp;gt;  list=null;         \n         try {\n             list=(List&amp;lt;User&amp;gt;)template.findAll(&amp;quot;select * from User&amp;quot;, new UserMapping());\n//数据库已连接好的情况下...User是表 UserMapping是实体类\n        } catch (SQLException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n             for (int i = 0; i &amp;lt; list.size(); i++) \n                 {\n                 JSONObject temp = new JSONObject()   \n                 .element( &amp;quot;Name&amp;quot;,list.get(i).getUserName() )  \n                 .element( &amp;quot;password&amp;quot;, list.get(i).getPsw() );           \n                 array.add(temp);    }\n            out.print(array.toString());\n            System.out.println(array.toString());\n        } \n        }\n</code></pre>\n<p>现在利用Gson就可以了</p>\n<pre><code class=\"java\">                Gson gson = new Gson();\n        String msgJson = gson.toJson(list);\n</code></pre>\n<p>利用Gson转换json数据<br>转换单一字符串 如：<br>[{“userName”:”userName”,”pwd”:123}]<br>User user= gson.fromJson(str, User.class);<br>转换字符串组， 如：</p>\n<pre><code class=\"java\">List&lt;User&gt; users = gson.fromJson(str, new TypeToken&lt;List&lt;User&gt;&gt;(){}.getType());\nfor(int i = 0; i &lt; users.size() ; i++)\n{\n     User user = users.get(i);\n     System.out.println(user.toString());//这里想做什么都可以了 记住必须是实体类的名字和json中传送的名字相同\n}\n</code></pre>","excerpt":"","more":"<p>一直在使用json-lib包<br>每次得到数据都得转换半天 除了实体类外还要写一个影射类 非常的麻烦<br>利用Gson包就可以直接导入整个实体类以转换 不过需要的是json的数据名称与实体类的名称要一致<br>首先是实体类</p>\n<pre><code class=\"java\">public class User {\n    private String userName;\n    private String psw;\n    public String getUserName() {\n        return userName;\n    }\n    public void setUserName(String userName) {\n        this.userName = userName;\n    }\n    public String getPsw() {\n        return psw;\n    }\n    public void setPsw(String psw) {\n        this.psw = psw;\n    }\n    public User(String userName, String psw) {\n        super();\n        this.userName = userName;\n        this.psw = psw;\n    }\n    @Override\n    public String toString() {\n        return &amp;quot;userName= &amp;quot; + userName + &amp;quot; psw= &amp;quot; + psw;\n    }\n\n}\n</code></pre>\n<p>利用Gson输出Json数据<br>—-原版的利用影射类</p>\n<pre><code class=\"java\">public class MyServlet extends HttpServlet {\n\n    private static final long serialVersionUID = 1L;\n    public MyServlet() {\n        super();\n    }\n    public void destroy() {\n        super.destroy(); \n    }\n\n    public void doGet(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        this.doPost(request, response);\n    }\n\n    public void doPost(HttpServletRequest request, HttpServletResponse response)\n            throws ServletException, IOException {\n        response.setContentType(&amp;quot;text/html;charset=UTF-8&amp;quot;);\n        PrintWriter out = response.getWriter();\n        JSONArray array = new JSONArray();\n         JdbcTemplate template=new JdbcTemplate();\n         List&amp;lt;User&amp;gt;  list=null;         \n         try {\n             list=(List&amp;lt;User&amp;gt;)template.findAll(&amp;quot;select * from User&amp;quot;, new UserMapping());\n//数据库已连接好的情况下...User是表 UserMapping是实体类\n        } catch (SQLException e) {\n            // TODO Auto-generated catch block\n            e.printStackTrace();\n        }\n             for (int i = 0; i &amp;lt; list.size(); i++) \n                 {\n                 JSONObject temp = new JSONObject()   \n                 .element( &amp;quot;Name&amp;quot;,list.get(i).getUserName() )  \n                 .element( &amp;quot;password&amp;quot;, list.get(i).getPsw() );           \n                 array.add(temp);    }\n            out.print(array.toString());\n            System.out.println(array.toString());\n        } \n        }\n</code></pre>\n<p>现在利用Gson就可以了</p>\n<pre><code class=\"java\">                Gson gson = new Gson();\n        String msgJson = gson.toJson(list);\n</code></pre>\n<p>利用Gson转换json数据<br>转换单一字符串 如：<br>[{“userName”:”userName”,”pwd”:123}]<br>User user= gson.fromJson(str, User.class);<br>转换字符串组， 如：</p>\n<pre><code class=\"java\">List&lt;User&gt; users = gson.fromJson(str, new TypeToken&lt;List&lt;User&gt;&gt;(){}.getType());\nfor(int i = 0; i &lt; users.size() ; i++)\n{\n     User user = users.get(i);\n     System.out.println(user.toString());//这里想做什么都可以了 记住必须是实体类的名字和json中传送的名字相同\n}\n</code></pre>"},{"title":"[汇总][2014.05.08]goagent在chrome firefox android以及shadowsocks的爬墙","id":"471","date":"2014-05-08T15:45:54.000Z","_content":"\n[goagent图文教程](http://wildcat.name/goagent.html  \"goagent图文教程\")--appid的注册 goagent的下载\n\n&nbsp;\n\n其中第六点autooproxy已经跪了。如下\ngoagent+<span style=\"color: #ff0000;\">foxyproxy</span>\n1\\. 导入证书：选项-》高级-》加密-》查看证书-》导入-》\"goagent/local/CA.crt\"\n2\\. foxyproxy-代理服务器-新建代理服务器-代理服务器细节\n3\\. 主机选项:127.0.0.1 端口:8087 （<span style=\"color: red;\">**不**要勾选socks代理</span>）\n4\\. URL模式：勾选--【不要内部网络IP地址使用这个代理】\n5\\. 点击确定\n6\\. 模式订阅：点击 转到\n7\\. 在出现的窗口中填写 订阅名称、订阅描述 和 订阅网址（https://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt ）代理服务器为刚才设置的goagent代理服务器\n8\\. Format：AutoProxy 和 Obfuscation: Base64\n9\\. 点击确定\n10.快速添加：启用、选择设置好的goagent代理\n11.选择工作模式：使用基于其预定义模板的代理服务器\n12.关闭\n13.重启FireFox\n\n[goagent在android](http://www.coolapk.com/apk/org.gaeproxy \"goagent在android\")     [shadowsocks 在电脑](http://blog.mkfree.com/posts/515e9b46975abbe5be7e21f1 \"shawsocks on computer\") [shadowsocks在安卓](http://m.163.com/android/software/320or6.html \"showsocks在android的爬墙\") [shadowsocks在iOS](http://www.liqucn.com/rj/130604.shtml \"shadowsocks在iOS\")","source":"_posts/goagent-chrome.md","raw":"---\ntitle: '[汇总][2014.05.08]goagent在chrome firefox android以及shadowsocks的爬墙'\ncategories:\n  - App强推\n  - 软文\ntags:\n  - 梯子\n  - 测评\nid: 471\ndate: 2014-05-08 23:45:54\n---\n\n[goagent图文教程](http://wildcat.name/goagent.html  \"goagent图文教程\")--appid的注册 goagent的下载\n\n&nbsp;\n\n其中第六点autooproxy已经跪了。如下\ngoagent+<span style=\"color: #ff0000;\">foxyproxy</span>\n1\\. 导入证书：选项-》高级-》加密-》查看证书-》导入-》\"goagent/local/CA.crt\"\n2\\. foxyproxy-代理服务器-新建代理服务器-代理服务器细节\n3\\. 主机选项:127.0.0.1 端口:8087 （<span style=\"color: red;\">**不**要勾选socks代理</span>）\n4\\. URL模式：勾选--【不要内部网络IP地址使用这个代理】\n5\\. 点击确定\n6\\. 模式订阅：点击 转到\n7\\. 在出现的窗口中填写 订阅名称、订阅描述 和 订阅网址（https://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt ）代理服务器为刚才设置的goagent代理服务器\n8\\. Format：AutoProxy 和 Obfuscation: Base64\n9\\. 点击确定\n10.快速添加：启用、选择设置好的goagent代理\n11.选择工作模式：使用基于其预定义模板的代理服务器\n12.关闭\n13.重启FireFox\n\n[goagent在android](http://www.coolapk.com/apk/org.gaeproxy \"goagent在android\")     [shadowsocks 在电脑](http://blog.mkfree.com/posts/515e9b46975abbe5be7e21f1 \"shawsocks on computer\") [shadowsocks在安卓](http://m.163.com/android/software/320or6.html \"showsocks在android的爬墙\") [shadowsocks在iOS](http://www.liqucn.com/rj/130604.shtml \"shadowsocks在iOS\")","slug":"goagent-chrome","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7na002quco4pp3n47jn","content":"<p><a href=\"http://wildcat.name/goagent.html\" title=\"goagent图文教程\" target=\"_blank\" rel=\"external\">goagent图文教程</a>–appid的注册 goagent的下载</p>\n<p>&nbsp;</p>\n<p>其中第六点autooproxy已经跪了。如下<br>goagent+<span style=\"color: #ff0000\">foxyproxy</span><br>1. 导入证书：选项-》高级-》加密-》查看证书-》导入-》”goagent/local/CA.crt”<br>2. foxyproxy-代理服务器-新建代理服务器-代理服务器细节<br>3. 主机选项:127.0.0.1 端口:8087 （<span style=\"color: red\"><strong>不</strong>要勾选socks代理</span>）<br>4. URL模式：勾选–【不要内部网络IP地址使用这个代理】<br>5. 点击确定<br>6. 模式订阅：点击 转到<br>7. 在出现的窗口中填写 订阅名称、订阅描述 和 订阅网址（<a href=\"https://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt\" target=\"_blank\" rel=\"external\">https://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt</a> ）代理服务器为刚才设置的goagent代理服务器<br>8. Format：AutoProxy 和 Obfuscation: Base64<br>9. 点击确定<br>10.快速添加：启用、选择设置好的goagent代理<br>11.选择工作模式：使用基于其预定义模板的代理服务器<br>12.关闭<br>13.重启FireFox</p>\n<p><a href=\"http://www.coolapk.com/apk/org.gaeproxy\" title=\"goagent在android\" target=\"_blank\" rel=\"external\">goagent在android</a>     <a href=\"http://blog.mkfree.com/posts/515e9b46975abbe5be7e21f1\" title=\"shawsocks on computer\" target=\"_blank\" rel=\"external\">shadowsocks 在电脑</a> <a href=\"http://m.163.com/android/software/320or6.html\" title=\"showsocks在android的爬墙\" target=\"_blank\" rel=\"external\">shadowsocks在安卓</a> <a href=\"http://www.liqucn.com/rj/130604.shtml\" title=\"shadowsocks在iOS\" target=\"_blank\" rel=\"external\">shadowsocks在iOS</a></p>","excerpt":"","more":"<p><a href=\"http://wildcat.name/goagent.html\" title=\"goagent图文教程\">goagent图文教程</a>–appid的注册 goagent的下载</p>\n<p>&nbsp;</p>\n<p>其中第六点autooproxy已经跪了。如下<br>goagent+<span style=\"color: #ff0000\">foxyproxy</span><br>1. 导入证书：选项-》高级-》加密-》查看证书-》导入-》”goagent/local/CA.crt”<br>2. foxyproxy-代理服务器-新建代理服务器-代理服务器细节<br>3. 主机选项:127.0.0.1 端口:8087 （<span style=\"color: red\"><strong>不</strong>要勾选socks代理</span>）<br>4. URL模式：勾选–【不要内部网络IP地址使用这个代理】<br>5. 点击确定<br>6. 模式订阅：点击 转到<br>7. 在出现的窗口中填写 订阅名称、订阅描述 和 订阅网址（<a href=\"https://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt\">https://autoproxy-gfwlist.googlecode.com/svn/trunk/gfwlist.txt</a> ）代理服务器为刚才设置的goagent代理服务器<br>8. Format：AutoProxy 和 Obfuscation: Base64<br>9. 点击确定<br>10.快速添加：启用、选择设置好的goagent代理<br>11.选择工作模式：使用基于其预定义模板的代理服务器<br>12.关闭<br>13.重启FireFox</p>\n<p><a href=\"http://www.coolapk.com/apk/org.gaeproxy\" title=\"goagent在android\">goagent在android</a>     <a href=\"http://blog.mkfree.com/posts/515e9b46975abbe5be7e21f1\" title=\"shawsocks on computer\">shadowsocks 在电脑</a> <a href=\"http://m.163.com/android/software/320or6.html\" title=\"showsocks在android的爬墙\">shadowsocks在安卓</a> <a href=\"http://www.liqucn.com/rj/130604.shtml\" title=\"shadowsocks在iOS\">shadowsocks在iOS</a></p>"},{"title":"Harri特征角点检测&特征匹配的python实现&PyInstaller编译成可执行文件exe","id":"575","date":"2015-05-11T17:48:13.000Z","_content":"\n<span style=\"color: #000000;\">最近学习计算机视觉，初步学习了特征点的几个算子和描述子，最初级的是Harris和进阶的SIFT.囿于最近又想学python所以弄了一下它的数值计算的库scipy numpy和图形界面的库PIL和matplotlib..具体环境是：</span>\n\n1.  <span style=\"color: #000000;\">1python环境的搭建有两种方式，可以使用官方的[Python2.79](https://www.python.org/downloads/) 搭配上Enthought提供的一个轻量Free版本[canopy](https://store.enthought.com/downloads/#default)供学习和开发者使用（包括**NumPy, SciPy, Pandas, Matplotlib, IPython**）；或者直接使用[Scipy官网](http://scipy.org/install.html)推荐使用的Python其他搭载了Numpu和Scipy的发行版，我体验了Python(x,y)效果还是不错的</span>\n2.  <span style=\"color: #000000;\">PIL图像库，可在其[官网](http://www.pythonware.com/products/pil/#)下载最新版本1.1.7的PIL（虽然已经是2009年。。目前只支持2.X可在WIn LInux OX平台使用）</span>\n3.  <span style=\"color: #000000;\">Matplotlib在安装Numpy和Scipy时应该已经提供，若没有下载完成则可在其[网站](http://matplotlib.sourceforge.net/)免费获取</span>\n\n## **<span style=\"color: #000000;\">Harris特征检测</span>**\n\n<span style=\"color: #000000;\">安装完成后就可以进行Python图形可视化的编写。首先对Harris角点检测算法有个介绍。主要思想是，<span style=\"color: #ff0000;\">如果像素周围存在多于一个方向的边，认为该点就是兴趣点，称为角点。</span></span>\n\n<span style=\"color: #000000;\"><span style=\"color: #ff0000;\">角点的定义是：局部窗口沿各方向运动，均产生明显变化的点；图像局部曲率突变的点。<span style=\"color: #000000;\">窗口函数可以选择创体内1窗体外0，或者高斯函数。窗口移动导致的图像变化可利用实对称矩阵的特征值分析，计算各角点的响应。其中一种方式是，利用最大的特征值进行判断，对特征值均非常大的，表述为各方向上变化均非常大；对特征值均非常小的，表述为各方向上无明显变化；若一个特征值大一个特征值小，则判定为边缘。另一种方法是，利用响应函数det (H)−αtrace(H)^2 或者λ0λ1/(λ0+λ1)。最后，利用阈值筛选出局部极大值。该算法具有光照不变性，旋转不变性，对比度部分不变。尺度变换不具有不变性。</span></span></span>\n\n<pre class=\"brush: shell; gutter: true\">from scipy.ndimage import filters\nfrom PIL import Image\nfrom numpy import *\nfrom pylab import *\n\ndef compute_harris_response(im,sigma=3):\n#计算harris响应函数\nimx = zeros(im.shape)\nfilters.gaussian_filter(im,(sigma,sigma),(0,1),imx)\nimy = zeros(im.shape)\nfilters.gaussian_filter(im,(sigma,sigma),(1,0),imy)\n\nWxx = filters.gaussian_filter(imx*imx,sigma)\nWxy = filters.gaussian_filter(imx*imy,sigma)\nWyy = filters.gaussian_filter(imy*imy,sigma)\n\nWdet = Wxx*Wyy - Wxy**2\nWtr = Wxx +Wyy\n\nreturn Wdet / Wtr\n\ndef get_harris_points(harrisim,min_dist,threshold):\n\ncorner_threshold = harrisim.max() * threshold\nharrisim_t = (harrisim &gt; corner_threshold) * 1\n\ncoords =array(harrisim_t.nonzero()).T\n\ncandidate_values = [harrisim[c[0],c[1]] for c in coords]\n\nindex = argsort(candidate_values)\n\nallowed_locations = zeros(harrisim.shape)\nallowed_locations[min_dist:-min_dist,min_dist:-min_dist]=1\n\nfiltered_coords = []\nfor i in index:\nif allowed_locations[coords[i,0],coords[i,1]] == 1:\nfiltered_coords.append(coords[i])\nallowed_locations[(coords[i,0]-min_dist):(coords[i,0]+min_dist),(coords[i,1]-min_dist):(coords[i,1]+min_dist)] = 0\nreturn filtered_coords\n\ndef plot_harris_points(im1,im2,filtered_coords1,filtered_coords2):\nfigure()\ngray()\nim=concatenate((im1,im2),axis=1)\nimshow(im)\nshp1 = im1.shape[1]\nfor j in filtered_coords2:\njj = [j[0] , j[1] +shp1]\nfiltered_coords1.append(jj)\nplot([p[1] for p in filtered_coords1],[p[0] for p in filtered_coords1],&#039;*&#039;)\naxis(&#039;off&#039;)\nshow()\n\nim01= array(Image.open(&#039;1.JPG&#039;))\nim02= array(Image.open(&#039;2.JPG&#039;))\nim1 = array(Image.open(&#039;1.JPG&#039;).convert(&#039;L&#039;))\nim2 = array(Image.open(&#039;2.JPG&#039;).convert(&#039;L&#039;))\nharrisim1 = compute_harris_response(im1)\nharrisim2 = compute_harris_response(im2)\nmin_dist=7\nthreshold=0.05\nfiltered_coords1 = get_harris_points(harrisim1,min_dist,threshold)\nfiltered_coords2 = get_harris_points(harrisim2,min_dist,threshold)\nprint len(filtered_coords1)\nprint len(filtered_coords2)\nplot_harris_points(im01,im02,filtered_coords1,filtered_coords2)\n\n其中1.jpg和2.jpg可换成自己的图像。函数说明在注释中已说明。</pre>\n\n![](http://7xlk6q.com1.z0.glb.clouddn.com/harris.PNG)\n\n## \n\n## **harris特征匹配**\n\n<span style=\"color: #000000;\">角点检测器只能检测图像中的兴趣点，但是没有给出匹配角点的方法，这里需要对每个角点加上描述子信息，即角点周围的点的信息。描述子描述越好，寻找匹配对应点越好。Harris角点的描述子又周围像素块的灰度值以及用于比较归一化互相关矩阵构成。通常两个相同大小像素块的相关矩阵定义为函数f对像素块卷积的和。归一化互相关矩阵的一种变形可以定义为：</span>\n\n![](http://7xlk6q.com1.z0.glb.clouddn.com/ncc自相关矩阵.PNG)\n\n<span style=\"color: #ff0000;\">其中，n表示像素块的数目，μ1和μ2表示每个像素块平均像素强度，σ1和σ2表示每个像素块的标准差。通过减去均值和标准差，该方法对图像亮度变化具有稳健性。</span>\n\n<pre class=\"brush: shell; gutter: true\">#_*_encoding:utf-8_*_\nfrom scipy.ndimage import filters\nfrom PIL import Image\nfrom numpy import *\nfrom pylab import *&lt;/code&gt;\n\ndef compute_harris_response(im,sigma=3):\n#计算灰度图像中harris角点响应函数\n\n#计算导数\nimx = zeros(im.shape)\nfilters.gaussian_filter(im,(sigma,sigma),(0,1),imx)\nimy = zeros(im.shape)\nfilters.gaussian_filter(im,(sigma,sigma),(1,0),imy)\n#计算harris矩阵分量\nWxx = filters.gaussian_filter(imx*imx,sigma)\nWxy = filters.gaussian_filter(imx*imy,sigma)\nWyy = filters.gaussian_filter(imy*imy,sigma)\n#计算特征值和迹\nWdet = Wxx*Wyy - Wxy**2\nWtr = Wxx +Wyy\n\nreturn Wdet / Wtr\n\ndef get_harris_points(harrisim,min_dist,threshold):\n#得到harris特征点集 harrisim是计算harris响应函数的灰度图像 min_dist为分割角点和图像边界最少像素数\n\n#寻找高于阈值的候选点\ncorner_threshold = harrisim.max() * threshold\nharrisim_t = (harrisim &amp;gt; corner_threshold) * 1\n#得到候选点的坐标\ncoords =array(harrisim_t.nonzero()).T\n#计算候选点响应值\ncandidate_values = [harrisim[c[0],c[1]] for c in coords]\n#对候选点按照响应值进行排序\nindex = argsort(candidate_values)\n#将可行点的位置保存到数组\nallowed_locations = zeros(harrisim.shape)\nallowed_locations[min_dist:-min_dist,min_dist:-min_dist]=1\n#按照min_distance原则选择最佳Harris点\nfiltered_coords = []\nfor i in index:\nif allowed_locations[coords[i,0],coords[i,1]] == 1:\nfiltered_coords.append(coords[i])\nallowed_locations[(coords[i,0]-min_dist):(coords[i,0]+min_dist),(coords[i,1]-min_dist):(coords[i,1]+min_dist)] = 0\nreturn filtered_coords\n\ndef get_descriptors(image,filtered_coords,wid):\n#对返回的坐标点，获取2*wid+1个像素的值，即获取harris描述\ndesc=[]\nfor coords in filtered_coords:\npatch = image[coords[0]-wid:coords[0]+wid+1,coords[1]-wid:coords[1]+wid+1].flatten()\ndesc.append(patch)\nreturn desc\n\ndef match(desc1,desc2,threshold=0.5):\n#特征点匹配，使第一幅图中的角点描述子利用归一化相关选取它在第二幅图像的匹配角点\nn = len(desc1[0])\n#每对点的距离\nd = -ones((len(desc1),len(desc2)))\nfor i in range(len(desc1)):\nfor j in range(len(desc2)):\nd1 = (desc1[i]-mean(desc1[i])) / std(desc1[i])\nd2 = (desc2[j]-mean(desc2[j])) / std(desc2[j])\nncc_value = sum(d1 * d2) / (n-1)\nif ncc_value &amp;gt;threshold:\nd[i,j] = ncc_value\nndx = argsort(-d)\nmatchscores = ndx[:,0]\n\nreturn matchscores\n\ndef match_twosided(desc1,desc2,threshold=0.5):\n#两边对称版本的match\nmatches_12 = match(desc1,desc2,threshold)\nmatches_21 = match(desc2,desc1,threshold)\n\nndx_12 = where(matches_12 &amp;gt; 0)[0]\n#去除非对称的匹配\nfor n in ndx_12:\nif matches_21[matches_12[n]]!=n:\nmatches_12[n] = -1\nreturn matches_12\n\ndef appendimages(im1,im2):\n#拼接两幅图像\nrows1 = im1.shape[0]\nrows2 = im2.shape[0]\nif rows1 &amp;lt; rows2:\nim1 = concatenate((im1,zeros((rows2-rows1,im1.shape[1]))),axis=0)\nelif rows1 &amp;gt; rows2:\nim2 = concatenate((im2,zeros((rows1-rows2,im2.shape[1]))),axis=0)\n\nreturn concatenate((im1,im2),axis=1)\n\ndef plot_matches(im01,im02,locs1,locs2,matchscores):\n#显示一副有连接线的匹配图像\nim3 = appendimages(im01,im02)\nim4 = vstack((im3,im3))\nimshow(im4)\n\ncols1 = im1.shape[1]\nrows1 = im1.shape[0]\nfor i,m in enumerate(matchscores):\nif m&amp;gt;0:\nplot([locs1[i][1],locs2[m][1]+cols1],[locs1[i][0],locs2[m][0]],&#039;c&#039;)\nnew_coords =[]\nfor j in filtered_coords1:\nnew_coords.append ([j[0] + rows1, j[1]])\nfor i in filtered_coords2:\nnew_coords.append ([i[0] + rows1, i[1] + cols1])\nplot([p[1] for p in new_coords],[p[0] for p in new_coords],&#039;*&#039;)\naxis(&#039;off&#039;)\n\nmin_dist = 7\nwid = 6\nthreshold=0.1\nim01=array(Image.open(&#039;1.JPG&#039;))\nim02=array(Image.open(&#039;2.JPG&#039;))\nim1 = array(Image.open(&#039;1.JPG&#039;).convert(&#039;L&#039;))\nim2 = array(Image.open(&#039;2.JPG&#039;).convert(&#039;L&#039;))\nharrisim = compute_harris_response(im1,5)\nfiltered_coords1 = get_harris_points(harrisim,min_dist,threshold)\nprint &#039;Harris Points in 1.JPG:&#039;+bytes(len(filtered_coords1))\nd1 = get_descriptors(im1,filtered_coords1,wid)\n\nharrisim = compute_harris_response(im2,5)\nfiltered_coords2 = get_harris_points(harrisim,min_dist,threshold)\nprint &#039;Harris Points in 2.JPG:&#039;+bytes(len(filtered_coords2))\nd2 = get_descriptors(im2,filtered_coords2,wid)\n\nprint &#039;start matching&#039;\nmatches = match_twosided(d1,d2)\nprint &#039;Matched Points in 1.JPG and 2.JPG:&#039;+bytes(len(matches))\nfigure()\ngray()\nplot_matches(im01,im02,filtered_coords1,filtered_coords2,matches)\nshow()\n</pre>\n\n<span style=\"color: #000000;\">其中输入图像在python程序的同目录，为两幅近似的图像。其结果一举不同的min_dist和threshold而改变。</span>\n![](http://7xlk6q.com1.z0.glb.clouddn.com/sift.jpg)\n\n&nbsp;\n\n## ***.py文件打包成.exe可执行文件**\n\n<span style=\"color: #000000;\">这里使用的是PyInstaller将py文件打包。实际效果非常方便，会自动搜寻需要的库并合成。可到其[官网](https://pypi.python.org/pypi/PyInstaller/2.1)下载最新版2.1</span>\n\n基本语法是\n\n<pre class=\"brush: python; gutter: true\">python pyinstaller.py [opts] yourprogram.py\n</pre>\n\n其中opts是可选项，可加入的参数为：\n\n<pre class=\"brush: css; gutter: true\">-F, –onefile 打包成一个exe文件。\n-D, –onedir 创建一个目录，包含exe文件，但会依赖很多文件（默认选项）。\n-c, –console, –nowindowed 使用控制台，无界面(默认)\n-w, –windowed, –noconsole 使用窗口，无控制台</pre>\n\n<span style=\"color: #ff0000;\">**BUG**</span>\n\n这里遇到了恼人的无可药救的无与伦比的bug。其中之一是\n\n<pre class=\"brush: shell; gutter: true\">no module named _ufuncs\n</pre>\n\n阅遍无数网页终于在[这里](https://github.com/pyinstaller/pyinstaller/issues/826)发现了解决方案，需要在PyInstall文件夹的hooks文件夹中添加一个寻找 _ufuncs的py文件。在[这里](https://github.com/pyinstaller/pyinstaller/blob/develop/PyInstaller/hooks/hook-scipy.special._ufuncs.py) ，命名为hook-scipy.special._ufuncs.py\n\n<pre class=\"brush: python; gutter: true\">#-----------------------------------------------------------------------------\n# Copyright (c) 2013, PyInstaller Development Team.\n#\n# Distributed under the terms of the GNU General Public License with exception\n# for distributing bootloader.\n#\n# The full license is in the file COPYING.txt, distributed with this software.\n#-----------------------------------------------------------------------------\n\n# Module scipy.io._ufunc on some other C/C++ extensions.\n# The hidden import is necessary for SciPy 0.13+.\n# Thanks to dyadkin, see issue #826.\nhiddenimports = [&#039;scipy.special._ufuncs_cxx&#039;]</pre>\n\n然后又发现另一个bug，这回是\n\n<pre class=\"brush: python; gutter: true\">no module named integrate</pre>\n\n阅遍无数网页，依然没有结果。。偶然的在需要编译的py文件中加入了一句\n`from scipy.integrate import *`\n咦居然成功了。。。好吧。结果出来就和在python shell中运行的一样了。可以打包成一整个exe文件，也可以是一个文件夹，包含其他类库的。","source":"_posts/harris-python-to-exe.md","raw":"---\ntitle: 'Harri特征角点检测&特征匹配的python实现&PyInstaller编译成可执行文件exe'\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - python\nid: 575\ndate: 2015-05-12 01:48:13\n---\n\n<span style=\"color: #000000;\">最近学习计算机视觉，初步学习了特征点的几个算子和描述子，最初级的是Harris和进阶的SIFT.囿于最近又想学python所以弄了一下它的数值计算的库scipy numpy和图形界面的库PIL和matplotlib..具体环境是：</span>\n\n1.  <span style=\"color: #000000;\">1python环境的搭建有两种方式，可以使用官方的[Python2.79](https://www.python.org/downloads/) 搭配上Enthought提供的一个轻量Free版本[canopy](https://store.enthought.com/downloads/#default)供学习和开发者使用（包括**NumPy, SciPy, Pandas, Matplotlib, IPython**）；或者直接使用[Scipy官网](http://scipy.org/install.html)推荐使用的Python其他搭载了Numpu和Scipy的发行版，我体验了Python(x,y)效果还是不错的</span>\n2.  <span style=\"color: #000000;\">PIL图像库，可在其[官网](http://www.pythonware.com/products/pil/#)下载最新版本1.1.7的PIL（虽然已经是2009年。。目前只支持2.X可在WIn LInux OX平台使用）</span>\n3.  <span style=\"color: #000000;\">Matplotlib在安装Numpy和Scipy时应该已经提供，若没有下载完成则可在其[网站](http://matplotlib.sourceforge.net/)免费获取</span>\n\n## **<span style=\"color: #000000;\">Harris特征检测</span>**\n\n<span style=\"color: #000000;\">安装完成后就可以进行Python图形可视化的编写。首先对Harris角点检测算法有个介绍。主要思想是，<span style=\"color: #ff0000;\">如果像素周围存在多于一个方向的边，认为该点就是兴趣点，称为角点。</span></span>\n\n<span style=\"color: #000000;\"><span style=\"color: #ff0000;\">角点的定义是：局部窗口沿各方向运动，均产生明显变化的点；图像局部曲率突变的点。<span style=\"color: #000000;\">窗口函数可以选择创体内1窗体外0，或者高斯函数。窗口移动导致的图像变化可利用实对称矩阵的特征值分析，计算各角点的响应。其中一种方式是，利用最大的特征值进行判断，对特征值均非常大的，表述为各方向上变化均非常大；对特征值均非常小的，表述为各方向上无明显变化；若一个特征值大一个特征值小，则判定为边缘。另一种方法是，利用响应函数det (H)−αtrace(H)^2 或者λ0λ1/(λ0+λ1)。最后，利用阈值筛选出局部极大值。该算法具有光照不变性，旋转不变性，对比度部分不变。尺度变换不具有不变性。</span></span></span>\n\n<pre class=\"brush: shell; gutter: true\">from scipy.ndimage import filters\nfrom PIL import Image\nfrom numpy import *\nfrom pylab import *\n\ndef compute_harris_response(im,sigma=3):\n#计算harris响应函数\nimx = zeros(im.shape)\nfilters.gaussian_filter(im,(sigma,sigma),(0,1),imx)\nimy = zeros(im.shape)\nfilters.gaussian_filter(im,(sigma,sigma),(1,0),imy)\n\nWxx = filters.gaussian_filter(imx*imx,sigma)\nWxy = filters.gaussian_filter(imx*imy,sigma)\nWyy = filters.gaussian_filter(imy*imy,sigma)\n\nWdet = Wxx*Wyy - Wxy**2\nWtr = Wxx +Wyy\n\nreturn Wdet / Wtr\n\ndef get_harris_points(harrisim,min_dist,threshold):\n\ncorner_threshold = harrisim.max() * threshold\nharrisim_t = (harrisim &gt; corner_threshold) * 1\n\ncoords =array(harrisim_t.nonzero()).T\n\ncandidate_values = [harrisim[c[0],c[1]] for c in coords]\n\nindex = argsort(candidate_values)\n\nallowed_locations = zeros(harrisim.shape)\nallowed_locations[min_dist:-min_dist,min_dist:-min_dist]=1\n\nfiltered_coords = []\nfor i in index:\nif allowed_locations[coords[i,0],coords[i,1]] == 1:\nfiltered_coords.append(coords[i])\nallowed_locations[(coords[i,0]-min_dist):(coords[i,0]+min_dist),(coords[i,1]-min_dist):(coords[i,1]+min_dist)] = 0\nreturn filtered_coords\n\ndef plot_harris_points(im1,im2,filtered_coords1,filtered_coords2):\nfigure()\ngray()\nim=concatenate((im1,im2),axis=1)\nimshow(im)\nshp1 = im1.shape[1]\nfor j in filtered_coords2:\njj = [j[0] , j[1] +shp1]\nfiltered_coords1.append(jj)\nplot([p[1] for p in filtered_coords1],[p[0] for p in filtered_coords1],&#039;*&#039;)\naxis(&#039;off&#039;)\nshow()\n\nim01= array(Image.open(&#039;1.JPG&#039;))\nim02= array(Image.open(&#039;2.JPG&#039;))\nim1 = array(Image.open(&#039;1.JPG&#039;).convert(&#039;L&#039;))\nim2 = array(Image.open(&#039;2.JPG&#039;).convert(&#039;L&#039;))\nharrisim1 = compute_harris_response(im1)\nharrisim2 = compute_harris_response(im2)\nmin_dist=7\nthreshold=0.05\nfiltered_coords1 = get_harris_points(harrisim1,min_dist,threshold)\nfiltered_coords2 = get_harris_points(harrisim2,min_dist,threshold)\nprint len(filtered_coords1)\nprint len(filtered_coords2)\nplot_harris_points(im01,im02,filtered_coords1,filtered_coords2)\n\n其中1.jpg和2.jpg可换成自己的图像。函数说明在注释中已说明。</pre>\n\n![](http://7xlk6q.com1.z0.glb.clouddn.com/harris.PNG)\n\n## \n\n## **harris特征匹配**\n\n<span style=\"color: #000000;\">角点检测器只能检测图像中的兴趣点，但是没有给出匹配角点的方法，这里需要对每个角点加上描述子信息，即角点周围的点的信息。描述子描述越好，寻找匹配对应点越好。Harris角点的描述子又周围像素块的灰度值以及用于比较归一化互相关矩阵构成。通常两个相同大小像素块的相关矩阵定义为函数f对像素块卷积的和。归一化互相关矩阵的一种变形可以定义为：</span>\n\n![](http://7xlk6q.com1.z0.glb.clouddn.com/ncc自相关矩阵.PNG)\n\n<span style=\"color: #ff0000;\">其中，n表示像素块的数目，μ1和μ2表示每个像素块平均像素强度，σ1和σ2表示每个像素块的标准差。通过减去均值和标准差，该方法对图像亮度变化具有稳健性。</span>\n\n<pre class=\"brush: shell; gutter: true\">#_*_encoding:utf-8_*_\nfrom scipy.ndimage import filters\nfrom PIL import Image\nfrom numpy import *\nfrom pylab import *&lt;/code&gt;\n\ndef compute_harris_response(im,sigma=3):\n#计算灰度图像中harris角点响应函数\n\n#计算导数\nimx = zeros(im.shape)\nfilters.gaussian_filter(im,(sigma,sigma),(0,1),imx)\nimy = zeros(im.shape)\nfilters.gaussian_filter(im,(sigma,sigma),(1,0),imy)\n#计算harris矩阵分量\nWxx = filters.gaussian_filter(imx*imx,sigma)\nWxy = filters.gaussian_filter(imx*imy,sigma)\nWyy = filters.gaussian_filter(imy*imy,sigma)\n#计算特征值和迹\nWdet = Wxx*Wyy - Wxy**2\nWtr = Wxx +Wyy\n\nreturn Wdet / Wtr\n\ndef get_harris_points(harrisim,min_dist,threshold):\n#得到harris特征点集 harrisim是计算harris响应函数的灰度图像 min_dist为分割角点和图像边界最少像素数\n\n#寻找高于阈值的候选点\ncorner_threshold = harrisim.max() * threshold\nharrisim_t = (harrisim &amp;gt; corner_threshold) * 1\n#得到候选点的坐标\ncoords =array(harrisim_t.nonzero()).T\n#计算候选点响应值\ncandidate_values = [harrisim[c[0],c[1]] for c in coords]\n#对候选点按照响应值进行排序\nindex = argsort(candidate_values)\n#将可行点的位置保存到数组\nallowed_locations = zeros(harrisim.shape)\nallowed_locations[min_dist:-min_dist,min_dist:-min_dist]=1\n#按照min_distance原则选择最佳Harris点\nfiltered_coords = []\nfor i in index:\nif allowed_locations[coords[i,0],coords[i,1]] == 1:\nfiltered_coords.append(coords[i])\nallowed_locations[(coords[i,0]-min_dist):(coords[i,0]+min_dist),(coords[i,1]-min_dist):(coords[i,1]+min_dist)] = 0\nreturn filtered_coords\n\ndef get_descriptors(image,filtered_coords,wid):\n#对返回的坐标点，获取2*wid+1个像素的值，即获取harris描述\ndesc=[]\nfor coords in filtered_coords:\npatch = image[coords[0]-wid:coords[0]+wid+1,coords[1]-wid:coords[1]+wid+1].flatten()\ndesc.append(patch)\nreturn desc\n\ndef match(desc1,desc2,threshold=0.5):\n#特征点匹配，使第一幅图中的角点描述子利用归一化相关选取它在第二幅图像的匹配角点\nn = len(desc1[0])\n#每对点的距离\nd = -ones((len(desc1),len(desc2)))\nfor i in range(len(desc1)):\nfor j in range(len(desc2)):\nd1 = (desc1[i]-mean(desc1[i])) / std(desc1[i])\nd2 = (desc2[j]-mean(desc2[j])) / std(desc2[j])\nncc_value = sum(d1 * d2) / (n-1)\nif ncc_value &amp;gt;threshold:\nd[i,j] = ncc_value\nndx = argsort(-d)\nmatchscores = ndx[:,0]\n\nreturn matchscores\n\ndef match_twosided(desc1,desc2,threshold=0.5):\n#两边对称版本的match\nmatches_12 = match(desc1,desc2,threshold)\nmatches_21 = match(desc2,desc1,threshold)\n\nndx_12 = where(matches_12 &amp;gt; 0)[0]\n#去除非对称的匹配\nfor n in ndx_12:\nif matches_21[matches_12[n]]!=n:\nmatches_12[n] = -1\nreturn matches_12\n\ndef appendimages(im1,im2):\n#拼接两幅图像\nrows1 = im1.shape[0]\nrows2 = im2.shape[0]\nif rows1 &amp;lt; rows2:\nim1 = concatenate((im1,zeros((rows2-rows1,im1.shape[1]))),axis=0)\nelif rows1 &amp;gt; rows2:\nim2 = concatenate((im2,zeros((rows1-rows2,im2.shape[1]))),axis=0)\n\nreturn concatenate((im1,im2),axis=1)\n\ndef plot_matches(im01,im02,locs1,locs2,matchscores):\n#显示一副有连接线的匹配图像\nim3 = appendimages(im01,im02)\nim4 = vstack((im3,im3))\nimshow(im4)\n\ncols1 = im1.shape[1]\nrows1 = im1.shape[0]\nfor i,m in enumerate(matchscores):\nif m&amp;gt;0:\nplot([locs1[i][1],locs2[m][1]+cols1],[locs1[i][0],locs2[m][0]],&#039;c&#039;)\nnew_coords =[]\nfor j in filtered_coords1:\nnew_coords.append ([j[0] + rows1, j[1]])\nfor i in filtered_coords2:\nnew_coords.append ([i[0] + rows1, i[1] + cols1])\nplot([p[1] for p in new_coords],[p[0] for p in new_coords],&#039;*&#039;)\naxis(&#039;off&#039;)\n\nmin_dist = 7\nwid = 6\nthreshold=0.1\nim01=array(Image.open(&#039;1.JPG&#039;))\nim02=array(Image.open(&#039;2.JPG&#039;))\nim1 = array(Image.open(&#039;1.JPG&#039;).convert(&#039;L&#039;))\nim2 = array(Image.open(&#039;2.JPG&#039;).convert(&#039;L&#039;))\nharrisim = compute_harris_response(im1,5)\nfiltered_coords1 = get_harris_points(harrisim,min_dist,threshold)\nprint &#039;Harris Points in 1.JPG:&#039;+bytes(len(filtered_coords1))\nd1 = get_descriptors(im1,filtered_coords1,wid)\n\nharrisim = compute_harris_response(im2,5)\nfiltered_coords2 = get_harris_points(harrisim,min_dist,threshold)\nprint &#039;Harris Points in 2.JPG:&#039;+bytes(len(filtered_coords2))\nd2 = get_descriptors(im2,filtered_coords2,wid)\n\nprint &#039;start matching&#039;\nmatches = match_twosided(d1,d2)\nprint &#039;Matched Points in 1.JPG and 2.JPG:&#039;+bytes(len(matches))\nfigure()\ngray()\nplot_matches(im01,im02,filtered_coords1,filtered_coords2,matches)\nshow()\n</pre>\n\n<span style=\"color: #000000;\">其中输入图像在python程序的同目录，为两幅近似的图像。其结果一举不同的min_dist和threshold而改变。</span>\n![](http://7xlk6q.com1.z0.glb.clouddn.com/sift.jpg)\n\n&nbsp;\n\n## ***.py文件打包成.exe可执行文件**\n\n<span style=\"color: #000000;\">这里使用的是PyInstaller将py文件打包。实际效果非常方便，会自动搜寻需要的库并合成。可到其[官网](https://pypi.python.org/pypi/PyInstaller/2.1)下载最新版2.1</span>\n\n基本语法是\n\n<pre class=\"brush: python; gutter: true\">python pyinstaller.py [opts] yourprogram.py\n</pre>\n\n其中opts是可选项，可加入的参数为：\n\n<pre class=\"brush: css; gutter: true\">-F, –onefile 打包成一个exe文件。\n-D, –onedir 创建一个目录，包含exe文件，但会依赖很多文件（默认选项）。\n-c, –console, –nowindowed 使用控制台，无界面(默认)\n-w, –windowed, –noconsole 使用窗口，无控制台</pre>\n\n<span style=\"color: #ff0000;\">**BUG**</span>\n\n这里遇到了恼人的无可药救的无与伦比的bug。其中之一是\n\n<pre class=\"brush: shell; gutter: true\">no module named _ufuncs\n</pre>\n\n阅遍无数网页终于在[这里](https://github.com/pyinstaller/pyinstaller/issues/826)发现了解决方案，需要在PyInstall文件夹的hooks文件夹中添加一个寻找 _ufuncs的py文件。在[这里](https://github.com/pyinstaller/pyinstaller/blob/develop/PyInstaller/hooks/hook-scipy.special._ufuncs.py) ，命名为hook-scipy.special._ufuncs.py\n\n<pre class=\"brush: python; gutter: true\">#-----------------------------------------------------------------------------\n# Copyright (c) 2013, PyInstaller Development Team.\n#\n# Distributed under the terms of the GNU General Public License with exception\n# for distributing bootloader.\n#\n# The full license is in the file COPYING.txt, distributed with this software.\n#-----------------------------------------------------------------------------\n\n# Module scipy.io._ufunc on some other C/C++ extensions.\n# The hidden import is necessary for SciPy 0.13+.\n# Thanks to dyadkin, see issue #826.\nhiddenimports = [&#039;scipy.special._ufuncs_cxx&#039;]</pre>\n\n然后又发现另一个bug，这回是\n\n<pre class=\"brush: python; gutter: true\">no module named integrate</pre>\n\n阅遍无数网页，依然没有结果。。偶然的在需要编译的py文件中加入了一句\n`from scipy.integrate import *`\n咦居然成功了。。。好吧。结果出来就和在python shell中运行的一样了。可以打包成一整个exe文件，也可以是一个文件夹，包含其他类库的。","slug":"harris-python-to-exe","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7nc002uuco4iomzjnch","content":"<p><span style=\"color: #000000\">最近学习计算机视觉，初步学习了特征点的几个算子和描述子，最初级的是Harris和进阶的SIFT.囿于最近又想学python所以弄了一下它的数值计算的库scipy numpy和图形界面的库PIL和matplotlib..具体环境是：</span></p>\n<ol>\n<li><span style=\"color: #000000\">1python环境的搭建有两种方式，可以使用官方的<a href=\"https://www.python.org/downloads/\" target=\"_blank\" rel=\"external\">Python2.79</a> 搭配上Enthought提供的一个轻量Free版本<a href=\"https://store.enthought.com/downloads/#default\" target=\"_blank\" rel=\"external\">canopy</a>供学习和开发者使用（包括<strong>NumPy, SciPy, Pandas, Matplotlib, IPython</strong>）；或者直接使用<a href=\"http://scipy.org/install.html\" target=\"_blank\" rel=\"external\">Scipy官网</a>推荐使用的Python其他搭载了Numpu和Scipy的发行版，我体验了Python(x,y)效果还是不错的</span></li>\n<li><span style=\"color: #000000\">PIL图像库，可在其<a href=\"http://www.pythonware.com/products/pil/#\" target=\"_blank\" rel=\"external\">官网</a>下载最新版本1.1.7的PIL（虽然已经是2009年。。目前只支持2.X可在WIn LInux OX平台使用）</span></li>\n<li><span style=\"color: #000000\">Matplotlib在安装Numpy和Scipy时应该已经提供，若没有下载完成则可在其<a href=\"http://matplotlib.sourceforge.net/\" target=\"_blank\" rel=\"external\">网站</a>免费获取</span></li>\n</ol>\n<h2 id=\"Harris特征检测\"><a href=\"#Harris特征检测\" class=\"headerlink\" title=\"Harris特征检测\"></a><strong><span style=\"color: #000000\">Harris特征检测</span></strong></h2><p><span style=\"color: #000000\">安装完成后就可以进行Python图形可视化的编写。首先对Harris角点检测算法有个介绍。主要思想是，<span style=\"color: #ff0000\">如果像素周围存在多于一个方向的边，认为该点就是兴趣点，称为角点。</span></span></p>\n<p><span style=\"color: #000000\"><span style=\"color: #ff0000\">角点的定义是：局部窗口沿各方向运动，均产生明显变化的点；图像局部曲率突变的点。<span style=\"color: #000000\">窗口函数可以选择创体内1窗体外0，或者高斯函数。窗口移动导致的图像变化可利用实对称矩阵的特征值分析，计算各角点的响应。其中一种方式是，利用最大的特征值进行判断，对特征值均非常大的，表述为各方向上变化均非常大；对特征值均非常小的，表述为各方向上无明显变化；若一个特征值大一个特征值小，则判定为边缘。另一种方法是，利用响应函数det (H)−αtrace(H)^2 或者λ0λ1/(λ0+λ1)。最后，利用阈值筛选出局部极大值。该算法具有光照不变性，旋转不变性，对比度部分不变。尺度变换不具有不变性。</span></span></span></p>\n<pre class=\"brush: shell; gutter: true\">from scipy.ndimage import filters\nfrom PIL import Image\nfrom numpy import *\nfrom pylab import *\n\ndef compute_harris_response(im,sigma=3):\n#计算harris响应函数\nimx = zeros(im.shape)\nfilters.gaussian_filter(im,(sigma,sigma),(0,1),imx)\nimy = zeros(im.shape)\nfilters.gaussian_filter(im,(sigma,sigma),(1,0),imy)\n\nWxx = filters.gaussian_filter(imx*imx,sigma)\nWxy = filters.gaussian_filter(imx*imy,sigma)\nWyy = filters.gaussian_filter(imy*imy,sigma)\n\nWdet = Wxx*Wyy - Wxy**2\nWtr = Wxx +Wyy\n\nreturn Wdet / Wtr\n\ndef get_harris_points(harrisim,min_dist,threshold):\n\ncorner_threshold = harrisim.max() * threshold\nharrisim_t = (harrisim &gt; corner_threshold) * 1\n\ncoords =array(harrisim_t.nonzero()).T\n\ncandidate_values = [harrisim[c[0],c[1]] for c in coords]\n\nindex = argsort(candidate_values)\n\nallowed_locations = zeros(harrisim.shape)\nallowed_locations[min_dist:-min_dist,min_dist:-min_dist]=1\n\nfiltered_coords = []\nfor i in index:\nif allowed_locations[coords[i,0],coords[i,1]] == 1:\nfiltered_coords.append(coords[i])\nallowed_locations[(coords[i,0]-min_dist):(coords[i,0]+min_dist),(coords[i,1]-min_dist):(coords[i,1]+min_dist)] = 0\nreturn filtered_coords\n\ndef plot_harris_points(im1,im2,filtered_coords1,filtered_coords2):\nfigure()\ngray()\nim=concatenate((im1,im2),axis=1)\nimshow(im)\nshp1 = im1.shape[1]\nfor j in filtered_coords2:\njj = [j[0] , j[1] +shp1]\nfiltered_coords1.append(jj)\nplot([p[1] for p in filtered_coords1],[p[0] for p in filtered_coords1],&#039;*&#039;)\naxis(&#039;off&#039;)\nshow()\n\nim01= array(Image.open(&#039;1.JPG&#039;))\nim02= array(Image.open(&#039;2.JPG&#039;))\nim1 = array(Image.open(&#039;1.JPG&#039;).convert(&#039;L&#039;))\nim2 = array(Image.open(&#039;2.JPG&#039;).convert(&#039;L&#039;))\nharrisim1 = compute_harris_response(im1)\nharrisim2 = compute_harris_response(im2)\nmin_dist=7\nthreshold=0.05\nfiltered_coords1 = get_harris_points(harrisim1,min_dist,threshold)\nfiltered_coords2 = get_harris_points(harrisim2,min_dist,threshold)\nprint len(filtered_coords1)\nprint len(filtered_coords2)\nplot_harris_points(im01,im02,filtered_coords1,filtered_coords2)\n\n其中1.jpg和2.jpg可换成自己的图像。函数说明在注释中已说明。</pre>\n\n<p><img src=\"http://7xlk6q.com1.z0.glb.clouddn.com/harris.PNG\" alt=\"\"></p>\n<p>## </p>\n<h2 id=\"harris特征匹配\"><a href=\"#harris特征匹配\" class=\"headerlink\" title=\"harris特征匹配\"></a><strong>harris特征匹配</strong></h2><p><span style=\"color: #000000\">角点检测器只能检测图像中的兴趣点，但是没有给出匹配角点的方法，这里需要对每个角点加上描述子信息，即角点周围的点的信息。描述子描述越好，寻找匹配对应点越好。Harris角点的描述子又周围像素块的灰度值以及用于比较归一化互相关矩阵构成。通常两个相同大小像素块的相关矩阵定义为函数f对像素块卷积的和。归一化互相关矩阵的一种变形可以定义为：</span></p>\n<p><img src=\"http://7xlk6q.com1.z0.glb.clouddn.com/ncc自相关矩阵.PNG\" alt=\"\"></p>\n<p><span style=\"color: #ff0000\">其中，n表示像素块的数目，μ1和μ2表示每个像素块平均像素强度，σ1和σ2表示每个像素块的标准差。通过减去均值和标准差，该方法对图像亮度变化具有稳健性。</span></p>\n<pre class=\"brush: shell; gutter: true\">#_*_encoding:utf-8_*_\nfrom scipy.ndimage import filters\nfrom PIL import Image\nfrom numpy import *\nfrom pylab import *&lt;/code&gt;\n\ndef compute_harris_response(im,sigma=3):\n#计算灰度图像中harris角点响应函数\n\n#计算导数\nimx = zeros(im.shape)\nfilters.gaussian_filter(im,(sigma,sigma),(0,1),imx)\nimy = zeros(im.shape)\nfilters.gaussian_filter(im,(sigma,sigma),(1,0),imy)\n#计算harris矩阵分量\nWxx = filters.gaussian_filter(imx*imx,sigma)\nWxy = filters.gaussian_filter(imx*imy,sigma)\nWyy = filters.gaussian_filter(imy*imy,sigma)\n#计算特征值和迹\nWdet = Wxx*Wyy - Wxy**2\nWtr = Wxx +Wyy\n\nreturn Wdet / Wtr\n\ndef get_harris_points(harrisim,min_dist,threshold):\n#得到harris特征点集 harrisim是计算harris响应函数的灰度图像 min_dist为分割角点和图像边界最少像素数\n\n#寻找高于阈值的候选点\ncorner_threshold = harrisim.max() * threshold\nharrisim_t = (harrisim &amp;gt; corner_threshold) * 1\n#得到候选点的坐标\ncoords =array(harrisim_t.nonzero()).T\n#计算候选点响应值\ncandidate_values = [harrisim[c[0],c[1]] for c in coords]\n#对候选点按照响应值进行排序\nindex = argsort(candidate_values)\n#将可行点的位置保存到数组\nallowed_locations = zeros(harrisim.shape)\nallowed_locations[min_dist:-min_dist,min_dist:-min_dist]=1\n#按照min_distance原则选择最佳Harris点\nfiltered_coords = []\nfor i in index:\nif allowed_locations[coords[i,0],coords[i,1]] == 1:\nfiltered_coords.append(coords[i])\nallowed_locations[(coords[i,0]-min_dist):(coords[i,0]+min_dist),(coords[i,1]-min_dist):(coords[i,1]+min_dist)] = 0\nreturn filtered_coords\n\ndef get_descriptors(image,filtered_coords,wid):\n#对返回的坐标点，获取2*wid+1个像素的值，即获取harris描述\ndesc=[]\nfor coords in filtered_coords:\npatch = image[coords[0]-wid:coords[0]+wid+1,coords[1]-wid:coords[1]+wid+1].flatten()\ndesc.append(patch)\nreturn desc\n\ndef match(desc1,desc2,threshold=0.5):\n#特征点匹配，使第一幅图中的角点描述子利用归一化相关选取它在第二幅图像的匹配角点\nn = len(desc1[0])\n#每对点的距离\nd = -ones((len(desc1),len(desc2)))\nfor i in range(len(desc1)):\nfor j in range(len(desc2)):\nd1 = (desc1[i]-mean(desc1[i])) / std(desc1[i])\nd2 = (desc2[j]-mean(desc2[j])) / std(desc2[j])\nncc_value = sum(d1 * d2) / (n-1)\nif ncc_value &amp;gt;threshold:\nd[i,j] = ncc_value\nndx = argsort(-d)\nmatchscores = ndx[:,0]\n\nreturn matchscores\n\ndef match_twosided(desc1,desc2,threshold=0.5):\n#两边对称版本的match\nmatches_12 = match(desc1,desc2,threshold)\nmatches_21 = match(desc2,desc1,threshold)\n\nndx_12 = where(matches_12 &amp;gt; 0)[0]\n#去除非对称的匹配\nfor n in ndx_12:\nif matches_21[matches_12[n]]!=n:\nmatches_12[n] = -1\nreturn matches_12\n\ndef appendimages(im1,im2):\n#拼接两幅图像\nrows1 = im1.shape[0]\nrows2 = im2.shape[0]\nif rows1 &amp;lt; rows2:\nim1 = concatenate((im1,zeros((rows2-rows1,im1.shape[1]))),axis=0)\nelif rows1 &amp;gt; rows2:\nim2 = concatenate((im2,zeros((rows1-rows2,im2.shape[1]))),axis=0)\n\nreturn concatenate((im1,im2),axis=1)\n\ndef plot_matches(im01,im02,locs1,locs2,matchscores):\n#显示一副有连接线的匹配图像\nim3 = appendimages(im01,im02)\nim4 = vstack((im3,im3))\nimshow(im4)\n\ncols1 = im1.shape[1]\nrows1 = im1.shape[0]\nfor i,m in enumerate(matchscores):\nif m&amp;gt;0:\nplot([locs1[i][1],locs2[m][1]+cols1],[locs1[i][0],locs2[m][0]],&#039;c&#039;)\nnew_coords =[]\nfor j in filtered_coords1:\nnew_coords.append ([j[0] + rows1, j[1]])\nfor i in filtered_coords2:\nnew_coords.append ([i[0] + rows1, i[1] + cols1])\nplot([p[1] for p in new_coords],[p[0] for p in new_coords],&#039;*&#039;)\naxis(&#039;off&#039;)\n\nmin_dist = 7\nwid = 6\nthreshold=0.1\nim01=array(Image.open(&#039;1.JPG&#039;))\nim02=array(Image.open(&#039;2.JPG&#039;))\nim1 = array(Image.open(&#039;1.JPG&#039;).convert(&#039;L&#039;))\nim2 = array(Image.open(&#039;2.JPG&#039;).convert(&#039;L&#039;))\nharrisim = compute_harris_response(im1,5)\nfiltered_coords1 = get_harris_points(harrisim,min_dist,threshold)\nprint &#039;Harris Points in 1.JPG:&#039;+bytes(len(filtered_coords1))\nd1 = get_descriptors(im1,filtered_coords1,wid)\n\nharrisim = compute_harris_response(im2,5)\nfiltered_coords2 = get_harris_points(harrisim,min_dist,threshold)\nprint &#039;Harris Points in 2.JPG:&#039;+bytes(len(filtered_coords2))\nd2 = get_descriptors(im2,filtered_coords2,wid)\n\nprint &#039;start matching&#039;\nmatches = match_twosided(d1,d2)\nprint &#039;Matched Points in 1.JPG and 2.JPG:&#039;+bytes(len(matches))\nfigure()\ngray()\nplot_matches(im01,im02,filtered_coords1,filtered_coords2,matches)\nshow()\n</pre>\n\n<p><span style=\"color: #000000\">其中输入图像在python程序的同目录，为两幅近似的图像。其结果一举不同的min_dist和threshold而改变。</span><br><img src=\"http://7xlk6q.com1.z0.glb.clouddn.com/sift.jpg\" alt=\"\"></p>\n<p>&nbsp;</p>\n<h2 id=\"py文件打包成-exe可执行文件\"><a href=\"#py文件打包成-exe可执行文件\" class=\"headerlink\" title=\"*.py文件打包成.exe可执行文件\"></a><strong>*.py文件打包成.exe可执行文件</strong></h2><p><span style=\"color: #000000\">这里使用的是PyInstaller将py文件打包。实际效果非常方便，会自动搜寻需要的库并合成。可到其<a href=\"https://pypi.python.org/pypi/PyInstaller/2.1\" target=\"_blank\" rel=\"external\">官网</a>下载最新版2.1</span></p>\n<p>基本语法是</p>\n<pre class=\"brush: python; gutter: true\">python pyinstaller.py [opts] yourprogram.py\n</pre>\n\n<p>其中opts是可选项，可加入的参数为：</p>\n<pre class=\"brush: css; gutter: true\">-F, –onefile 打包成一个exe文件。\n-D, –onedir 创建一个目录，包含exe文件，但会依赖很多文件（默认选项）。\n-c, –console, –nowindowed 使用控制台，无界面(默认)\n-w, –windowed, –noconsole 使用窗口，无控制台</pre>\n\n<p><span style=\"color: #ff0000\"><strong>BUG</strong></span></p>\n<p>这里遇到了恼人的无可药救的无与伦比的bug。其中之一是</p>\n<pre class=\"brush: shell; gutter: true\">no module named _ufuncs\n</pre>\n\n<p>阅遍无数网页终于在<a href=\"https://github.com/pyinstaller/pyinstaller/issues/826\" target=\"_blank\" rel=\"external\">这里</a>发现了解决方案，需要在PyInstall文件夹的hooks文件夹中添加一个寻找 _ufuncs的py文件。在<a href=\"https://github.com/pyinstaller/pyinstaller/blob/develop/PyInstaller/hooks/hook-scipy.special._ufuncs.py\" target=\"_blank\" rel=\"external\">这里</a> ，命名为hook-scipy.special._ufuncs.py</p>\n<pre class=\"brush: python; gutter: true\">#-----------------------------------------------------------------------------\n# Copyright (c) 2013, PyInstaller Development Team.\n#\n# Distributed under the terms of the GNU General Public License with exception\n# for distributing bootloader.\n#\n# The full license is in the file COPYING.txt, distributed with this software.\n#-----------------------------------------------------------------------------\n\n# Module scipy.io._ufunc on some other C/C++ extensions.\n# The hidden import is necessary for SciPy 0.13+.\n# Thanks to dyadkin, see issue #826.\nhiddenimports = [&#039;scipy.special._ufuncs_cxx&#039;]</pre>\n\n<p>然后又发现另一个bug，这回是</p>\n<pre class=\"brush: python; gutter: true\">no module named integrate</pre>\n\n<p>阅遍无数网页，依然没有结果。。偶然的在需要编译的py文件中加入了一句<br><code>from scipy.integrate import *</code><br>咦居然成功了。。。好吧。结果出来就和在python shell中运行的一样了。可以打包成一整个exe文件，也可以是一个文件夹，包含其他类库的。</p>","excerpt":"","more":"<p><span style=\"color: #000000\">最近学习计算机视觉，初步学习了特征点的几个算子和描述子，最初级的是Harris和进阶的SIFT.囿于最近又想学python所以弄了一下它的数值计算的库scipy numpy和图形界面的库PIL和matplotlib..具体环境是：</span></p>\n<ol>\n<li><span style=\"color: #000000\">1python环境的搭建有两种方式，可以使用官方的<a href=\"https://www.python.org/downloads/\">Python2.79</a> 搭配上Enthought提供的一个轻量Free版本<a href=\"https://store.enthought.com/downloads/#default\">canopy</a>供学习和开发者使用（包括<strong>NumPy, SciPy, Pandas, Matplotlib, IPython</strong>）；或者直接使用<a href=\"http://scipy.org/install.html\">Scipy官网</a>推荐使用的Python其他搭载了Numpu和Scipy的发行版，我体验了Python(x,y)效果还是不错的</span></li>\n<li><span style=\"color: #000000\">PIL图像库，可在其<a href=\"http://www.pythonware.com/products/pil/#\">官网</a>下载最新版本1.1.7的PIL（虽然已经是2009年。。目前只支持2.X可在WIn LInux OX平台使用）</span></li>\n<li><span style=\"color: #000000\">Matplotlib在安装Numpy和Scipy时应该已经提供，若没有下载完成则可在其<a href=\"http://matplotlib.sourceforge.net/\">网站</a>免费获取</span></li>\n</ol>\n<h2 id=\"Harris特征检测\"><a href=\"#Harris特征检测\" class=\"headerlink\" title=\"Harris特征检测\"></a><strong><span style=\"color: #000000\">Harris特征检测</span></strong></h2><p><span style=\"color: #000000\">安装完成后就可以进行Python图形可视化的编写。首先对Harris角点检测算法有个介绍。主要思想是，<span style=\"color: #ff0000\">如果像素周围存在多于一个方向的边，认为该点就是兴趣点，称为角点。</span></span></p>\n<p><span style=\"color: #000000\"><span style=\"color: #ff0000\">角点的定义是：局部窗口沿各方向运动，均产生明显变化的点；图像局部曲率突变的点。<span style=\"color: #000000\">窗口函数可以选择创体内1窗体外0，或者高斯函数。窗口移动导致的图像变化可利用实对称矩阵的特征值分析，计算各角点的响应。其中一种方式是，利用最大的特征值进行判断，对特征值均非常大的，表述为各方向上变化均非常大；对特征值均非常小的，表述为各方向上无明显变化；若一个特征值大一个特征值小，则判定为边缘。另一种方法是，利用响应函数det (H)−αtrace(H)^2 或者λ0λ1/(λ0+λ1)。最后，利用阈值筛选出局部极大值。该算法具有光照不变性，旋转不变性，对比度部分不变。尺度变换不具有不变性。</span></span></span></p>\n<pre class=\"brush: shell; gutter: true\">from scipy.ndimage import filters\nfrom PIL import Image\nfrom numpy import *\nfrom pylab import *\n\ndef compute_harris_response(im,sigma=3):\n#计算harris响应函数\nimx = zeros(im.shape)\nfilters.gaussian_filter(im,(sigma,sigma),(0,1),imx)\nimy = zeros(im.shape)\nfilters.gaussian_filter(im,(sigma,sigma),(1,0),imy)\n\nWxx = filters.gaussian_filter(imx*imx,sigma)\nWxy = filters.gaussian_filter(imx*imy,sigma)\nWyy = filters.gaussian_filter(imy*imy,sigma)\n\nWdet = Wxx*Wyy - Wxy**2\nWtr = Wxx +Wyy\n\nreturn Wdet / Wtr\n\ndef get_harris_points(harrisim,min_dist,threshold):\n\ncorner_threshold = harrisim.max() * threshold\nharrisim_t = (harrisim &gt; corner_threshold) * 1\n\ncoords =array(harrisim_t.nonzero()).T\n\ncandidate_values = [harrisim[c[0],c[1]] for c in coords]\n\nindex = argsort(candidate_values)\n\nallowed_locations = zeros(harrisim.shape)\nallowed_locations[min_dist:-min_dist,min_dist:-min_dist]=1\n\nfiltered_coords = []\nfor i in index:\nif allowed_locations[coords[i,0],coords[i,1]] == 1:\nfiltered_coords.append(coords[i])\nallowed_locations[(coords[i,0]-min_dist):(coords[i,0]+min_dist),(coords[i,1]-min_dist):(coords[i,1]+min_dist)] = 0\nreturn filtered_coords\n\ndef plot_harris_points(im1,im2,filtered_coords1,filtered_coords2):\nfigure()\ngray()\nim=concatenate((im1,im2),axis=1)\nimshow(im)\nshp1 = im1.shape[1]\nfor j in filtered_coords2:\njj = [j[0] , j[1] +shp1]\nfiltered_coords1.append(jj)\nplot([p[1] for p in filtered_coords1],[p[0] for p in filtered_coords1],&#039;*&#039;)\naxis(&#039;off&#039;)\nshow()\n\nim01= array(Image.open(&#039;1.JPG&#039;))\nim02= array(Image.open(&#039;2.JPG&#039;))\nim1 = array(Image.open(&#039;1.JPG&#039;).convert(&#039;L&#039;))\nim2 = array(Image.open(&#039;2.JPG&#039;).convert(&#039;L&#039;))\nharrisim1 = compute_harris_response(im1)\nharrisim2 = compute_harris_response(im2)\nmin_dist=7\nthreshold=0.05\nfiltered_coords1 = get_harris_points(harrisim1,min_dist,threshold)\nfiltered_coords2 = get_harris_points(harrisim2,min_dist,threshold)\nprint len(filtered_coords1)\nprint len(filtered_coords2)\nplot_harris_points(im01,im02,filtered_coords1,filtered_coords2)\n\n其中1.jpg和2.jpg可换成自己的图像。函数说明在注释中已说明。</pre>\n\n<p><img src=\"http://7xlk6q.com1.z0.glb.clouddn.com/harris.PNG\" alt=\"\"></p>\n<p>## </p>\n<h2 id=\"harris特征匹配\"><a href=\"#harris特征匹配\" class=\"headerlink\" title=\"harris特征匹配\"></a><strong>harris特征匹配</strong></h2><p><span style=\"color: #000000\">角点检测器只能检测图像中的兴趣点，但是没有给出匹配角点的方法，这里需要对每个角点加上描述子信息，即角点周围的点的信息。描述子描述越好，寻找匹配对应点越好。Harris角点的描述子又周围像素块的灰度值以及用于比较归一化互相关矩阵构成。通常两个相同大小像素块的相关矩阵定义为函数f对像素块卷积的和。归一化互相关矩阵的一种变形可以定义为：</span></p>\n<p><img src=\"http://7xlk6q.com1.z0.glb.clouddn.com/ncc自相关矩阵.PNG\" alt=\"\"></p>\n<p><span style=\"color: #ff0000\">其中，n表示像素块的数目，μ1和μ2表示每个像素块平均像素强度，σ1和σ2表示每个像素块的标准差。通过减去均值和标准差，该方法对图像亮度变化具有稳健性。</span></p>\n<pre class=\"brush: shell; gutter: true\">#_*_encoding:utf-8_*_\nfrom scipy.ndimage import filters\nfrom PIL import Image\nfrom numpy import *\nfrom pylab import *&lt;/code&gt;\n\ndef compute_harris_response(im,sigma=3):\n#计算灰度图像中harris角点响应函数\n\n#计算导数\nimx = zeros(im.shape)\nfilters.gaussian_filter(im,(sigma,sigma),(0,1),imx)\nimy = zeros(im.shape)\nfilters.gaussian_filter(im,(sigma,sigma),(1,0),imy)\n#计算harris矩阵分量\nWxx = filters.gaussian_filter(imx*imx,sigma)\nWxy = filters.gaussian_filter(imx*imy,sigma)\nWyy = filters.gaussian_filter(imy*imy,sigma)\n#计算特征值和迹\nWdet = Wxx*Wyy - Wxy**2\nWtr = Wxx +Wyy\n\nreturn Wdet / Wtr\n\ndef get_harris_points(harrisim,min_dist,threshold):\n#得到harris特征点集 harrisim是计算harris响应函数的灰度图像 min_dist为分割角点和图像边界最少像素数\n\n#寻找高于阈值的候选点\ncorner_threshold = harrisim.max() * threshold\nharrisim_t = (harrisim &amp;gt; corner_threshold) * 1\n#得到候选点的坐标\ncoords =array(harrisim_t.nonzero()).T\n#计算候选点响应值\ncandidate_values = [harrisim[c[0],c[1]] for c in coords]\n#对候选点按照响应值进行排序\nindex = argsort(candidate_values)\n#将可行点的位置保存到数组\nallowed_locations = zeros(harrisim.shape)\nallowed_locations[min_dist:-min_dist,min_dist:-min_dist]=1\n#按照min_distance原则选择最佳Harris点\nfiltered_coords = []\nfor i in index:\nif allowed_locations[coords[i,0],coords[i,1]] == 1:\nfiltered_coords.append(coords[i])\nallowed_locations[(coords[i,0]-min_dist):(coords[i,0]+min_dist),(coords[i,1]-min_dist):(coords[i,1]+min_dist)] = 0\nreturn filtered_coords\n\ndef get_descriptors(image,filtered_coords,wid):\n#对返回的坐标点，获取2*wid+1个像素的值，即获取harris描述\ndesc=[]\nfor coords in filtered_coords:\npatch = image[coords[0]-wid:coords[0]+wid+1,coords[1]-wid:coords[1]+wid+1].flatten()\ndesc.append(patch)\nreturn desc\n\ndef match(desc1,desc2,threshold=0.5):\n#特征点匹配，使第一幅图中的角点描述子利用归一化相关选取它在第二幅图像的匹配角点\nn = len(desc1[0])\n#每对点的距离\nd = -ones((len(desc1),len(desc2)))\nfor i in range(len(desc1)):\nfor j in range(len(desc2)):\nd1 = (desc1[i]-mean(desc1[i])) / std(desc1[i])\nd2 = (desc2[j]-mean(desc2[j])) / std(desc2[j])\nncc_value = sum(d1 * d2) / (n-1)\nif ncc_value &amp;gt;threshold:\nd[i,j] = ncc_value\nndx = argsort(-d)\nmatchscores = ndx[:,0]\n\nreturn matchscores\n\ndef match_twosided(desc1,desc2,threshold=0.5):\n#两边对称版本的match\nmatches_12 = match(desc1,desc2,threshold)\nmatches_21 = match(desc2,desc1,threshold)\n\nndx_12 = where(matches_12 &amp;gt; 0)[0]\n#去除非对称的匹配\nfor n in ndx_12:\nif matches_21[matches_12[n]]!=n:\nmatches_12[n] = -1\nreturn matches_12\n\ndef appendimages(im1,im2):\n#拼接两幅图像\nrows1 = im1.shape[0]\nrows2 = im2.shape[0]\nif rows1 &amp;lt; rows2:\nim1 = concatenate((im1,zeros((rows2-rows1,im1.shape[1]))),axis=0)\nelif rows1 &amp;gt; rows2:\nim2 = concatenate((im2,zeros((rows1-rows2,im2.shape[1]))),axis=0)\n\nreturn concatenate((im1,im2),axis=1)\n\ndef plot_matches(im01,im02,locs1,locs2,matchscores):\n#显示一副有连接线的匹配图像\nim3 = appendimages(im01,im02)\nim4 = vstack((im3,im3))\nimshow(im4)\n\ncols1 = im1.shape[1]\nrows1 = im1.shape[0]\nfor i,m in enumerate(matchscores):\nif m&amp;gt;0:\nplot([locs1[i][1],locs2[m][1]+cols1],[locs1[i][0],locs2[m][0]],&#039;c&#039;)\nnew_coords =[]\nfor j in filtered_coords1:\nnew_coords.append ([j[0] + rows1, j[1]])\nfor i in filtered_coords2:\nnew_coords.append ([i[0] + rows1, i[1] + cols1])\nplot([p[1] for p in new_coords],[p[0] for p in new_coords],&#039;*&#039;)\naxis(&#039;off&#039;)\n\nmin_dist = 7\nwid = 6\nthreshold=0.1\nim01=array(Image.open(&#039;1.JPG&#039;))\nim02=array(Image.open(&#039;2.JPG&#039;))\nim1 = array(Image.open(&#039;1.JPG&#039;).convert(&#039;L&#039;))\nim2 = array(Image.open(&#039;2.JPG&#039;).convert(&#039;L&#039;))\nharrisim = compute_harris_response(im1,5)\nfiltered_coords1 = get_harris_points(harrisim,min_dist,threshold)\nprint &#039;Harris Points in 1.JPG:&#039;+bytes(len(filtered_coords1))\nd1 = get_descriptors(im1,filtered_coords1,wid)\n\nharrisim = compute_harris_response(im2,5)\nfiltered_coords2 = get_harris_points(harrisim,min_dist,threshold)\nprint &#039;Harris Points in 2.JPG:&#039;+bytes(len(filtered_coords2))\nd2 = get_descriptors(im2,filtered_coords2,wid)\n\nprint &#039;start matching&#039;\nmatches = match_twosided(d1,d2)\nprint &#039;Matched Points in 1.JPG and 2.JPG:&#039;+bytes(len(matches))\nfigure()\ngray()\nplot_matches(im01,im02,filtered_coords1,filtered_coords2,matches)\nshow()\n</pre>\n\n<p><span style=\"color: #000000\">其中输入图像在python程序的同目录，为两幅近似的图像。其结果一举不同的min_dist和threshold而改变。</span><br><img src=\"http://7xlk6q.com1.z0.glb.clouddn.com/sift.jpg\" alt=\"\"></p>\n<p>&nbsp;</p>\n<h2 id=\"py文件打包成-exe可执行文件\"><a href=\"#py文件打包成-exe可执行文件\" class=\"headerlink\" title=\"*.py文件打包成.exe可执行文件\"></a><strong>*.py文件打包成.exe可执行文件</strong></h2><p><span style=\"color: #000000\">这里使用的是PyInstaller将py文件打包。实际效果非常方便，会自动搜寻需要的库并合成。可到其<a href=\"https://pypi.python.org/pypi/PyInstaller/2.1\">官网</a>下载最新版2.1</span></p>\n<p>基本语法是</p>\n<pre class=\"brush: python; gutter: true\">python pyinstaller.py [opts] yourprogram.py\n</pre>\n\n<p>其中opts是可选项，可加入的参数为：</p>\n<pre class=\"brush: css; gutter: true\">-F, –onefile 打包成一个exe文件。\n-D, –onedir 创建一个目录，包含exe文件，但会依赖很多文件（默认选项）。\n-c, –console, –nowindowed 使用控制台，无界面(默认)\n-w, –windowed, –noconsole 使用窗口，无控制台</pre>\n\n<p><span style=\"color: #ff0000\"><strong>BUG</strong></span></p>\n<p>这里遇到了恼人的无可药救的无与伦比的bug。其中之一是</p>\n<pre class=\"brush: shell; gutter: true\">no module named _ufuncs\n</pre>\n\n<p>阅遍无数网页终于在<a href=\"https://github.com/pyinstaller/pyinstaller/issues/826\">这里</a>发现了解决方案，需要在PyInstall文件夹的hooks文件夹中添加一个寻找 _ufuncs的py文件。在<a href=\"https://github.com/pyinstaller/pyinstaller/blob/develop/PyInstaller/hooks/hook-scipy.special._ufuncs.py\">这里</a> ，命名为hook-scipy.special._ufuncs.py</p>\n<pre class=\"brush: python; gutter: true\">#-----------------------------------------------------------------------------\n# Copyright (c) 2013, PyInstaller Development Team.\n#\n# Distributed under the terms of the GNU General Public License with exception\n# for distributing bootloader.\n#\n# The full license is in the file COPYING.txt, distributed with this software.\n#-----------------------------------------------------------------------------\n\n# Module scipy.io._ufunc on some other C/C++ extensions.\n# The hidden import is necessary for SciPy 0.13+.\n# Thanks to dyadkin, see issue #826.\nhiddenimports = [&#039;scipy.special._ufuncs_cxx&#039;]</pre>\n\n<p>然后又发现另一个bug，这回是</p>\n<pre class=\"brush: python; gutter: true\">no module named integrate</pre>\n\n<p>阅遍无数网页，依然没有结果。。偶然的在需要编译的py文件中加入了一句<br><code>from scipy.integrate import *</code><br>咦居然成功了。。。好吧。结果出来就和在python shell中运行的一样了。可以打包成一整个exe文件，也可以是一个文件夹，包含其他类库的。</p>"},{"title":"hadoop2.2.0+32bit centos6.5 全分布安装配置wordcount randomwritter","id":"507","date":"2014-11-12T07:15:31.000Z","_content":"\nhadoop简直神烦，在centos64位中0.2.0和1.2都在安装的最后一步出了问题。node和name都启动了，log没有错误，就是report里各项均为零。折腾了好几天换到2.2.0需要编译才能使用同样是因为各种dependencies版本不兼容编译不通过。最终确定下来的配置是\n\n*   centos6.5的32位系统3台，其中两台安装在同一台物理机的虚拟机上 &amp;另一台物理机则安装第三个centos虚拟机\n*   两台机子分别是：\n*   master 192.168.199.111\n*   slave1 192.168.199.212\n*   slave1 192.168.199.184\n*   机子间的网络靠路由器连接的内部IP，由于内部分配的IP不是静态的，需要改成静态的（需要保证ip不会冲突）\n\n一 **在VMware下安装centos6.5 <span style=\"color: #ff0000;\">32bit</span>**\n\n 这个自己解决，在[http://wiki.centos.org/Download](http://wiki.centos.org/Download) 中选择镜像下载centos6.5，centos7由于刚发布，有些兼容不好。在安装的时候，自定义硬件-网络适配器 选择桥接模式，复制物理网络状态不要勾选。\n\n![](http://ww3.sinaimg.cn/large/a5d0ed33gw1em886n10obj2079043q35.jpg)\n\n安装默认是的是NAT模式，与主机共用同一个IP地址，这样虚拟机下无法分离出更多的IP。安装后启动centos6.5，键入\n\n<pre class=\"brush: bash; gutter: true\">su root</pre>\n\n输入密码，进入root最高权限用户。在键入\n\n<pre class=\"brush: bash; gutter: true\">vi /etc/hosts</pre>\n\n可将原来的清空，在hosts文件中添加本机的主机名和IP以便不同节点之间识别，我的如下\n\n<pre class=\"brush: bash; gutter: true\">192.168.199.111  master\n192.168.199.212  slave1\n192.168.199.184  slave2</pre>\n\n更改主机名\n\n<pre class=\"brush: bash; gutter: true\">vi /etc/sysconfig/network</pre>\n\n我的主机更改如下\n\n<pre class=\"brush: bash; gutter: true\">NETWORKING=yes\nHOSTNAME=master</pre>\n\n更改内部自动分配的IP地址\n\n<pre class=\"brush: bash; gutter: true\">vi /etc/sysconfig/network-scripts/ifcfg-eth0</pre>\n\n如下图，其中IPADDR 192.168.199需要与物理机的前缀相同，111自己设一个没有冲突的ip地址，netmask和gateway和物理机完全一致。这些可以在物理机的命令行窗口执行命令\n\n<pre class=\"brush: bash; gutter: true\">ipconfig</pre>\n\n进行查看。再键入\n\n<pre class=\"brush: bash; gutter: true\">service iptables status</pre>\n\n查看虚拟机防火墙状态。若显示firewall is off则表示防火墙已关闭，若显示有内容，则输入\n\n<pre class=\"brush: bash; gutter: true\">chkconfig iptables off</pre>\n\n关闭防火墙自启动，再输入\n\n<pre class=\"brush: bash; gutter: true\">service iptables stop</pre>\n\n关闭防火墙。同时关闭物理机的防火墙和安全软件，这时候可以用ping 测试一下几台配好的机子是否相通。\n\n二 **配置ssh无密码访问**\nssh是为了在不同节点之间传输文件和消息不用频繁的输入密码。在centos6.5中默认集成了ssh，因此不用安装ssh服务。首先在主节点master上键入\n\n<pre class=\"brush: bash; gutter: true\">ssh-keygen -t rsa</pre>\n\n生成主节点信息的rsa密钥。进入/root/.ssh隐藏目录可发现生成了一个id_rsa和id_rsa.pub,将主节点信息注入授权key\n\n<pre class=\"brush: bash; gutter: true\">cd /root/.ssh\nls\ncp id_rsa.pub authorized_keys\ncat id_rsa.pub&gt;&gt;authorized_keys</pre>\n\n对authorized_keys进行附权操作（可省略，针对新建立的非root权限用户，例如很多例子里的hadoop用户）\n\n<pre class=\"brush: bash; gutter: true\">chmod 600 authorized_keys</pre>\n\n配置sshd_config文件，并将下列项的注释去掉(其余物理机也要进行这样的操作)\n\n<pre class=\"brush: bash; gutter: true\">vim /etc/ssh/sshd_config\n RSAAuthentication yes\nPubkeyAuthentication yes\nAuthorizedKeysFile     .ssh/authorized_keys</pre>\n\n将包含master密钥的授权key发送给slave1节点。\n\n<pre class=\"brush: bash; gutter: true\">scp  root@slave1 :/root/.ssh/authorized_keys.pub /root/.ssh/</pre>\n\n这里会需要输入slave1的root密码，进行确认。在slave1登陆，同样的步骤生成id_rsa和id_rsa.pub。\n\n<pre class=\"brush: bash; gutter: true\">ssh-keygen -t rsa\ncd /root/.ssh\nls\nmv id_rsa.pub slave1.pub\ncat slave1.pub&gt;&gt;authorized_keys</pre>\n\n将包含master和slave1密钥信息的文件传给slave2（此后每加一个节点都需要这么做，把新生成的密钥加入到先前所有人信息的authorizd_keys中）\n\n<pre class=\"brush: bash; gutter: true\">scp  root@slave2 :/root/.ssh/authorized_keys.pub /root/.ssh/</pre>\n\n重复上面的操作，最后将slave2生成的authorized_keys.pub传回给master和slave1.\n\n<pre class=\"brush: bash; gutter: true\">scp  root@master :/root/.ssh/authorized_keys.pub /root/.ssh/\nscp  root@slave1 :/root/.ssh/authorized_keys.pub /root/.ssh/</pre>\n\n最后重启ssh服务\n\n<pre class=\"brush: bash; gutter: true\">service sshd restart</pre>\n\n这时候可以在master上直接键入\n\n<pre class=\"brush: bash; gutter: true\">ssh slave1</pre>\n\n登陆slave1主机，第一次登陆的时候需要输入root密码，之后就不需要了。这样就可以直接对slave1的文件进行读写操作，记得退出的时候要输入exit\n\n三 **JDK和Hadoop路径的安装 **\n这两个文件的安装都是下载和路径配置，跟目录分别为\n\n<pre class=\"brush: bash; gutter: true\">/usr/java\n/usr/hadoop</pre>\n\n这两个路径简单的目的就是为了以后码得少一点\n**Java**\nJava最新版本的路径可在[http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)[\n](http://www.java.com/zh_CN/download/manual.jsp \"java8\")下载java8或java7，这里选择的是jdk7，即jdk-7u15-linux-i586.tar.gz。可在物理机下载后直接复制到虚拟机桌面，解压、复制、改文件名\n\n<pre class=\"brush: bash; gutter: true\">tar -zxf jdk-7u15-linux-i586.tar.gz\nls\ncp -rf jdk1.7.0_15 /usr\nmv jdk1.7.0_15 java</pre>\n\n配置一下全局的环境\n\n<pre class=\"brush: bash; gutter: true\">vi /etc/profile</pre>\n\n在文件末添加如下代码，配置JAVA安装目录，JRE目录，CLASSPASTH和PATH\n\n<pre class=\"brush: bash; gutter: true\">JAVA_HOME=/usr/java/\nJRE_HOME=/usr/java/jre\nPATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin\nCLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib\nexport JAVA_HOME JRE_HOME PATH CLASSPATH</pre>\n\n里面的冒号与windows下系统环境的分号相通。更新一下配置的java环境，查看java版本，出现如下则配置成功。\n\n<pre class=\"brush: bash; gutter: true\">source /etc/profile\njava -version</pre>\n\n![](http://ww2.sinaimg.cn/large/68eb7c93jw1em9y51jqffj20d001zaa8.jpg)\n\n**hadoop**\nhadoop2.2.0在64位下需要源码编译，比较繁琐且容易出错，在32位下则可直接使用。因此选择在[http://www.apache.org/dyn/closer.cgi/hadoop/common/](http://www.apache.org/dyn/closer.cgi/hadoop/common/)官方网站下下载2.2.0版本的tar.gz包，即hadoop-2.2.0.tar.gz，放在虚拟机桌面，解压并复制到usr目录下，改名\n\n<pre class=\"brush: bash; gutter: true\">tar -zxf hadoop-2.2.0.tar.gz\ncp -rf hadoop-2.2.0 /usr/\nmv hadoop-2.2.0 hadoop</pre>\n\n在/etc/profile中添加hadoop的信息\n\n<pre class=\"brush: bash; gutter: true\">vi /etc/profile\nexport HADOOP_HOME=/usr/hadoop/\nexport PAHT=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin\nexport HADOOP_LOG_DIR=/usr/hadoop/logs\nexport YARN_LOG_DIR=$HADOOP_LOG_DIR</pre>\n\n以上便完成了前期安装工作。\n\n四 **Hadoop全分布的配置**\n在hadoop中加入java的路径，修改的是hadoop目录下etc/hadoop的hadoop-env.sh\n\n<pre class=\"brush: bash; gutter: true\">vi /usr/hadoop/etc/hadoop/hadoop-env.sh</pre>\n\n将java路径添加在#export java home那里。\n修改core-site.xml,添加在configuration里，下同。\n\n<pre class=\"brush: bash; gutter: true\">vi /etc/hadoop/etc/hadoop/core-site.xml</pre>\n\n<pre class=\"brush: xml; gutter: true\">  \n&lt;property&gt;  \n    &lt;name&gt;fs.default.name&lt;/name&gt;  \n        &lt;value&gt;hdfs://master:9000/&lt;/value&gt;  \n&lt;/property&gt;  \n&lt;property&gt;\n        &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;\n        &lt;value&gt;/usr/hadoop/tmp&lt;/value&gt;\n&lt;/property&gt;  \n</pre>\n\n其中，master是主节点的host名fs.default.name与之前的版本名字有所不同。\n修改hdfs-site.xml，定义数据节点和名称节点的路径，dfs.replication是datanode的数量，默认为3，小于3的必须写上确切的数目否则会出错。\n\n<pre class=\"brush: xml; gutter: true\"> \n&lt;property&gt;  \n        &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;  \n        &lt;value&gt;/usr/hadoop/hdf/data&lt;/value&gt;  \n        &lt;final&gt;true&lt;/final&gt;  \n&lt;/property&gt;  \n     &lt;property&gt;  \n        &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;  \n        &lt;value&gt;/usr/hadoop/hdf/name&lt;/value&gt;  \n        &lt;final&gt;true&lt;/final&gt;  \n   &lt;/property&gt;  \n   &lt;property&gt;  \n        &lt;name&gt;dfs.replication&lt;/name&gt;  \n        &lt;value&gt;2&lt;/value&gt;  \n&lt;/property&gt;\n&lt;property&gt;  \n         &lt;name&gt;dfs.permissions&lt;/name&gt;  \n         &lt;value&gt;false&lt;/value&gt;  \n&lt;/property&gt;\n</pre>\n\n修改mapred-site.xml 定义Mapreduce应用的jobtracker。由于系统并未自带，但提供了模板，因此复制一下\n\n<pre class=\"brush: xml; gutter: true\"> mv mapred-site.xml.template mapred-site.xml</pre>\n\n<pre class=\"brush: xml; gutter: true\"> \n&lt;property&gt;\n          &lt;name&gt;mapred.job.tracker&lt;/name&gt;\n          &lt;value&gt;master:9001&lt;/value&gt;\n&lt;/property&gt;\n</pre>\n\n修改yarn-site.xml,配置resourcemanager和nodemanager，这个是2.0以上版本才有的通过yarn管理资源和节点的功能，\n\n<pre class=\"brush: xml; gutter: true\"> \n&lt;property&gt;  \n        &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;  \n        &lt;value&gt;mapreduce_shuffle&lt;/value&gt;  \n&lt;/property&gt;  \n&lt;property&gt;  \n        &lt;name&gt;yarn.nodemanager.aux-services.mapreduce.shuffle.class&lt;/name&gt;  \n        &lt;value&gt;org.apache.hadoop.mapred.ShuffleHandler&lt;/value&gt;  \n&lt;/property&gt;  \n&lt;property&gt;  \n        &lt;name&gt;yarn.resourcemanager.resource-tracker.address&lt;/name&gt;  \n        &lt;value&gt;master:8025&lt;/value&gt;  \n&lt;/property&gt;  \n&lt;property&gt;  \n        &lt;name&gt;yarn.resourcemanager.scheduler.address&lt;/name&gt;  \n        &lt;value&gt;master:8030&lt;/value&gt;  \n&lt;/property&gt;  \n&lt;property&gt;  \n        &lt;name&gt;yarn.resourcemanager.address&lt;/name&gt;  \n        &lt;value&gt;master:8040&lt;/value&gt;  \n&lt;/property&gt; \n</pre>\n\n创建并未存在的目录，在hadoop目录下的tmp hdf/data hdf/name logs等\n配置完后直接启动，则进行的是单节点操作。若要进行多节点，编辑同目录下的slaves文件，默认自带的是localhost，将其删除，将slave1和slave2一行一个写在文件中。\n配置完以上信息就拍一个快照吧！之后就可以进行格式化和启动了，但是在运行自带程序中发现它并没有将任务分配到不同的节点，而是只在master本机的localjobrunner中做，\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1ema12m75evj20k00fxdjj.jpg)\n因此若需要在不同的节点分配资源，需要再进行一下配置。\n修改yarn-env.sh，同样将java的目录配置在export java_home中。\n再次修改mapred-site.xml，保留之前的配置，在后面加入如下属性\n\n<pre class=\"brush: xml; gutter: true\">&lt;property&gt;\n   &lt;name&gt;mapreduce.framework.name&lt;/name&gt;\n   &lt;value&gt;yarn&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n   &lt;name&gt;mapreduce.jobhistory.address&lt;/name&gt;\n   &lt;value&gt;master:10020&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n   &lt;name&gt;mapreduce.jobhistory.webapp.address&lt;/name&gt;\n   &lt;value&gt;master:19888&lt;/value&gt;\n&lt;/property&gt;\n</pre>\n\n实际上就是利用yarn来管理和配置资源，如果配置了yarn，则之前的jobtracker就不起作用。最后修改yarn-site.xml\n\n<pre class=\"brush: xml; gutter: true\">&lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.address&lt;/name&gt;\n    &lt;value&gt;master:8032&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.scheduler.address&lt;/name&gt;\n    &lt;value&gt;master:8030&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.webapp.address&lt;/name&gt;\n    &lt;value&gt;master:8088&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.resource-tracker.address&lt;/name&gt;\n    &lt;value&gt;master:8031&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.admin.address&lt;/name&gt;\n    &lt;value&gt;master:8033&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;nameyarn.nodemanager.address&lt;/name&gt;\n    &lt;value&gt;master:10000&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;\n    &lt;value&gt;mapreduce_shuffle&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.nodemanager.aux-services.mapreduce.shuffle.class&lt;/name&gt;\n    &lt;value&gt;org.apache.hadoop.mapred.ShuffleHandler&lt;/value&gt;\n&lt;/property&gt;  \n</pre>\n\n好了基本的配置完毕了。。。再照一次快照吧！进行格式化（切记不要进行多次格式化！若出现X node are exclued 。。的错误，把tmp 和hdf目录全删了再重建，再进行格式化）\n\n<pre class=\"brush: xml; gutter: true\">cd /usr/hadoop/bin\n./hdfs namenode -format\n</pre>\n\n随后启动namenode和yarn\n\n<pre class=\"brush: xml; gutter: true\">cd /usr/hadoop/\n./start-hdf.sh\n./start-yarn.sh\n</pre>\n\n若是没有报错就基本成功了！键入jps查看服务。如果没有出现nodemanager就需要手动启动\n\n<pre class=\"brush: xml; gutter: true\">cd /usr/hadoop/sbin/\n./yarn-daemon.sh start nodemanager\n</pre>\n\n查看到的jps如下\n\n<pre class=\"brush: xml; gutter: true\">Jps\nNameNode\nResourceManager\nSecondaryNameNode  \nNodeManager\n</pre>\n\n这就表示启动成功了，可以查看节点状况\n\n<pre class=\"brush: xml; gutter: true\">cd /usr/hadoop/bin\n./hdfs dfsadmin -report  \n</pre>\n\n也可以通过[http://master:50070](http://master:50070) 查看节点状况。\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1ema1yjwdfjj20va05wdh9.jpg)\n这样hadoop就配置好全分布了。\n\n五 **运行自带测试程序**\n\n*   wordcount\n\n这是一个检测目标文本中所含词数的自带程序。可在[http://www.gutenberg.org/files/20417/20417.txt](http://www.gutenberg.org/files/20417/20417.txt)下载一篇英文文章，或者自己选择其他的文章。命名为aaa.txt 并放在虚拟机/etc/hadoop目录下。键入\n\n<pre class=\"brush: xml; gutter: true\">\ncd /usr/hadoop\nbin/hdfs dfs -mkdir /tmp\nbin/hdfs dfs -copyFromLocal /usr/hadoop/aaa.txt /tmp\nbin/hdfs dfs -ls /tmp\nbin/hadoop jar ./share/hadoop/mapreduce/hadoop-mapreduce-examples-2.2.0.jar wordcount /tmp/ /tmp-output \n</pre>\n\ntmp是建立hdfs的目录空间，在tmp-output中输出结果。运行过程中可以看到进程是由mapreduce.job完成。如图为任务开始时\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1ema1sqro0nj20gi0bgtbl.jpg)同时可以登陆[http://master:8088](http://master:8088)观看正在运行的application的信息。如图是结束时候的网页信息。![](http://ww1.sinaimg.cn/large/68eb7c93jw1ema1wia60tj20qv07jjsp.jpg)如图是结束时候的命令行信息。![](http://ww2.sinaimg.cn/large/68eb7c93jw1ema1zogahbj20bc0azmye.jpg)执行完毕后可以查看刚才job的执行结果。\n\n<pre class=\"brush: xml; gutter: true\">\ncd /usr/hadoop\nbin/hdfs dfs -ls /tmp-output\nhdfs dfs -cat /tmp-output-00000\n</pre>\n\n第二行的目录是输出目录，列出所有的输出信息后，找到名字头相同，后面添加了-0000等数字的就是输出结果。\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1ema29bkuf1j20hk0cqdgm.jpg)\n\n*   randomwriter\n\n一葫芦画瓢，操作基本相同，randomwriter的任务是随机生成数到dfs中，每个map输入单个文件名，再随机写到键值对中，基本上是一个性能测试。\n\n<pre class=\"brush: xml; gutter: true\">\ncd  /usr/hadoop\nbin/hdfs dfs -mkdir /rdw\nbin/hadoop jar ./share/hadoop/mapreduce/hadoop-mapreduce-examples-2.2.0.jar randomwriter rdw\n</pre>\n\n时间跨度比较久，机子较旧可能会非常慢。参考各类博客，版权不究。","source":"_posts/hadoop2.2+wordcount.md","raw":"---\ntitle: hadoop2.2.0+32bit centos6.5 全分布安装配置wordcount randomwritter\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - hadoop\nid: 507\ndate: 2014-11-12 15:15:31\n---\n\nhadoop简直神烦，在centos64位中0.2.0和1.2都在安装的最后一步出了问题。node和name都启动了，log没有错误，就是report里各项均为零。折腾了好几天换到2.2.0需要编译才能使用同样是因为各种dependencies版本不兼容编译不通过。最终确定下来的配置是\n\n*   centos6.5的32位系统3台，其中两台安装在同一台物理机的虚拟机上 &amp;另一台物理机则安装第三个centos虚拟机\n*   两台机子分别是：\n*   master 192.168.199.111\n*   slave1 192.168.199.212\n*   slave1 192.168.199.184\n*   机子间的网络靠路由器连接的内部IP，由于内部分配的IP不是静态的，需要改成静态的（需要保证ip不会冲突）\n\n一 **在VMware下安装centos6.5 <span style=\"color: #ff0000;\">32bit</span>**\n\n 这个自己解决，在[http://wiki.centos.org/Download](http://wiki.centos.org/Download) 中选择镜像下载centos6.5，centos7由于刚发布，有些兼容不好。在安装的时候，自定义硬件-网络适配器 选择桥接模式，复制物理网络状态不要勾选。\n\n![](http://ww3.sinaimg.cn/large/a5d0ed33gw1em886n10obj2079043q35.jpg)\n\n安装默认是的是NAT模式，与主机共用同一个IP地址，这样虚拟机下无法分离出更多的IP。安装后启动centos6.5，键入\n\n<pre class=\"brush: bash; gutter: true\">su root</pre>\n\n输入密码，进入root最高权限用户。在键入\n\n<pre class=\"brush: bash; gutter: true\">vi /etc/hosts</pre>\n\n可将原来的清空，在hosts文件中添加本机的主机名和IP以便不同节点之间识别，我的如下\n\n<pre class=\"brush: bash; gutter: true\">192.168.199.111  master\n192.168.199.212  slave1\n192.168.199.184  slave2</pre>\n\n更改主机名\n\n<pre class=\"brush: bash; gutter: true\">vi /etc/sysconfig/network</pre>\n\n我的主机更改如下\n\n<pre class=\"brush: bash; gutter: true\">NETWORKING=yes\nHOSTNAME=master</pre>\n\n更改内部自动分配的IP地址\n\n<pre class=\"brush: bash; gutter: true\">vi /etc/sysconfig/network-scripts/ifcfg-eth0</pre>\n\n如下图，其中IPADDR 192.168.199需要与物理机的前缀相同，111自己设一个没有冲突的ip地址，netmask和gateway和物理机完全一致。这些可以在物理机的命令行窗口执行命令\n\n<pre class=\"brush: bash; gutter: true\">ipconfig</pre>\n\n进行查看。再键入\n\n<pre class=\"brush: bash; gutter: true\">service iptables status</pre>\n\n查看虚拟机防火墙状态。若显示firewall is off则表示防火墙已关闭，若显示有内容，则输入\n\n<pre class=\"brush: bash; gutter: true\">chkconfig iptables off</pre>\n\n关闭防火墙自启动，再输入\n\n<pre class=\"brush: bash; gutter: true\">service iptables stop</pre>\n\n关闭防火墙。同时关闭物理机的防火墙和安全软件，这时候可以用ping 测试一下几台配好的机子是否相通。\n\n二 **配置ssh无密码访问**\nssh是为了在不同节点之间传输文件和消息不用频繁的输入密码。在centos6.5中默认集成了ssh，因此不用安装ssh服务。首先在主节点master上键入\n\n<pre class=\"brush: bash; gutter: true\">ssh-keygen -t rsa</pre>\n\n生成主节点信息的rsa密钥。进入/root/.ssh隐藏目录可发现生成了一个id_rsa和id_rsa.pub,将主节点信息注入授权key\n\n<pre class=\"brush: bash; gutter: true\">cd /root/.ssh\nls\ncp id_rsa.pub authorized_keys\ncat id_rsa.pub&gt;&gt;authorized_keys</pre>\n\n对authorized_keys进行附权操作（可省略，针对新建立的非root权限用户，例如很多例子里的hadoop用户）\n\n<pre class=\"brush: bash; gutter: true\">chmod 600 authorized_keys</pre>\n\n配置sshd_config文件，并将下列项的注释去掉(其余物理机也要进行这样的操作)\n\n<pre class=\"brush: bash; gutter: true\">vim /etc/ssh/sshd_config\n RSAAuthentication yes\nPubkeyAuthentication yes\nAuthorizedKeysFile     .ssh/authorized_keys</pre>\n\n将包含master密钥的授权key发送给slave1节点。\n\n<pre class=\"brush: bash; gutter: true\">scp  root@slave1 :/root/.ssh/authorized_keys.pub /root/.ssh/</pre>\n\n这里会需要输入slave1的root密码，进行确认。在slave1登陆，同样的步骤生成id_rsa和id_rsa.pub。\n\n<pre class=\"brush: bash; gutter: true\">ssh-keygen -t rsa\ncd /root/.ssh\nls\nmv id_rsa.pub slave1.pub\ncat slave1.pub&gt;&gt;authorized_keys</pre>\n\n将包含master和slave1密钥信息的文件传给slave2（此后每加一个节点都需要这么做，把新生成的密钥加入到先前所有人信息的authorizd_keys中）\n\n<pre class=\"brush: bash; gutter: true\">scp  root@slave2 :/root/.ssh/authorized_keys.pub /root/.ssh/</pre>\n\n重复上面的操作，最后将slave2生成的authorized_keys.pub传回给master和slave1.\n\n<pre class=\"brush: bash; gutter: true\">scp  root@master :/root/.ssh/authorized_keys.pub /root/.ssh/\nscp  root@slave1 :/root/.ssh/authorized_keys.pub /root/.ssh/</pre>\n\n最后重启ssh服务\n\n<pre class=\"brush: bash; gutter: true\">service sshd restart</pre>\n\n这时候可以在master上直接键入\n\n<pre class=\"brush: bash; gutter: true\">ssh slave1</pre>\n\n登陆slave1主机，第一次登陆的时候需要输入root密码，之后就不需要了。这样就可以直接对slave1的文件进行读写操作，记得退出的时候要输入exit\n\n三 **JDK和Hadoop路径的安装 **\n这两个文件的安装都是下载和路径配置，跟目录分别为\n\n<pre class=\"brush: bash; gutter: true\">/usr/java\n/usr/hadoop</pre>\n\n这两个路径简单的目的就是为了以后码得少一点\n**Java**\nJava最新版本的路径可在[http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html](http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html)[\n](http://www.java.com/zh_CN/download/manual.jsp \"java8\")下载java8或java7，这里选择的是jdk7，即jdk-7u15-linux-i586.tar.gz。可在物理机下载后直接复制到虚拟机桌面，解压、复制、改文件名\n\n<pre class=\"brush: bash; gutter: true\">tar -zxf jdk-7u15-linux-i586.tar.gz\nls\ncp -rf jdk1.7.0_15 /usr\nmv jdk1.7.0_15 java</pre>\n\n配置一下全局的环境\n\n<pre class=\"brush: bash; gutter: true\">vi /etc/profile</pre>\n\n在文件末添加如下代码，配置JAVA安装目录，JRE目录，CLASSPASTH和PATH\n\n<pre class=\"brush: bash; gutter: true\">JAVA_HOME=/usr/java/\nJRE_HOME=/usr/java/jre\nPATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin\nCLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib\nexport JAVA_HOME JRE_HOME PATH CLASSPATH</pre>\n\n里面的冒号与windows下系统环境的分号相通。更新一下配置的java环境，查看java版本，出现如下则配置成功。\n\n<pre class=\"brush: bash; gutter: true\">source /etc/profile\njava -version</pre>\n\n![](http://ww2.sinaimg.cn/large/68eb7c93jw1em9y51jqffj20d001zaa8.jpg)\n\n**hadoop**\nhadoop2.2.0在64位下需要源码编译，比较繁琐且容易出错，在32位下则可直接使用。因此选择在[http://www.apache.org/dyn/closer.cgi/hadoop/common/](http://www.apache.org/dyn/closer.cgi/hadoop/common/)官方网站下下载2.2.0版本的tar.gz包，即hadoop-2.2.0.tar.gz，放在虚拟机桌面，解压并复制到usr目录下，改名\n\n<pre class=\"brush: bash; gutter: true\">tar -zxf hadoop-2.2.0.tar.gz\ncp -rf hadoop-2.2.0 /usr/\nmv hadoop-2.2.0 hadoop</pre>\n\n在/etc/profile中添加hadoop的信息\n\n<pre class=\"brush: bash; gutter: true\">vi /etc/profile\nexport HADOOP_HOME=/usr/hadoop/\nexport PAHT=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin\nexport HADOOP_LOG_DIR=/usr/hadoop/logs\nexport YARN_LOG_DIR=$HADOOP_LOG_DIR</pre>\n\n以上便完成了前期安装工作。\n\n四 **Hadoop全分布的配置**\n在hadoop中加入java的路径，修改的是hadoop目录下etc/hadoop的hadoop-env.sh\n\n<pre class=\"brush: bash; gutter: true\">vi /usr/hadoop/etc/hadoop/hadoop-env.sh</pre>\n\n将java路径添加在#export java home那里。\n修改core-site.xml,添加在configuration里，下同。\n\n<pre class=\"brush: bash; gutter: true\">vi /etc/hadoop/etc/hadoop/core-site.xml</pre>\n\n<pre class=\"brush: xml; gutter: true\">  \n&lt;property&gt;  \n    &lt;name&gt;fs.default.name&lt;/name&gt;  \n        &lt;value&gt;hdfs://master:9000/&lt;/value&gt;  \n&lt;/property&gt;  \n&lt;property&gt;\n        &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;\n        &lt;value&gt;/usr/hadoop/tmp&lt;/value&gt;\n&lt;/property&gt;  \n</pre>\n\n其中，master是主节点的host名fs.default.name与之前的版本名字有所不同。\n修改hdfs-site.xml，定义数据节点和名称节点的路径，dfs.replication是datanode的数量，默认为3，小于3的必须写上确切的数目否则会出错。\n\n<pre class=\"brush: xml; gutter: true\"> \n&lt;property&gt;  \n        &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;  \n        &lt;value&gt;/usr/hadoop/hdf/data&lt;/value&gt;  \n        &lt;final&gt;true&lt;/final&gt;  \n&lt;/property&gt;  \n     &lt;property&gt;  \n        &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;  \n        &lt;value&gt;/usr/hadoop/hdf/name&lt;/value&gt;  \n        &lt;final&gt;true&lt;/final&gt;  \n   &lt;/property&gt;  \n   &lt;property&gt;  \n        &lt;name&gt;dfs.replication&lt;/name&gt;  \n        &lt;value&gt;2&lt;/value&gt;  \n&lt;/property&gt;\n&lt;property&gt;  \n         &lt;name&gt;dfs.permissions&lt;/name&gt;  \n         &lt;value&gt;false&lt;/value&gt;  \n&lt;/property&gt;\n</pre>\n\n修改mapred-site.xml 定义Mapreduce应用的jobtracker。由于系统并未自带，但提供了模板，因此复制一下\n\n<pre class=\"brush: xml; gutter: true\"> mv mapred-site.xml.template mapred-site.xml</pre>\n\n<pre class=\"brush: xml; gutter: true\"> \n&lt;property&gt;\n          &lt;name&gt;mapred.job.tracker&lt;/name&gt;\n          &lt;value&gt;master:9001&lt;/value&gt;\n&lt;/property&gt;\n</pre>\n\n修改yarn-site.xml,配置resourcemanager和nodemanager，这个是2.0以上版本才有的通过yarn管理资源和节点的功能，\n\n<pre class=\"brush: xml; gutter: true\"> \n&lt;property&gt;  \n        &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;  \n        &lt;value&gt;mapreduce_shuffle&lt;/value&gt;  \n&lt;/property&gt;  \n&lt;property&gt;  \n        &lt;name&gt;yarn.nodemanager.aux-services.mapreduce.shuffle.class&lt;/name&gt;  \n        &lt;value&gt;org.apache.hadoop.mapred.ShuffleHandler&lt;/value&gt;  \n&lt;/property&gt;  \n&lt;property&gt;  \n        &lt;name&gt;yarn.resourcemanager.resource-tracker.address&lt;/name&gt;  \n        &lt;value&gt;master:8025&lt;/value&gt;  \n&lt;/property&gt;  \n&lt;property&gt;  \n        &lt;name&gt;yarn.resourcemanager.scheduler.address&lt;/name&gt;  \n        &lt;value&gt;master:8030&lt;/value&gt;  \n&lt;/property&gt;  \n&lt;property&gt;  \n        &lt;name&gt;yarn.resourcemanager.address&lt;/name&gt;  \n        &lt;value&gt;master:8040&lt;/value&gt;  \n&lt;/property&gt; \n</pre>\n\n创建并未存在的目录，在hadoop目录下的tmp hdf/data hdf/name logs等\n配置完后直接启动，则进行的是单节点操作。若要进行多节点，编辑同目录下的slaves文件，默认自带的是localhost，将其删除，将slave1和slave2一行一个写在文件中。\n配置完以上信息就拍一个快照吧！之后就可以进行格式化和启动了，但是在运行自带程序中发现它并没有将任务分配到不同的节点，而是只在master本机的localjobrunner中做，\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1ema12m75evj20k00fxdjj.jpg)\n因此若需要在不同的节点分配资源，需要再进行一下配置。\n修改yarn-env.sh，同样将java的目录配置在export java_home中。\n再次修改mapred-site.xml，保留之前的配置，在后面加入如下属性\n\n<pre class=\"brush: xml; gutter: true\">&lt;property&gt;\n   &lt;name&gt;mapreduce.framework.name&lt;/name&gt;\n   &lt;value&gt;yarn&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n   &lt;name&gt;mapreduce.jobhistory.address&lt;/name&gt;\n   &lt;value&gt;master:10020&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n   &lt;name&gt;mapreduce.jobhistory.webapp.address&lt;/name&gt;\n   &lt;value&gt;master:19888&lt;/value&gt;\n&lt;/property&gt;\n</pre>\n\n实际上就是利用yarn来管理和配置资源，如果配置了yarn，则之前的jobtracker就不起作用。最后修改yarn-site.xml\n\n<pre class=\"brush: xml; gutter: true\">&lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.address&lt;/name&gt;\n    &lt;value&gt;master:8032&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.scheduler.address&lt;/name&gt;\n    &lt;value&gt;master:8030&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.webapp.address&lt;/name&gt;\n    &lt;value&gt;master:8088&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.resource-tracker.address&lt;/name&gt;\n    &lt;value&gt;master:8031&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.admin.address&lt;/name&gt;\n    &lt;value&gt;master:8033&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;nameyarn.nodemanager.address&lt;/name&gt;\n    &lt;value&gt;master:10000&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;\n    &lt;value&gt;mapreduce_shuffle&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.nodemanager.aux-services.mapreduce.shuffle.class&lt;/name&gt;\n    &lt;value&gt;org.apache.hadoop.mapred.ShuffleHandler&lt;/value&gt;\n&lt;/property&gt;  \n</pre>\n\n好了基本的配置完毕了。。。再照一次快照吧！进行格式化（切记不要进行多次格式化！若出现X node are exclued 。。的错误，把tmp 和hdf目录全删了再重建，再进行格式化）\n\n<pre class=\"brush: xml; gutter: true\">cd /usr/hadoop/bin\n./hdfs namenode -format\n</pre>\n\n随后启动namenode和yarn\n\n<pre class=\"brush: xml; gutter: true\">cd /usr/hadoop/\n./start-hdf.sh\n./start-yarn.sh\n</pre>\n\n若是没有报错就基本成功了！键入jps查看服务。如果没有出现nodemanager就需要手动启动\n\n<pre class=\"brush: xml; gutter: true\">cd /usr/hadoop/sbin/\n./yarn-daemon.sh start nodemanager\n</pre>\n\n查看到的jps如下\n\n<pre class=\"brush: xml; gutter: true\">Jps\nNameNode\nResourceManager\nSecondaryNameNode  \nNodeManager\n</pre>\n\n这就表示启动成功了，可以查看节点状况\n\n<pre class=\"brush: xml; gutter: true\">cd /usr/hadoop/bin\n./hdfs dfsadmin -report  \n</pre>\n\n也可以通过[http://master:50070](http://master:50070) 查看节点状况。\n![](http://ww1.sinaimg.cn/large/68eb7c93jw1ema1yjwdfjj20va05wdh9.jpg)\n这样hadoop就配置好全分布了。\n\n五 **运行自带测试程序**\n\n*   wordcount\n\n这是一个检测目标文本中所含词数的自带程序。可在[http://www.gutenberg.org/files/20417/20417.txt](http://www.gutenberg.org/files/20417/20417.txt)下载一篇英文文章，或者自己选择其他的文章。命名为aaa.txt 并放在虚拟机/etc/hadoop目录下。键入\n\n<pre class=\"brush: xml; gutter: true\">\ncd /usr/hadoop\nbin/hdfs dfs -mkdir /tmp\nbin/hdfs dfs -copyFromLocal /usr/hadoop/aaa.txt /tmp\nbin/hdfs dfs -ls /tmp\nbin/hadoop jar ./share/hadoop/mapreduce/hadoop-mapreduce-examples-2.2.0.jar wordcount /tmp/ /tmp-output \n</pre>\n\ntmp是建立hdfs的目录空间，在tmp-output中输出结果。运行过程中可以看到进程是由mapreduce.job完成。如图为任务开始时\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1ema1sqro0nj20gi0bgtbl.jpg)同时可以登陆[http://master:8088](http://master:8088)观看正在运行的application的信息。如图是结束时候的网页信息。![](http://ww1.sinaimg.cn/large/68eb7c93jw1ema1wia60tj20qv07jjsp.jpg)如图是结束时候的命令行信息。![](http://ww2.sinaimg.cn/large/68eb7c93jw1ema1zogahbj20bc0azmye.jpg)执行完毕后可以查看刚才job的执行结果。\n\n<pre class=\"brush: xml; gutter: true\">\ncd /usr/hadoop\nbin/hdfs dfs -ls /tmp-output\nhdfs dfs -cat /tmp-output-00000\n</pre>\n\n第二行的目录是输出目录，列出所有的输出信息后，找到名字头相同，后面添加了-0000等数字的就是输出结果。\n![](http://ww3.sinaimg.cn/large/68eb7c93jw1ema29bkuf1j20hk0cqdgm.jpg)\n\n*   randomwriter\n\n一葫芦画瓢，操作基本相同，randomwriter的任务是随机生成数到dfs中，每个map输入单个文件名，再随机写到键值对中，基本上是一个性能测试。\n\n<pre class=\"brush: xml; gutter: true\">\ncd  /usr/hadoop\nbin/hdfs dfs -mkdir /rdw\nbin/hadoop jar ./share/hadoop/mapreduce/hadoop-mapreduce-examples-2.2.0.jar randomwriter rdw\n</pre>\n\n时间跨度比较久，机子较旧可能会非常慢。参考各类博客，版权不究。","slug":"hadoop2.2+wordcount","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7nf002yuco472tweta9","content":"<p>hadoop简直神烦，在centos64位中0.2.0和1.2都在安装的最后一步出了问题。node和name都启动了，log没有错误，就是report里各项均为零。折腾了好几天换到2.2.0需要编译才能使用同样是因为各种dependencies版本不兼容编译不通过。最终确定下来的配置是</p>\n<ul>\n<li>centos6.5的32位系统3台，其中两台安装在同一台物理机的虚拟机上 &amp;另一台物理机则安装第三个centos虚拟机</li>\n<li>两台机子分别是：</li>\n<li>master 192.168.199.111</li>\n<li>slave1 192.168.199.212</li>\n<li>slave1 192.168.199.184</li>\n<li>机子间的网络靠路由器连接的内部IP，由于内部分配的IP不是静态的，需要改成静态的（需要保证ip不会冲突）</li>\n</ul>\n<p>一 <strong>在VMware下安装centos6.5 <span style=\"color: #ff0000\">32bit</span></strong></p>\n<p> 这个自己解决，在<a href=\"http://wiki.centos.org/Download\" target=\"_blank\" rel=\"external\">http://wiki.centos.org/Download</a> 中选择镜像下载centos6.5，centos7由于刚发布，有些兼容不好。在安装的时候，自定义硬件-网络适配器 选择桥接模式，复制物理网络状态不要勾选。</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/a5d0ed33gw1em886n10obj2079043q35.jpg\" alt=\"\"></p>\n<p>安装默认是的是NAT模式，与主机共用同一个IP地址，这样虚拟机下无法分离出更多的IP。安装后启动centos6.5，键入</p>\n<pre class=\"brush: bash; gutter: true\">su root</pre>\n\n<p>输入密码，进入root最高权限用户。在键入</p>\n<pre class=\"brush: bash; gutter: true\">vi /etc/hosts</pre>\n\n<p>可将原来的清空，在hosts文件中添加本机的主机名和IP以便不同节点之间识别，我的如下</p>\n<pre class=\"brush: bash; gutter: true\">192.168.199.111  master\n192.168.199.212  slave1\n192.168.199.184  slave2</pre>\n\n<p>更改主机名</p>\n<pre class=\"brush: bash; gutter: true\">vi /etc/sysconfig/network</pre>\n\n<p>我的主机更改如下</p>\n<pre class=\"brush: bash; gutter: true\">NETWORKING=yes\nHOSTNAME=master</pre>\n\n<p>更改内部自动分配的IP地址</p>\n<pre class=\"brush: bash; gutter: true\">vi /etc/sysconfig/network-scripts/ifcfg-eth0</pre>\n\n<p>如下图，其中IPADDR 192.168.199需要与物理机的前缀相同，111自己设一个没有冲突的ip地址，netmask和gateway和物理机完全一致。这些可以在物理机的命令行窗口执行命令</p>\n<pre class=\"brush: bash; gutter: true\">ipconfig</pre>\n\n<p>进行查看。再键入</p>\n<pre class=\"brush: bash; gutter: true\">service iptables status</pre>\n\n<p>查看虚拟机防火墙状态。若显示firewall is off则表示防火墙已关闭，若显示有内容，则输入</p>\n<pre class=\"brush: bash; gutter: true\">chkconfig iptables off</pre>\n\n<p>关闭防火墙自启动，再输入</p>\n<pre class=\"brush: bash; gutter: true\">service iptables stop</pre>\n\n<p>关闭防火墙。同时关闭物理机的防火墙和安全软件，这时候可以用ping 测试一下几台配好的机子是否相通。</p>\n<p>二 <strong>配置ssh无密码访问</strong><br>ssh是为了在不同节点之间传输文件和消息不用频繁的输入密码。在centos6.5中默认集成了ssh，因此不用安装ssh服务。首先在主节点master上键入</p>\n<pre class=\"brush: bash; gutter: true\">ssh-keygen -t rsa</pre>\n\n<p>生成主节点信息的rsa密钥。进入/root/.ssh隐藏目录可发现生成了一个id_rsa和id_rsa.pub,将主节点信息注入授权key</p>\n<pre class=\"brush: bash; gutter: true\">cd /root/.ssh\nls\ncp id_rsa.pub authorized_keys\ncat id_rsa.pub&gt;&gt;authorized_keys</pre>\n\n<p>对authorized_keys进行附权操作（可省略，针对新建立的非root权限用户，例如很多例子里的hadoop用户）</p>\n<pre class=\"brush: bash; gutter: true\">chmod 600 authorized_keys</pre>\n\n<p>配置sshd_config文件，并将下列项的注释去掉(其余物理机也要进行这样的操作)</p>\n<pre class=\"brush: bash; gutter: true\">vim /etc/ssh/sshd_config\n RSAAuthentication yes\nPubkeyAuthentication yes\nAuthorizedKeysFile     .ssh/authorized_keys</pre>\n\n<p>将包含master密钥的授权key发送给slave1节点。</p>\n<pre class=\"brush: bash; gutter: true\">scp  root@slave1 :/root/.ssh/authorized_keys.pub /root/.ssh/</pre>\n\n<p>这里会需要输入slave1的root密码，进行确认。在slave1登陆，同样的步骤生成id_rsa和id_rsa.pub。</p>\n<pre class=\"brush: bash; gutter: true\">ssh-keygen -t rsa\ncd /root/.ssh\nls\nmv id_rsa.pub slave1.pub\ncat slave1.pub&gt;&gt;authorized_keys</pre>\n\n<p>将包含master和slave1密钥信息的文件传给slave2（此后每加一个节点都需要这么做，把新生成的密钥加入到先前所有人信息的authorizd_keys中）</p>\n<pre class=\"brush: bash; gutter: true\">scp  root@slave2 :/root/.ssh/authorized_keys.pub /root/.ssh/</pre>\n\n<p>重复上面的操作，最后将slave2生成的authorized_keys.pub传回给master和slave1.</p>\n<pre class=\"brush: bash; gutter: true\">scp  root@master :/root/.ssh/authorized_keys.pub /root/.ssh/\nscp  root@slave1 :/root/.ssh/authorized_keys.pub /root/.ssh/</pre>\n\n<p>最后重启ssh服务</p>\n<pre class=\"brush: bash; gutter: true\">service sshd restart</pre>\n\n<p>这时候可以在master上直接键入</p>\n<pre class=\"brush: bash; gutter: true\">ssh slave1</pre>\n\n<p>登陆slave1主机，第一次登陆的时候需要输入root密码，之后就不需要了。这样就可以直接对slave1的文件进行读写操作，记得退出的时候要输入exit</p>\n<p>三 <strong>JDK和Hadoop路径的安装 </strong><br>这两个文件的安装都是下载和路径配置，跟目录分别为</p>\n<pre class=\"brush: bash; gutter: true\">/usr/java\n/usr/hadoop</pre>\n\n<p>这两个路径简单的目的就是为了以后码得少一点<br><strong>Java</strong><br>Java最新版本的路径可在<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\" target=\"_blank\" rel=\"external\">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a><a href=\"http://www.java.com/zh_CN/download/manual.jsp\" title=\"java8\" target=\"_blank\" rel=\"external\">\n</a>下载java8或java7，这里选择的是jdk7，即jdk-7u15-linux-i586.tar.gz。可在物理机下载后直接复制到虚拟机桌面，解压、复制、改文件名</p>\n<pre class=\"brush: bash; gutter: true\">tar -zxf jdk-7u15-linux-i586.tar.gz\nls\ncp -rf jdk1.7.0_15 /usr\nmv jdk1.7.0_15 java</pre>\n\n<p>配置一下全局的环境</p>\n<pre class=\"brush: bash; gutter: true\">vi /etc/profile</pre>\n\n<p>在文件末添加如下代码，配置JAVA安装目录，JRE目录，CLASSPASTH和PATH</p>\n<pre class=\"brush: bash; gutter: true\">JAVA_HOME=/usr/java/\nJRE_HOME=/usr/java/jre\nPATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin\nCLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib\nexport JAVA_HOME JRE_HOME PATH CLASSPATH</pre>\n\n<p>里面的冒号与windows下系统环境的分号相通。更新一下配置的java环境，查看java版本，出现如下则配置成功。</p>\n<pre class=\"brush: bash; gutter: true\">source /etc/profile\njava -version</pre>\n\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1em9y51jqffj20d001zaa8.jpg\" alt=\"\"></p>\n<p><strong>hadoop</strong><br>hadoop2.2.0在64位下需要源码编译，比较繁琐且容易出错，在32位下则可直接使用。因此选择在<a href=\"http://www.apache.org/dyn/closer.cgi/hadoop/common/\" target=\"_blank\" rel=\"external\">http://www.apache.org/dyn/closer.cgi/hadoop/common/</a>官方网站下下载2.2.0版本的tar.gz包，即hadoop-2.2.0.tar.gz，放在虚拟机桌面，解压并复制到usr目录下，改名</p>\n<pre class=\"brush: bash; gutter: true\">tar -zxf hadoop-2.2.0.tar.gz\ncp -rf hadoop-2.2.0 /usr/\nmv hadoop-2.2.0 hadoop</pre>\n\n<p>在/etc/profile中添加hadoop的信息</p>\n<pre class=\"brush: bash; gutter: true\">vi /etc/profile\nexport HADOOP_HOME=/usr/hadoop/\nexport PAHT=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin\nexport HADOOP_LOG_DIR=/usr/hadoop/logs\nexport YARN_LOG_DIR=$HADOOP_LOG_DIR</pre>\n\n<p>以上便完成了前期安装工作。</p>\n<p>四 <strong>Hadoop全分布的配置</strong><br>在hadoop中加入java的路径，修改的是hadoop目录下etc/hadoop的hadoop-env.sh</p>\n<pre class=\"brush: bash; gutter: true\">vi /usr/hadoop/etc/hadoop/hadoop-env.sh</pre>\n\n<p>将java路径添加在#export java home那里。<br>修改core-site.xml,添加在configuration里，下同。</p>\n<pre class=\"brush: bash; gutter: true\">vi /etc/hadoop/etc/hadoop/core-site.xml</pre>\n\n<pre class=\"brush: xml; gutter: true\">  \n&lt;property&gt;  \n    &lt;name&gt;fs.default.name&lt;/name&gt;  \n        &lt;value&gt;hdfs://master:9000/&lt;/value&gt;  \n&lt;/property&gt;  \n&lt;property&gt;\n        &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;\n        &lt;value&gt;/usr/hadoop/tmp&lt;/value&gt;\n&lt;/property&gt;  \n</pre>\n\n<p>其中，master是主节点的host名fs.default.name与之前的版本名字有所不同。<br>修改hdfs-site.xml，定义数据节点和名称节点的路径，dfs.replication是datanode的数量，默认为3，小于3的必须写上确切的数目否则会出错。</p>\n<pre class=\"brush: xml; gutter: true\"> \n&lt;property&gt;  \n        &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;  \n        &lt;value&gt;/usr/hadoop/hdf/data&lt;/value&gt;  \n        &lt;final&gt;true&lt;/final&gt;  \n&lt;/property&gt;  \n     &lt;property&gt;  \n        &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;  \n        &lt;value&gt;/usr/hadoop/hdf/name&lt;/value&gt;  \n        &lt;final&gt;true&lt;/final&gt;  \n   &lt;/property&gt;  \n   &lt;property&gt;  \n        &lt;name&gt;dfs.replication&lt;/name&gt;  \n        &lt;value&gt;2&lt;/value&gt;  \n&lt;/property&gt;\n&lt;property&gt;  \n         &lt;name&gt;dfs.permissions&lt;/name&gt;  \n         &lt;value&gt;false&lt;/value&gt;  \n&lt;/property&gt;\n</pre>\n\n<p>修改mapred-site.xml 定义Mapreduce应用的jobtracker。由于系统并未自带，但提供了模板，因此复制一下</p>\n<pre class=\"brush: xml; gutter: true\"> mv mapred-site.xml.template mapred-site.xml</pre>\n\n<pre class=\"brush: xml; gutter: true\"> \n&lt;property&gt;\n          &lt;name&gt;mapred.job.tracker&lt;/name&gt;\n          &lt;value&gt;master:9001&lt;/value&gt;\n&lt;/property&gt;\n</pre>\n\n<p>修改yarn-site.xml,配置resourcemanager和nodemanager，这个是2.0以上版本才有的通过yarn管理资源和节点的功能，</p>\n<pre class=\"brush: xml; gutter: true\"> \n&lt;property&gt;  \n        &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;  \n        &lt;value&gt;mapreduce_shuffle&lt;/value&gt;  \n&lt;/property&gt;  \n&lt;property&gt;  \n        &lt;name&gt;yarn.nodemanager.aux-services.mapreduce.shuffle.class&lt;/name&gt;  \n        &lt;value&gt;org.apache.hadoop.mapred.ShuffleHandler&lt;/value&gt;  \n&lt;/property&gt;  \n&lt;property&gt;  \n        &lt;name&gt;yarn.resourcemanager.resource-tracker.address&lt;/name&gt;  \n        &lt;value&gt;master:8025&lt;/value&gt;  \n&lt;/property&gt;  \n&lt;property&gt;  \n        &lt;name&gt;yarn.resourcemanager.scheduler.address&lt;/name&gt;  \n        &lt;value&gt;master:8030&lt;/value&gt;  \n&lt;/property&gt;  \n&lt;property&gt;  \n        &lt;name&gt;yarn.resourcemanager.address&lt;/name&gt;  \n        &lt;value&gt;master:8040&lt;/value&gt;  \n&lt;/property&gt; \n</pre>\n\n<p>创建并未存在的目录，在hadoop目录下的tmp hdf/data hdf/name logs等<br>配置完后直接启动，则进行的是单节点操作。若要进行多节点，编辑同目录下的slaves文件，默认自带的是localhost，将其删除，将slave1和slave2一行一个写在文件中。<br>配置完以上信息就拍一个快照吧！之后就可以进行格式化和启动了，但是在运行自带程序中发现它并没有将任务分配到不同的节点，而是只在master本机的localjobrunner中做，<br><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1ema12m75evj20k00fxdjj.jpg\" alt=\"\"><br>因此若需要在不同的节点分配资源，需要再进行一下配置。<br>修改yarn-env.sh，同样将java的目录配置在export java_home中。<br>再次修改mapred-site.xml，保留之前的配置，在后面加入如下属性</p>\n<pre class=\"brush: xml; gutter: true\">&lt;property&gt;\n   &lt;name&gt;mapreduce.framework.name&lt;/name&gt;\n   &lt;value&gt;yarn&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n   &lt;name&gt;mapreduce.jobhistory.address&lt;/name&gt;\n   &lt;value&gt;master:10020&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n   &lt;name&gt;mapreduce.jobhistory.webapp.address&lt;/name&gt;\n   &lt;value&gt;master:19888&lt;/value&gt;\n&lt;/property&gt;\n</pre>\n\n<p>实际上就是利用yarn来管理和配置资源，如果配置了yarn，则之前的jobtracker就不起作用。最后修改yarn-site.xml</p>\n<pre class=\"brush: xml; gutter: true\">&lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.address&lt;/name&gt;\n    &lt;value&gt;master:8032&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.scheduler.address&lt;/name&gt;\n    &lt;value&gt;master:8030&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.webapp.address&lt;/name&gt;\n    &lt;value&gt;master:8088&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.resource-tracker.address&lt;/name&gt;\n    &lt;value&gt;master:8031&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.admin.address&lt;/name&gt;\n    &lt;value&gt;master:8033&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;nameyarn.nodemanager.address&lt;/name&gt;\n    &lt;value&gt;master:10000&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;\n    &lt;value&gt;mapreduce_shuffle&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.nodemanager.aux-services.mapreduce.shuffle.class&lt;/name&gt;\n    &lt;value&gt;org.apache.hadoop.mapred.ShuffleHandler&lt;/value&gt;\n&lt;/property&gt;  \n</pre>\n\n<p>好了基本的配置完毕了。。。再照一次快照吧！进行格式化（切记不要进行多次格式化！若出现X node are exclued 。。的错误，把tmp 和hdf目录全删了再重建，再进行格式化）</p>\n<pre class=\"brush: xml; gutter: true\">cd /usr/hadoop/bin\n./hdfs namenode -format\n</pre>\n\n<p>随后启动namenode和yarn</p>\n<pre class=\"brush: xml; gutter: true\">cd /usr/hadoop/\n./start-hdf.sh\n./start-yarn.sh\n</pre>\n\n<p>若是没有报错就基本成功了！键入jps查看服务。如果没有出现nodemanager就需要手动启动</p>\n<pre class=\"brush: xml; gutter: true\">cd /usr/hadoop/sbin/\n./yarn-daemon.sh start nodemanager\n</pre>\n\n<p>查看到的jps如下</p>\n<pre class=\"brush: xml; gutter: true\">Jps\nNameNode\nResourceManager\nSecondaryNameNode  \nNodeManager\n</pre>\n\n<p>这就表示启动成功了，可以查看节点状况</p>\n<pre class=\"brush: xml; gutter: true\">cd /usr/hadoop/bin\n./hdfs dfsadmin -report  \n</pre>\n\n<p>也可以通过<a href=\"http://master:50070\" target=\"_blank\" rel=\"external\">http://master:50070</a> 查看节点状况。<br><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1ema1yjwdfjj20va05wdh9.jpg\" alt=\"\"><br>这样hadoop就配置好全分布了。</p>\n<p>五 <strong>运行自带测试程序</strong></p>\n<ul>\n<li>wordcount</li>\n</ul>\n<p>这是一个检测目标文本中所含词数的自带程序。可在<a href=\"http://www.gutenberg.org/files/20417/20417.txt\" target=\"_blank\" rel=\"external\">http://www.gutenberg.org/files/20417/20417.txt</a>下载一篇英文文章，或者自己选择其他的文章。命名为aaa.txt 并放在虚拟机/etc/hadoop目录下。键入</p>\n<pre class=\"brush: xml; gutter: true\">\ncd /usr/hadoop\nbin/hdfs dfs -mkdir /tmp\nbin/hdfs dfs -copyFromLocal /usr/hadoop/aaa.txt /tmp\nbin/hdfs dfs -ls /tmp\nbin/hadoop jar ./share/hadoop/mapreduce/hadoop-mapreduce-examples-2.2.0.jar wordcount /tmp/ /tmp-output \n</pre>\n\n<p>tmp是建立hdfs的目录空间，在tmp-output中输出结果。运行过程中可以看到进程是由mapreduce.job完成。如图为任务开始时<br><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1ema1sqro0nj20gi0bgtbl.jpg\" alt=\"\">同时可以登陆<a href=\"http://master:8088\" target=\"_blank\" rel=\"external\">http://master:8088</a>观看正在运行的application的信息。如图是结束时候的网页信息。<img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1ema1wia60tj20qv07jjsp.jpg\" alt=\"\">如图是结束时候的命令行信息。<img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1ema1zogahbj20bc0azmye.jpg\" alt=\"\">执行完毕后可以查看刚才job的执行结果。</p>\n<pre class=\"brush: xml; gutter: true\">\ncd /usr/hadoop\nbin/hdfs dfs -ls /tmp-output\nhdfs dfs -cat /tmp-output-00000\n</pre>\n\n<p>第二行的目录是输出目录，列出所有的输出信息后，找到名字头相同，后面添加了-0000等数字的就是输出结果。<br><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1ema29bkuf1j20hk0cqdgm.jpg\" alt=\"\"></p>\n<ul>\n<li>randomwriter</li>\n</ul>\n<p>一葫芦画瓢，操作基本相同，randomwriter的任务是随机生成数到dfs中，每个map输入单个文件名，再随机写到键值对中，基本上是一个性能测试。</p>\n<pre class=\"brush: xml; gutter: true\">\ncd  /usr/hadoop\nbin/hdfs dfs -mkdir /rdw\nbin/hadoop jar ./share/hadoop/mapreduce/hadoop-mapreduce-examples-2.2.0.jar randomwriter rdw\n</pre>\n\n<p>时间跨度比较久，机子较旧可能会非常慢。参考各类博客，版权不究。</p>","excerpt":"","more":"<p>hadoop简直神烦，在centos64位中0.2.0和1.2都在安装的最后一步出了问题。node和name都启动了，log没有错误，就是report里各项均为零。折腾了好几天换到2.2.0需要编译才能使用同样是因为各种dependencies版本不兼容编译不通过。最终确定下来的配置是</p>\n<ul>\n<li>centos6.5的32位系统3台，其中两台安装在同一台物理机的虚拟机上 &amp;另一台物理机则安装第三个centos虚拟机</li>\n<li>两台机子分别是：</li>\n<li>master 192.168.199.111</li>\n<li>slave1 192.168.199.212</li>\n<li>slave1 192.168.199.184</li>\n<li>机子间的网络靠路由器连接的内部IP，由于内部分配的IP不是静态的，需要改成静态的（需要保证ip不会冲突）</li>\n</ul>\n<p>一 <strong>在VMware下安装centos6.5 <span style=\"color: #ff0000\">32bit</span></strong></p>\n<p> 这个自己解决，在<a href=\"http://wiki.centos.org/Download\">http://wiki.centos.org/Download</a> 中选择镜像下载centos6.5，centos7由于刚发布，有些兼容不好。在安装的时候，自定义硬件-网络适配器 选择桥接模式，复制物理网络状态不要勾选。</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/a5d0ed33gw1em886n10obj2079043q35.jpg\" alt=\"\"></p>\n<p>安装默认是的是NAT模式，与主机共用同一个IP地址，这样虚拟机下无法分离出更多的IP。安装后启动centos6.5，键入</p>\n<pre class=\"brush: bash; gutter: true\">su root</pre>\n\n<p>输入密码，进入root最高权限用户。在键入</p>\n<pre class=\"brush: bash; gutter: true\">vi /etc/hosts</pre>\n\n<p>可将原来的清空，在hosts文件中添加本机的主机名和IP以便不同节点之间识别，我的如下</p>\n<pre class=\"brush: bash; gutter: true\">192.168.199.111  master\n192.168.199.212  slave1\n192.168.199.184  slave2</pre>\n\n<p>更改主机名</p>\n<pre class=\"brush: bash; gutter: true\">vi /etc/sysconfig/network</pre>\n\n<p>我的主机更改如下</p>\n<pre class=\"brush: bash; gutter: true\">NETWORKING=yes\nHOSTNAME=master</pre>\n\n<p>更改内部自动分配的IP地址</p>\n<pre class=\"brush: bash; gutter: true\">vi /etc/sysconfig/network-scripts/ifcfg-eth0</pre>\n\n<p>如下图，其中IPADDR 192.168.199需要与物理机的前缀相同，111自己设一个没有冲突的ip地址，netmask和gateway和物理机完全一致。这些可以在物理机的命令行窗口执行命令</p>\n<pre class=\"brush: bash; gutter: true\">ipconfig</pre>\n\n<p>进行查看。再键入</p>\n<pre class=\"brush: bash; gutter: true\">service iptables status</pre>\n\n<p>查看虚拟机防火墙状态。若显示firewall is off则表示防火墙已关闭，若显示有内容，则输入</p>\n<pre class=\"brush: bash; gutter: true\">chkconfig iptables off</pre>\n\n<p>关闭防火墙自启动，再输入</p>\n<pre class=\"brush: bash; gutter: true\">service iptables stop</pre>\n\n<p>关闭防火墙。同时关闭物理机的防火墙和安全软件，这时候可以用ping 测试一下几台配好的机子是否相通。</p>\n<p>二 <strong>配置ssh无密码访问</strong><br>ssh是为了在不同节点之间传输文件和消息不用频繁的输入密码。在centos6.5中默认集成了ssh，因此不用安装ssh服务。首先在主节点master上键入</p>\n<pre class=\"brush: bash; gutter: true\">ssh-keygen -t rsa</pre>\n\n<p>生成主节点信息的rsa密钥。进入/root/.ssh隐藏目录可发现生成了一个id_rsa和id_rsa.pub,将主节点信息注入授权key</p>\n<pre class=\"brush: bash; gutter: true\">cd /root/.ssh\nls\ncp id_rsa.pub authorized_keys\ncat id_rsa.pub&gt;&gt;authorized_keys</pre>\n\n<p>对authorized_keys进行附权操作（可省略，针对新建立的非root权限用户，例如很多例子里的hadoop用户）</p>\n<pre class=\"brush: bash; gutter: true\">chmod 600 authorized_keys</pre>\n\n<p>配置sshd_config文件，并将下列项的注释去掉(其余物理机也要进行这样的操作)</p>\n<pre class=\"brush: bash; gutter: true\">vim /etc/ssh/sshd_config\n RSAAuthentication yes\nPubkeyAuthentication yes\nAuthorizedKeysFile     .ssh/authorized_keys</pre>\n\n<p>将包含master密钥的授权key发送给slave1节点。</p>\n<pre class=\"brush: bash; gutter: true\">scp  root@slave1 :/root/.ssh/authorized_keys.pub /root/.ssh/</pre>\n\n<p>这里会需要输入slave1的root密码，进行确认。在slave1登陆，同样的步骤生成id_rsa和id_rsa.pub。</p>\n<pre class=\"brush: bash; gutter: true\">ssh-keygen -t rsa\ncd /root/.ssh\nls\nmv id_rsa.pub slave1.pub\ncat slave1.pub&gt;&gt;authorized_keys</pre>\n\n<p>将包含master和slave1密钥信息的文件传给slave2（此后每加一个节点都需要这么做，把新生成的密钥加入到先前所有人信息的authorizd_keys中）</p>\n<pre class=\"brush: bash; gutter: true\">scp  root@slave2 :/root/.ssh/authorized_keys.pub /root/.ssh/</pre>\n\n<p>重复上面的操作，最后将slave2生成的authorized_keys.pub传回给master和slave1.</p>\n<pre class=\"brush: bash; gutter: true\">scp  root@master :/root/.ssh/authorized_keys.pub /root/.ssh/\nscp  root@slave1 :/root/.ssh/authorized_keys.pub /root/.ssh/</pre>\n\n<p>最后重启ssh服务</p>\n<pre class=\"brush: bash; gutter: true\">service sshd restart</pre>\n\n<p>这时候可以在master上直接键入</p>\n<pre class=\"brush: bash; gutter: true\">ssh slave1</pre>\n\n<p>登陆slave1主机，第一次登陆的时候需要输入root密码，之后就不需要了。这样就可以直接对slave1的文件进行读写操作，记得退出的时候要输入exit</p>\n<p>三 <strong>JDK和Hadoop路径的安装 </strong><br>这两个文件的安装都是下载和路径配置，跟目录分别为</p>\n<pre class=\"brush: bash; gutter: true\">/usr/java\n/usr/hadoop</pre>\n\n<p>这两个路径简单的目的就是为了以后码得少一点<br><strong>Java</strong><br>Java最新版本的路径可在<a href=\"http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html\">http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html</a><a href=\"http://www.java.com/zh_CN/download/manual.jsp\" title=\"java8\">\n</a>下载java8或java7，这里选择的是jdk7，即jdk-7u15-linux-i586.tar.gz。可在物理机下载后直接复制到虚拟机桌面，解压、复制、改文件名</p>\n<pre class=\"brush: bash; gutter: true\">tar -zxf jdk-7u15-linux-i586.tar.gz\nls\ncp -rf jdk1.7.0_15 /usr\nmv jdk1.7.0_15 java</pre>\n\n<p>配置一下全局的环境</p>\n<pre class=\"brush: bash; gutter: true\">vi /etc/profile</pre>\n\n<p>在文件末添加如下代码，配置JAVA安装目录，JRE目录，CLASSPASTH和PATH</p>\n<pre class=\"brush: bash; gutter: true\">JAVA_HOME=/usr/java/\nJRE_HOME=/usr/java/jre\nPATH=$PATH:$JAVA_HOME/bin:$JRE_HOME/bin\nCLASSPATH=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar:$JRE_HOME/lib\nexport JAVA_HOME JRE_HOME PATH CLASSPATH</pre>\n\n<p>里面的冒号与windows下系统环境的分号相通。更新一下配置的java环境，查看java版本，出现如下则配置成功。</p>\n<pre class=\"brush: bash; gutter: true\">source /etc/profile\njava -version</pre>\n\n<p><img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1em9y51jqffj20d001zaa8.jpg\" alt=\"\"></p>\n<p><strong>hadoop</strong><br>hadoop2.2.0在64位下需要源码编译，比较繁琐且容易出错，在32位下则可直接使用。因此选择在<a href=\"http://www.apache.org/dyn/closer.cgi/hadoop/common/\">http://www.apache.org/dyn/closer.cgi/hadoop/common/</a>官方网站下下载2.2.0版本的tar.gz包，即hadoop-2.2.0.tar.gz，放在虚拟机桌面，解压并复制到usr目录下，改名</p>\n<pre class=\"brush: bash; gutter: true\">tar -zxf hadoop-2.2.0.tar.gz\ncp -rf hadoop-2.2.0 /usr/\nmv hadoop-2.2.0 hadoop</pre>\n\n<p>在/etc/profile中添加hadoop的信息</p>\n<pre class=\"brush: bash; gutter: true\">vi /etc/profile\nexport HADOOP_HOME=/usr/hadoop/\nexport PAHT=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin\nexport HADOOP_LOG_DIR=/usr/hadoop/logs\nexport YARN_LOG_DIR=$HADOOP_LOG_DIR</pre>\n\n<p>以上便完成了前期安装工作。</p>\n<p>四 <strong>Hadoop全分布的配置</strong><br>在hadoop中加入java的路径，修改的是hadoop目录下etc/hadoop的hadoop-env.sh</p>\n<pre class=\"brush: bash; gutter: true\">vi /usr/hadoop/etc/hadoop/hadoop-env.sh</pre>\n\n<p>将java路径添加在#export java home那里。<br>修改core-site.xml,添加在configuration里，下同。</p>\n<pre class=\"brush: bash; gutter: true\">vi /etc/hadoop/etc/hadoop/core-site.xml</pre>\n\n<pre class=\"brush: xml; gutter: true\">  \n&lt;property&gt;  \n    &lt;name&gt;fs.default.name&lt;/name&gt;  \n        &lt;value&gt;hdfs://master:9000/&lt;/value&gt;  \n&lt;/property&gt;  \n&lt;property&gt;\n        &lt;name&gt;hadoop.tmp.dir&lt;/name&gt;\n        &lt;value&gt;/usr/hadoop/tmp&lt;/value&gt;\n&lt;/property&gt;  \n</pre>\n\n<p>其中，master是主节点的host名fs.default.name与之前的版本名字有所不同。<br>修改hdfs-site.xml，定义数据节点和名称节点的路径，dfs.replication是datanode的数量，默认为3，小于3的必须写上确切的数目否则会出错。</p>\n<pre class=\"brush: xml; gutter: true\"> \n&lt;property&gt;  \n        &lt;name&gt;dfs.datanode.data.dir&lt;/name&gt;  \n        &lt;value&gt;/usr/hadoop/hdf/data&lt;/value&gt;  \n        &lt;final&gt;true&lt;/final&gt;  \n&lt;/property&gt;  \n     &lt;property&gt;  \n        &lt;name&gt;dfs.namenode.name.dir&lt;/name&gt;  \n        &lt;value&gt;/usr/hadoop/hdf/name&lt;/value&gt;  \n        &lt;final&gt;true&lt;/final&gt;  \n   &lt;/property&gt;  \n   &lt;property&gt;  \n        &lt;name&gt;dfs.replication&lt;/name&gt;  \n        &lt;value&gt;2&lt;/value&gt;  \n&lt;/property&gt;\n&lt;property&gt;  \n         &lt;name&gt;dfs.permissions&lt;/name&gt;  \n         &lt;value&gt;false&lt;/value&gt;  \n&lt;/property&gt;\n</pre>\n\n<p>修改mapred-site.xml 定义Mapreduce应用的jobtracker。由于系统并未自带，但提供了模板，因此复制一下</p>\n<pre class=\"brush: xml; gutter: true\"> mv mapred-site.xml.template mapred-site.xml</pre>\n\n<pre class=\"brush: xml; gutter: true\"> \n&lt;property&gt;\n          &lt;name&gt;mapred.job.tracker&lt;/name&gt;\n          &lt;value&gt;master:9001&lt;/value&gt;\n&lt;/property&gt;\n</pre>\n\n<p>修改yarn-site.xml,配置resourcemanager和nodemanager，这个是2.0以上版本才有的通过yarn管理资源和节点的功能，</p>\n<pre class=\"brush: xml; gutter: true\"> \n&lt;property&gt;  \n        &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;  \n        &lt;value&gt;mapreduce_shuffle&lt;/value&gt;  \n&lt;/property&gt;  \n&lt;property&gt;  \n        &lt;name&gt;yarn.nodemanager.aux-services.mapreduce.shuffle.class&lt;/name&gt;  \n        &lt;value&gt;org.apache.hadoop.mapred.ShuffleHandler&lt;/value&gt;  \n&lt;/property&gt;  \n&lt;property&gt;  \n        &lt;name&gt;yarn.resourcemanager.resource-tracker.address&lt;/name&gt;  \n        &lt;value&gt;master:8025&lt;/value&gt;  \n&lt;/property&gt;  \n&lt;property&gt;  \n        &lt;name&gt;yarn.resourcemanager.scheduler.address&lt;/name&gt;  \n        &lt;value&gt;master:8030&lt;/value&gt;  \n&lt;/property&gt;  \n&lt;property&gt;  \n        &lt;name&gt;yarn.resourcemanager.address&lt;/name&gt;  \n        &lt;value&gt;master:8040&lt;/value&gt;  \n&lt;/property&gt; \n</pre>\n\n<p>创建并未存在的目录，在hadoop目录下的tmp hdf/data hdf/name logs等<br>配置完后直接启动，则进行的是单节点操作。若要进行多节点，编辑同目录下的slaves文件，默认自带的是localhost，将其删除，将slave1和slave2一行一个写在文件中。<br>配置完以上信息就拍一个快照吧！之后就可以进行格式化和启动了，但是在运行自带程序中发现它并没有将任务分配到不同的节点，而是只在master本机的localjobrunner中做，<br><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1ema12m75evj20k00fxdjj.jpg\" alt=\"\"><br>因此若需要在不同的节点分配资源，需要再进行一下配置。<br>修改yarn-env.sh，同样将java的目录配置在export java_home中。<br>再次修改mapred-site.xml，保留之前的配置，在后面加入如下属性</p>\n<pre class=\"brush: xml; gutter: true\">&lt;property&gt;\n   &lt;name&gt;mapreduce.framework.name&lt;/name&gt;\n   &lt;value&gt;yarn&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n   &lt;name&gt;mapreduce.jobhistory.address&lt;/name&gt;\n   &lt;value&gt;master:10020&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n   &lt;name&gt;mapreduce.jobhistory.webapp.address&lt;/name&gt;\n   &lt;value&gt;master:19888&lt;/value&gt;\n&lt;/property&gt;\n</pre>\n\n<p>实际上就是利用yarn来管理和配置资源，如果配置了yarn，则之前的jobtracker就不起作用。最后修改yarn-site.xml</p>\n<pre class=\"brush: xml; gutter: true\">&lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.address&lt;/name&gt;\n    &lt;value&gt;master:8032&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.scheduler.address&lt;/name&gt;\n    &lt;value&gt;master:8030&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.webapp.address&lt;/name&gt;\n    &lt;value&gt;master:8088&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.resource-tracker.address&lt;/name&gt;\n    &lt;value&gt;master:8031&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.resourcemanager.admin.address&lt;/name&gt;\n    &lt;value&gt;master:8033&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;nameyarn.nodemanager.address&lt;/name&gt;\n    &lt;value&gt;master:10000&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.nodemanager.aux-services&lt;/name&gt;\n    &lt;value&gt;mapreduce_shuffle&lt;/value&gt;\n&lt;/property&gt;\n&lt;property&gt;\n    &lt;name&gt;yarn.nodemanager.aux-services.mapreduce.shuffle.class&lt;/name&gt;\n    &lt;value&gt;org.apache.hadoop.mapred.ShuffleHandler&lt;/value&gt;\n&lt;/property&gt;  \n</pre>\n\n<p>好了基本的配置完毕了。。。再照一次快照吧！进行格式化（切记不要进行多次格式化！若出现X node are exclued 。。的错误，把tmp 和hdf目录全删了再重建，再进行格式化）</p>\n<pre class=\"brush: xml; gutter: true\">cd /usr/hadoop/bin\n./hdfs namenode -format\n</pre>\n\n<p>随后启动namenode和yarn</p>\n<pre class=\"brush: xml; gutter: true\">cd /usr/hadoop/\n./start-hdf.sh\n./start-yarn.sh\n</pre>\n\n<p>若是没有报错就基本成功了！键入jps查看服务。如果没有出现nodemanager就需要手动启动</p>\n<pre class=\"brush: xml; gutter: true\">cd /usr/hadoop/sbin/\n./yarn-daemon.sh start nodemanager\n</pre>\n\n<p>查看到的jps如下</p>\n<pre class=\"brush: xml; gutter: true\">Jps\nNameNode\nResourceManager\nSecondaryNameNode  \nNodeManager\n</pre>\n\n<p>这就表示启动成功了，可以查看节点状况</p>\n<pre class=\"brush: xml; gutter: true\">cd /usr/hadoop/bin\n./hdfs dfsadmin -report  \n</pre>\n\n<p>也可以通过<a href=\"http://master:50070\">http://master:50070</a> 查看节点状况。<br><img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1ema1yjwdfjj20va05wdh9.jpg\" alt=\"\"><br>这样hadoop就配置好全分布了。</p>\n<p>五 <strong>运行自带测试程序</strong></p>\n<ul>\n<li>wordcount</li>\n</ul>\n<p>这是一个检测目标文本中所含词数的自带程序。可在<a href=\"http://www.gutenberg.org/files/20417/20417.txt\">http://www.gutenberg.org/files/20417/20417.txt</a>下载一篇英文文章，或者自己选择其他的文章。命名为aaa.txt 并放在虚拟机/etc/hadoop目录下。键入</p>\n<pre class=\"brush: xml; gutter: true\">\ncd /usr/hadoop\nbin/hdfs dfs -mkdir /tmp\nbin/hdfs dfs -copyFromLocal /usr/hadoop/aaa.txt /tmp\nbin/hdfs dfs -ls /tmp\nbin/hadoop jar ./share/hadoop/mapreduce/hadoop-mapreduce-examples-2.2.0.jar wordcount /tmp/ /tmp-output \n</pre>\n\n<p>tmp是建立hdfs的目录空间，在tmp-output中输出结果。运行过程中可以看到进程是由mapreduce.job完成。如图为任务开始时<br><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1ema1sqro0nj20gi0bgtbl.jpg\" alt=\"\">同时可以登陆<a href=\"http://master:8088\">http://master:8088</a>观看正在运行的application的信息。如图是结束时候的网页信息。<img src=\"http://ww1.sinaimg.cn/large/68eb7c93jw1ema1wia60tj20qv07jjsp.jpg\" alt=\"\">如图是结束时候的命令行信息。<img src=\"http://ww2.sinaimg.cn/large/68eb7c93jw1ema1zogahbj20bc0azmye.jpg\" alt=\"\">执行完毕后可以查看刚才job的执行结果。</p>\n<pre class=\"brush: xml; gutter: true\">\ncd /usr/hadoop\nbin/hdfs dfs -ls /tmp-output\nhdfs dfs -cat /tmp-output-00000\n</pre>\n\n<p>第二行的目录是输出目录，列出所有的输出信息后，找到名字头相同，后面添加了-0000等数字的就是输出结果。<br><img src=\"http://ww3.sinaimg.cn/large/68eb7c93jw1ema29bkuf1j20hk0cqdgm.jpg\" alt=\"\"></p>\n<ul>\n<li>randomwriter</li>\n</ul>\n<p>一葫芦画瓢，操作基本相同，randomwriter的任务是随机生成数到dfs中，每个map输入单个文件名，再随机写到键值对中，基本上是一个性能测试。</p>\n<pre class=\"brush: xml; gutter: true\">\ncd  /usr/hadoop\nbin/hdfs dfs -mkdir /rdw\nbin/hadoop jar ./share/hadoop/mapreduce/hadoop-mapreduce-examples-2.2.0.jar randomwriter rdw\n</pre>\n\n<p>时间跨度比较久，机子较旧可能会非常慢。参考各类博客，版权不究。</p>"},{"title":"Hexo多客户端写作","date":"2016-04-27T03:50:01.000Z","_content":"\n> Hexo是很棒的静态博客，简单的安装配置即可专注写作。  \n> 但是强迫症就是很爱折腾。倘若：\n> \n> + 主机烧了数据备份怎么破？\n> + 换了系统想继续之前的写作怎么破?\n> + 纯粹就是想多客户端写作怎么破？\n> \n\n我就纯属蛋疼的。喜欢在办公和休息的地方都写作；或者我一win本\n一mac 都想写文章。但Hexo的静态部署的原则不像WordPress一样，能关联博客地址，利用数据库进行博客更新。好了，这里就来解决这个问题。┑(￣Д ￣)┍\n\n<!-- more -->\n#  Hexo写作的部署逻辑&其他\n\n##  Hexo的写作特点\nHexo最大特点就是静态博客，即部署到服务器的博客内容是静态写好的html（由markdown转义），而不像类似wordpress的数据都存放在服务器端数据库，每次更新即一次读写数据库的操作。所以如果需要更改博客内容、发布新内容，必须\n\n1. 更改源文件source文件夹下_post及其他各页面文件夹的md文件\n2. 通过``hexo g``或``hexo generate``在public生成静态文件。\n3. 利用``hexo-deployer-git``插件及``hexo d``命令将public的文件自动的部署到创建好的``user-name.github.io``项目中。\n> 在github项目中可以看到，自动上传的只有public文件夹中的文件，包括以年份分类的静态页面文件夹、tag、categories及其他辅助css、js、img等，还有域名指引的CNAME和rss sitemap等。\n4. 在博客中看到更新的内容。当然，本地目录中，即存放了md源文件，也包含了生成的public文件。其实，本地并不需要public里的内容，只要有写作的源文件，generate一下就能生成。\n\n##  Hexo的缺憾\n那么问题来了，如果我在公司和贫民窟都想写作怎么办。总不能在两个本地仓库hexo init都部署到pages项目。在公司更新一篇blog里面全都是公司写的，然后回到地下室又写一篇更新又全是小黑屋的内容。  \n\n尽管Hexo让人专注写作，随时随地用md写一篇博，等到来到同步的机器才更新一次也让人很不爽。对于远程仓库只存放静态文件的方案，就想到了两个思路\n\n###  同步静态文件\n> 新仓库同步静态文件->hexo g生成静态文件->合并静态文件->hexo d部署\n\n1. 在两地分别hexo init建立hexo博客目录，在_config.yml中都部署到同一个远程仓库，在每次generate时，都先将远程仓库的静态文件同步下来（新建一个单独的folder专门用于同步静态文件）。请勿使用hexo博客中的public文件夹用于同步，每次generate会覆盖同名文件。若另一台主机曾做过修改并提交，这次修改的静态文件将被本地未修改的静态文件覆盖。具体操作：\n第一次克隆远程hexo主分支：\n\n```\ngit clone git@github.com:user-name/user-name.github.io.git\n```\n\n之后每次hexo仓库发布首先在静态文件仓库获取远程仓库最新静态文件(无条件merge)\n\n```\ngit pull origin master\n```\n\n2. 在静态文件同步仓库中，将自上次部署后，本地修改过的静态文件**删掉**（不记得怪我咯┑(￣Д ￣)┍）；同时在hexo blog仓库中``hexo -g``生成本地静态文件。\n3. 将剔除过期静态文件的public仓库中文件复制到hexo的public中。\n4. 使用``hexo -d``部署\n> 以上步骤2中的删除操作是为了保证静态文件的数据都是最新的，保证博客内容的一致性。\n\n###  同步源文件（大招）\n想到上述方式需要进行2步骤的主要原因就是本地的源文件不同步，只能通过生成的静态文件进行合并的方式，为毛不将源文件同步呢？！参考[这篇文章](http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/)的思路，同步源文件就是通过远程仓库对源文件融合统一。\n\n##  呵呵哒\n\n本文为了完成多客户端的同Hexo博的管理和发布，对ssh、git安装、Hexo安装、配置插件主题管理、域名绑定**不涉及**。\n+ 系统不限制 \n+ 是否写过博部署过没差\n+ 最好Hexo3.X,2.X没试过出事自负\n\n#  真·多客户端\n\n##  创建远程仓库\n+ 对于没有进行创作的hexo博客，首先创建同名仓库，再创建一个hexo branch。此时俩分支都是空的  \n+ 对于已经进行创作的hexo博客，直接创建一个hexo 分支。此时，hexo clone了master的静态文件。\n\n##  设置主分支\n将hexo branch设为主分支，用于同步源文件；master branch作为静态文件的存放。（由于github pages会检索master分支作为该域名下的部署分支，因此必须把master名字保留）\n\n![](http://ooo.0o0.ooo/2016/04/27/5720a2a70a238.png)\n\n##   同步远程仓库并初始化\n在本地（包含第一次所有源文件的主机）新建一个文件夹（就算已经写过博客的也这么搞）同步远程仓库并初始化\n\n```\ngit clone git@github.com:your-Id/your-Id.github.io.git    \n```\n\n此时输入``git branch``可以看到两个分支，红色分支为主分支。\n若是非空白博客，同步后需要先删掉里面的静态文件.直接删光，把原博客的文件全部复制过来**（好像没有发现更换远程仓库主分支后本地同步更换的git bash。求解?）**;若是空白博客，那么需要再令建一个文件夹，（因为hexo init操作会覆盖原.git文件导致与远程仓库失联）在该文件夹git bash执行\n\n```\nnpm install -g hexo\nhexo init\nnpm install\nhexo g\nnpm install hexo-deployer-git--save\n```\n\n好了，里面该有的差不多都有了。全部复制到源文件仓库。**注意把hello worl删掉啊。**关键的就是，config.yml里deployer的branch是master，而本地仓库关联的是hexo就对了。\n然后执行\n\n```\ngit add .\ngit commit -m \"init\"\ngit push -u origin hexo\n```\n值得注意的是，有的时候提示主题的文件夹并未加入同步操作，显示\n\n```shell\n\nChanges not staged for commit\n```\n即主题文件夹的内容尚未有之前版本，应该加入tracked。应在提交前输入``git add themes/themes_name/``.最后那个斜杠别忘了加。\n这就完成源文件的同步了！(￣▽￣)\"\" 执行``hexo d``操作将本地public静态文件部署。\n\n#  发博日常\n\n##   更博\n如果你不能确定是否抽风需要经常换客户端，因此需要每次都要同步本地源文件；如果能忍住，，或者有规律的换客户端，那么平时更新不需要经常同步。  \n写博前操作(**特么狠重要啊**)：\n\n```\ngit pull origin hexo\n```\n\n更新操作：(同步源文件到hexo分支)\n\n```\ngit add .\ngit commit -m \"hehe\"\ngit push origin hexo\n```\n\n这样每次更博都需要多几个步骤，嫌麻烦就要忍住不手痒了。在手机、pad写md再同步到电脑也是个不错的习惯。\n\n##   换客户端\neasy.只要远程仓库存在了一份完整的源文件，那同步就很容易了。似上步第一次同步，使用``git clone git@github.com:your-Id/your-Id.github.io.git``拷贝仓库。然后执行\n\n```\nnpm install -g hexo\nnpm install\nnpm install hexo-deployer-git \n```\n\n<font color=\"red\">**不用hexo init!!!**</font>\n\n#  后记\n\n##  多地部署\npacman的公式和代码支持好差啊~还有需要多地备份的可以尝试coding（page之前免费的现在要钱了 = =）.在站点部署文件中更改deploy：\n\n```markdown\ndeploy:\n   type: git\n   repo: \n      github: https://github.com/{YOUR_ID}/{YOUR_ID}.github.io.git,master\n      coding: https://git.coding.net/{YOUR_ID}/{BLOG　NAME}.git,master\n```\n同理也能部署到自己的ftp服务器上。\n\n##   <font color=\"red\">bug1 file-name-too-long</font>  \n在拷贝原始数据的时候，提交远程仓库时可能会报modules的文件夹无法同步。这个情况在windows下安装msysgit进行git bash会报这一问题。[这里](https://github.com/msysgit/git/pull/110)也提到了这个异常。但这并不是git的问题，而是msysgit的问题。使用其他git方式对文件路径较长的提交就不会报错。实测在github for windows下提交该modules文件就不会报错。\n\n##  <font color=\"red\">bug2 could not read Username for 'https://XXX'</font>  \n当需要推送另一台设备的静态文件时，可能极少情况会碰上这个问题。有的说是bash的版本问题，不识别这种方式的推送。然而我用的同一版本的msysgit..\n\n在[这里](http://stackoverflow.com/questions/20871549/error-when-push-commits-with-github-fatal-could-not-read-username)也发现了这个问题，尝试了一下使用在https中加入用户名和密码的方式能够良好的推送。。当然配置文件别泄露了。。更改配置文件的deploy如下：\n\n```markdown\ndeploy:\n   type: git\n   repo: \n      github: https://{YOUR_ID}:{Your_Pwd}@github.com/{YOUR_ID}/{YOUR_ID}.github.io.git,master\n      coding: https://{YOUR_ID}:{Your_Pwd}@git.coding.net/{YOUR_ID}/{BLOG　NAME}.git,master\n```\n\nEnjoy Hexo!","source":"_posts/hexo多客户端写作.md","raw":"---\ntitle: Hexo多客户端写作\ndate: 2016-04-27 11:50:01\ntags:\n---\n\n> Hexo是很棒的静态博客，简单的安装配置即可专注写作。  \n> 但是强迫症就是很爱折腾。倘若：\n> \n> + 主机烧了数据备份怎么破？\n> + 换了系统想继续之前的写作怎么破?\n> + 纯粹就是想多客户端写作怎么破？\n> \n\n我就纯属蛋疼的。喜欢在办公和休息的地方都写作；或者我一win本\n一mac 都想写文章。但Hexo的静态部署的原则不像WordPress一样，能关联博客地址，利用数据库进行博客更新。好了，这里就来解决这个问题。┑(￣Д ￣)┍\n\n<!-- more -->\n#  Hexo写作的部署逻辑&其他\n\n##  Hexo的写作特点\nHexo最大特点就是静态博客，即部署到服务器的博客内容是静态写好的html（由markdown转义），而不像类似wordpress的数据都存放在服务器端数据库，每次更新即一次读写数据库的操作。所以如果需要更改博客内容、发布新内容，必须\n\n1. 更改源文件source文件夹下_post及其他各页面文件夹的md文件\n2. 通过``hexo g``或``hexo generate``在public生成静态文件。\n3. 利用``hexo-deployer-git``插件及``hexo d``命令将public的文件自动的部署到创建好的``user-name.github.io``项目中。\n> 在github项目中可以看到，自动上传的只有public文件夹中的文件，包括以年份分类的静态页面文件夹、tag、categories及其他辅助css、js、img等，还有域名指引的CNAME和rss sitemap等。\n4. 在博客中看到更新的内容。当然，本地目录中，即存放了md源文件，也包含了生成的public文件。其实，本地并不需要public里的内容，只要有写作的源文件，generate一下就能生成。\n\n##  Hexo的缺憾\n那么问题来了，如果我在公司和贫民窟都想写作怎么办。总不能在两个本地仓库hexo init都部署到pages项目。在公司更新一篇blog里面全都是公司写的，然后回到地下室又写一篇更新又全是小黑屋的内容。  \n\n尽管Hexo让人专注写作，随时随地用md写一篇博，等到来到同步的机器才更新一次也让人很不爽。对于远程仓库只存放静态文件的方案，就想到了两个思路\n\n###  同步静态文件\n> 新仓库同步静态文件->hexo g生成静态文件->合并静态文件->hexo d部署\n\n1. 在两地分别hexo init建立hexo博客目录，在_config.yml中都部署到同一个远程仓库，在每次generate时，都先将远程仓库的静态文件同步下来（新建一个单独的folder专门用于同步静态文件）。请勿使用hexo博客中的public文件夹用于同步，每次generate会覆盖同名文件。若另一台主机曾做过修改并提交，这次修改的静态文件将被本地未修改的静态文件覆盖。具体操作：\n第一次克隆远程hexo主分支：\n\n```\ngit clone git@github.com:user-name/user-name.github.io.git\n```\n\n之后每次hexo仓库发布首先在静态文件仓库获取远程仓库最新静态文件(无条件merge)\n\n```\ngit pull origin master\n```\n\n2. 在静态文件同步仓库中，将自上次部署后，本地修改过的静态文件**删掉**（不记得怪我咯┑(￣Д ￣)┍）；同时在hexo blog仓库中``hexo -g``生成本地静态文件。\n3. 将剔除过期静态文件的public仓库中文件复制到hexo的public中。\n4. 使用``hexo -d``部署\n> 以上步骤2中的删除操作是为了保证静态文件的数据都是最新的，保证博客内容的一致性。\n\n###  同步源文件（大招）\n想到上述方式需要进行2步骤的主要原因就是本地的源文件不同步，只能通过生成的静态文件进行合并的方式，为毛不将源文件同步呢？！参考[这篇文章](http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/)的思路，同步源文件就是通过远程仓库对源文件融合统一。\n\n##  呵呵哒\n\n本文为了完成多客户端的同Hexo博的管理和发布，对ssh、git安装、Hexo安装、配置插件主题管理、域名绑定**不涉及**。\n+ 系统不限制 \n+ 是否写过博部署过没差\n+ 最好Hexo3.X,2.X没试过出事自负\n\n#  真·多客户端\n\n##  创建远程仓库\n+ 对于没有进行创作的hexo博客，首先创建同名仓库，再创建一个hexo branch。此时俩分支都是空的  \n+ 对于已经进行创作的hexo博客，直接创建一个hexo 分支。此时，hexo clone了master的静态文件。\n\n##  设置主分支\n将hexo branch设为主分支，用于同步源文件；master branch作为静态文件的存放。（由于github pages会检索master分支作为该域名下的部署分支，因此必须把master名字保留）\n\n![](http://ooo.0o0.ooo/2016/04/27/5720a2a70a238.png)\n\n##   同步远程仓库并初始化\n在本地（包含第一次所有源文件的主机）新建一个文件夹（就算已经写过博客的也这么搞）同步远程仓库并初始化\n\n```\ngit clone git@github.com:your-Id/your-Id.github.io.git    \n```\n\n此时输入``git branch``可以看到两个分支，红色分支为主分支。\n若是非空白博客，同步后需要先删掉里面的静态文件.直接删光，把原博客的文件全部复制过来**（好像没有发现更换远程仓库主分支后本地同步更换的git bash。求解?）**;若是空白博客，那么需要再令建一个文件夹，（因为hexo init操作会覆盖原.git文件导致与远程仓库失联）在该文件夹git bash执行\n\n```\nnpm install -g hexo\nhexo init\nnpm install\nhexo g\nnpm install hexo-deployer-git--save\n```\n\n好了，里面该有的差不多都有了。全部复制到源文件仓库。**注意把hello worl删掉啊。**关键的就是，config.yml里deployer的branch是master，而本地仓库关联的是hexo就对了。\n然后执行\n\n```\ngit add .\ngit commit -m \"init\"\ngit push -u origin hexo\n```\n值得注意的是，有的时候提示主题的文件夹并未加入同步操作，显示\n\n```shell\n\nChanges not staged for commit\n```\n即主题文件夹的内容尚未有之前版本，应该加入tracked。应在提交前输入``git add themes/themes_name/``.最后那个斜杠别忘了加。\n这就完成源文件的同步了！(￣▽￣)\"\" 执行``hexo d``操作将本地public静态文件部署。\n\n#  发博日常\n\n##   更博\n如果你不能确定是否抽风需要经常换客户端，因此需要每次都要同步本地源文件；如果能忍住，，或者有规律的换客户端，那么平时更新不需要经常同步。  \n写博前操作(**特么狠重要啊**)：\n\n```\ngit pull origin hexo\n```\n\n更新操作：(同步源文件到hexo分支)\n\n```\ngit add .\ngit commit -m \"hehe\"\ngit push origin hexo\n```\n\n这样每次更博都需要多几个步骤，嫌麻烦就要忍住不手痒了。在手机、pad写md再同步到电脑也是个不错的习惯。\n\n##   换客户端\neasy.只要远程仓库存在了一份完整的源文件，那同步就很容易了。似上步第一次同步，使用``git clone git@github.com:your-Id/your-Id.github.io.git``拷贝仓库。然后执行\n\n```\nnpm install -g hexo\nnpm install\nnpm install hexo-deployer-git \n```\n\n<font color=\"red\">**不用hexo init!!!**</font>\n\n#  后记\n\n##  多地部署\npacman的公式和代码支持好差啊~还有需要多地备份的可以尝试coding（page之前免费的现在要钱了 = =）.在站点部署文件中更改deploy：\n\n```markdown\ndeploy:\n   type: git\n   repo: \n      github: https://github.com/{YOUR_ID}/{YOUR_ID}.github.io.git,master\n      coding: https://git.coding.net/{YOUR_ID}/{BLOG　NAME}.git,master\n```\n同理也能部署到自己的ftp服务器上。\n\n##   <font color=\"red\">bug1 file-name-too-long</font>  \n在拷贝原始数据的时候，提交远程仓库时可能会报modules的文件夹无法同步。这个情况在windows下安装msysgit进行git bash会报这一问题。[这里](https://github.com/msysgit/git/pull/110)也提到了这个异常。但这并不是git的问题，而是msysgit的问题。使用其他git方式对文件路径较长的提交就不会报错。实测在github for windows下提交该modules文件就不会报错。\n\n##  <font color=\"red\">bug2 could not read Username for 'https://XXX'</font>  \n当需要推送另一台设备的静态文件时，可能极少情况会碰上这个问题。有的说是bash的版本问题，不识别这种方式的推送。然而我用的同一版本的msysgit..\n\n在[这里](http://stackoverflow.com/questions/20871549/error-when-push-commits-with-github-fatal-could-not-read-username)也发现了这个问题，尝试了一下使用在https中加入用户名和密码的方式能够良好的推送。。当然配置文件别泄露了。。更改配置文件的deploy如下：\n\n```markdown\ndeploy:\n   type: git\n   repo: \n      github: https://{YOUR_ID}:{Your_Pwd}@github.com/{YOUR_ID}/{YOUR_ID}.github.io.git,master\n      coding: https://{YOUR_ID}:{Your_Pwd}@git.coding.net/{YOUR_ID}/{BLOG　NAME}.git,master\n```\n\nEnjoy Hexo!","slug":"hexo多客户端写作","published":1,"updated":"2016-04-28T15:29:03.676Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7nh0032uco4c9f7vzkl","content":"<blockquote>\n<p>Hexo是很棒的静态博客，简单的安装配置即可专注写作。<br>但是强迫症就是很爱折腾。倘若：</p>\n<ul>\n<li>主机烧了数据备份怎么破？</li>\n<li>换了系统想继续之前的写作怎么破?</li>\n<li>纯粹就是想多客户端写作怎么破？</li>\n</ul>\n</blockquote>\n<p>我就纯属蛋疼的。喜欢在办公和休息的地方都写作；或者我一win本<br>一mac 都想写文章。但Hexo的静态部署的原则不像WordPress一样，能关联博客地址，利用数据库进行博客更新。好了，这里就来解决这个问题。┑(￣Д ￣)┍</p>\n<a id=\"more\"></a>\n<h1 id=\"Hexo写作的部署逻辑-amp-其他\"><a href=\"#Hexo写作的部署逻辑-amp-其他\" class=\"headerlink\" title=\"Hexo写作的部署逻辑&amp;其他\"></a>Hexo写作的部署逻辑&amp;其他</h1><h2 id=\"Hexo的写作特点\"><a href=\"#Hexo的写作特点\" class=\"headerlink\" title=\"Hexo的写作特点\"></a>Hexo的写作特点</h2><p>Hexo最大特点就是静态博客，即部署到服务器的博客内容是静态写好的html（由markdown转义），而不像类似wordpress的数据都存放在服务器端数据库，每次更新即一次读写数据库的操作。所以如果需要更改博客内容、发布新内容，必须</p>\n<ol>\n<li>更改源文件source文件夹下_post及其他各页面文件夹的md文件</li>\n<li>通过<code>hexo g</code>或<code>hexo generate</code>在public生成静态文件。</li>\n<li>利用<code>hexo-deployer-git</code>插件及<code>hexo d</code>命令将public的文件自动的部署到创建好的<code>user-name.github.io</code>项目中。<blockquote>\n<p>在github项目中可以看到，自动上传的只有public文件夹中的文件，包括以年份分类的静态页面文件夹、tag、categories及其他辅助css、js、img等，还有域名指引的CNAME和rss sitemap等。</p>\n</blockquote>\n</li>\n<li>在博客中看到更新的内容。当然，本地目录中，即存放了md源文件，也包含了生成的public文件。其实，本地并不需要public里的内容，只要有写作的源文件，generate一下就能生成。</li>\n</ol>\n<h2 id=\"Hexo的缺憾\"><a href=\"#Hexo的缺憾\" class=\"headerlink\" title=\"Hexo的缺憾\"></a>Hexo的缺憾</h2><p>那么问题来了，如果我在公司和贫民窟都想写作怎么办。总不能在两个本地仓库hexo init都部署到pages项目。在公司更新一篇blog里面全都是公司写的，然后回到地下室又写一篇更新又全是小黑屋的内容。  </p>\n<p>尽管Hexo让人专注写作，随时随地用md写一篇博，等到来到同步的机器才更新一次也让人很不爽。对于远程仓库只存放静态文件的方案，就想到了两个思路</p>\n<h3 id=\"同步静态文件\"><a href=\"#同步静态文件\" class=\"headerlink\" title=\"同步静态文件\"></a>同步静态文件</h3><blockquote>\n<p>新仓库同步静态文件-&gt;hexo g生成静态文件-&gt;合并静态文件-&gt;hexo d部署</p>\n</blockquote>\n<ol>\n<li>在两地分别hexo init建立hexo博客目录，在_config.yml中都部署到同一个远程仓库，在每次generate时，都先将远程仓库的静态文件同步下来（新建一个单独的folder专门用于同步静态文件）。请勿使用hexo博客中的public文件夹用于同步，每次generate会覆盖同名文件。若另一台主机曾做过修改并提交，这次修改的静态文件将被本地未修改的静态文件覆盖。具体操作：<br>第一次克隆远程hexo主分支：</li>\n</ol>\n<pre><code>git clone git@github.com:user-name/user-name.github.io.git\n</code></pre><p>之后每次hexo仓库发布首先在静态文件仓库获取远程仓库最新静态文件(无条件merge)</p>\n<pre><code>git pull origin master\n</code></pre><ol>\n<li>在静态文件同步仓库中，将自上次部署后，本地修改过的静态文件<strong>删掉</strong>（不记得怪我咯┑(￣Д ￣)┍）；同时在hexo blog仓库中<code>hexo -g</code>生成本地静态文件。</li>\n<li>将剔除过期静态文件的public仓库中文件复制到hexo的public中。</li>\n<li>使用<code>hexo -d</code>部署<blockquote>\n<p>以上步骤2中的删除操作是为了保证静态文件的数据都是最新的，保证博客内容的一致性。</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"同步源文件（大招）\"><a href=\"#同步源文件（大招）\" class=\"headerlink\" title=\"同步源文件（大招）\"></a>同步源文件（大招）</h3><p>想到上述方式需要进行2步骤的主要原因就是本地的源文件不同步，只能通过生成的静态文件进行合并的方式，为毛不将源文件同步呢？！参考<a href=\"http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/\" target=\"_blank\" rel=\"external\">这篇文章</a>的思路，同步源文件就是通过远程仓库对源文件融合统一。</p>\n<h2 id=\"呵呵哒\"><a href=\"#呵呵哒\" class=\"headerlink\" title=\"呵呵哒\"></a>呵呵哒</h2><p>本文为了完成多客户端的同Hexo博的管理和发布，对ssh、git安装、Hexo安装、配置插件主题管理、域名绑定<strong>不涉及</strong>。</p>\n<ul>\n<li>系统不限制 </li>\n<li>是否写过博部署过没差</li>\n<li>最好Hexo3.X,2.X没试过出事自负</li>\n</ul>\n<h1 id=\"真·多客户端\"><a href=\"#真·多客户端\" class=\"headerlink\" title=\"真·多客户端\"></a>真·多客户端</h1><h2 id=\"创建远程仓库\"><a href=\"#创建远程仓库\" class=\"headerlink\" title=\"创建远程仓库\"></a>创建远程仓库</h2><ul>\n<li>对于没有进行创作的hexo博客，首先创建同名仓库，再创建一个hexo branch。此时俩分支都是空的  </li>\n<li>对于已经进行创作的hexo博客，直接创建一个hexo 分支。此时，hexo clone了master的静态文件。</li>\n</ul>\n<h2 id=\"设置主分支\"><a href=\"#设置主分支\" class=\"headerlink\" title=\"设置主分支\"></a>设置主分支</h2><p>将hexo branch设为主分支，用于同步源文件；master branch作为静态文件的存放。（由于github pages会检索master分支作为该域名下的部署分支，因此必须把master名字保留）</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/04/27/5720a2a70a238.png\" alt=\"\"></p>\n<h2 id=\"同步远程仓库并初始化\"><a href=\"#同步远程仓库并初始化\" class=\"headerlink\" title=\"同步远程仓库并初始化\"></a>同步远程仓库并初始化</h2><p>在本地（包含第一次所有源文件的主机）新建一个文件夹（就算已经写过博客的也这么搞）同步远程仓库并初始化</p>\n<pre><code>git clone git@github.com:your-Id/your-Id.github.io.git\n</code></pre><p>此时输入<code>git branch</code>可以看到两个分支，红色分支为主分支。<br>若是非空白博客，同步后需要先删掉里面的静态文件.直接删光，把原博客的文件全部复制过来<strong>（好像没有发现更换远程仓库主分支后本地同步更换的git bash。求解?）</strong>;若是空白博客，那么需要再令建一个文件夹，（因为hexo init操作会覆盖原.git文件导致与远程仓库失联）在该文件夹git bash执行</p>\n<pre><code>npm install -g hexo\nhexo init\nnpm install\nhexo g\nnpm install hexo-deployer-git--save\n</code></pre><p>好了，里面该有的差不多都有了。全部复制到源文件仓库。<strong>注意把hello worl删掉啊。</strong>关键的就是，config.yml里deployer的branch是master，而本地仓库关联的是hexo就对了。<br>然后执行</p>\n<pre><code>git add .\ngit commit -m &quot;init&quot;\ngit push -u origin hexo\n</code></pre><p>值得注意的是，有的时候提示主题的文件夹并未加入同步操作，显示</p>\n<pre><code class=\"shell\">\nChanges not staged for commit\n</code></pre>\n<p>即主题文件夹的内容尚未有之前版本，应该加入tracked。应在提交前输入<code>git add themes/themes_name/</code>.最后那个斜杠别忘了加。<br>这就完成源文件的同步了！(￣▽￣)”” 执行<code>hexo d</code>操作将本地public静态文件部署。</p>\n<h1 id=\"发博日常\"><a href=\"#发博日常\" class=\"headerlink\" title=\"发博日常\"></a>发博日常</h1><h2 id=\"更博\"><a href=\"#更博\" class=\"headerlink\" title=\"更博\"></a>更博</h2><p>如果你不能确定是否抽风需要经常换客户端，因此需要每次都要同步本地源文件；如果能忍住，，或者有规律的换客户端，那么平时更新不需要经常同步。<br>写博前操作(<strong>特么狠重要啊</strong>)：</p>\n<pre><code>git pull origin hexo\n</code></pre><p>更新操作：(同步源文件到hexo分支)</p>\n<pre><code>git add .\ngit commit -m &quot;hehe&quot;\ngit push origin hexo\n</code></pre><p>这样每次更博都需要多几个步骤，嫌麻烦就要忍住不手痒了。在手机、pad写md再同步到电脑也是个不错的习惯。</p>\n<h2 id=\"换客户端\"><a href=\"#换客户端\" class=\"headerlink\" title=\"换客户端\"></a>换客户端</h2><p>easy.只要远程仓库存在了一份完整的源文件，那同步就很容易了。似上步第一次同步，使用<code>git clone git@github.com:your-Id/your-Id.github.io.git</code>拷贝仓库。然后执行</p>\n<pre><code>npm install -g hexo\nnpm install\nnpm install hexo-deployer-git\n</code></pre><font color=\"red\"><strong>不用hexo init!!!</strong></font>\n\n<h1 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h1><h2 id=\"多地部署\"><a href=\"#多地部署\" class=\"headerlink\" title=\"多地部署\"></a>多地部署</h2><p>pacman的公式和代码支持好差啊~还有需要多地备份的可以尝试coding（page之前免费的现在要钱了 = =）.在站点部署文件中更改deploy：</p>\n<pre><code class=\"markdown\">deploy:\n   type: git\n   repo: \n      github: https://github.com/{YOUR_ID}/{YOUR_ID}.github.io.git,master\n      coding: https://git.coding.net/{YOUR_ID}/{BLOG　NAME}.git,master\n</code></pre>\n<p>同理也能部署到自己的ftp服务器上。</p>\n<h2 id=\"bug1-file-name-too-long\"><a href=\"#bug1-file-name-too-long\" class=\"headerlink\" title=\"bug1 file-name-too-long\"></a><font color=\"red\">bug1 file-name-too-long</font></h2><p>在拷贝原始数据的时候，提交远程仓库时可能会报modules的文件夹无法同步。这个情况在windows下安装msysgit进行git bash会报这一问题。<a href=\"https://github.com/msysgit/git/pull/110\" target=\"_blank\" rel=\"external\">这里</a>也提到了这个异常。但这并不是git的问题，而是msysgit的问题。使用其他git方式对文件路径较长的提交就不会报错。实测在github for windows下提交该modules文件就不会报错。</p>\n<h2 id=\"bug2-could-not-read-Username-for-‘https-XXX‘\"><a href=\"#bug2-could-not-read-Username-for-‘https-XXX‘\" class=\"headerlink\" title=\"bug2 could not read Username for ‘https://XXX‘\"></a><font color=\"red\">bug2 could not read Username for ‘<a href=\"https://XXX\" target=\"_blank\" rel=\"external\">https://XXX</a>‘</font></h2><p>当需要推送另一台设备的静态文件时，可能极少情况会碰上这个问题。有的说是bash的版本问题，不识别这种方式的推送。然而我用的同一版本的msysgit..</p>\n<p>在<a href=\"http://stackoverflow.com/questions/20871549/error-when-push-commits-with-github-fatal-could-not-read-username\" target=\"_blank\" rel=\"external\">这里</a>也发现了这个问题，尝试了一下使用在https中加入用户名和密码的方式能够良好的推送。。当然配置文件别泄露了。。更改配置文件的deploy如下：</p>\n<pre><code class=\"markdown\">deploy:\n   type: git\n   repo: \n      github: https://{YOUR_ID}:{Your_Pwd}@github.com/{YOUR_ID}/{YOUR_ID}.github.io.git,master\n      coding: https://{YOUR_ID}:{Your_Pwd}@git.coding.net/{YOUR_ID}/{BLOG　NAME}.git,master\n</code></pre>\n<p>Enjoy Hexo!</p>","excerpt":"<blockquote>\n<p>Hexo是很棒的静态博客，简单的安装配置即可专注写作。<br>但是强迫症就是很爱折腾。倘若：</p>\n<ul>\n<li>主机烧了数据备份怎么破？</li>\n<li>换了系统想继续之前的写作怎么破?</li>\n<li>纯粹就是想多客户端写作怎么破？</li>\n</ul>\n</blockquote>\n<p>我就纯属蛋疼的。喜欢在办公和休息的地方都写作；或者我一win本<br>一mac 都想写文章。但Hexo的静态部署的原则不像WordPress一样，能关联博客地址，利用数据库进行博客更新。好了，这里就来解决这个问题。┑(￣Д ￣)┍</p>","more":"<h1 id=\"Hexo写作的部署逻辑-amp-其他\"><a href=\"#Hexo写作的部署逻辑-amp-其他\" class=\"headerlink\" title=\"Hexo写作的部署逻辑&amp;其他\"></a>Hexo写作的部署逻辑&amp;其他</h1><h2 id=\"Hexo的写作特点\"><a href=\"#Hexo的写作特点\" class=\"headerlink\" title=\"Hexo的写作特点\"></a>Hexo的写作特点</h2><p>Hexo最大特点就是静态博客，即部署到服务器的博客内容是静态写好的html（由markdown转义），而不像类似wordpress的数据都存放在服务器端数据库，每次更新即一次读写数据库的操作。所以如果需要更改博客内容、发布新内容，必须</p>\n<ol>\n<li>更改源文件source文件夹下_post及其他各页面文件夹的md文件</li>\n<li>通过<code>hexo g</code>或<code>hexo generate</code>在public生成静态文件。</li>\n<li>利用<code>hexo-deployer-git</code>插件及<code>hexo d</code>命令将public的文件自动的部署到创建好的<code>user-name.github.io</code>项目中。<blockquote>\n<p>在github项目中可以看到，自动上传的只有public文件夹中的文件，包括以年份分类的静态页面文件夹、tag、categories及其他辅助css、js、img等，还有域名指引的CNAME和rss sitemap等。</p>\n</blockquote>\n</li>\n<li>在博客中看到更新的内容。当然，本地目录中，即存放了md源文件，也包含了生成的public文件。其实，本地并不需要public里的内容，只要有写作的源文件，generate一下就能生成。</li>\n</ol>\n<h2 id=\"Hexo的缺憾\"><a href=\"#Hexo的缺憾\" class=\"headerlink\" title=\"Hexo的缺憾\"></a>Hexo的缺憾</h2><p>那么问题来了，如果我在公司和贫民窟都想写作怎么办。总不能在两个本地仓库hexo init都部署到pages项目。在公司更新一篇blog里面全都是公司写的，然后回到地下室又写一篇更新又全是小黑屋的内容。  </p>\n<p>尽管Hexo让人专注写作，随时随地用md写一篇博，等到来到同步的机器才更新一次也让人很不爽。对于远程仓库只存放静态文件的方案，就想到了两个思路</p>\n<h3 id=\"同步静态文件\"><a href=\"#同步静态文件\" class=\"headerlink\" title=\"同步静态文件\"></a>同步静态文件</h3><blockquote>\n<p>新仓库同步静态文件-&gt;hexo g生成静态文件-&gt;合并静态文件-&gt;hexo d部署</p>\n</blockquote>\n<ol>\n<li>在两地分别hexo init建立hexo博客目录，在_config.yml中都部署到同一个远程仓库，在每次generate时，都先将远程仓库的静态文件同步下来（新建一个单独的folder专门用于同步静态文件）。请勿使用hexo博客中的public文件夹用于同步，每次generate会覆盖同名文件。若另一台主机曾做过修改并提交，这次修改的静态文件将被本地未修改的静态文件覆盖。具体操作：<br>第一次克隆远程hexo主分支：</li>\n</ol>\n<pre><code>git clone git@github.com:user-name/user-name.github.io.git\n</code></pre><p>之后每次hexo仓库发布首先在静态文件仓库获取远程仓库最新静态文件(无条件merge)</p>\n<pre><code>git pull origin master\n</code></pre><ol>\n<li>在静态文件同步仓库中，将自上次部署后，本地修改过的静态文件<strong>删掉</strong>（不记得怪我咯┑(￣Д ￣)┍）；同时在hexo blog仓库中<code>hexo -g</code>生成本地静态文件。</li>\n<li>将剔除过期静态文件的public仓库中文件复制到hexo的public中。</li>\n<li>使用<code>hexo -d</code>部署<blockquote>\n<p>以上步骤2中的删除操作是为了保证静态文件的数据都是最新的，保证博客内容的一致性。</p>\n</blockquote>\n</li>\n</ol>\n<h3 id=\"同步源文件（大招）\"><a href=\"#同步源文件（大招）\" class=\"headerlink\" title=\"同步源文件（大招）\"></a>同步源文件（大招）</h3><p>想到上述方式需要进行2步骤的主要原因就是本地的源文件不同步，只能通过生成的静态文件进行合并的方式，为毛不将源文件同步呢？！参考<a href=\"http://crazymilk.github.io/2015/12/28/GitHub-Pages-Hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/\">这篇文章</a>的思路，同步源文件就是通过远程仓库对源文件融合统一。</p>\n<h2 id=\"呵呵哒\"><a href=\"#呵呵哒\" class=\"headerlink\" title=\"呵呵哒\"></a>呵呵哒</h2><p>本文为了完成多客户端的同Hexo博的管理和发布，对ssh、git安装、Hexo安装、配置插件主题管理、域名绑定<strong>不涉及</strong>。</p>\n<ul>\n<li>系统不限制 </li>\n<li>是否写过博部署过没差</li>\n<li>最好Hexo3.X,2.X没试过出事自负</li>\n</ul>\n<h1 id=\"真·多客户端\"><a href=\"#真·多客户端\" class=\"headerlink\" title=\"真·多客户端\"></a>真·多客户端</h1><h2 id=\"创建远程仓库\"><a href=\"#创建远程仓库\" class=\"headerlink\" title=\"创建远程仓库\"></a>创建远程仓库</h2><ul>\n<li>对于没有进行创作的hexo博客，首先创建同名仓库，再创建一个hexo branch。此时俩分支都是空的  </li>\n<li>对于已经进行创作的hexo博客，直接创建一个hexo 分支。此时，hexo clone了master的静态文件。</li>\n</ul>\n<h2 id=\"设置主分支\"><a href=\"#设置主分支\" class=\"headerlink\" title=\"设置主分支\"></a>设置主分支</h2><p>将hexo branch设为主分支，用于同步源文件；master branch作为静态文件的存放。（由于github pages会检索master分支作为该域名下的部署分支，因此必须把master名字保留）</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/04/27/5720a2a70a238.png\" alt=\"\"></p>\n<h2 id=\"同步远程仓库并初始化\"><a href=\"#同步远程仓库并初始化\" class=\"headerlink\" title=\"同步远程仓库并初始化\"></a>同步远程仓库并初始化</h2><p>在本地（包含第一次所有源文件的主机）新建一个文件夹（就算已经写过博客的也这么搞）同步远程仓库并初始化</p>\n<pre><code>git clone git@github.com:your-Id/your-Id.github.io.git\n</code></pre><p>此时输入<code>git branch</code>可以看到两个分支，红色分支为主分支。<br>若是非空白博客，同步后需要先删掉里面的静态文件.直接删光，把原博客的文件全部复制过来<strong>（好像没有发现更换远程仓库主分支后本地同步更换的git bash。求解?）</strong>;若是空白博客，那么需要再令建一个文件夹，（因为hexo init操作会覆盖原.git文件导致与远程仓库失联）在该文件夹git bash执行</p>\n<pre><code>npm install -g hexo\nhexo init\nnpm install\nhexo g\nnpm install hexo-deployer-git--save\n</code></pre><p>好了，里面该有的差不多都有了。全部复制到源文件仓库。<strong>注意把hello worl删掉啊。</strong>关键的就是，config.yml里deployer的branch是master，而本地仓库关联的是hexo就对了。<br>然后执行</p>\n<pre><code>git add .\ngit commit -m &quot;init&quot;\ngit push -u origin hexo\n</code></pre><p>值得注意的是，有的时候提示主题的文件夹并未加入同步操作，显示</p>\n<pre><code class=\"shell\">\nChanges not staged for commit\n</code></pre>\n<p>即主题文件夹的内容尚未有之前版本，应该加入tracked。应在提交前输入<code>git add themes/themes_name/</code>.最后那个斜杠别忘了加。<br>这就完成源文件的同步了！(￣▽￣)”” 执行<code>hexo d</code>操作将本地public静态文件部署。</p>\n<h1 id=\"发博日常\"><a href=\"#发博日常\" class=\"headerlink\" title=\"发博日常\"></a>发博日常</h1><h2 id=\"更博\"><a href=\"#更博\" class=\"headerlink\" title=\"更博\"></a>更博</h2><p>如果你不能确定是否抽风需要经常换客户端，因此需要每次都要同步本地源文件；如果能忍住，，或者有规律的换客户端，那么平时更新不需要经常同步。<br>写博前操作(<strong>特么狠重要啊</strong>)：</p>\n<pre><code>git pull origin hexo\n</code></pre><p>更新操作：(同步源文件到hexo分支)</p>\n<pre><code>git add .\ngit commit -m &quot;hehe&quot;\ngit push origin hexo\n</code></pre><p>这样每次更博都需要多几个步骤，嫌麻烦就要忍住不手痒了。在手机、pad写md再同步到电脑也是个不错的习惯。</p>\n<h2 id=\"换客户端\"><a href=\"#换客户端\" class=\"headerlink\" title=\"换客户端\"></a>换客户端</h2><p>easy.只要远程仓库存在了一份完整的源文件，那同步就很容易了。似上步第一次同步，使用<code>git clone git@github.com:your-Id/your-Id.github.io.git</code>拷贝仓库。然后执行</p>\n<pre><code>npm install -g hexo\nnpm install\nnpm install hexo-deployer-git\n</code></pre><font color=\"red\"><strong>不用hexo init!!!</strong></font>\n\n<h1 id=\"后记\"><a href=\"#后记\" class=\"headerlink\" title=\"后记\"></a>后记</h1><h2 id=\"多地部署\"><a href=\"#多地部署\" class=\"headerlink\" title=\"多地部署\"></a>多地部署</h2><p>pacman的公式和代码支持好差啊~还有需要多地备份的可以尝试coding（page之前免费的现在要钱了 = =）.在站点部署文件中更改deploy：</p>\n<pre><code class=\"markdown\">deploy:\n   type: git\n   repo: \n      github: https://github.com/{YOUR_ID}/{YOUR_ID}.github.io.git,master\n      coding: https://git.coding.net/{YOUR_ID}/{BLOG　NAME}.git,master\n</code></pre>\n<p>同理也能部署到自己的ftp服务器上。</p>\n<h2 id=\"bug1-file-name-too-long\"><a href=\"#bug1-file-name-too-long\" class=\"headerlink\" title=\"bug1 file-name-too-long\"></a><font color=\"red\">bug1 file-name-too-long</font></h2><p>在拷贝原始数据的时候，提交远程仓库时可能会报modules的文件夹无法同步。这个情况在windows下安装msysgit进行git bash会报这一问题。<a href=\"https://github.com/msysgit/git/pull/110\">这里</a>也提到了这个异常。但这并不是git的问题，而是msysgit的问题。使用其他git方式对文件路径较长的提交就不会报错。实测在github for windows下提交该modules文件就不会报错。</p>\n<h2 id=\"bug2-could-not-read-Username-for-‘https-XXX‘\"><a href=\"#bug2-could-not-read-Username-for-‘https-XXX‘\" class=\"headerlink\" title=\"bug2 could not read Username for ‘https://XXX‘\"></a><font color=\"red\">bug2 could not read Username for ‘<a href=\"https://XXX\">https://XXX</a>‘</font></h2><p>当需要推送另一台设备的静态文件时，可能极少情况会碰上这个问题。有的说是bash的版本问题，不识别这种方式的推送。然而我用的同一版本的msysgit..</p>\n<p>在<a href=\"http://stackoverflow.com/questions/20871549/error-when-push-commits-with-github-fatal-could-not-read-username\">这里</a>也发现了这个问题，尝试了一下使用在https中加入用户名和密码的方式能够良好的推送。。当然配置文件别泄露了。。更改配置文件的deploy如下：</p>\n<pre><code class=\"markdown\">deploy:\n   type: git\n   repo: \n      github: https://{YOUR_ID}:{Your_Pwd}@github.com/{YOUR_ID}/{YOUR_ID}.github.io.git,master\n      coding: https://{YOUR_ID}:{Your_Pwd}@git.coding.net/{YOUR_ID}/{BLOG　NAME}.git,master\n</code></pre>\n<p>Enjoy Hexo!</p>"},{"title":"世界，你好！","id":"1","date":"2013-05-05T03:17:02.000Z","_content":"\n欢迎使用 WordPress。这是系统自动生成的演示文章。编辑或者删除它，然后开始您的博客！","source":"_posts/hello-world-1.md","raw":"---\ntitle: 世界，你好！\ncategories:\n  - 槽\nid: 1\ndate: 2013-05-05 11:17:02\ntags:\n---\n\n欢迎使用 WordPress。这是系统自动生成的演示文章。编辑或者删除它，然后开始您的博客！","slug":"hello-world-1","published":1,"updated":"2016-04-11T14:09:45.578Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7nn0036uco4xxbe5p02","content":"<p>欢迎使用 WordPress。这是系统自动生成的演示文章。编辑或者删除它，然后开始您的博客！</p>","excerpt":"","more":"<p>欢迎使用 WordPress。这是系统自动生成的演示文章。编辑或者删除它，然后开始您的博客！</p>"},{"title":"jQuery的三个坑","date":"2016-05-09T17:23:30.000Z","_content":"\n许久没用jquery，今天碰到三个坑。小记一下\n<!-- more -->\n第一个是live()这个函数，在学习很早的资料，表示用来为被选元素附加一个或多个事件处理程序,形式为\n\n```javascript\n$(selector).live(event,data,function)\n```\n例如为button绑定一个单击事件，event为事件名，data为可选的传参，function为自定义函数。\n测了半天没开F12一直以为代码有问题，，后来一看原来jquery1.9+以上不支持live了。先改成了delegate代理，后来又改成on,真特么烦人。  \n\n应该值得注意到的是，改成on后，触发的事件在容器对象上，而live返回值在事件触发的对象上。\n[这里](http://jquery.com/upgrade-guide/1.9/#live-removed)是官方解释\n\n****\n\n一直以为``$(selector)``能抓到所有的id啊。。。原来好像dom树的id不能明明一样的。（但在1.4-版本测试是可以的，不知道是改进了对id选择器的定义和方法加载，明确了id唯一这个特征）  \n要对类似的组件操作类似的方法，例如对tr表单下的td采用同个样式，a使用类似的连接，可以使用``$(.class)``的方式获取。\n\n****\n\njquery1.9+以后不支持.attr属性的设置了，改成了.prop .妈蛋啊怎么改这么多好烦啊简直排错都不知道什么bug\n炸裂看看1.9+的[更新](http://www.ppblog.cn/jquery1-9live.html)  \n1. true false两个选项的属性用prop\n2. 添加属性名称该属性就生效用prop\n3. 其他可以用attr","source":"_posts/jQuery的两个坑.md","raw":"---\ntitle: jQuery的三个坑\ndate: 2016-05-10 01:23:30\ntags: jQuery\ncategories:\n  - 代码狗\n  - 学习log\n---\n\n许久没用jquery，今天碰到三个坑。小记一下\n<!-- more -->\n第一个是live()这个函数，在学习很早的资料，表示用来为被选元素附加一个或多个事件处理程序,形式为\n\n```javascript\n$(selector).live(event,data,function)\n```\n例如为button绑定一个单击事件，event为事件名，data为可选的传参，function为自定义函数。\n测了半天没开F12一直以为代码有问题，，后来一看原来jquery1.9+以上不支持live了。先改成了delegate代理，后来又改成on,真特么烦人。  \n\n应该值得注意到的是，改成on后，触发的事件在容器对象上，而live返回值在事件触发的对象上。\n[这里](http://jquery.com/upgrade-guide/1.9/#live-removed)是官方解释\n\n****\n\n一直以为``$(selector)``能抓到所有的id啊。。。原来好像dom树的id不能明明一样的。（但在1.4-版本测试是可以的，不知道是改进了对id选择器的定义和方法加载，明确了id唯一这个特征）  \n要对类似的组件操作类似的方法，例如对tr表单下的td采用同个样式，a使用类似的连接，可以使用``$(.class)``的方式获取。\n\n****\n\njquery1.9+以后不支持.attr属性的设置了，改成了.prop .妈蛋啊怎么改这么多好烦啊简直排错都不知道什么bug\n炸裂看看1.9+的[更新](http://www.ppblog.cn/jquery1-9live.html)  \n1. true false两个选项的属性用prop\n2. 添加属性名称该属性就生效用prop\n3. 其他可以用attr","slug":"jQuery的两个坑","published":1,"updated":"2016-05-12T03:13:22.340Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7nr0039uco423aztogq","content":"<p>许久没用jquery，今天碰到三个坑。小记一下<br><a id=\"more\"></a><br>第一个是live()这个函数，在学习很早的资料，表示用来为被选元素附加一个或多个事件处理程序,形式为</p>\n<pre><code class=\"javascript\">$(selector).live(event,data,function)\n</code></pre>\n<p>例如为button绑定一个单击事件，event为事件名，data为可选的传参，function为自定义函数。<br>测了半天没开F12一直以为代码有问题，，后来一看原来jquery1.9+以上不支持live了。先改成了delegate代理，后来又改成on,真特么烦人。  </p>\n<p>应该值得注意到的是，改成on后，触发的事件在容器对象上，而live返回值在事件触发的对象上。<br><a href=\"http://jquery.com/upgrade-guide/1.9/#live-removed\" target=\"_blank\" rel=\"external\">这里</a>是官方解释</p>\n<hr>\n<p>一直以为<code>$(selector)</code>能抓到所有的id啊。。。原来好像dom树的id不能明明一样的。（但在1.4-版本测试是可以的，不知道是改进了对id选择器的定义和方法加载，明确了id唯一这个特征）<br>要对类似的组件操作类似的方法，例如对tr表单下的td采用同个样式，a使用类似的连接，可以使用<code>$(.class)</code>的方式获取。</p>\n<hr>\n<p>jquery1.9+以后不支持.attr属性的设置了，改成了.prop .妈蛋啊怎么改这么多好烦啊简直排错都不知道什么bug<br>炸裂看看1.9+的<a href=\"http://www.ppblog.cn/jquery1-9live.html\" target=\"_blank\" rel=\"external\">更新</a>  </p>\n<ol>\n<li>true false两个选项的属性用prop</li>\n<li>添加属性名称该属性就生效用prop</li>\n<li>其他可以用attr</li>\n</ol>","excerpt":"<p>许久没用jquery，今天碰到三个坑。小记一下<br>","more":"<br>第一个是live()这个函数，在学习很早的资料，表示用来为被选元素附加一个或多个事件处理程序,形式为</p>\n<pre><code class=\"javascript\">$(selector).live(event,data,function)\n</code></pre>\n<p>例如为button绑定一个单击事件，event为事件名，data为可选的传参，function为自定义函数。<br>测了半天没开F12一直以为代码有问题，，后来一看原来jquery1.9+以上不支持live了。先改成了delegate代理，后来又改成on,真特么烦人。  </p>\n<p>应该值得注意到的是，改成on后，触发的事件在容器对象上，而live返回值在事件触发的对象上。<br><a href=\"http://jquery.com/upgrade-guide/1.9/#live-removed\">这里</a>是官方解释</p>\n<hr>\n<p>一直以为<code>$(selector)</code>能抓到所有的id啊。。。原来好像dom树的id不能明明一样的。（但在1.4-版本测试是可以的，不知道是改进了对id选择器的定义和方法加载，明确了id唯一这个特征）<br>要对类似的组件操作类似的方法，例如对tr表单下的td采用同个样式，a使用类似的连接，可以使用<code>$(.class)</code>的方式获取。</p>\n<hr>\n<p>jquery1.9+以后不支持.attr属性的设置了，改成了.prop .妈蛋啊怎么改这么多好烦啊简直排错都不知道什么bug<br>炸裂看看1.9+的<a href=\"http://www.ppblog.cn/jquery1-9live.html\">更新</a>  </p>\n<ol>\n<li>true false两个选项的属性用prop</li>\n<li>添加属性名称该属性就生效用prop</li>\n<li>其他可以用attr</li>\n</ol>"},{"title":"ListActivity的onListItemClick不响应的解决办法","id":"230","date":"2013-06-10T20:56:43.000Z","_content":"\n[ListActivity的onListItemClick不响应的解决办法](http://www.cnblogs.com/rocky_yi/archive/2011/03/14/ListActivity_setFocusable.html \"ListActivity的onListItemClick不响应的解决办法\")","source":"_posts/listactivity-84onlistitemclick-nowork.md","raw":"---\ntitle: ListActivity的onListItemClick不响应的解决办法\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - Android\n  - mark\n  - 马克\nid: 230\ndate: 2013-06-11 04:56:43\n---\n\n[ListActivity的onListItemClick不响应的解决办法](http://www.cnblogs.com/rocky_yi/archive/2011/03/14/ListActivity_setFocusable.html \"ListActivity的onListItemClick不响应的解决办法\")","slug":"listactivity-84onlistitemclick-nowork","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7nu003cuco4p9679ymo","content":"<p><a href=\"http://www.cnblogs.com/rocky_yi/archive/2011/03/14/ListActivity_setFocusable.html\" title=\"ListActivity的onListItemClick不响应的解决办法\" target=\"_blank\" rel=\"external\">ListActivity的onListItemClick不响应的解决办法</a></p>","excerpt":"","more":"<p><a href=\"http://www.cnblogs.com/rocky_yi/archive/2011/03/14/ListActivity_setFocusable.html\" title=\"ListActivity的onListItemClick不响应的解决办法\">ListActivity的onListItemClick不响应的解决办法</a></p>"},{"title":"owl jena owls ontology资料集合","id":"317","date":"2013-07-23T21:43:34.000Z","_content":"\n[小猫想毕业](http://littlecatphd.blog.sohu.com/entry/ \"小猫想毕业 \") owl rdf jena juddi 详细介绍\n[游走在研究边缘的日子](http://blog.sina.com.cn/s/articlelist_1816308390_0_1.html \"游走在研究边缘的日子\")本体 protege web本体\n[糊豆先生的博客](http://imarine.blog.163.com/blog/#m=0&t=3&c=ontology \"糊豆先生的博客\")Ontology 本体 owl protege\n[雨滴答不停](http://www.cnblogs.com/armymen1980/category/159311.html \"雨滴答不停\")语义web juddi\n[白狐狸](http://blog.sina.com.cn/s/blog_5aea78390100nnm0.html \"白狐狸\")语义web服务 很清晰!\n[Rising](http://blog.sina.com.cn/s/blog_6aef125201011hzw.html \"Rising\")juddiv3+mysql的部署\n[沉沦中的探索](http://www.cnblogs.com/zhxiaomiao/archive/2009/03/24/1420891.html \" 沉沦中的探索\")owls-uddi-matchmaker安装\n[于华祥-花香天地的空间](http://hi.baidu.com/flowerspice/item/edda148b55777a5fe63d1909 \"于华祥-花香天地的空间\")OWL-S/UDDI+matchmaker","source":"_posts/owl jena owls ontology资料集合.md","raw":"---\ntitle: owl jena owls ontology资料集合\ncategories:\n  - 什么都学一下\n  - 学习log\ntags:\n  - juddi\n  - mark\n  - ontology\n  - 马克\nid: 317\ndate: 2013-07-24 05:43:34\n---\n\n[小猫想毕业](http://littlecatphd.blog.sohu.com/entry/ \"小猫想毕业 \") owl rdf jena juddi 详细介绍\n[游走在研究边缘的日子](http://blog.sina.com.cn/s/articlelist_1816308390_0_1.html \"游走在研究边缘的日子\")本体 protege web本体\n[糊豆先生的博客](http://imarine.blog.163.com/blog/#m=0&t=3&c=ontology \"糊豆先生的博客\")Ontology 本体 owl protege\n[雨滴答不停](http://www.cnblogs.com/armymen1980/category/159311.html \"雨滴答不停\")语义web juddi\n[白狐狸](http://blog.sina.com.cn/s/blog_5aea78390100nnm0.html \"白狐狸\")语义web服务 很清晰!\n[Rising](http://blog.sina.com.cn/s/blog_6aef125201011hzw.html \"Rising\")juddiv3+mysql的部署\n[沉沦中的探索](http://www.cnblogs.com/zhxiaomiao/archive/2009/03/24/1420891.html \" 沉沦中的探索\")owls-uddi-matchmaker安装\n[于华祥-花香天地的空间](http://hi.baidu.com/flowerspice/item/edda148b55777a5fe63d1909 \"于华祥-花香天地的空间\")OWL-S/UDDI+matchmaker","slug":"owl jena owls ontology资料集合","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7ny003guco4ymzt31li","content":"<p><a href=\"http://littlecatphd.blog.sohu.com/entry/\" title=\"小猫想毕业 \" target=\"_blank\" rel=\"external\">小猫想毕业</a> owl rdf jena juddi 详细介绍<br><a href=\"http://blog.sina.com.cn/s/articlelist_1816308390_0_1.html\" title=\"游走在研究边缘的日子\" target=\"_blank\" rel=\"external\">游走在研究边缘的日子</a>本体 protege web本体<br><a href=\"http://imarine.blog.163.com/blog/#m=0&amp;t=3&amp;c=ontology\" title=\"糊豆先生的博客\" target=\"_blank\" rel=\"external\">糊豆先生的博客</a>Ontology 本体 owl protege<br><a href=\"http://www.cnblogs.com/armymen1980/category/159311.html\" title=\"雨滴答不停\" target=\"_blank\" rel=\"external\">雨滴答不停</a>语义web juddi<br><a href=\"http://blog.sina.com.cn/s/blog_5aea78390100nnm0.html\" title=\"白狐狸\" target=\"_blank\" rel=\"external\">白狐狸</a>语义web服务 很清晰!<br><a href=\"http://blog.sina.com.cn/s/blog_6aef125201011hzw.html\" title=\"Rising\" target=\"_blank\" rel=\"external\">Rising</a>juddiv3+mysql的部署<br><a href=\"http://www.cnblogs.com/zhxiaomiao/archive/2009/03/24/1420891.html\" title=\" 沉沦中的探索\" target=\"_blank\" rel=\"external\">沉沦中的探索</a>owls-uddi-matchmaker安装<br><a href=\"http://hi.baidu.com/flowerspice/item/edda148b55777a5fe63d1909\" title=\"于华祥-花香天地的空间\" target=\"_blank\" rel=\"external\">于华祥-花香天地的空间</a>OWL-S/UDDI+matchmaker</p>","excerpt":"","more":"<p><a href=\"http://littlecatphd.blog.sohu.com/entry/\" title=\"小猫想毕业 \">小猫想毕业</a> owl rdf jena juddi 详细介绍<br><a href=\"http://blog.sina.com.cn/s/articlelist_1816308390_0_1.html\" title=\"游走在研究边缘的日子\">游走在研究边缘的日子</a>本体 protege web本体<br><a href=\"http://imarine.blog.163.com/blog/#m=0&amp;t=3&amp;c=ontology\" title=\"糊豆先生的博客\">糊豆先生的博客</a>Ontology 本体 owl protege<br><a href=\"http://www.cnblogs.com/armymen1980/category/159311.html\" title=\"雨滴答不停\">雨滴答不停</a>语义web juddi<br><a href=\"http://blog.sina.com.cn/s/blog_5aea78390100nnm0.html\" title=\"白狐狸\">白狐狸</a>语义web服务 很清晰!<br><a href=\"http://blog.sina.com.cn/s/blog_6aef125201011hzw.html\" title=\"Rising\">Rising</a>juddiv3+mysql的部署<br><a href=\"http://www.cnblogs.com/zhxiaomiao/archive/2009/03/24/1420891.html\" title=\" 沉沦中的探索\">沉沦中的探索</a>owls-uddi-matchmaker安装<br><a href=\"http://hi.baidu.com/flowerspice/item/edda148b55777a5fe63d1909\" title=\"于华祥-花香天地的空间\">于华祥-花香天地的空间</a>OWL-S/UDDI+matchmaker</p>"},{"title":"由opencv中findFundamentalMat和findHomography区别的引申","id":"1092","date":"2016-01-24T16:54:26.000Z","_content":"openCV中有两个函数，findhomography和findfundamentalmat，长的很像。。一开始严重的弄混，以为都是求对应点投影矩阵的公式，万万没想到其实是两个完全不同的内涵。😒\n<!-- more -->\n\nopencv 中，进行**图像拼接(全景拼接 航摄拼接 三维重建 街景地图)**，大致流程如下。\n\n1. 利用opencv提供的各类型特征点检测方法（Fast Start SIFT SURF ORB SimpleBlobPyramidAdapter DynamicAdapter 等）在图像中将感兴趣的有独特标识的点找出来,其中orb 是最近提出效率较高的检测和描述算法，金字塔算法则是更高的提高效率的算法；\n2. 利用不同的描述方式（SIFT SURF），对特征点的信息（周围的梯度、灰度相关性 二进制编码等）进行描述； \n3. 利用不同原则的匹配方式（BF Flann-based等），对这些描述子（一般是多维矩阵）进行匹配（匹配中数据的输入参数的筛选Ransac方法），对匹配结果反向计算进一步的筛查，选择更健壮更有代表性的数据（knn Ransac），\n4.  最后利用findhomography找到映射矩阵，再利用affine将该坐标映射关系对其中一幅图贴到其中一幅图中。 完成拼接。拼接区域涉及融合平滑。\n\n这其中，**findfundamentalmat()**和**findhomography()**都是用来查找两组匹配坐标点的映射关系的（两组坐标几何 数目相同 同一**数组位**为同一对匹配点）试着运行了一下homography生成的矩阵拼接效果良好。而findfundamentalmat就不太6.找了一些相关资料，其实这是两个相似但不相同的函数。so开始之前科普几个概念：\n\n* * *\n\n**核点（极点）**：摄影中心连线（基线）ss’延长线，与左右影像的交点，分为左右核点（极点）。（注：下图两影像接近平行，则ss’连线与影像无交点，而在下下图中，el er分别为左右核点【极点】）亦可理解为左右摄影中心分别在对方像片的像点\n\n**核面（极面）** ：过摄影基线与物方任意一点组成的平面。（所以缩，物方点不同，核面一般也不同 任意一个下图的PO1O2都是核面）\n\n**核线（极线）：立体像对中，同名光线与摄影基线所组成核面与左右像片的交线。** （不同同名点极线不同，因而有很多很多条） \n\n**极线约束** ：同一个点在两幅图像上的映射，已知左图映射点p1，那么右图映射点p2一定在p1的外极线上，这样可以减少匹配点数量。\n\n<center>![](http://ooo.0o0.ooo/2016/02/24/56ce7786da1fa.png)</center>\n\n上图中，红线即为极线，物方点P（X,Y,Z）分别在左右两图留下了同名点（xl，yl）、（xr,yr）。Tx即为基线长。但上图为两个平面接近平行且z方向接近0，但一般情况下，两像平面以任意角度成像同时内参数并不相同，因此上图中的极线呈现出共线的情况，更多的情况是下面这个图，两图像成任意角度。\n\n<center>![](http://ooo.0o0.ooo/2016/02/24/56ce782a3235f.png)</center>\n\n下图中，O1O2连线与左右像平面交点el和er即为左右极点(极点亦可理解为左右摄影中心在另一像平面的像)，而极线则为plel和prer。可以看到，这两条线显然就不平行了。 \n\n<center>![](http://ooo.0o0.ooo/2016/02/24/56ce77b362343.png)</center>\n\n**基线** ：相邻两摄站点（摄影中心 一般标为s）之间的连线。\n\n**主核面** ：左右像主点分别与基线构成的平面，分别称为左主核面和右主核面。\n\n**灭点vanishing ** point：平行线在二维图像中汇聚的地方，空间中每一组平行线都有自己的灭点。\n\n**灭线vanishing line（消隐线 ）** ：不同的灭线连线，即灭线。如果两组不同的平行线，都平行于大地，则他们的连线就是地平线（horizon line）\n\n* * *\n# 1. 第一个矩阵Essential本质矩阵\n\n由于拍摄物体时，摄影中并不能被反映在图像中。如果让第二个观察者同时拍摄下某摄影中心和它所拍的照片呢?\n\n<center>![](http://ooo.0o0.ooo/2016/02/25/56cfbd34f3c9e.png)</center>\n\n反映在第二个观察者的照片，摄影中心和物体分别投影在像片上，任意第一个摄影中心和它所拍摄物体的连线都可视为第二个摄影中心的极线。直观的理解，即为下图的erpr。\n\n<center>![](http://ooo.0o0.ooo/2016/02/25/56cfc06a0ddc5.png)</center>\n\n**极线约束的理论就是左侧的物体成像在右侧的同名点一定在erpr上。**反映左右极线关系的就是表达向量和右向量之间的约束关系的——**本质矩阵****Eseential Matrix****。**但大多数情况下，别的摄影中心并不一定会被成像，即极点不在相片中。如下图\n\n<center>![](http://ooo.0o0.ooo/2016/02/25/56cfc2d883aab.png)</center>\n\n具体的矩阵运算参考**  **[**计算机视觉基础4——对极几何(Epipolar Geometry)**](http://www.cnblogs.com/gemstone/archive/2011/12/20/2294551.html) ，原理为三线同面（下图蓝色区域三边）  \n\n<center>![](http://ooo.0o0.ooo/2016/02/24/56ce77dc874bc.png) </center>\n\n**其中，E是本质矩阵（Essential Matrix），R是像平面旋转矩阵，T是摄影中心平移矩阵，Pl和Pr分别为左右摄影中心指向同名点P的向量。S由矩阵T决定，具体形式为**\n\n<center>![](http://ooo.0o0.ooo/2016/02/24/56ce77fc78812.png)</center>\n\n**本质矩阵** 采用的是相机的外部参数，也就是说采用相机坐标(The essential matrix uses CAMERA coordinates)，不涉及相机内参数，如果要分析数字图像，则要考虑坐标(u,v)，此时需要用到内部参数(To use image coordinates we must consider the INTRINSIC camera parameters)\n\n** 谨记1：Essential Matrix是连结两个摄影中心指向同名点的向量的矩阵，秩为2。**\n\n** 左向量·E·右向量=0！！！**\n\n** E由两部分组成！E=R·S  E仅由外方位元素决定！一张图记住E!!!**\n\n**<center>![](http://ooo.0o0.ooo/2016/02/25/56cfcab0b492e.png)</center>**\n\n由向量引申而出的，是同名点的像素坐标，原理是共线方程。\n\n**二维同名点**\n\n<center>![](http://ooo.0o0.ooo/2016/02/26/56d00bc787259.png)</center>\n\n上图中推导出对极几何中相当重要的公式，E矩阵作为连接同名点像素坐标而出现，这就意味着，已知求取E的外方位参数，就能求取出左右同名点的对应关系。然而，其中隐含的条件是在共线方程的化简中，默认忽略了镜头畸变。然而这已足够重要，在镜头畸变在拼接中影响不大时，该公式在仅仅知道外方位元素的情况就能解算corresponding point\n\n**极线方程**\n\n同理，由于极点、同名点都位于极线上，因此亦可通过E求得极线的方程（采用相机坐标系）。\n\n设极线方程为 au + bv + c = 0\n\n使用齐次坐标，矩阵表示为：\n\n<center>![](http://ooo.0o0.ooo/2016/02/26/56d01aa83d7d6.png)</center>\n\n其中，$\\widetilde{p}$是像片任意同名点相机坐标，$\\widetilde{l}$是方程系数。又依据同名点公式，$$Ep_{l} =\\widetilde{l_{r}}$$，所以！对应外极线的方程系数可以直接由E矩阵和本侧同名点求出。其中，$\\widetilde{l_{l}}$是左极点对应外极线方程。\n\n当已知左侧点，其右侧对应点在直线\n<center>![](http://ooo.0o0.ooo/2016/02/26/56d08c864e4a7.png)</center>\n当已知右侧点，其左侧对应点在极线\n<center>![](http://ooo.0o0.ooo/2016/02/26/56d01c07d68ed.png)</center>\n**极点**\n\n别忘了。极点也是在极线上，所以有\n<center>![](http://ooo.0o0.ooo/2016/02/26/56d0673df0710.png)</center>\n且，极点属于所有极线，因而\n<center>![](http://ooo.0o0.ooo/2016/02/26/56d0678f1ddfc.png)</center>\n上式可用来定位极点的坐标\n\n* * *\n\n# ** 2.第2个矩阵 Fundamental基础矩阵**\n\n另一个需要提到的概念是基础矩阵。\n\nEssential矩阵使用CameraCoords相机坐标系。尽管其中可计算像素坐标，但仍然以摄影中心为原点，像平面所有点z值都是f。当考虑相机内参数时，这就是FundamentalMatrix基础矩阵\n<center>![](http://ooo.0o0.ooo/2016/01/22/56a2556c54d1d.png)</center>\n该图显示了fundamentalmatrix（基础矩阵）的基本内涵。p q分别为同名点。计算基础矩阵需要考虑到内参数的仿射变换。M为内参数的矩阵，包含6个参数的3*3矩阵。\n<center>![](http://ooo.0o0.ooo/2016/02/26/56d069db39519.png)</center>\n将上式中的Camera坐标提到一边，带入基本矩阵解求对极同名点的方程，即可得到F的表达式.\n<center>![](http://ooo.0o0.ooo/2016/02/24/56ce7854f3d64.jpg)</center>\n上式即为基础矩阵方程。其中，F是基础矩阵，x’x分别为同名点。而左右两个平面的两条极线为，显而易见，F由E和两个内参数矩阵决定。\n<center>![](http://ooo.0o0.ooo/2016/02/26/56d06ae01c63d.png)</center>\n类似的，F与E一样都能指同名点坐标在对应极线的关系。下图分别是已知左右点其对应极线的关系。\n<center>![](http://ooo.0o0.ooo/2016/02/24/56ce78b202e41.jpg)</center>\n一个简单的例子，如果从某种方式计算出基础矩阵，则在对应图中即可表示出像素点对应的极线。\n<center>![](http://ooo.0o0.ooo/2016/02/28/56d3bee0758a5.png)</center>\n计算出矩阵即为l的三个参数。一般的，调整比例 将前两项的平方和定为1.\n<center>![](http://ooo.0o0.ooo/2016/02/28/56d3bf4cbf895.png)</center>\n\nfindfundamentalmat()本意为基础矩阵，是假设两幅图像在同一三维场景中的不同视角。例如立体摄像机，从不同的角度拍摄同一个目标，它解算的是，两幅图像其中一个同名点，与其在外极线同名点的转换关系。它的映射基于三维场景，因此使用这个函数的时候，在不同的视角之间，应该有一个明显的基线。默认使用7点算法拟合数据。基础矩阵把左边图像的一个点的图像坐标与它右边图像中的对应点的图像联系起来，他是一个3x3的退化矩阵，描述了两个立体图像对的外极限几何关系，其计算依赖于在两个图像中相对应的一组点。\n\n与Homography矩阵（下文提到）不同，它在每组对应点有两组约束：x、y同时作为x’y’的自变量，估算一组对应点只有一行的约束，因为极线约束是标量等式。因此至少需要8个点。所以一般使用8点算法计算F矩阵(8点算法)。\n\n$$\\begin{bmatrix} x^{'}_i & y^{'}_i & 1 \\end{bmatrix} \\begin{bmatrix} f_{11} & f_{12} & f_{13} \\\\\\\\ f_{21} & f_{22} & f_{23} \\\\\\\\  f_{31} & f_{32}  & f_{33}  \\end{bmatrix} \\begin{bmatrix} x_i \\\\\\\\ y_i \\\\\\\\ 1 \\end{bmatrix}=0$$\n\n可推到出方程：\n\n$$ x_i x^{'}_i {f_11} + x_i y^{'}_i f_21 + x_i f_31 + y_i x^{'}_i f_12 + y_i y^{'}_i f_22 + y_i f_32 + {x_i}^{'} f_13 + y^{'}_i f_23 + f_33 =0$$\n\n<center>![](https://ooo.0o0.ooo/2016/02/29/56d3ed9679e76.png)</center>\n\n最终目标是找到ATA的一个特征向量使得它的特征值最小。常用的解法是构造m*9的矩阵A（m是点对数），求解A的奇异值分解，即A=UDVT，\n\n>U是m*m正交矩阵，其列为AAT特征向量\n\n>V是m*n正交阵，其列为ATA的特征向量\n\n>D是m*n对角阵，对角元素为奇异值，平方值为AAT和ATA的特征值。\n\n然而F是由7个自由度构成的3*3矩阵，其秩为2，因此，讲道理，9个表达式由7个参数构成，因此只用7对对应点理应也能解算出F矩阵（7点算法）。使用此方法计算F矩阵时，需要加上秩为2的限制，以保证计算结果唯一。该方法亦叫做奇异约束。该约束限制假设以F’替代F矩阵，计算时以[F范式](https://zh.wikipedia.org/wiki/%E7%9F%A9%E9%99%A3%E7%AF%84%E6%95%B8#.E5.BC.97.E7.BD.97.E8.B4.9D.E5.B0.BC.E4.B9.8C.E6.96.AF.E7.AF.84.E6.95.B0)作为标准。\n\n<center>![](http://ooo.0o0.ooo/2016/03/29/56fb45459399e.png)</center>\n其中，$\\sigma$是M矩阵的奇异值（A*·A的n个特征值的非负平方根叫作A的奇异值），M=F-F’,可以通过SVD分解解出该奇异值。\n\n<center>![](http://ooo.0o0.ooo/2016/03/29/56fb506cb6765.png)</center>\n\nF由于秩为2的限制可以以以下形式表示：\n\nF=αF1+(1-α)F2.其中，F1和F2分别Fx=0的两个解。\n\n由于秩=2，因此det(F=αF1+(1-α)F2)=0,通过该式即可求出α的值。\n\n更多内容可以看计算机视觉Trifocal tensor三角点张量的部分。\n\n\nCaution!\n\n对图像进行匹配的一个重要步骤就是把两幅图像的极线平行于基线，使得极点处在正无穷，这样的拼接结果效果才能更好。这一重要步骤即为重投影。如下图将黑线投影为蓝线。\n\n<center>![](https://ooo.0o0.ooo/2016/02/29/56d3f1e8a7005.png)</center>\n\n对图像进行矫正。需要一个单映矩阵，作两步旋转。其第一步是将极点旋转到无穷远，第二部是将极线平行。其中，左右图像均需要应用该单映聚阵R将极点无穷远化；而右图像需要应用旋转矩阵（E=RS中的R）。最后比例一致化。\n\n上文中需要构造的矫正矩阵形式为：\n\n<center>![](https://ooo.0o0.ooo/2016/02/29/56d3f5a8ace5f.png)</center>\n\nT是单位矩阵，代表左图的极点，可由E计算。其余的参数：\n\n<center>![](https://ooo.0o0.ooo/2016/02/29/56d3f66d34abd.png)</center>\n\n整理一下步骤即为：\n\n<center>![](http://ooo.0o0.ooo/2016/02/29/56d3f7afcf9ce.png)</center>\n\n下图即为矫正的例子（两幅图的变化很小，但是从边缘还是可以看到细微的变化），最后把图像的极点都化为无穷远，两幅图基于基线平行。\n\n<center>![](http://ooo.0o0.ooo/2016/02/29/56d3f7745f920.png)</center>\n\n***\n# ** 3. 第二个矩阵 Homography（单映）矩阵**\n\nfindhomography的前提是2D的转换，本意为单映（包含平移、仿射、尺度三种变换），试图找到一个3*3的投影矩阵，能够把1图中所有的点，通过某种形变，匹配到2图中去。当基线很小的时候(视差变化小，扭曲形变也少)，这个方法能够计算出精度极高的解。\n当然可以首先参考opencv的[文档](http://docs.opencv.org/2.4/modules/calib3d/doc/camera_calibration_and_3d_reconstruction.html?highlight=findhomography) 这里首先介绍二维映射的单映（homography）矩阵\n\n<center>![](https://ooo.0o0.ooo/2016/01/23/56a3baf462830.png)</center>\n\n该式反应了像点齐次坐标的单映变换的方程。（u v）(u' v')分别是左右图像的同名像点坐标。通过一个8个自由度的矩阵P来解算两者之间的关系。p02 p12与平移相关，p00,p01,p10,p11与旋转 尺度和仿射（平行变换）变换有关，p20,p21与拉伸扭曲有关。\n\n一般的，单映矩阵的计算由以下几个参数构成\n\n<center>![](https://ooo.0o0.ooo/2016/01/23/56a3bf63f1be0.png)</center>\n\n其中，K是相机的内矩阵，由焦距决定；R是主光轴朝向，一般由3个方向余弦决定；C是摄影中心的物方位置。当在原地旋转时，C1-C2为0，因此方程可简化为\n\n<center>![](https://ooo.0o0.ooo/2016/01/23/56a3c1dd3035a.png)</center>\n\n由相机纯粹旋转而形成的单映，自由度3-5（根据是否已知焦距决定）。\n\nCaution！应该注意到的是，上式中的H3*3矩阵的最后一个元素为1。这里使用到的是计算H矩阵最常用的一种方法，4点算法，即使用4个点即可解算一组H中的8个未知数。在ransac验证外点的过程中，也采用随机4点为一组构建8个方程解算H。\n\n尽管homography是处理二维点集之间的关系，但倘若三维物体中某些点都处于一个平面，即可设该面的z方向值为0，以三维物方xy值作为像素值与所成像片进行homography的变换。\n\n<center>![](http://ooo.0o0.ooo/2016/02/24/56ce6ba16113c.png)</center>\n\n上图是几种坐标系之间的关系，Mext是外参数矩阵，包含旋转和平移；Mproj是投影矩阵，主要由焦距决定，原理是共线方程；Maff是内参数仿射变换矩阵，由内参数决定。普通的homography是两幅图像像素坐标间或相片坐标间的变换，但上文提到，当三维物体某些点处于一个平面，亦可在World坐标和Film坐标之间进行homography矩阵变换。\n\n<center>![](http://ooo.0o0.ooo/2016/02/24/56ce6cd71fc88.png)</center>\n\n上图可以看到，将三维坐标点z值设为0，[p,q,0,1]即为三维齐次坐标。\n\n$$ \\begin{bmatrix} x \\\\\\\\ y \\\\\\\\ 1 \n\\end{bmatrix} \\sim \\begin{bmatrix} f & 0 & 0 & 0 \\\\\\\\ 0 & f & 0 & 0 \\\\\\\\ 0 & 0 & 1 & 0 \\end{bmatrix} \\begin{bmatrix} r_11 & r_12 & r_13 & t_x \\\\\\\\ r_21 & r_22 & r_23 & t_y \\\\\\\\ r_31 & r_32& r_33 & t_z \\\\\\\\ 0 & 0 & 0 & 1 \\end{bmatrix} \\begin{bmatrix} p \\\\\\\\ q \\\\\\\\ 0 \\\\\\\\ 1 \\end{bmatrix} \\sim \\begin{bmatrix} fr_11 & fr_12 & ft_x \\\\\\\\ fr_21 & fr_22 & ft_y \\\\\\\\ r_31 & r_32 & t_z \\end{bmatrix} \\begin{bmatrix} p \\\\\\\\ q \\\\\\\\ 1 \\end{bmatrix} \n$$$$\\sim \\begin{bmatrix} h_11 & h_12&h_13 \\\\\\\\ h_21 & h_22 & h_23 \\\\\\\\ h_31 & h_32 & h_33 \\end{bmatrix} \\begin{bmatrix} p \\\\\\\\ q \\\\\\\\ 1 \\end{bmatrix}$$\n最终推到出，3D转2D的投影变换成为2D转2D的变换，该变化可逆！其特例是，当采用的物方坐标系z轴与主光轴平行，即正射影像，则上式R矩阵为\n\n<center>![](http://ooo.0o0.ooo/2016/02/24/56ce7aab1b305.png)</center>\n\n则上式变形为：\n\n<center>![](http://ooo.0o0.ooo/2016/02/24/56ce7b0376427.png)</center>\n\n该式与相似变换的形式一样，只有4个自由度（tz可化为1），因而正射影像不会产生拉伸形变。（前提是拍摄物体几乎没有深度，几乎处在一个平面）。下图是依照三维中某平面进行拼接，会造成除平面部分其余图像的虚影。\n\n<center>![](http://ooo.0o0.ooo/2016/02/25/56cf114fc872a.png)</center>\n\n<center>![](http://ooo.0o0.ooo/2016/02/25/56cf117891dbb.png)</center>\n\n上文中一直讨论的是从物方坐标系到像片坐标系的转换，倘若再加上内方位参数的内矩阵，则可直接导出从物方坐标到像素坐标的公式，如下图示意。内方位参数为仿射变换（Affine 6自由度 保持平行结构的变换）\n\n<center>![](http://ooo.0o0.ooo/2016/02/25/56ceb1181fa03.png)</center>\n\n将world-&gt;film-&gt;pixel结合起来，对于同一个物体，在某位置某台相机拍摄的照片就可以认为是一个单映H。当然，不同的位置拍摄的像片，各自对应物体的单映是不同的。但由于单映是可逆的，拍摄同一物体的两幅图像，也可以用使用$$H=H_{1}H_{2}^{-1}$$\n\n<center>![](http://ooo.0o0.ooo/2016/02/25/56ceb83e89a7b.png)![](http://ooo.0o0.ooo/2016/02/25/56cebcef9abd7.png)</center>\n\n* * *\n\n# ** 4. Homography（单映）矩阵的求取**\n\n参考[这里](http://www.robots.ox.ac.uk/~vgg/presentations/bmvc97/criminispaper/node3.html)  只要大于4个匹配点，都认为是冗余测量，必须融合数据。文章里提到了三种解求二维面到面的单应矩阵的球法。\n\n*   非线性的解决办法，使用伪逆进行分解。当所解求值为0时会有bug。\n*   线性最小二乘解法，通常使用SVD分解，V矩阵就对应了最小奇异值。[这个SVD的文章](http://blog.chinaunix.net/uid-20761674-id-4040274.html)相当好的解释了SVD分解的意义。八个未知数对应八个特征向量，也对应八个线性方程的解。SVD能直接解求出这八个向量，即V中的特征向量。\n*   非线性几何解法，使对应点和映射点差值欧几里得距离（或平方和）最小。\n\nHomograhy的计算：计算该矩阵当然不会上式f θ等值直接解算。由于是二维图像之间的关系，一般都已知二维对应点集，直接采用最小二乘的方式使用LM进行计算。在一般情况下的H矩阵可表示为\n\n$$ \\begin{bmatrix} x^{'} \\\\\\\\ y^{'} \\\\\\\\ 1 \\end{bmatrix} \\sim \\begin{bmatrix} h_11 & h_12 & h_13 \\\\\\\\ h_21 & h_22 & h_23 \\\\\\\\ h_31 & h_32 & h_33 \\end{bmatrix} \\begin{bmatrix} x \\\\\\\\ y \\\\\\\\ 1 \\end{bmatrix}$$\n\n其中，$h_31 h_32 h_33$是为了配置相似比例，化简为\n\n$$x^{'}=\\frac{h_11 x + h_12 y + h_13 }{ h_31 x + h_32 y + h_33 }$$\n\n$$y^{'}=\\frac{h_21 \\cdot x + h_22 y + h_23 }{ h_31 x + h_32 y + h_33 }$$\n\n但可以看到，h所有元素同乘k 等式依旧成立。因而强制设为8自由度有两种方式，\n\n①$$ h_{33} = 1 $$\n\n②$ h_{11}\\^{2} + h_{12}\\^{2} = 1 $\n采用第一种方式较为常见。\n当采用最小二乘解求H矩阵时，一般先用Ransac筛选最大集，然后利用下方程。\n\n<center>![](http://ooo.0o0.ooo/2016/02/25/56cf041a7c664.png)</center>\n\n以x y x’y’为A b矩阵参数，迭代解求H。由于是线性方程，因而可以直接使用$$h=(A^{T}A)^{-1}(A^{T}b)$$求取每次的残差。\n\n<center>![](http://ooo.0o0.ooo/2016/02/25/56cf051be79bc.png)</center>\n\n&lt;font color=\"#ff0000\"&gt;Caution！应该注意到的是，该方法对噪声极其敏感，即使没有外点（outliers）,因而，在计算前对数据里筛选就非常重要。为更好的得到结果，Ransac时可以将该组数据质心重置到原点；然后缩放比例使得各点到原点的平均距离是根号二。如下图，H的表达式。T、S分别为平移和缩放的矩阵。\n\n<center>![](http://ooo.0o0.ooo/2016/02/25/56cf08c613352.png)</center>\n\n如何判断这两幅图像确实匹配呢？记该区域的特征点总数为nf，而符合H的特征点（内点）数量为nj，如果两者比例足够大，说明两幅图像确实匹配。但一般拼接时都确认两幅图像有重叠面积才计算H。变换模型H计算时的误差可表述为Huber模型：\n\n<center>![](http://ooo.0o0.ooo/2016/02/25/56cf0b53675d9.png)</center>\n\n同时，由于矩阵具有可逆性，因此图像12之间的H1和图像23之间的H2可以直接推导出图像13之间的H3。但大量的单映队列并不推荐，这样会造成误差成倍扩大。\n\n<center>![](http://ooo.0o0.ooo/2016/02/25/56cf0eb50a41b.png)</center>\n\n** 谨记二 **：homography处理的是纯粹的二维与二维之间的变换。即便特例是3D也是视为在2D的单映和相似变换。在旋转相机和正射拼接可以得到良好的二维拼接效果，在具有深度的三维物体，拼接会造成虚影！\n\n \n***\n\n这两个函数都是基于特征点的变换模型求解，既然特征点已找出且筛查得到更正确的点，因此对图像外观的变化具有鲁棒性（尺度、光照、旋转等）。选择哪种函数基于图像间的关系，即立体场的观测使用fundamentalmatrix（视角矫正 三维全景 街景视角）,而相对平面化的则使用findhomography（全景拼接  航摄图像拼接 ）\n\n解求这个变换模型一般基于线性最小二乘的方式，与平差原理类似，利用冗余的数据（大量同名点）来解算参数。一般的，先通过Ransac筛查数据比较靠谱。\n\n \n\n# ** 谨记三：\n\nhomography 单映处理二维坐标系与二维坐标系关系，特例情况下是三维物体某平面可视为二维平面。更特例的是正射影像（相似变换）和旋转摄影全景拼接（C1-C2=0）（处理对应点集与点集的关系）矩阵可逆，具有结合性。\n\nfundamental针对的是点和极线的关系（处理点集与极线集的关系），可用来在寻找匹配点的时候快速查找对应点。（以像素为坐标系）\n\nessential 本质是连结同名点向量的矩阵（以像空系为标准）\n\n参考。\n\n[【opencv】特征点检测方法--GFTT，SIFT，FAST，SURF](http://blog.csdn.net/u010141025/article/details/16920567) \n\n[http://www.cse.psu.edu/~rtc12/CSE486/](http://www.cse.psu.edu/~rtc12/CSE486/ \"http://www.cse.psu.edu/~rtc12/CSE486/\") 宾州州立大学计算机视觉\n\n[http://opencv-users.1802565.n2.nabble.com/Difference-between-homography-and-fundamental-matrix-td6359087.html](http://opencv-users.1802565.n2.nabble.com/Difference-between-homography-and-fundamental-matrix-td6359087.html \"http://opencv-users.1802565.n2.nabble.com/Difference-between-homography-and-fundamental-matrix-td6359087.html\") homography and fundamental matrix的讨论\n\n[http://homepages.inf.ed.ac.uk/rbf/CVonline/](http://homepages.inf.ed.ac.uk/rbf/CVonline/ \"http://homepages.inf.ed.ac.uk/rbf/CVonline/\") 爱丁堡大学计算机视觉在线课件\n\n[https://www.robots.ox.ac.uk/~vgg/hzbook/hzbook2/HZepipolar.pdf](https://www.robots.ox.ac.uk/~vgg/hzbook/hzbook2/HZepipolar.pdf \"https://www.robots.ox.ac.uk/~vgg/hzbook/hzbook2/HZepipolar.pdf\") 牛津大学计算机视觉中的多视几何\n\n[http://120.52.72.36/www.umiacs.umd.edu/c3pr90ntcsf0/~ramani/cmsc828d/lecture27.pdf](http://120.52.72.36/www.umiacs.umd.edu/c3pr90ntcsf0/~ramani/cmsc828d/lecture27.pdf \"http://120.52.72.36/www.umiacs.umd.edu/c3pr90ntcsf0/~ramani/cmsc828d/lecture27.pdf\")\n\n马里兰大学高级计算机研究\n\n[http://www.cnblogs.com/gemstone/articles/2294551.html](http://www.cnblogs.com/gemstone/articles/2294551.html \"http://www.cnblogs.com/gemstone/articles/2294551.html\")\n\n[http://imagine.enpc.fr/~monasse/Stereo/4Fundamental.pdf](http://imagine.enpc.fr/~monasse/Stereo/4Fundamental.pdf \"http://imagine.enpc.fr/~monasse/Stereo/4Fundamental.pdf\") 法国国立桥梁与公路学校Ecole Nationale des Ponts et Chaesses计算机视觉和图像","source":"_posts/opencv-findhomography-findfundanmentalmat.md","raw":"---\ntitle: 由opencv中findFundamentalMat和findHomography区别的引申\ncategories:\n  - 什么都学一下\n  - 学习log\ntags:\n  - opencv\n  - 计算机视觉\nid: 1092\ndate: 2016-01-25 00:54:26\n---\nopenCV中有两个函数，findhomography和findfundamentalmat，长的很像。。一开始严重的弄混，以为都是求对应点投影矩阵的公式，万万没想到其实是两个完全不同的内涵。😒\n<!-- more -->\n\nopencv 中，进行**图像拼接(全景拼接 航摄拼接 三维重建 街景地图)**，大致流程如下。\n\n1. 利用opencv提供的各类型特征点检测方法（Fast Start SIFT SURF ORB SimpleBlobPyramidAdapter DynamicAdapter 等）在图像中将感兴趣的有独特标识的点找出来,其中orb 是最近提出效率较高的检测和描述算法，金字塔算法则是更高的提高效率的算法；\n2. 利用不同的描述方式（SIFT SURF），对特征点的信息（周围的梯度、灰度相关性 二进制编码等）进行描述； \n3. 利用不同原则的匹配方式（BF Flann-based等），对这些描述子（一般是多维矩阵）进行匹配（匹配中数据的输入参数的筛选Ransac方法），对匹配结果反向计算进一步的筛查，选择更健壮更有代表性的数据（knn Ransac），\n4.  最后利用findhomography找到映射矩阵，再利用affine将该坐标映射关系对其中一幅图贴到其中一幅图中。 完成拼接。拼接区域涉及融合平滑。\n\n这其中，**findfundamentalmat()**和**findhomography()**都是用来查找两组匹配坐标点的映射关系的（两组坐标几何 数目相同 同一**数组位**为同一对匹配点）试着运行了一下homography生成的矩阵拼接效果良好。而findfundamentalmat就不太6.找了一些相关资料，其实这是两个相似但不相同的函数。so开始之前科普几个概念：\n\n* * *\n\n**核点（极点）**：摄影中心连线（基线）ss’延长线，与左右影像的交点，分为左右核点（极点）。（注：下图两影像接近平行，则ss’连线与影像无交点，而在下下图中，el er分别为左右核点【极点】）亦可理解为左右摄影中心分别在对方像片的像点\n\n**核面（极面）** ：过摄影基线与物方任意一点组成的平面。（所以缩，物方点不同，核面一般也不同 任意一个下图的PO1O2都是核面）\n\n**核线（极线）：立体像对中，同名光线与摄影基线所组成核面与左右像片的交线。** （不同同名点极线不同，因而有很多很多条） \n\n**极线约束** ：同一个点在两幅图像上的映射，已知左图映射点p1，那么右图映射点p2一定在p1的外极线上，这样可以减少匹配点数量。\n\n<center>![](http://ooo.0o0.ooo/2016/02/24/56ce7786da1fa.png)</center>\n\n上图中，红线即为极线，物方点P（X,Y,Z）分别在左右两图留下了同名点（xl，yl）、（xr,yr）。Tx即为基线长。但上图为两个平面接近平行且z方向接近0，但一般情况下，两像平面以任意角度成像同时内参数并不相同，因此上图中的极线呈现出共线的情况，更多的情况是下面这个图，两图像成任意角度。\n\n<center>![](http://ooo.0o0.ooo/2016/02/24/56ce782a3235f.png)</center>\n\n下图中，O1O2连线与左右像平面交点el和er即为左右极点(极点亦可理解为左右摄影中心在另一像平面的像)，而极线则为plel和prer。可以看到，这两条线显然就不平行了。 \n\n<center>![](http://ooo.0o0.ooo/2016/02/24/56ce77b362343.png)</center>\n\n**基线** ：相邻两摄站点（摄影中心 一般标为s）之间的连线。\n\n**主核面** ：左右像主点分别与基线构成的平面，分别称为左主核面和右主核面。\n\n**灭点vanishing ** point：平行线在二维图像中汇聚的地方，空间中每一组平行线都有自己的灭点。\n\n**灭线vanishing line（消隐线 ）** ：不同的灭线连线，即灭线。如果两组不同的平行线，都平行于大地，则他们的连线就是地平线（horizon line）\n\n* * *\n# 1. 第一个矩阵Essential本质矩阵\n\n由于拍摄物体时，摄影中并不能被反映在图像中。如果让第二个观察者同时拍摄下某摄影中心和它所拍的照片呢?\n\n<center>![](http://ooo.0o0.ooo/2016/02/25/56cfbd34f3c9e.png)</center>\n\n反映在第二个观察者的照片，摄影中心和物体分别投影在像片上，任意第一个摄影中心和它所拍摄物体的连线都可视为第二个摄影中心的极线。直观的理解，即为下图的erpr。\n\n<center>![](http://ooo.0o0.ooo/2016/02/25/56cfc06a0ddc5.png)</center>\n\n**极线约束的理论就是左侧的物体成像在右侧的同名点一定在erpr上。**反映左右极线关系的就是表达向量和右向量之间的约束关系的——**本质矩阵****Eseential Matrix****。**但大多数情况下，别的摄影中心并不一定会被成像，即极点不在相片中。如下图\n\n<center>![](http://ooo.0o0.ooo/2016/02/25/56cfc2d883aab.png)</center>\n\n具体的矩阵运算参考**  **[**计算机视觉基础4——对极几何(Epipolar Geometry)**](http://www.cnblogs.com/gemstone/archive/2011/12/20/2294551.html) ，原理为三线同面（下图蓝色区域三边）  \n\n<center>![](http://ooo.0o0.ooo/2016/02/24/56ce77dc874bc.png) </center>\n\n**其中，E是本质矩阵（Essential Matrix），R是像平面旋转矩阵，T是摄影中心平移矩阵，Pl和Pr分别为左右摄影中心指向同名点P的向量。S由矩阵T决定，具体形式为**\n\n<center>![](http://ooo.0o0.ooo/2016/02/24/56ce77fc78812.png)</center>\n\n**本质矩阵** 采用的是相机的外部参数，也就是说采用相机坐标(The essential matrix uses CAMERA coordinates)，不涉及相机内参数，如果要分析数字图像，则要考虑坐标(u,v)，此时需要用到内部参数(To use image coordinates we must consider the INTRINSIC camera parameters)\n\n** 谨记1：Essential Matrix是连结两个摄影中心指向同名点的向量的矩阵，秩为2。**\n\n** 左向量·E·右向量=0！！！**\n\n** E由两部分组成！E=R·S  E仅由外方位元素决定！一张图记住E!!!**\n\n**<center>![](http://ooo.0o0.ooo/2016/02/25/56cfcab0b492e.png)</center>**\n\n由向量引申而出的，是同名点的像素坐标，原理是共线方程。\n\n**二维同名点**\n\n<center>![](http://ooo.0o0.ooo/2016/02/26/56d00bc787259.png)</center>\n\n上图中推导出对极几何中相当重要的公式，E矩阵作为连接同名点像素坐标而出现，这就意味着，已知求取E的外方位参数，就能求取出左右同名点的对应关系。然而，其中隐含的条件是在共线方程的化简中，默认忽略了镜头畸变。然而这已足够重要，在镜头畸变在拼接中影响不大时，该公式在仅仅知道外方位元素的情况就能解算corresponding point\n\n**极线方程**\n\n同理，由于极点、同名点都位于极线上，因此亦可通过E求得极线的方程（采用相机坐标系）。\n\n设极线方程为 au + bv + c = 0\n\n使用齐次坐标，矩阵表示为：\n\n<center>![](http://ooo.0o0.ooo/2016/02/26/56d01aa83d7d6.png)</center>\n\n其中，$\\widetilde{p}$是像片任意同名点相机坐标，$\\widetilde{l}$是方程系数。又依据同名点公式，$$Ep_{l} =\\widetilde{l_{r}}$$，所以！对应外极线的方程系数可以直接由E矩阵和本侧同名点求出。其中，$\\widetilde{l_{l}}$是左极点对应外极线方程。\n\n当已知左侧点，其右侧对应点在直线\n<center>![](http://ooo.0o0.ooo/2016/02/26/56d08c864e4a7.png)</center>\n当已知右侧点，其左侧对应点在极线\n<center>![](http://ooo.0o0.ooo/2016/02/26/56d01c07d68ed.png)</center>\n**极点**\n\n别忘了。极点也是在极线上，所以有\n<center>![](http://ooo.0o0.ooo/2016/02/26/56d0673df0710.png)</center>\n且，极点属于所有极线，因而\n<center>![](http://ooo.0o0.ooo/2016/02/26/56d0678f1ddfc.png)</center>\n上式可用来定位极点的坐标\n\n* * *\n\n# ** 2.第2个矩阵 Fundamental基础矩阵**\n\n另一个需要提到的概念是基础矩阵。\n\nEssential矩阵使用CameraCoords相机坐标系。尽管其中可计算像素坐标，但仍然以摄影中心为原点，像平面所有点z值都是f。当考虑相机内参数时，这就是FundamentalMatrix基础矩阵\n<center>![](http://ooo.0o0.ooo/2016/01/22/56a2556c54d1d.png)</center>\n该图显示了fundamentalmatrix（基础矩阵）的基本内涵。p q分别为同名点。计算基础矩阵需要考虑到内参数的仿射变换。M为内参数的矩阵，包含6个参数的3*3矩阵。\n<center>![](http://ooo.0o0.ooo/2016/02/26/56d069db39519.png)</center>\n将上式中的Camera坐标提到一边，带入基本矩阵解求对极同名点的方程，即可得到F的表达式.\n<center>![](http://ooo.0o0.ooo/2016/02/24/56ce7854f3d64.jpg)</center>\n上式即为基础矩阵方程。其中，F是基础矩阵，x’x分别为同名点。而左右两个平面的两条极线为，显而易见，F由E和两个内参数矩阵决定。\n<center>![](http://ooo.0o0.ooo/2016/02/26/56d06ae01c63d.png)</center>\n类似的，F与E一样都能指同名点坐标在对应极线的关系。下图分别是已知左右点其对应极线的关系。\n<center>![](http://ooo.0o0.ooo/2016/02/24/56ce78b202e41.jpg)</center>\n一个简单的例子，如果从某种方式计算出基础矩阵，则在对应图中即可表示出像素点对应的极线。\n<center>![](http://ooo.0o0.ooo/2016/02/28/56d3bee0758a5.png)</center>\n计算出矩阵即为l的三个参数。一般的，调整比例 将前两项的平方和定为1.\n<center>![](http://ooo.0o0.ooo/2016/02/28/56d3bf4cbf895.png)</center>\n\nfindfundamentalmat()本意为基础矩阵，是假设两幅图像在同一三维场景中的不同视角。例如立体摄像机，从不同的角度拍摄同一个目标，它解算的是，两幅图像其中一个同名点，与其在外极线同名点的转换关系。它的映射基于三维场景，因此使用这个函数的时候，在不同的视角之间，应该有一个明显的基线。默认使用7点算法拟合数据。基础矩阵把左边图像的一个点的图像坐标与它右边图像中的对应点的图像联系起来，他是一个3x3的退化矩阵，描述了两个立体图像对的外极限几何关系，其计算依赖于在两个图像中相对应的一组点。\n\n与Homography矩阵（下文提到）不同，它在每组对应点有两组约束：x、y同时作为x’y’的自变量，估算一组对应点只有一行的约束，因为极线约束是标量等式。因此至少需要8个点。所以一般使用8点算法计算F矩阵(8点算法)。\n\n$$\\begin{bmatrix} x^{'}_i & y^{'}_i & 1 \\end{bmatrix} \\begin{bmatrix} f_{11} & f_{12} & f_{13} \\\\\\\\ f_{21} & f_{22} & f_{23} \\\\\\\\  f_{31} & f_{32}  & f_{33}  \\end{bmatrix} \\begin{bmatrix} x_i \\\\\\\\ y_i \\\\\\\\ 1 \\end{bmatrix}=0$$\n\n可推到出方程：\n\n$$ x_i x^{'}_i {f_11} + x_i y^{'}_i f_21 + x_i f_31 + y_i x^{'}_i f_12 + y_i y^{'}_i f_22 + y_i f_32 + {x_i}^{'} f_13 + y^{'}_i f_23 + f_33 =0$$\n\n<center>![](https://ooo.0o0.ooo/2016/02/29/56d3ed9679e76.png)</center>\n\n最终目标是找到ATA的一个特征向量使得它的特征值最小。常用的解法是构造m*9的矩阵A（m是点对数），求解A的奇异值分解，即A=UDVT，\n\n>U是m*m正交矩阵，其列为AAT特征向量\n\n>V是m*n正交阵，其列为ATA的特征向量\n\n>D是m*n对角阵，对角元素为奇异值，平方值为AAT和ATA的特征值。\n\n然而F是由7个自由度构成的3*3矩阵，其秩为2，因此，讲道理，9个表达式由7个参数构成，因此只用7对对应点理应也能解算出F矩阵（7点算法）。使用此方法计算F矩阵时，需要加上秩为2的限制，以保证计算结果唯一。该方法亦叫做奇异约束。该约束限制假设以F’替代F矩阵，计算时以[F范式](https://zh.wikipedia.org/wiki/%E7%9F%A9%E9%99%A3%E7%AF%84%E6%95%B8#.E5.BC.97.E7.BD.97.E8.B4.9D.E5.B0.BC.E4.B9.8C.E6.96.AF.E7.AF.84.E6.95.B0)作为标准。\n\n<center>![](http://ooo.0o0.ooo/2016/03/29/56fb45459399e.png)</center>\n其中，$\\sigma$是M矩阵的奇异值（A*·A的n个特征值的非负平方根叫作A的奇异值），M=F-F’,可以通过SVD分解解出该奇异值。\n\n<center>![](http://ooo.0o0.ooo/2016/03/29/56fb506cb6765.png)</center>\n\nF由于秩为2的限制可以以以下形式表示：\n\nF=αF1+(1-α)F2.其中，F1和F2分别Fx=0的两个解。\n\n由于秩=2，因此det(F=αF1+(1-α)F2)=0,通过该式即可求出α的值。\n\n更多内容可以看计算机视觉Trifocal tensor三角点张量的部分。\n\n\nCaution!\n\n对图像进行匹配的一个重要步骤就是把两幅图像的极线平行于基线，使得极点处在正无穷，这样的拼接结果效果才能更好。这一重要步骤即为重投影。如下图将黑线投影为蓝线。\n\n<center>![](https://ooo.0o0.ooo/2016/02/29/56d3f1e8a7005.png)</center>\n\n对图像进行矫正。需要一个单映矩阵，作两步旋转。其第一步是将极点旋转到无穷远，第二部是将极线平行。其中，左右图像均需要应用该单映聚阵R将极点无穷远化；而右图像需要应用旋转矩阵（E=RS中的R）。最后比例一致化。\n\n上文中需要构造的矫正矩阵形式为：\n\n<center>![](https://ooo.0o0.ooo/2016/02/29/56d3f5a8ace5f.png)</center>\n\nT是单位矩阵，代表左图的极点，可由E计算。其余的参数：\n\n<center>![](https://ooo.0o0.ooo/2016/02/29/56d3f66d34abd.png)</center>\n\n整理一下步骤即为：\n\n<center>![](http://ooo.0o0.ooo/2016/02/29/56d3f7afcf9ce.png)</center>\n\n下图即为矫正的例子（两幅图的变化很小，但是从边缘还是可以看到细微的变化），最后把图像的极点都化为无穷远，两幅图基于基线平行。\n\n<center>![](http://ooo.0o0.ooo/2016/02/29/56d3f7745f920.png)</center>\n\n***\n# ** 3. 第二个矩阵 Homography（单映）矩阵**\n\nfindhomography的前提是2D的转换，本意为单映（包含平移、仿射、尺度三种变换），试图找到一个3*3的投影矩阵，能够把1图中所有的点，通过某种形变，匹配到2图中去。当基线很小的时候(视差变化小，扭曲形变也少)，这个方法能够计算出精度极高的解。\n当然可以首先参考opencv的[文档](http://docs.opencv.org/2.4/modules/calib3d/doc/camera_calibration_and_3d_reconstruction.html?highlight=findhomography) 这里首先介绍二维映射的单映（homography）矩阵\n\n<center>![](https://ooo.0o0.ooo/2016/01/23/56a3baf462830.png)</center>\n\n该式反应了像点齐次坐标的单映变换的方程。（u v）(u' v')分别是左右图像的同名像点坐标。通过一个8个自由度的矩阵P来解算两者之间的关系。p02 p12与平移相关，p00,p01,p10,p11与旋转 尺度和仿射（平行变换）变换有关，p20,p21与拉伸扭曲有关。\n\n一般的，单映矩阵的计算由以下几个参数构成\n\n<center>![](https://ooo.0o0.ooo/2016/01/23/56a3bf63f1be0.png)</center>\n\n其中，K是相机的内矩阵，由焦距决定；R是主光轴朝向，一般由3个方向余弦决定；C是摄影中心的物方位置。当在原地旋转时，C1-C2为0，因此方程可简化为\n\n<center>![](https://ooo.0o0.ooo/2016/01/23/56a3c1dd3035a.png)</center>\n\n由相机纯粹旋转而形成的单映，自由度3-5（根据是否已知焦距决定）。\n\nCaution！应该注意到的是，上式中的H3*3矩阵的最后一个元素为1。这里使用到的是计算H矩阵最常用的一种方法，4点算法，即使用4个点即可解算一组H中的8个未知数。在ransac验证外点的过程中，也采用随机4点为一组构建8个方程解算H。\n\n尽管homography是处理二维点集之间的关系，但倘若三维物体中某些点都处于一个平面，即可设该面的z方向值为0，以三维物方xy值作为像素值与所成像片进行homography的变换。\n\n<center>![](http://ooo.0o0.ooo/2016/02/24/56ce6ba16113c.png)</center>\n\n上图是几种坐标系之间的关系，Mext是外参数矩阵，包含旋转和平移；Mproj是投影矩阵，主要由焦距决定，原理是共线方程；Maff是内参数仿射变换矩阵，由内参数决定。普通的homography是两幅图像像素坐标间或相片坐标间的变换，但上文提到，当三维物体某些点处于一个平面，亦可在World坐标和Film坐标之间进行homography矩阵变换。\n\n<center>![](http://ooo.0o0.ooo/2016/02/24/56ce6cd71fc88.png)</center>\n\n上图可以看到，将三维坐标点z值设为0，[p,q,0,1]即为三维齐次坐标。\n\n$$ \\begin{bmatrix} x \\\\\\\\ y \\\\\\\\ 1 \n\\end{bmatrix} \\sim \\begin{bmatrix} f & 0 & 0 & 0 \\\\\\\\ 0 & f & 0 & 0 \\\\\\\\ 0 & 0 & 1 & 0 \\end{bmatrix} \\begin{bmatrix} r_11 & r_12 & r_13 & t_x \\\\\\\\ r_21 & r_22 & r_23 & t_y \\\\\\\\ r_31 & r_32& r_33 & t_z \\\\\\\\ 0 & 0 & 0 & 1 \\end{bmatrix} \\begin{bmatrix} p \\\\\\\\ q \\\\\\\\ 0 \\\\\\\\ 1 \\end{bmatrix} \\sim \\begin{bmatrix} fr_11 & fr_12 & ft_x \\\\\\\\ fr_21 & fr_22 & ft_y \\\\\\\\ r_31 & r_32 & t_z \\end{bmatrix} \\begin{bmatrix} p \\\\\\\\ q \\\\\\\\ 1 \\end{bmatrix} \n$$$$\\sim \\begin{bmatrix} h_11 & h_12&h_13 \\\\\\\\ h_21 & h_22 & h_23 \\\\\\\\ h_31 & h_32 & h_33 \\end{bmatrix} \\begin{bmatrix} p \\\\\\\\ q \\\\\\\\ 1 \\end{bmatrix}$$\n最终推到出，3D转2D的投影变换成为2D转2D的变换，该变化可逆！其特例是，当采用的物方坐标系z轴与主光轴平行，即正射影像，则上式R矩阵为\n\n<center>![](http://ooo.0o0.ooo/2016/02/24/56ce7aab1b305.png)</center>\n\n则上式变形为：\n\n<center>![](http://ooo.0o0.ooo/2016/02/24/56ce7b0376427.png)</center>\n\n该式与相似变换的形式一样，只有4个自由度（tz可化为1），因而正射影像不会产生拉伸形变。（前提是拍摄物体几乎没有深度，几乎处在一个平面）。下图是依照三维中某平面进行拼接，会造成除平面部分其余图像的虚影。\n\n<center>![](http://ooo.0o0.ooo/2016/02/25/56cf114fc872a.png)</center>\n\n<center>![](http://ooo.0o0.ooo/2016/02/25/56cf117891dbb.png)</center>\n\n上文中一直讨论的是从物方坐标系到像片坐标系的转换，倘若再加上内方位参数的内矩阵，则可直接导出从物方坐标到像素坐标的公式，如下图示意。内方位参数为仿射变换（Affine 6自由度 保持平行结构的变换）\n\n<center>![](http://ooo.0o0.ooo/2016/02/25/56ceb1181fa03.png)</center>\n\n将world-&gt;film-&gt;pixel结合起来，对于同一个物体，在某位置某台相机拍摄的照片就可以认为是一个单映H。当然，不同的位置拍摄的像片，各自对应物体的单映是不同的。但由于单映是可逆的，拍摄同一物体的两幅图像，也可以用使用$$H=H_{1}H_{2}^{-1}$$\n\n<center>![](http://ooo.0o0.ooo/2016/02/25/56ceb83e89a7b.png)![](http://ooo.0o0.ooo/2016/02/25/56cebcef9abd7.png)</center>\n\n* * *\n\n# ** 4. Homography（单映）矩阵的求取**\n\n参考[这里](http://www.robots.ox.ac.uk/~vgg/presentations/bmvc97/criminispaper/node3.html)  只要大于4个匹配点，都认为是冗余测量，必须融合数据。文章里提到了三种解求二维面到面的单应矩阵的球法。\n\n*   非线性的解决办法，使用伪逆进行分解。当所解求值为0时会有bug。\n*   线性最小二乘解法，通常使用SVD分解，V矩阵就对应了最小奇异值。[这个SVD的文章](http://blog.chinaunix.net/uid-20761674-id-4040274.html)相当好的解释了SVD分解的意义。八个未知数对应八个特征向量，也对应八个线性方程的解。SVD能直接解求出这八个向量，即V中的特征向量。\n*   非线性几何解法，使对应点和映射点差值欧几里得距离（或平方和）最小。\n\nHomograhy的计算：计算该矩阵当然不会上式f θ等值直接解算。由于是二维图像之间的关系，一般都已知二维对应点集，直接采用最小二乘的方式使用LM进行计算。在一般情况下的H矩阵可表示为\n\n$$ \\begin{bmatrix} x^{'} \\\\\\\\ y^{'} \\\\\\\\ 1 \\end{bmatrix} \\sim \\begin{bmatrix} h_11 & h_12 & h_13 \\\\\\\\ h_21 & h_22 & h_23 \\\\\\\\ h_31 & h_32 & h_33 \\end{bmatrix} \\begin{bmatrix} x \\\\\\\\ y \\\\\\\\ 1 \\end{bmatrix}$$\n\n其中，$h_31 h_32 h_33$是为了配置相似比例，化简为\n\n$$x^{'}=\\frac{h_11 x + h_12 y + h_13 }{ h_31 x + h_32 y + h_33 }$$\n\n$$y^{'}=\\frac{h_21 \\cdot x + h_22 y + h_23 }{ h_31 x + h_32 y + h_33 }$$\n\n但可以看到，h所有元素同乘k 等式依旧成立。因而强制设为8自由度有两种方式，\n\n①$$ h_{33} = 1 $$\n\n②$ h_{11}\\^{2} + h_{12}\\^{2} = 1 $\n采用第一种方式较为常见。\n当采用最小二乘解求H矩阵时，一般先用Ransac筛选最大集，然后利用下方程。\n\n<center>![](http://ooo.0o0.ooo/2016/02/25/56cf041a7c664.png)</center>\n\n以x y x’y’为A b矩阵参数，迭代解求H。由于是线性方程，因而可以直接使用$$h=(A^{T}A)^{-1}(A^{T}b)$$求取每次的残差。\n\n<center>![](http://ooo.0o0.ooo/2016/02/25/56cf051be79bc.png)</center>\n\n&lt;font color=\"#ff0000\"&gt;Caution！应该注意到的是，该方法对噪声极其敏感，即使没有外点（outliers）,因而，在计算前对数据里筛选就非常重要。为更好的得到结果，Ransac时可以将该组数据质心重置到原点；然后缩放比例使得各点到原点的平均距离是根号二。如下图，H的表达式。T、S分别为平移和缩放的矩阵。\n\n<center>![](http://ooo.0o0.ooo/2016/02/25/56cf08c613352.png)</center>\n\n如何判断这两幅图像确实匹配呢？记该区域的特征点总数为nf，而符合H的特征点（内点）数量为nj，如果两者比例足够大，说明两幅图像确实匹配。但一般拼接时都确认两幅图像有重叠面积才计算H。变换模型H计算时的误差可表述为Huber模型：\n\n<center>![](http://ooo.0o0.ooo/2016/02/25/56cf0b53675d9.png)</center>\n\n同时，由于矩阵具有可逆性，因此图像12之间的H1和图像23之间的H2可以直接推导出图像13之间的H3。但大量的单映队列并不推荐，这样会造成误差成倍扩大。\n\n<center>![](http://ooo.0o0.ooo/2016/02/25/56cf0eb50a41b.png)</center>\n\n** 谨记二 **：homography处理的是纯粹的二维与二维之间的变换。即便特例是3D也是视为在2D的单映和相似变换。在旋转相机和正射拼接可以得到良好的二维拼接效果，在具有深度的三维物体，拼接会造成虚影！\n\n \n***\n\n这两个函数都是基于特征点的变换模型求解，既然特征点已找出且筛查得到更正确的点，因此对图像外观的变化具有鲁棒性（尺度、光照、旋转等）。选择哪种函数基于图像间的关系，即立体场的观测使用fundamentalmatrix（视角矫正 三维全景 街景视角）,而相对平面化的则使用findhomography（全景拼接  航摄图像拼接 ）\n\n解求这个变换模型一般基于线性最小二乘的方式，与平差原理类似，利用冗余的数据（大量同名点）来解算参数。一般的，先通过Ransac筛查数据比较靠谱。\n\n \n\n# ** 谨记三：\n\nhomography 单映处理二维坐标系与二维坐标系关系，特例情况下是三维物体某平面可视为二维平面。更特例的是正射影像（相似变换）和旋转摄影全景拼接（C1-C2=0）（处理对应点集与点集的关系）矩阵可逆，具有结合性。\n\nfundamental针对的是点和极线的关系（处理点集与极线集的关系），可用来在寻找匹配点的时候快速查找对应点。（以像素为坐标系）\n\nessential 本质是连结同名点向量的矩阵（以像空系为标准）\n\n参考。\n\n[【opencv】特征点检测方法--GFTT，SIFT，FAST，SURF](http://blog.csdn.net/u010141025/article/details/16920567) \n\n[http://www.cse.psu.edu/~rtc12/CSE486/](http://www.cse.psu.edu/~rtc12/CSE486/ \"http://www.cse.psu.edu/~rtc12/CSE486/\") 宾州州立大学计算机视觉\n\n[http://opencv-users.1802565.n2.nabble.com/Difference-between-homography-and-fundamental-matrix-td6359087.html](http://opencv-users.1802565.n2.nabble.com/Difference-between-homography-and-fundamental-matrix-td6359087.html \"http://opencv-users.1802565.n2.nabble.com/Difference-between-homography-and-fundamental-matrix-td6359087.html\") homography and fundamental matrix的讨论\n\n[http://homepages.inf.ed.ac.uk/rbf/CVonline/](http://homepages.inf.ed.ac.uk/rbf/CVonline/ \"http://homepages.inf.ed.ac.uk/rbf/CVonline/\") 爱丁堡大学计算机视觉在线课件\n\n[https://www.robots.ox.ac.uk/~vgg/hzbook/hzbook2/HZepipolar.pdf](https://www.robots.ox.ac.uk/~vgg/hzbook/hzbook2/HZepipolar.pdf \"https://www.robots.ox.ac.uk/~vgg/hzbook/hzbook2/HZepipolar.pdf\") 牛津大学计算机视觉中的多视几何\n\n[http://120.52.72.36/www.umiacs.umd.edu/c3pr90ntcsf0/~ramani/cmsc828d/lecture27.pdf](http://120.52.72.36/www.umiacs.umd.edu/c3pr90ntcsf0/~ramani/cmsc828d/lecture27.pdf \"http://120.52.72.36/www.umiacs.umd.edu/c3pr90ntcsf0/~ramani/cmsc828d/lecture27.pdf\")\n\n马里兰大学高级计算机研究\n\n[http://www.cnblogs.com/gemstone/articles/2294551.html](http://www.cnblogs.com/gemstone/articles/2294551.html \"http://www.cnblogs.com/gemstone/articles/2294551.html\")\n\n[http://imagine.enpc.fr/~monasse/Stereo/4Fundamental.pdf](http://imagine.enpc.fr/~monasse/Stereo/4Fundamental.pdf \"http://imagine.enpc.fr/~monasse/Stereo/4Fundamental.pdf\") 法国国立桥梁与公路学校Ecole Nationale des Ponts et Chaesses计算机视觉和图像","slug":"opencv-findhomography-findfundanmentalmat","published":1,"updated":"2016-04-29T09:13:23.591Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7o2003kuco4w3ycwgal","content":"<p>openCV中有两个函数，findhomography和findfundamentalmat，长的很像。。一开始严重的弄混，以为都是求对应点投影矩阵的公式，万万没想到其实是两个完全不同的内涵。😒<br><a id=\"more\"></a></p>\n<p>opencv 中，进行<strong>图像拼接(全景拼接 航摄拼接 三维重建 街景地图)</strong>，大致流程如下。</p>\n<ol>\n<li>利用opencv提供的各类型特征点检测方法（Fast Start SIFT SURF ORB SimpleBlobPyramidAdapter DynamicAdapter 等）在图像中将感兴趣的有独特标识的点找出来,其中orb 是最近提出效率较高的检测和描述算法，金字塔算法则是更高的提高效率的算法；</li>\n<li>利用不同的描述方式（SIFT SURF），对特征点的信息（周围的梯度、灰度相关性 二进制编码等）进行描述； </li>\n<li>利用不同原则的匹配方式（BF Flann-based等），对这些描述子（一般是多维矩阵）进行匹配（匹配中数据的输入参数的筛选Ransac方法），对匹配结果反向计算进一步的筛查，选择更健壮更有代表性的数据（knn Ransac），</li>\n<li>最后利用findhomography找到映射矩阵，再利用affine将该坐标映射关系对其中一幅图贴到其中一幅图中。 完成拼接。拼接区域涉及融合平滑。</li>\n</ol>\n<p>这其中，<strong>findfundamentalmat()</strong>和<strong>findhomography()</strong>都是用来查找两组匹配坐标点的映射关系的（两组坐标几何 数目相同 同一<strong>数组位</strong>为同一对匹配点）试着运行了一下homography生成的矩阵拼接效果良好。而findfundamentalmat就不太6.找了一些相关资料，其实这是两个相似但不相同的函数。so开始之前科普几个概念：</p>\n<hr>\n<p><strong>核点（极点）</strong>：摄影中心连线（基线）ss’延长线，与左右影像的交点，分为左右核点（极点）。（注：下图两影像接近平行，则ss’连线与影像无交点，而在下下图中，el er分别为左右核点【极点】）亦可理解为左右摄影中心分别在对方像片的像点</p>\n<p><strong>核面（极面）</strong> ：过摄影基线与物方任意一点组成的平面。（所以缩，物方点不同，核面一般也不同 任意一个下图的PO1O2都是核面）</p>\n<p><strong>核线（极线）：立体像对中，同名光线与摄影基线所组成核面与左右像片的交线。</strong> （不同同名点极线不同，因而有很多很多条） </p>\n<p><strong>极线约束</strong> ：同一个点在两幅图像上的映射，已知左图映射点p1，那么右图映射点p2一定在p1的外极线上，这样可以减少匹配点数量。</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/24/56ce7786da1fa.png\" alt=\"\"></center>\n\n<p>上图中，红线即为极线，物方点P（X,Y,Z）分别在左右两图留下了同名点（xl，yl）、（xr,yr）。Tx即为基线长。但上图为两个平面接近平行且z方向接近0，但一般情况下，两像平面以任意角度成像同时内参数并不相同，因此上图中的极线呈现出共线的情况，更多的情况是下面这个图，两图像成任意角度。</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/24/56ce782a3235f.png\" alt=\"\"></center>\n\n<p>下图中，O1O2连线与左右像平面交点el和er即为左右极点(极点亦可理解为左右摄影中心在另一像平面的像)，而极线则为plel和prer。可以看到，这两条线显然就不平行了。 </p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/24/56ce77b362343.png\" alt=\"\"></center>\n\n<p><strong>基线</strong> ：相邻两摄站点（摄影中心 一般标为s）之间的连线。</p>\n<p><strong>主核面</strong> ：左右像主点分别与基线构成的平面，分别称为左主核面和右主核面。</p>\n<p><strong>灭点vanishing </strong> point：平行线在二维图像中汇聚的地方，空间中每一组平行线都有自己的灭点。</p>\n<p><strong>灭线vanishing line（消隐线 ）</strong> ：不同的灭线连线，即灭线。如果两组不同的平行线，都平行于大地，则他们的连线就是地平线（horizon line）</p>\n<hr>\n<h1 id=\"1-第一个矩阵Essential本质矩阵\"><a href=\"#1-第一个矩阵Essential本质矩阵\" class=\"headerlink\" title=\"1. 第一个矩阵Essential本质矩阵\"></a>1. 第一个矩阵Essential本质矩阵</h1><p>由于拍摄物体时，摄影中并不能被反映在图像中。如果让第二个观察者同时拍摄下某摄影中心和它所拍的照片呢?</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/25/56cfbd34f3c9e.png\" alt=\"\"></center>\n\n<p>反映在第二个观察者的照片，摄影中心和物体分别投影在像片上，任意第一个摄影中心和它所拍摄物体的连线都可视为第二个摄影中心的极线。直观的理解，即为下图的erpr。</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/25/56cfc06a0ddc5.png\" alt=\"\"></center>\n\n<p><strong>极线约束的理论就是左侧的物体成像在右侧的同名点一定在erpr上。</strong>反映左右极线关系的就是表达向量和右向量之间的约束关系的——<strong>本质矩阵**</strong>Eseential Matrix<strong>**。</strong>但大多数情况下，别的摄影中心并不一定会被成像，即极点不在相片中。如下图</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/25/56cfc2d883aab.png\" alt=\"\"></center>\n\n<p>具体的矩阵运算参考<strong>  </strong><a href=\"http://www.cnblogs.com/gemstone/archive/2011/12/20/2294551.html\" target=\"_blank\" rel=\"external\"><strong>计算机视觉基础4——对极几何(Epipolar Geometry)</strong></a> ，原理为三线同面（下图蓝色区域三边）  </p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/24/56ce77dc874bc.png\" alt=\"\"> </center>\n\n<p><strong>其中，E是本质矩阵（Essential Matrix），R是像平面旋转矩阵，T是摄影中心平移矩阵，Pl和Pr分别为左右摄影中心指向同名点P的向量。S由矩阵T决定，具体形式为</strong></p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/24/56ce77fc78812.png\" alt=\"\"></center>\n\n<p><strong>本质矩阵</strong> 采用的是相机的外部参数，也就是说采用相机坐标(The essential matrix uses CAMERA coordinates)，不涉及相机内参数，如果要分析数字图像，则要考虑坐标(u,v)，此时需要用到内部参数(To use image coordinates we must consider the INTRINSIC camera parameters)</p>\n<p><strong> 谨记1：Essential Matrix是连结两个摄影中心指向同名点的向量的矩阵，秩为2。</strong></p>\n<p><strong> 左向量·E·右向量=0！！！</strong></p>\n<p><strong> E由两部分组成！E=R·S  E仅由外方位元素决定！一张图记住E!!!</strong></p>\n<p><strong><center><img src=\"http://ooo.0o0.ooo/2016/02/25/56cfcab0b492e.png\" alt=\"\"></center></strong></p>\n<p>由向量引申而出的，是同名点的像素坐标，原理是共线方程。</p>\n<p><strong>二维同名点</strong></p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/26/56d00bc787259.png\" alt=\"\"></center>\n\n<p>上图中推导出对极几何中相当重要的公式，E矩阵作为连接同名点像素坐标而出现，这就意味着，已知求取E的外方位参数，就能求取出左右同名点的对应关系。然而，其中隐含的条件是在共线方程的化简中，默认忽略了镜头畸变。然而这已足够重要，在镜头畸变在拼接中影响不大时，该公式在仅仅知道外方位元素的情况就能解算corresponding point</p>\n<p><strong>极线方程</strong></p>\n<p>同理，由于极点、同名点都位于极线上，因此亦可通过E求得极线的方程（采用相机坐标系）。</p>\n<p>设极线方程为 au + bv + c = 0</p>\n<p>使用齐次坐标，矩阵表示为：</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/26/56d01aa83d7d6.png\" alt=\"\"></center>\n\n<p>其中，$\\widetilde{p}$是像片任意同名点相机坐标，$\\widetilde{l}$是方程系数。又依据同名点公式，$$Ep<em>{l} =\\widetilde{l</em>{r}}$$，所以！对应外极线的方程系数可以直接由E矩阵和本侧同名点求出。其中，$\\widetilde{l_{l}}$是左极点对应外极线方程。</p>\n<p>当已知左侧点，其右侧对应点在直线</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/26/56d08c864e4a7.png\" alt=\"\"></center><br>当已知右侧点，其左侧对应点在极线<br><center><img src=\"http://ooo.0o0.ooo/2016/02/26/56d01c07d68ed.png\" alt=\"\"></center><br><strong>极点</strong><br><br>别忘了。极点也是在极线上，所以有<br><center><img src=\"http://ooo.0o0.ooo/2016/02/26/56d0673df0710.png\" alt=\"\"></center><br>且，极点属于所有极线，因而<br><center><img src=\"http://ooo.0o0.ooo/2016/02/26/56d0678f1ddfc.png\" alt=\"\"></center><br>上式可用来定位极点的坐标<br><br><em> </em> <em><br><br># <strong> 2.第2个矩阵 Fundamental基础矩阵</strong><br><br>另一个需要提到的概念是基础矩阵。<br><br>Essential矩阵使用CameraCoords相机坐标系。尽管其中可计算像素坐标，但仍然以摄影中心为原点，像平面所有点z值都是f。当考虑相机内参数时，这就是FundamentalMatrix基础矩阵<br><center><img src=\"http://ooo.0o0.ooo/2016/01/22/56a2556c54d1d.png\" alt=\"\"></center><br>该图显示了fundamentalmatrix（基础矩阵）的基本内涵。p q分别为同名点。计算基础矩阵需要考虑到内参数的仿射变换。M为内参数的矩阵，包含6个参数的3</em>3矩阵。<br><center><img src=\"http://ooo.0o0.ooo/2016/02/26/56d069db39519.png\" alt=\"\"></center><br>将上式中的Camera坐标提到一边，带入基本矩阵解求对极同名点的方程，即可得到F的表达式.<br><center><img src=\"http://ooo.0o0.ooo/2016/02/24/56ce7854f3d64.jpg\" alt=\"\"></center><br>上式即为基础矩阵方程。其中，F是基础矩阵，x’x分别为同名点。而左右两个平面的两条极线为，显而易见，F由E和两个内参数矩阵决定。<br><center><img src=\"http://ooo.0o0.ooo/2016/02/26/56d06ae01c63d.png\" alt=\"\"></center><br>类似的，F与E一样都能指同名点坐标在对应极线的关系。下图分别是已知左右点其对应极线的关系。<br><center><img src=\"http://ooo.0o0.ooo/2016/02/24/56ce78b202e41.jpg\" alt=\"\"></center><br>一个简单的例子，如果从某种方式计算出基础矩阵，则在对应图中即可表示出像素点对应的极线。<br><center><img src=\"http://ooo.0o0.ooo/2016/02/28/56d3bee0758a5.png\" alt=\"\"></center><br>计算出矩阵即为l的三个参数。一般的，调整比例 将前两项的平方和定为1.<br><center><img src=\"http://ooo.0o0.ooo/2016/02/28/56d3bf4cbf895.png\" alt=\"\"></center>\n\n<p>findfundamentalmat()本意为基础矩阵，是假设两幅图像在同一三维场景中的不同视角。例如立体摄像机，从不同的角度拍摄同一个目标，它解算的是，两幅图像其中一个同名点，与其在外极线同名点的转换关系。它的映射基于三维场景，因此使用这个函数的时候，在不同的视角之间，应该有一个明显的基线。默认使用7点算法拟合数据。基础矩阵把左边图像的一个点的图像坐标与它右边图像中的对应点的图像联系起来，他是一个3x3的退化矩阵，描述了两个立体图像对的外极限几何关系，其计算依赖于在两个图像中相对应的一组点。</p>\n<p>与Homography矩阵（下文提到）不同，它在每组对应点有两组约束：x、y同时作为x’y’的自变量，估算一组对应点只有一行的约束，因为极线约束是标量等式。因此至少需要8个点。所以一般使用8点算法计算F矩阵(8点算法)。</p>\n<p>$$\\begin{bmatrix} x^{‘}_i &amp; y^{‘}<em>i &amp; 1 \\end{bmatrix} \\begin{bmatrix} f</em>{11} &amp; f<em>{12} &amp; f</em>{13} \\\\ f<em>{21} &amp; f</em>{22} &amp; f<em>{23} \\\\  f</em>{31} &amp; f<em>{32}  &amp; f</em>{33}  \\end{bmatrix} \\begin{bmatrix} x_i \\\\ y_i \\\\ 1 \\end{bmatrix}=0$$</p>\n<p>可推到出方程：</p>\n<p>$$ x_i x^{‘}_i {f_11} + x_i y^{‘}_i f_21 + x_i f_31 + y_i x^{‘}_i f_12 + y_i y^{‘}_i f_22 + y_i f_32 + {x_i}^{‘} f_13 + y^{‘}_i f_23 + f_33 =0$$</p>\n<center><img src=\"https://ooo.0o0.ooo/2016/02/29/56d3ed9679e76.png\" alt=\"\"></center>\n\n<p>最终目标是找到ATA的一个特征向量使得它的特征值最小。常用的解法是构造m*9的矩阵A（m是点对数），求解A的奇异值分解，即A=UDVT，</p>\n<blockquote>\n<p>U是m*m正交矩阵，其列为AAT特征向量</p>\n<p>V是m*n正交阵，其列为ATA的特征向量</p>\n<p>D是m*n对角阵，对角元素为奇异值，平方值为AAT和ATA的特征值。</p>\n</blockquote>\n<p>然而F是由7个自由度构成的3*3矩阵，其秩为2，因此，讲道理，9个表达式由7个参数构成，因此只用7对对应点理应也能解算出F矩阵（7点算法）。使用此方法计算F矩阵时，需要加上秩为2的限制，以保证计算结果唯一。该方法亦叫做奇异约束。该约束限制假设以F’替代F矩阵，计算时以<a href=\"https://zh.wikipedia.org/wiki/%E7%9F%A9%E9%99%A3%E7%AF%84%E6%95%B8#.E5.BC.97.E7.BD.97.E8.B4.9D.E5.B0.BC.E4.B9.8C.E6.96.AF.E7.AF.84.E6.95.B0\" target=\"_blank\" rel=\"external\">F范式</a>作为标准。</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/03/29/56fb45459399e.png\" alt=\"\"></center><br>其中，$\\sigma$是M矩阵的奇异值（A*·A的n个特征值的非负平方根叫作A的奇异值），M=F-F’,可以通过SVD分解解出该奇异值。<br><br><center><img src=\"http://ooo.0o0.ooo/2016/03/29/56fb506cb6765.png\" alt=\"\"></center>\n\n<p>F由于秩为2的限制可以以以下形式表示：</p>\n<p>F=αF1+(1-α)F2.其中，F1和F2分别Fx=0的两个解。</p>\n<p>由于秩=2，因此det(F=αF1+(1-α)F2)=0,通过该式即可求出α的值。</p>\n<p>更多内容可以看计算机视觉Trifocal tensor三角点张量的部分。</p>\n<p>Caution!</p>\n<p>对图像进行匹配的一个重要步骤就是把两幅图像的极线平行于基线，使得极点处在正无穷，这样的拼接结果效果才能更好。这一重要步骤即为重投影。如下图将黑线投影为蓝线。</p>\n<center><img src=\"https://ooo.0o0.ooo/2016/02/29/56d3f1e8a7005.png\" alt=\"\"></center>\n\n<p>对图像进行矫正。需要一个单映矩阵，作两步旋转。其第一步是将极点旋转到无穷远，第二部是将极线平行。其中，左右图像均需要应用该单映聚阵R将极点无穷远化；而右图像需要应用旋转矩阵（E=RS中的R）。最后比例一致化。</p>\n<p>上文中需要构造的矫正矩阵形式为：</p>\n<center><img src=\"https://ooo.0o0.ooo/2016/02/29/56d3f5a8ace5f.png\" alt=\"\"></center>\n\n<p>T是单位矩阵，代表左图的极点，可由E计算。其余的参数：</p>\n<center><img src=\"https://ooo.0o0.ooo/2016/02/29/56d3f66d34abd.png\" alt=\"\"></center>\n\n<p>整理一下步骤即为：</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/29/56d3f7afcf9ce.png\" alt=\"\"></center>\n\n<p>下图即为矫正的例子（两幅图的变化很小，但是从边缘还是可以看到细微的变化），最后把图像的极点都化为无穷远，两幅图基于基线平行。</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/29/56d3f7745f920.png\" alt=\"\"></center>\n\n<hr>\n<h1 id=\"3-第二个矩阵-Homography（单映）矩阵\"><a href=\"#3-第二个矩阵-Homography（单映）矩阵\" class=\"headerlink\" title=\" 3. 第二个矩阵 Homography（单映）矩阵\"></a><strong> 3. 第二个矩阵 Homography（单映）矩阵</strong></h1><p>findhomography的前提是2D的转换，本意为单映（包含平移、仿射、尺度三种变换），试图找到一个3*3的投影矩阵，能够把1图中所有的点，通过某种形变，匹配到2图中去。当基线很小的时候(视差变化小，扭曲形变也少)，这个方法能够计算出精度极高的解。<br>当然可以首先参考opencv的<a href=\"http://docs.opencv.org/2.4/modules/calib3d/doc/camera_calibration_and_3d_reconstruction.html?highlight=findhomography\" target=\"_blank\" rel=\"external\">文档</a> 这里首先介绍二维映射的单映（homography）矩阵</p>\n<center><img src=\"https://ooo.0o0.ooo/2016/01/23/56a3baf462830.png\" alt=\"\"></center>\n\n<p>该式反应了像点齐次坐标的单映变换的方程。（u v）(u’ v’)分别是左右图像的同名像点坐标。通过一个8个自由度的矩阵P来解算两者之间的关系。p02 p12与平移相关，p00,p01,p10,p11与旋转 尺度和仿射（平行变换）变换有关，p20,p21与拉伸扭曲有关。</p>\n<p>一般的，单映矩阵的计算由以下几个参数构成</p>\n<center><img src=\"https://ooo.0o0.ooo/2016/01/23/56a3bf63f1be0.png\" alt=\"\"></center>\n\n<p>其中，K是相机的内矩阵，由焦距决定；R是主光轴朝向，一般由3个方向余弦决定；C是摄影中心的物方位置。当在原地旋转时，C1-C2为0，因此方程可简化为</p>\n<center><img src=\"https://ooo.0o0.ooo/2016/01/23/56a3c1dd3035a.png\" alt=\"\"></center>\n\n<p>由相机纯粹旋转而形成的单映，自由度3-5（根据是否已知焦距决定）。</p>\n<p>Caution！应该注意到的是，上式中的H3*3矩阵的最后一个元素为1。这里使用到的是计算H矩阵最常用的一种方法，4点算法，即使用4个点即可解算一组H中的8个未知数。在ransac验证外点的过程中，也采用随机4点为一组构建8个方程解算H。</p>\n<p>尽管homography是处理二维点集之间的关系，但倘若三维物体中某些点都处于一个平面，即可设该面的z方向值为0，以三维物方xy值作为像素值与所成像片进行homography的变换。</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/24/56ce6ba16113c.png\" alt=\"\"></center>\n\n<p>上图是几种坐标系之间的关系，Mext是外参数矩阵，包含旋转和平移；Mproj是投影矩阵，主要由焦距决定，原理是共线方程；Maff是内参数仿射变换矩阵，由内参数决定。普通的homography是两幅图像像素坐标间或相片坐标间的变换，但上文提到，当三维物体某些点处于一个平面，亦可在World坐标和Film坐标之间进行homography矩阵变换。</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/24/56ce6cd71fc88.png\" alt=\"\"></center>\n\n<p>上图可以看到，将三维坐标点z值设为0，[p,q,0,1]即为三维齐次坐标。</p>\n<p>$$ \\begin{bmatrix} x \\\\ y \\\\ 1<br>\\end{bmatrix} \\sim \\begin{bmatrix} f &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; f &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\end{bmatrix} \\begin{bmatrix} r_11 &amp; r_12 &amp; r_13 &amp; t_x \\\\ r_21 &amp; r_22 &amp; r_23 &amp; t_y \\\\ r_31 &amp; r_32&amp; r_33 &amp; t_z \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{bmatrix} \\begin{bmatrix} p \\\\ q \\\\ 0 \\\\ 1 \\end{bmatrix} \\sim \\begin{bmatrix} fr_11 &amp; fr_12 &amp; ft_x \\\\ fr_21 &amp; fr_22 &amp; ft_y \\\\ r_31 &amp; r_32 &amp; t_z \\end{bmatrix} \\begin{bmatrix} p \\\\ q \\\\ 1 \\end{bmatrix}<br>$$$$\\sim \\begin{bmatrix} h_11 &amp; h_12&amp;h_13 \\\\ h_21 &amp; h_22 &amp; h_23 \\\\ h_31 &amp; h_32 &amp; h_33 \\end{bmatrix} \\begin{bmatrix} p \\\\ q \\\\ 1 \\end{bmatrix}$$<br>最终推到出，3D转2D的投影变换成为2D转2D的变换，该变化可逆！其特例是，当采用的物方坐标系z轴与主光轴平行，即正射影像，则上式R矩阵为</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/24/56ce7aab1b305.png\" alt=\"\"></center>\n\n<p>则上式变形为：</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/24/56ce7b0376427.png\" alt=\"\"></center>\n\n<p>该式与相似变换的形式一样，只有4个自由度（tz可化为1），因而正射影像不会产生拉伸形变。（前提是拍摄物体几乎没有深度，几乎处在一个平面）。下图是依照三维中某平面进行拼接，会造成除平面部分其余图像的虚影。</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/25/56cf114fc872a.png\" alt=\"\"></center>\n\n<center><img src=\"http://ooo.0o0.ooo/2016/02/25/56cf117891dbb.png\" alt=\"\"></center>\n\n<p>上文中一直讨论的是从物方坐标系到像片坐标系的转换，倘若再加上内方位参数的内矩阵，则可直接导出从物方坐标到像素坐标的公式，如下图示意。内方位参数为仿射变换（Affine 6自由度 保持平行结构的变换）</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/25/56ceb1181fa03.png\" alt=\"\"></center>\n\n<p>将world-&gt;film-&gt;pixel结合起来，对于同一个物体，在某位置某台相机拍摄的照片就可以认为是一个单映H。当然，不同的位置拍摄的像片，各自对应物体的单映是不同的。但由于单映是可逆的，拍摄同一物体的两幅图像，也可以用使用$$H=H<em>{1}H</em>{2}^{-1}$$</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/25/56ceb83e89a7b.png\" alt=\"\"><img src=\"http://ooo.0o0.ooo/2016/02/25/56cebcef9abd7.png\" alt=\"\"></center>\n\n<hr>\n<h1 id=\"4-Homography（单映）矩阵的求取\"><a href=\"#4-Homography（单映）矩阵的求取\" class=\"headerlink\" title=\" 4. Homography（单映）矩阵的求取\"></a><strong> 4. Homography（单映）矩阵的求取</strong></h1><p>参考<a href=\"http://www.robots.ox.ac.uk/~vgg/presentations/bmvc97/criminispaper/node3.html\" target=\"_blank\" rel=\"external\">这里</a>  只要大于4个匹配点，都认为是冗余测量，必须融合数据。文章里提到了三种解求二维面到面的单应矩阵的球法。</p>\n<ul>\n<li>非线性的解决办法，使用伪逆进行分解。当所解求值为0时会有bug。</li>\n<li>线性最小二乘解法，通常使用SVD分解，V矩阵就对应了最小奇异值。<a href=\"http://blog.chinaunix.net/uid-20761674-id-4040274.html\" target=\"_blank\" rel=\"external\">这个SVD的文章</a>相当好的解释了SVD分解的意义。八个未知数对应八个特征向量，也对应八个线性方程的解。SVD能直接解求出这八个向量，即V中的特征向量。</li>\n<li>非线性几何解法，使对应点和映射点差值欧几里得距离（或平方和）最小。</li>\n</ul>\n<p>Homograhy的计算：计算该矩阵当然不会上式f θ等值直接解算。由于是二维图像之间的关系，一般都已知二维对应点集，直接采用最小二乘的方式使用LM进行计算。在一般情况下的H矩阵可表示为</p>\n<p>$$ \\begin{bmatrix} x^{‘} \\\\ y^{‘} \\\\ 1 \\end{bmatrix} \\sim \\begin{bmatrix} h_11 &amp; h_12 &amp; h_13 \\\\ h_21 &amp; h_22 &amp; h_23 \\\\ h_31 &amp; h_32 &amp; h_33 \\end{bmatrix} \\begin{bmatrix} x \\\\ y \\\\ 1 \\end{bmatrix}$$</p>\n<p>其中，$h_31 h_32 h_33$是为了配置相似比例，化简为</p>\n<p>$$x^{‘}=\\frac{h_11 x + h_12 y + h_13 }{ h_31 x + h_32 y + h_33 }$$</p>\n<p>$$y^{‘}=\\frac{h_21 \\cdot x + h_22 y + h_23 }{ h_31 x + h_32 y + h_33 }$$</p>\n<p>但可以看到，h所有元素同乘k 等式依旧成立。因而强制设为8自由度有两种方式，</p>\n<p>①$$ h_{33} = 1 $$</p>\n<p>②$ h<em>{11}\\^{2} + h</em>{12}\\^{2} = 1 $<br>采用第一种方式较为常见。<br>当采用最小二乘解求H矩阵时，一般先用Ransac筛选最大集，然后利用下方程。</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/25/56cf041a7c664.png\" alt=\"\"></center>\n\n<p>以x y x’y’为A b矩阵参数，迭代解求H。由于是线性方程，因而可以直接使用$$h=(A^{T}A)^{-1}(A^{T}b)$$求取每次的残差。</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/25/56cf051be79bc.png\" alt=\"\"></center>\n\n<p>&lt;font color=”#ff0000”&gt;Caution！应该注意到的是，该方法对噪声极其敏感，即使没有外点（outliers）,因而，在计算前对数据里筛选就非常重要。为更好的得到结果，Ransac时可以将该组数据质心重置到原点；然后缩放比例使得各点到原点的平均距离是根号二。如下图，H的表达式。T、S分别为平移和缩放的矩阵。</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/25/56cf08c613352.png\" alt=\"\"></center>\n\n<p>如何判断这两幅图像确实匹配呢？记该区域的特征点总数为nf，而符合H的特征点（内点）数量为nj，如果两者比例足够大，说明两幅图像确实匹配。但一般拼接时都确认两幅图像有重叠面积才计算H。变换模型H计算时的误差可表述为Huber模型：</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/25/56cf0b53675d9.png\" alt=\"\"></center>\n\n<p>同时，由于矩阵具有可逆性，因此图像12之间的H1和图像23之间的H2可以直接推导出图像13之间的H3。但大量的单映队列并不推荐，这样会造成误差成倍扩大。</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/25/56cf0eb50a41b.png\" alt=\"\"></center>\n\n<p><strong> 谨记二 </strong>：homography处理的是纯粹的二维与二维之间的变换。即便特例是3D也是视为在2D的单映和相似变换。在旋转相机和正射拼接可以得到良好的二维拼接效果，在具有深度的三维物体，拼接会造成虚影！</p>\n<hr>\n<p>这两个函数都是基于特征点的变换模型求解，既然特征点已找出且筛查得到更正确的点，因此对图像外观的变化具有鲁棒性（尺度、光照、旋转等）。选择哪种函数基于图像间的关系，即立体场的观测使用fundamentalmatrix（视角矫正 三维全景 街景视角）,而相对平面化的则使用findhomography（全景拼接  航摄图像拼接 ）</p>\n<p>解求这个变换模型一般基于线性最小二乘的方式，与平差原理类似，利用冗余的数据（大量同名点）来解算参数。一般的，先通过Ransac筛查数据比较靠谱。</p>\n<h1 id=\"谨记三：\"><a href=\"#谨记三：\" class=\"headerlink\" title=\"** 谨记三：\"></a>** 谨记三：</h1><p>homography 单映处理二维坐标系与二维坐标系关系，特例情况下是三维物体某平面可视为二维平面。更特例的是正射影像（相似变换）和旋转摄影全景拼接（C1-C2=0）（处理对应点集与点集的关系）矩阵可逆，具有结合性。</p>\n<p>fundamental针对的是点和极线的关系（处理点集与极线集的关系），可用来在寻找匹配点的时候快速查找对应点。（以像素为坐标系）</p>\n<p>essential 本质是连结同名点向量的矩阵（以像空系为标准）</p>\n<p>参考。</p>\n<p><a href=\"http://blog.csdn.net/u010141025/article/details/16920567\" target=\"_blank\" rel=\"external\">【opencv】特征点检测方法–GFTT，SIFT，FAST，SURF</a> </p>\n<p><a href=\"http://www.cse.psu.edu/~rtc12/CSE486/\" title=\"http://www.cse.psu.edu/~rtc12/CSE486/\" target=\"_blank\" rel=\"external\">http://www.cse.psu.edu/~rtc12/CSE486/</a> 宾州州立大学计算机视觉</p>\n<p><a href=\"http://opencv-users.1802565.n2.nabble.com/Difference-between-homography-and-fundamental-matrix-td6359087.html\" title=\"http://opencv-users.1802565.n2.nabble.com/Difference-between-homography-and-fundamental-matrix-td6359087.html\" target=\"_blank\" rel=\"external\">http://opencv-users.1802565.n2.nabble.com/Difference-between-homography-and-fundamental-matrix-td6359087.html</a> homography and fundamental matrix的讨论</p>\n<p><a href=\"http://homepages.inf.ed.ac.uk/rbf/CVonline/\" title=\"http://homepages.inf.ed.ac.uk/rbf/CVonline/\" target=\"_blank\" rel=\"external\">http://homepages.inf.ed.ac.uk/rbf/CVonline/</a> 爱丁堡大学计算机视觉在线课件</p>\n<p><a href=\"https://www.robots.ox.ac.uk/~vgg/hzbook/hzbook2/HZepipolar.pdf\" title=\"https://www.robots.ox.ac.uk/~vgg/hzbook/hzbook2/HZepipolar.pdf\" target=\"_blank\" rel=\"external\">https://www.robots.ox.ac.uk/~vgg/hzbook/hzbook2/HZepipolar.pdf</a> 牛津大学计算机视觉中的多视几何</p>\n<p><a href=\"http://120.52.72.36/www.umiacs.umd.edu/c3pr90ntcsf0/~ramani/cmsc828d/lecture27.pdf\" title=\"http://120.52.72.36/www.umiacs.umd.edu/c3pr90ntcsf0/~ramani/cmsc828d/lecture27.pdf\" target=\"_blank\" rel=\"external\">http://120.52.72.36/www.umiacs.umd.edu/c3pr90ntcsf0/~ramani/cmsc828d/lecture27.pdf</a></p>\n<p>马里兰大学高级计算机研究</p>\n<p><a href=\"http://www.cnblogs.com/gemstone/articles/2294551.html\" title=\"http://www.cnblogs.com/gemstone/articles/2294551.html\" target=\"_blank\" rel=\"external\">http://www.cnblogs.com/gemstone/articles/2294551.html</a></p>\n<p><a href=\"http://imagine.enpc.fr/~monasse/Stereo/4Fundamental.pdf\" title=\"http://imagine.enpc.fr/~monasse/Stereo/4Fundamental.pdf\" target=\"_blank\" rel=\"external\">http://imagine.enpc.fr/~monasse/Stereo/4Fundamental.pdf</a> 法国国立桥梁与公路学校Ecole Nationale des Ponts et Chaesses计算机视觉和图像</p>","excerpt":"<p>openCV中有两个函数，findhomography和findfundamentalmat，长的很像。。一开始严重的弄混，以为都是求对应点投影矩阵的公式，万万没想到其实是两个完全不同的内涵。😒<br>","more":"</p>\n<p>opencv 中，进行<strong>图像拼接(全景拼接 航摄拼接 三维重建 街景地图)</strong>，大致流程如下。</p>\n<ol>\n<li>利用opencv提供的各类型特征点检测方法（Fast Start SIFT SURF ORB SimpleBlobPyramidAdapter DynamicAdapter 等）在图像中将感兴趣的有独特标识的点找出来,其中orb 是最近提出效率较高的检测和描述算法，金字塔算法则是更高的提高效率的算法；</li>\n<li>利用不同的描述方式（SIFT SURF），对特征点的信息（周围的梯度、灰度相关性 二进制编码等）进行描述； </li>\n<li>利用不同原则的匹配方式（BF Flann-based等），对这些描述子（一般是多维矩阵）进行匹配（匹配中数据的输入参数的筛选Ransac方法），对匹配结果反向计算进一步的筛查，选择更健壮更有代表性的数据（knn Ransac），</li>\n<li>最后利用findhomography找到映射矩阵，再利用affine将该坐标映射关系对其中一幅图贴到其中一幅图中。 完成拼接。拼接区域涉及融合平滑。</li>\n</ol>\n<p>这其中，<strong>findfundamentalmat()</strong>和<strong>findhomography()</strong>都是用来查找两组匹配坐标点的映射关系的（两组坐标几何 数目相同 同一<strong>数组位</strong>为同一对匹配点）试着运行了一下homography生成的矩阵拼接效果良好。而findfundamentalmat就不太6.找了一些相关资料，其实这是两个相似但不相同的函数。so开始之前科普几个概念：</p>\n<hr>\n<p><strong>核点（极点）</strong>：摄影中心连线（基线）ss’延长线，与左右影像的交点，分为左右核点（极点）。（注：下图两影像接近平行，则ss’连线与影像无交点，而在下下图中，el er分别为左右核点【极点】）亦可理解为左右摄影中心分别在对方像片的像点</p>\n<p><strong>核面（极面）</strong> ：过摄影基线与物方任意一点组成的平面。（所以缩，物方点不同，核面一般也不同 任意一个下图的PO1O2都是核面）</p>\n<p><strong>核线（极线）：立体像对中，同名光线与摄影基线所组成核面与左右像片的交线。</strong> （不同同名点极线不同，因而有很多很多条） </p>\n<p><strong>极线约束</strong> ：同一个点在两幅图像上的映射，已知左图映射点p1，那么右图映射点p2一定在p1的外极线上，这样可以减少匹配点数量。</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/24/56ce7786da1fa.png\" alt=\"\"></center>\n\n<p>上图中，红线即为极线，物方点P（X,Y,Z）分别在左右两图留下了同名点（xl，yl）、（xr,yr）。Tx即为基线长。但上图为两个平面接近平行且z方向接近0，但一般情况下，两像平面以任意角度成像同时内参数并不相同，因此上图中的极线呈现出共线的情况，更多的情况是下面这个图，两图像成任意角度。</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/24/56ce782a3235f.png\" alt=\"\"></center>\n\n<p>下图中，O1O2连线与左右像平面交点el和er即为左右极点(极点亦可理解为左右摄影中心在另一像平面的像)，而极线则为plel和prer。可以看到，这两条线显然就不平行了。 </p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/24/56ce77b362343.png\" alt=\"\"></center>\n\n<p><strong>基线</strong> ：相邻两摄站点（摄影中心 一般标为s）之间的连线。</p>\n<p><strong>主核面</strong> ：左右像主点分别与基线构成的平面，分别称为左主核面和右主核面。</p>\n<p><strong>灭点vanishing </strong> point：平行线在二维图像中汇聚的地方，空间中每一组平行线都有自己的灭点。</p>\n<p><strong>灭线vanishing line（消隐线 ）</strong> ：不同的灭线连线，即灭线。如果两组不同的平行线，都平行于大地，则他们的连线就是地平线（horizon line）</p>\n<hr>\n<h1 id=\"1-第一个矩阵Essential本质矩阵\"><a href=\"#1-第一个矩阵Essential本质矩阵\" class=\"headerlink\" title=\"1. 第一个矩阵Essential本质矩阵\"></a>1. 第一个矩阵Essential本质矩阵</h1><p>由于拍摄物体时，摄影中并不能被反映在图像中。如果让第二个观察者同时拍摄下某摄影中心和它所拍的照片呢?</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/25/56cfbd34f3c9e.png\" alt=\"\"></center>\n\n<p>反映在第二个观察者的照片，摄影中心和物体分别投影在像片上，任意第一个摄影中心和它所拍摄物体的连线都可视为第二个摄影中心的极线。直观的理解，即为下图的erpr。</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/25/56cfc06a0ddc5.png\" alt=\"\"></center>\n\n<p><strong>极线约束的理论就是左侧的物体成像在右侧的同名点一定在erpr上。</strong>反映左右极线关系的就是表达向量和右向量之间的约束关系的——<strong>本质矩阵**</strong>Eseential Matrix<strong>**。</strong>但大多数情况下，别的摄影中心并不一定会被成像，即极点不在相片中。如下图</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/25/56cfc2d883aab.png\" alt=\"\"></center>\n\n<p>具体的矩阵运算参考<strong>  </strong><a href=\"http://www.cnblogs.com/gemstone/archive/2011/12/20/2294551.html\"><strong>计算机视觉基础4——对极几何(Epipolar Geometry)</strong></a> ，原理为三线同面（下图蓝色区域三边）  </p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/24/56ce77dc874bc.png\" alt=\"\"> </center>\n\n<p><strong>其中，E是本质矩阵（Essential Matrix），R是像平面旋转矩阵，T是摄影中心平移矩阵，Pl和Pr分别为左右摄影中心指向同名点P的向量。S由矩阵T决定，具体形式为</strong></p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/24/56ce77fc78812.png\" alt=\"\"></center>\n\n<p><strong>本质矩阵</strong> 采用的是相机的外部参数，也就是说采用相机坐标(The essential matrix uses CAMERA coordinates)，不涉及相机内参数，如果要分析数字图像，则要考虑坐标(u,v)，此时需要用到内部参数(To use image coordinates we must consider the INTRINSIC camera parameters)</p>\n<p><strong> 谨记1：Essential Matrix是连结两个摄影中心指向同名点的向量的矩阵，秩为2。</strong></p>\n<p><strong> 左向量·E·右向量=0！！！</strong></p>\n<p><strong> E由两部分组成！E=R·S  E仅由外方位元素决定！一张图记住E!!!</strong></p>\n<p><strong><center><img src=\"http://ooo.0o0.ooo/2016/02/25/56cfcab0b492e.png\" alt=\"\"></center></strong></p>\n<p>由向量引申而出的，是同名点的像素坐标，原理是共线方程。</p>\n<p><strong>二维同名点</strong></p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/26/56d00bc787259.png\" alt=\"\"></center>\n\n<p>上图中推导出对极几何中相当重要的公式，E矩阵作为连接同名点像素坐标而出现，这就意味着，已知求取E的外方位参数，就能求取出左右同名点的对应关系。然而，其中隐含的条件是在共线方程的化简中，默认忽略了镜头畸变。然而这已足够重要，在镜头畸变在拼接中影响不大时，该公式在仅仅知道外方位元素的情况就能解算corresponding point</p>\n<p><strong>极线方程</strong></p>\n<p>同理，由于极点、同名点都位于极线上，因此亦可通过E求得极线的方程（采用相机坐标系）。</p>\n<p>设极线方程为 au + bv + c = 0</p>\n<p>使用齐次坐标，矩阵表示为：</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/26/56d01aa83d7d6.png\" alt=\"\"></center>\n\n<p>其中，$\\widetilde{p}$是像片任意同名点相机坐标，$\\widetilde{l}$是方程系数。又依据同名点公式，$$Ep<em>{l} =\\widetilde{l</em>{r}}$$，所以！对应外极线的方程系数可以直接由E矩阵和本侧同名点求出。其中，$\\widetilde{l_{l}}$是左极点对应外极线方程。</p>\n<p>当已知左侧点，其右侧对应点在直线</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/26/56d08c864e4a7.png\" alt=\"\"></center><br>当已知右侧点，其左侧对应点在极线<br><center><img src=\"http://ooo.0o0.ooo/2016/02/26/56d01c07d68ed.png\" alt=\"\"></center><br><strong>极点</strong><br><br>别忘了。极点也是在极线上，所以有<br><center><img src=\"http://ooo.0o0.ooo/2016/02/26/56d0673df0710.png\" alt=\"\"></center><br>且，极点属于所有极线，因而<br><center><img src=\"http://ooo.0o0.ooo/2016/02/26/56d0678f1ddfc.png\" alt=\"\"></center><br>上式可用来定位极点的坐标<br><br><em> </em> <em><br><br># <strong> 2.第2个矩阵 Fundamental基础矩阵</strong><br><br>另一个需要提到的概念是基础矩阵。<br><br>Essential矩阵使用CameraCoords相机坐标系。尽管其中可计算像素坐标，但仍然以摄影中心为原点，像平面所有点z值都是f。当考虑相机内参数时，这就是FundamentalMatrix基础矩阵<br><center><img src=\"http://ooo.0o0.ooo/2016/01/22/56a2556c54d1d.png\" alt=\"\"></center><br>该图显示了fundamentalmatrix（基础矩阵）的基本内涵。p q分别为同名点。计算基础矩阵需要考虑到内参数的仿射变换。M为内参数的矩阵，包含6个参数的3</em>3矩阵。<br><center><img src=\"http://ooo.0o0.ooo/2016/02/26/56d069db39519.png\" alt=\"\"></center><br>将上式中的Camera坐标提到一边，带入基本矩阵解求对极同名点的方程，即可得到F的表达式.<br><center><img src=\"http://ooo.0o0.ooo/2016/02/24/56ce7854f3d64.jpg\" alt=\"\"></center><br>上式即为基础矩阵方程。其中，F是基础矩阵，x’x分别为同名点。而左右两个平面的两条极线为，显而易见，F由E和两个内参数矩阵决定。<br><center><img src=\"http://ooo.0o0.ooo/2016/02/26/56d06ae01c63d.png\" alt=\"\"></center><br>类似的，F与E一样都能指同名点坐标在对应极线的关系。下图分别是已知左右点其对应极线的关系。<br><center><img src=\"http://ooo.0o0.ooo/2016/02/24/56ce78b202e41.jpg\" alt=\"\"></center><br>一个简单的例子，如果从某种方式计算出基础矩阵，则在对应图中即可表示出像素点对应的极线。<br><center><img src=\"http://ooo.0o0.ooo/2016/02/28/56d3bee0758a5.png\" alt=\"\"></center><br>计算出矩阵即为l的三个参数。一般的，调整比例 将前两项的平方和定为1.<br><center><img src=\"http://ooo.0o0.ooo/2016/02/28/56d3bf4cbf895.png\" alt=\"\"></center>\n\n<p>findfundamentalmat()本意为基础矩阵，是假设两幅图像在同一三维场景中的不同视角。例如立体摄像机，从不同的角度拍摄同一个目标，它解算的是，两幅图像其中一个同名点，与其在外极线同名点的转换关系。它的映射基于三维场景，因此使用这个函数的时候，在不同的视角之间，应该有一个明显的基线。默认使用7点算法拟合数据。基础矩阵把左边图像的一个点的图像坐标与它右边图像中的对应点的图像联系起来，他是一个3x3的退化矩阵，描述了两个立体图像对的外极限几何关系，其计算依赖于在两个图像中相对应的一组点。</p>\n<p>与Homography矩阵（下文提到）不同，它在每组对应点有两组约束：x、y同时作为x’y’的自变量，估算一组对应点只有一行的约束，因为极线约束是标量等式。因此至少需要8个点。所以一般使用8点算法计算F矩阵(8点算法)。</p>\n<p>$$\\begin{bmatrix} x^{‘}_i &amp; y^{‘}<em>i &amp; 1 \\end{bmatrix} \\begin{bmatrix} f</em>{11} &amp; f<em>{12} &amp; f</em>{13} \\\\ f<em>{21} &amp; f</em>{22} &amp; f<em>{23} \\\\  f</em>{31} &amp; f<em>{32}  &amp; f</em>{33}  \\end{bmatrix} \\begin{bmatrix} x_i \\\\ y_i \\\\ 1 \\end{bmatrix}=0$$</p>\n<p>可推到出方程：</p>\n<p>$$ x_i x^{‘}_i {f_11} + x_i y^{‘}_i f_21 + x_i f_31 + y_i x^{‘}_i f_12 + y_i y^{‘}_i f_22 + y_i f_32 + {x_i}^{‘} f_13 + y^{‘}_i f_23 + f_33 =0$$</p>\n<center><img src=\"https://ooo.0o0.ooo/2016/02/29/56d3ed9679e76.png\" alt=\"\"></center>\n\n<p>最终目标是找到ATA的一个特征向量使得它的特征值最小。常用的解法是构造m*9的矩阵A（m是点对数），求解A的奇异值分解，即A=UDVT，</p>\n<blockquote>\n<p>U是m*m正交矩阵，其列为AAT特征向量</p>\n<p>V是m*n正交阵，其列为ATA的特征向量</p>\n<p>D是m*n对角阵，对角元素为奇异值，平方值为AAT和ATA的特征值。</p>\n</blockquote>\n<p>然而F是由7个自由度构成的3*3矩阵，其秩为2，因此，讲道理，9个表达式由7个参数构成，因此只用7对对应点理应也能解算出F矩阵（7点算法）。使用此方法计算F矩阵时，需要加上秩为2的限制，以保证计算结果唯一。该方法亦叫做奇异约束。该约束限制假设以F’替代F矩阵，计算时以<a href=\"https://zh.wikipedia.org/wiki/%E7%9F%A9%E9%99%A3%E7%AF%84%E6%95%B8#.E5.BC.97.E7.BD.97.E8.B4.9D.E5.B0.BC.E4.B9.8C.E6.96.AF.E7.AF.84.E6.95.B0\">F范式</a>作为标准。</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/03/29/56fb45459399e.png\" alt=\"\"></center><br>其中，$\\sigma$是M矩阵的奇异值（A*·A的n个特征值的非负平方根叫作A的奇异值），M=F-F’,可以通过SVD分解解出该奇异值。<br><br><center><img src=\"http://ooo.0o0.ooo/2016/03/29/56fb506cb6765.png\" alt=\"\"></center>\n\n<p>F由于秩为2的限制可以以以下形式表示：</p>\n<p>F=αF1+(1-α)F2.其中，F1和F2分别Fx=0的两个解。</p>\n<p>由于秩=2，因此det(F=αF1+(1-α)F2)=0,通过该式即可求出α的值。</p>\n<p>更多内容可以看计算机视觉Trifocal tensor三角点张量的部分。</p>\n<p>Caution!</p>\n<p>对图像进行匹配的一个重要步骤就是把两幅图像的极线平行于基线，使得极点处在正无穷，这样的拼接结果效果才能更好。这一重要步骤即为重投影。如下图将黑线投影为蓝线。</p>\n<center><img src=\"https://ooo.0o0.ooo/2016/02/29/56d3f1e8a7005.png\" alt=\"\"></center>\n\n<p>对图像进行矫正。需要一个单映矩阵，作两步旋转。其第一步是将极点旋转到无穷远，第二部是将极线平行。其中，左右图像均需要应用该单映聚阵R将极点无穷远化；而右图像需要应用旋转矩阵（E=RS中的R）。最后比例一致化。</p>\n<p>上文中需要构造的矫正矩阵形式为：</p>\n<center><img src=\"https://ooo.0o0.ooo/2016/02/29/56d3f5a8ace5f.png\" alt=\"\"></center>\n\n<p>T是单位矩阵，代表左图的极点，可由E计算。其余的参数：</p>\n<center><img src=\"https://ooo.0o0.ooo/2016/02/29/56d3f66d34abd.png\" alt=\"\"></center>\n\n<p>整理一下步骤即为：</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/29/56d3f7afcf9ce.png\" alt=\"\"></center>\n\n<p>下图即为矫正的例子（两幅图的变化很小，但是从边缘还是可以看到细微的变化），最后把图像的极点都化为无穷远，两幅图基于基线平行。</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/29/56d3f7745f920.png\" alt=\"\"></center>\n\n<hr>\n<h1 id=\"3-第二个矩阵-Homography（单映）矩阵\"><a href=\"#3-第二个矩阵-Homography（单映）矩阵\" class=\"headerlink\" title=\" 3. 第二个矩阵 Homography（单映）矩阵\"></a><strong> 3. 第二个矩阵 Homography（单映）矩阵</strong></h1><p>findhomography的前提是2D的转换，本意为单映（包含平移、仿射、尺度三种变换），试图找到一个3*3的投影矩阵，能够把1图中所有的点，通过某种形变，匹配到2图中去。当基线很小的时候(视差变化小，扭曲形变也少)，这个方法能够计算出精度极高的解。<br>当然可以首先参考opencv的<a href=\"http://docs.opencv.org/2.4/modules/calib3d/doc/camera_calibration_and_3d_reconstruction.html?highlight=findhomography\">文档</a> 这里首先介绍二维映射的单映（homography）矩阵</p>\n<center><img src=\"https://ooo.0o0.ooo/2016/01/23/56a3baf462830.png\" alt=\"\"></center>\n\n<p>该式反应了像点齐次坐标的单映变换的方程。（u v）(u’ v’)分别是左右图像的同名像点坐标。通过一个8个自由度的矩阵P来解算两者之间的关系。p02 p12与平移相关，p00,p01,p10,p11与旋转 尺度和仿射（平行变换）变换有关，p20,p21与拉伸扭曲有关。</p>\n<p>一般的，单映矩阵的计算由以下几个参数构成</p>\n<center><img src=\"https://ooo.0o0.ooo/2016/01/23/56a3bf63f1be0.png\" alt=\"\"></center>\n\n<p>其中，K是相机的内矩阵，由焦距决定；R是主光轴朝向，一般由3个方向余弦决定；C是摄影中心的物方位置。当在原地旋转时，C1-C2为0，因此方程可简化为</p>\n<center><img src=\"https://ooo.0o0.ooo/2016/01/23/56a3c1dd3035a.png\" alt=\"\"></center>\n\n<p>由相机纯粹旋转而形成的单映，自由度3-5（根据是否已知焦距决定）。</p>\n<p>Caution！应该注意到的是，上式中的H3*3矩阵的最后一个元素为1。这里使用到的是计算H矩阵最常用的一种方法，4点算法，即使用4个点即可解算一组H中的8个未知数。在ransac验证外点的过程中，也采用随机4点为一组构建8个方程解算H。</p>\n<p>尽管homography是处理二维点集之间的关系，但倘若三维物体中某些点都处于一个平面，即可设该面的z方向值为0，以三维物方xy值作为像素值与所成像片进行homography的变换。</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/24/56ce6ba16113c.png\" alt=\"\"></center>\n\n<p>上图是几种坐标系之间的关系，Mext是外参数矩阵，包含旋转和平移；Mproj是投影矩阵，主要由焦距决定，原理是共线方程；Maff是内参数仿射变换矩阵，由内参数决定。普通的homography是两幅图像像素坐标间或相片坐标间的变换，但上文提到，当三维物体某些点处于一个平面，亦可在World坐标和Film坐标之间进行homography矩阵变换。</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/24/56ce6cd71fc88.png\" alt=\"\"></center>\n\n<p>上图可以看到，将三维坐标点z值设为0，[p,q,0,1]即为三维齐次坐标。</p>\n<p>$$ \\begin{bmatrix} x \\\\ y \\\\ 1<br>\\end{bmatrix} \\sim \\begin{bmatrix} f &amp; 0 &amp; 0 &amp; 0 \\\\ 0 &amp; f &amp; 0 &amp; 0 \\\\ 0 &amp; 0 &amp; 1 &amp; 0 \\end{bmatrix} \\begin{bmatrix} r_11 &amp; r_12 &amp; r_13 &amp; t_x \\\\ r_21 &amp; r_22 &amp; r_23 &amp; t_y \\\\ r_31 &amp; r_32&amp; r_33 &amp; t_z \\\\ 0 &amp; 0 &amp; 0 &amp; 1 \\end{bmatrix} \\begin{bmatrix} p \\\\ q \\\\ 0 \\\\ 1 \\end{bmatrix} \\sim \\begin{bmatrix} fr_11 &amp; fr_12 &amp; ft_x \\\\ fr_21 &amp; fr_22 &amp; ft_y \\\\ r_31 &amp; r_32 &amp; t_z \\end{bmatrix} \\begin{bmatrix} p \\\\ q \\\\ 1 \\end{bmatrix}<br>$$$$\\sim \\begin{bmatrix} h_11 &amp; h_12&amp;h_13 \\\\ h_21 &amp; h_22 &amp; h_23 \\\\ h_31 &amp; h_32 &amp; h_33 \\end{bmatrix} \\begin{bmatrix} p \\\\ q \\\\ 1 \\end{bmatrix}$$<br>最终推到出，3D转2D的投影变换成为2D转2D的变换，该变化可逆！其特例是，当采用的物方坐标系z轴与主光轴平行，即正射影像，则上式R矩阵为</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/24/56ce7aab1b305.png\" alt=\"\"></center>\n\n<p>则上式变形为：</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/24/56ce7b0376427.png\" alt=\"\"></center>\n\n<p>该式与相似变换的形式一样，只有4个自由度（tz可化为1），因而正射影像不会产生拉伸形变。（前提是拍摄物体几乎没有深度，几乎处在一个平面）。下图是依照三维中某平面进行拼接，会造成除平面部分其余图像的虚影。</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/25/56cf114fc872a.png\" alt=\"\"></center>\n\n<center><img src=\"http://ooo.0o0.ooo/2016/02/25/56cf117891dbb.png\" alt=\"\"></center>\n\n<p>上文中一直讨论的是从物方坐标系到像片坐标系的转换，倘若再加上内方位参数的内矩阵，则可直接导出从物方坐标到像素坐标的公式，如下图示意。内方位参数为仿射变换（Affine 6自由度 保持平行结构的变换）</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/25/56ceb1181fa03.png\" alt=\"\"></center>\n\n<p>将world-&gt;film-&gt;pixel结合起来，对于同一个物体，在某位置某台相机拍摄的照片就可以认为是一个单映H。当然，不同的位置拍摄的像片，各自对应物体的单映是不同的。但由于单映是可逆的，拍摄同一物体的两幅图像，也可以用使用$$H=H<em>{1}H</em>{2}^{-1}$$</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/25/56ceb83e89a7b.png\" alt=\"\"><img src=\"http://ooo.0o0.ooo/2016/02/25/56cebcef9abd7.png\" alt=\"\"></center>\n\n<hr>\n<h1 id=\"4-Homography（单映）矩阵的求取\"><a href=\"#4-Homography（单映）矩阵的求取\" class=\"headerlink\" title=\" 4. Homography（单映）矩阵的求取\"></a><strong> 4. Homography（单映）矩阵的求取</strong></h1><p>参考<a href=\"http://www.robots.ox.ac.uk/~vgg/presentations/bmvc97/criminispaper/node3.html\">这里</a>  只要大于4个匹配点，都认为是冗余测量，必须融合数据。文章里提到了三种解求二维面到面的单应矩阵的球法。</p>\n<ul>\n<li>非线性的解决办法，使用伪逆进行分解。当所解求值为0时会有bug。</li>\n<li>线性最小二乘解法，通常使用SVD分解，V矩阵就对应了最小奇异值。<a href=\"http://blog.chinaunix.net/uid-20761674-id-4040274.html\">这个SVD的文章</a>相当好的解释了SVD分解的意义。八个未知数对应八个特征向量，也对应八个线性方程的解。SVD能直接解求出这八个向量，即V中的特征向量。</li>\n<li>非线性几何解法，使对应点和映射点差值欧几里得距离（或平方和）最小。</li>\n</ul>\n<p>Homograhy的计算：计算该矩阵当然不会上式f θ等值直接解算。由于是二维图像之间的关系，一般都已知二维对应点集，直接采用最小二乘的方式使用LM进行计算。在一般情况下的H矩阵可表示为</p>\n<p>$$ \\begin{bmatrix} x^{‘} \\\\ y^{‘} \\\\ 1 \\end{bmatrix} \\sim \\begin{bmatrix} h_11 &amp; h_12 &amp; h_13 \\\\ h_21 &amp; h_22 &amp; h_23 \\\\ h_31 &amp; h_32 &amp; h_33 \\end{bmatrix} \\begin{bmatrix} x \\\\ y \\\\ 1 \\end{bmatrix}$$</p>\n<p>其中，$h_31 h_32 h_33$是为了配置相似比例，化简为</p>\n<p>$$x^{‘}=\\frac{h_11 x + h_12 y + h_13 }{ h_31 x + h_32 y + h_33 }$$</p>\n<p>$$y^{‘}=\\frac{h_21 \\cdot x + h_22 y + h_23 }{ h_31 x + h_32 y + h_33 }$$</p>\n<p>但可以看到，h所有元素同乘k 等式依旧成立。因而强制设为8自由度有两种方式，</p>\n<p>①$$ h_{33} = 1 $$</p>\n<p>②$ h<em>{11}\\^{2} + h</em>{12}\\^{2} = 1 $<br>采用第一种方式较为常见。<br>当采用最小二乘解求H矩阵时，一般先用Ransac筛选最大集，然后利用下方程。</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/25/56cf041a7c664.png\" alt=\"\"></center>\n\n<p>以x y x’y’为A b矩阵参数，迭代解求H。由于是线性方程，因而可以直接使用$$h=(A^{T}A)^{-1}(A^{T}b)$$求取每次的残差。</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/25/56cf051be79bc.png\" alt=\"\"></center>\n\n<p>&lt;font color=”#ff0000”&gt;Caution！应该注意到的是，该方法对噪声极其敏感，即使没有外点（outliers）,因而，在计算前对数据里筛选就非常重要。为更好的得到结果，Ransac时可以将该组数据质心重置到原点；然后缩放比例使得各点到原点的平均距离是根号二。如下图，H的表达式。T、S分别为平移和缩放的矩阵。</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/25/56cf08c613352.png\" alt=\"\"></center>\n\n<p>如何判断这两幅图像确实匹配呢？记该区域的特征点总数为nf，而符合H的特征点（内点）数量为nj，如果两者比例足够大，说明两幅图像确实匹配。但一般拼接时都确认两幅图像有重叠面积才计算H。变换模型H计算时的误差可表述为Huber模型：</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/25/56cf0b53675d9.png\" alt=\"\"></center>\n\n<p>同时，由于矩阵具有可逆性，因此图像12之间的H1和图像23之间的H2可以直接推导出图像13之间的H3。但大量的单映队列并不推荐，这样会造成误差成倍扩大。</p>\n<center><img src=\"http://ooo.0o0.ooo/2016/02/25/56cf0eb50a41b.png\" alt=\"\"></center>\n\n<p><strong> 谨记二 </strong>：homography处理的是纯粹的二维与二维之间的变换。即便特例是3D也是视为在2D的单映和相似变换。在旋转相机和正射拼接可以得到良好的二维拼接效果，在具有深度的三维物体，拼接会造成虚影！</p>\n<hr>\n<p>这两个函数都是基于特征点的变换模型求解，既然特征点已找出且筛查得到更正确的点，因此对图像外观的变化具有鲁棒性（尺度、光照、旋转等）。选择哪种函数基于图像间的关系，即立体场的观测使用fundamentalmatrix（视角矫正 三维全景 街景视角）,而相对平面化的则使用findhomography（全景拼接  航摄图像拼接 ）</p>\n<p>解求这个变换模型一般基于线性最小二乘的方式，与平差原理类似，利用冗余的数据（大量同名点）来解算参数。一般的，先通过Ransac筛查数据比较靠谱。</p>\n<h1 id=\"谨记三：\"><a href=\"#谨记三：\" class=\"headerlink\" title=\"** 谨记三：\"></a>** 谨记三：</h1><p>homography 单映处理二维坐标系与二维坐标系关系，特例情况下是三维物体某平面可视为二维平面。更特例的是正射影像（相似变换）和旋转摄影全景拼接（C1-C2=0）（处理对应点集与点集的关系）矩阵可逆，具有结合性。</p>\n<p>fundamental针对的是点和极线的关系（处理点集与极线集的关系），可用来在寻找匹配点的时候快速查找对应点。（以像素为坐标系）</p>\n<p>essential 本质是连结同名点向量的矩阵（以像空系为标准）</p>\n<p>参考。</p>\n<p><a href=\"http://blog.csdn.net/u010141025/article/details/16920567\">【opencv】特征点检测方法–GFTT，SIFT，FAST，SURF</a> </p>\n<p><a href=\"http://www.cse.psu.edu/~rtc12/CSE486/\" title=\"http://www.cse.psu.edu/~rtc12/CSE486/\">http://www.cse.psu.edu/~rtc12/CSE486/</a> 宾州州立大学计算机视觉</p>\n<p><a href=\"http://opencv-users.1802565.n2.nabble.com/Difference-between-homography-and-fundamental-matrix-td6359087.html\" title=\"http://opencv-users.1802565.n2.nabble.com/Difference-between-homography-and-fundamental-matrix-td6359087.html\">http://opencv-users.1802565.n2.nabble.com/Difference-between-homography-and-fundamental-matrix-td6359087.html</a> homography and fundamental matrix的讨论</p>\n<p><a href=\"http://homepages.inf.ed.ac.uk/rbf/CVonline/\" title=\"http://homepages.inf.ed.ac.uk/rbf/CVonline/\">http://homepages.inf.ed.ac.uk/rbf/CVonline/</a> 爱丁堡大学计算机视觉在线课件</p>\n<p><a href=\"https://www.robots.ox.ac.uk/~vgg/hzbook/hzbook2/HZepipolar.pdf\" title=\"https://www.robots.ox.ac.uk/~vgg/hzbook/hzbook2/HZepipolar.pdf\">https://www.robots.ox.ac.uk/~vgg/hzbook/hzbook2/HZepipolar.pdf</a> 牛津大学计算机视觉中的多视几何</p>\n<p><a href=\"http://120.52.72.36/www.umiacs.umd.edu/c3pr90ntcsf0/~ramani/cmsc828d/lecture27.pdf\" title=\"http://120.52.72.36/www.umiacs.umd.edu/c3pr90ntcsf0/~ramani/cmsc828d/lecture27.pdf\">http://120.52.72.36/www.umiacs.umd.edu/c3pr90ntcsf0/~ramani/cmsc828d/lecture27.pdf</a></p>\n<p>马里兰大学高级计算机研究</p>\n<p><a href=\"http://www.cnblogs.com/gemstone/articles/2294551.html\" title=\"http://www.cnblogs.com/gemstone/articles/2294551.html\">http://www.cnblogs.com/gemstone/articles/2294551.html</a></p>\n<p><a href=\"http://imagine.enpc.fr/~monasse/Stereo/4Fundamental.pdf\" title=\"http://imagine.enpc.fr/~monasse/Stereo/4Fundamental.pdf\">http://imagine.enpc.fr/~monasse/Stereo/4Fundamental.pdf</a> 法国国立桥梁与公路学校Ecole Nationale des Ponts et Chaesses计算机视觉和图像</p>"},{"title":"POY!!!!!!!!!!!!!!!!!!!!!!!!!!","id":"420","date":"2013-11-29T05:56:38.000Z","_content":"\n![poy和辉哥](http://i1061.photobucket.com/albums/t476/ov_beeshoot/44c8bba490815f271611d57735dbc003.jpg)","source":"_posts/poy.md","raw":"---\ntitle: 'POY!!!!!!!!!!!!!!!!!!!!!!!!!!'\ncategories:\n  - 槽\nid: 420\ndate: 2013-11-29 13:56:38\ntags:\n---\n\n![poy和辉哥](http://i1061.photobucket.com/albums/t476/ov_beeshoot/44c8bba490815f271611d57735dbc003.jpg)","slug":"poy","published":1,"updated":"2016-04-11T14:09:45.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7o4003ouco4s4shzanv","content":"<p><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/44c8bba490815f271611d57735dbc003.jpg\" alt=\"poy和辉哥\"></p>","excerpt":"","more":"<p><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/44c8bba490815f271611d57735dbc003.jpg\" alt=\"poy和辉哥\"></p>"},{"title":"记录一次心酸而无终的悲催却又惊喜的python添加sift类库过程","id":"580","date":"2015-05-12T09:17:45.000Z","_content":"\n基于上回对Harris的角点检测和匹配的过程，试想这学习一下另一种角点检测和匹配算法sift.\n在《Python计算机视觉》书中，由于Python实现所有步骤的效率并不是很高，提到了VLFeat工具进行SIFT兴趣点的检测。\n\n好的，那就去[官网](http://www.vlfeat.org/)找。它明确写着Windows Mac Linux都可用。太好了。但是主要提供的是c 和 MATLAB 的api，在python中只能利用shell进行接口的调用。将目录下的\\bin\\arch\\sift.exe 添加到path环境路径，就能在cmd控制台使用shell。可是测试了几次，依据[例子](http://www.vlfeat.org/man/sift.html#EXAMPLES)或者普林斯顿的[抄袭版本](http://vision.cs.princeton.edu/pvt/SiftFu/SiftFu/SIFTransac/vlfeat/doc/man/sift.html)，都只能打开可视化的界面，不能输入需要的.sift或者frame图像。\n\n好吧换个方案，听说Python有一个包装器。找到了供github下的[pyhton wrappers主页](https://github.com/mmmikael/vlfeat/tree/python-wrappers/python)（居然是寄生在MATLAB的插件下面）可是。。可是。在它的readme发现只能在linux和Mac OX使用。。书中亦提到包装器的安装需要非常高的技巧。好吧放弃。\n\n再次寻找。发现一个python官网提供的一个[python插件](https://pypi.python.org/pypi/pyvlfeat)。直接可以利用setup.py insatll进行安装。好了进行安装\n\n<pre class=\"brush: shell; gutter: true\">python setup.py install\n</pre>\n\n居然出现了bug\n\n<pre class=\"brush: shell; gutter: true\">Unable to find vcvarsall.bat\n</pre>\n\n找到一些[讨论](http://stackoverflow.com/questions/2817869/error-unable-to-find-vcvarsall-bat)，大家都说是要安MinGW，找到它的官网，[这个](http://sourceforge.net/projects/mingw/files/Installer/)看起来不错。默认选择了安装路径，又安装了一堆.bin 的类库。输入\n\n<pre class=\"brush: shell; gutter: true\">setup.py install build --compiler=mingw32\n</pre>\n\n又出现了bug\n\n<pre class=\"brush: shell; gutter: true\">error: numpy/arrayobject.h: No such file or directory\n</pre>\n\n日了狗了。在[这里](http://stackoverflow.com/questions/14657375/cython-fatal-error-numpy-arrayobject-h-no-such-file-or-directory)说需要加点什么路径，然后又在[这里](http://stackoverflow.com/questions/14657375/cython-fatal-error-numpy-arrayobject-h-no-such-file-or-directory)发现了说是它的mingw已经很旧了不太能匹配新的版本的软件了。可以找到一个[非官方版本](https://github.com/develersrl/gccwinbinaries)。\n\n好吧。开心的安上。再一次安了gcc等一系列乱七八糟的bin库。然后执行。。。shit。又是bug arraypobjects.h又找不到。。\n\n好吧超出了我的技能点了。顺带在半路还捡到一个非官方的python类库，叫做[unofficial windows binaries for python extention package](http://www.lfd.uci.edu/~gohlke/pythonlibs/)\n..\n\n正在绝望之时。。居然在csdn发现了这本书的[源代码](http://download.csdn.net/detail/shidecai1230/8255391#comment)oh wtf。居然它的自带vlfeat能用。好吧到此结束了。直接用命令行好了。py中利用\n\n<pre class=\"brush: python; gutter: true\">os.system(&#039;cmd&#039;)</pre>\n\n使用命令行进行编写。","source":"_posts/sift-with-python.md","raw":"---\ntitle: 记录一次心酸而无终的悲催却又惊喜的python添加sift类库过程\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - python\nid: 580\ndate: 2015-05-12 17:17:45\n---\n\n基于上回对Harris的角点检测和匹配的过程，试想这学习一下另一种角点检测和匹配算法sift.\n在《Python计算机视觉》书中，由于Python实现所有步骤的效率并不是很高，提到了VLFeat工具进行SIFT兴趣点的检测。\n\n好的，那就去[官网](http://www.vlfeat.org/)找。它明确写着Windows Mac Linux都可用。太好了。但是主要提供的是c 和 MATLAB 的api，在python中只能利用shell进行接口的调用。将目录下的\\bin\\arch\\sift.exe 添加到path环境路径，就能在cmd控制台使用shell。可是测试了几次，依据[例子](http://www.vlfeat.org/man/sift.html#EXAMPLES)或者普林斯顿的[抄袭版本](http://vision.cs.princeton.edu/pvt/SiftFu/SiftFu/SIFTransac/vlfeat/doc/man/sift.html)，都只能打开可视化的界面，不能输入需要的.sift或者frame图像。\n\n好吧换个方案，听说Python有一个包装器。找到了供github下的[pyhton wrappers主页](https://github.com/mmmikael/vlfeat/tree/python-wrappers/python)（居然是寄生在MATLAB的插件下面）可是。。可是。在它的readme发现只能在linux和Mac OX使用。。书中亦提到包装器的安装需要非常高的技巧。好吧放弃。\n\n再次寻找。发现一个python官网提供的一个[python插件](https://pypi.python.org/pypi/pyvlfeat)。直接可以利用setup.py insatll进行安装。好了进行安装\n\n<pre class=\"brush: shell; gutter: true\">python setup.py install\n</pre>\n\n居然出现了bug\n\n<pre class=\"brush: shell; gutter: true\">Unable to find vcvarsall.bat\n</pre>\n\n找到一些[讨论](http://stackoverflow.com/questions/2817869/error-unable-to-find-vcvarsall-bat)，大家都说是要安MinGW，找到它的官网，[这个](http://sourceforge.net/projects/mingw/files/Installer/)看起来不错。默认选择了安装路径，又安装了一堆.bin 的类库。输入\n\n<pre class=\"brush: shell; gutter: true\">setup.py install build --compiler=mingw32\n</pre>\n\n又出现了bug\n\n<pre class=\"brush: shell; gutter: true\">error: numpy/arrayobject.h: No such file or directory\n</pre>\n\n日了狗了。在[这里](http://stackoverflow.com/questions/14657375/cython-fatal-error-numpy-arrayobject-h-no-such-file-or-directory)说需要加点什么路径，然后又在[这里](http://stackoverflow.com/questions/14657375/cython-fatal-error-numpy-arrayobject-h-no-such-file-or-directory)发现了说是它的mingw已经很旧了不太能匹配新的版本的软件了。可以找到一个[非官方版本](https://github.com/develersrl/gccwinbinaries)。\n\n好吧。开心的安上。再一次安了gcc等一系列乱七八糟的bin库。然后执行。。。shit。又是bug arraypobjects.h又找不到。。\n\n好吧超出了我的技能点了。顺带在半路还捡到一个非官方的python类库，叫做[unofficial windows binaries for python extention package](http://www.lfd.uci.edu/~gohlke/pythonlibs/)\n..\n\n正在绝望之时。。居然在csdn发现了这本书的[源代码](http://download.csdn.net/detail/shidecai1230/8255391#comment)oh wtf。居然它的自带vlfeat能用。好吧到此结束了。直接用命令行好了。py中利用\n\n<pre class=\"brush: python; gutter: true\">os.system(&#039;cmd&#039;)</pre>\n\n使用命令行进行编写。","slug":"sift-with-python","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7o6003ruco4popwxr5a","content":"<p>基于上回对Harris的角点检测和匹配的过程，试想这学习一下另一种角点检测和匹配算法sift.<br>在《Python计算机视觉》书中，由于Python实现所有步骤的效率并不是很高，提到了VLFeat工具进行SIFT兴趣点的检测。</p>\n<p>好的，那就去<a href=\"http://www.vlfeat.org/\" target=\"_blank\" rel=\"external\">官网</a>找。它明确写着Windows Mac Linux都可用。太好了。但是主要提供的是c 和 MATLAB 的api，在python中只能利用shell进行接口的调用。将目录下的\\bin\\arch\\sift.exe 添加到path环境路径，就能在cmd控制台使用shell。可是测试了几次，依据<a href=\"http://www.vlfeat.org/man/sift.html#EXAMPLES\" target=\"_blank\" rel=\"external\">例子</a>或者普林斯顿的<a href=\"http://vision.cs.princeton.edu/pvt/SiftFu/SiftFu/SIFTransac/vlfeat/doc/man/sift.html\" target=\"_blank\" rel=\"external\">抄袭版本</a>，都只能打开可视化的界面，不能输入需要的.sift或者frame图像。</p>\n<p>好吧换个方案，听说Python有一个包装器。找到了供github下的<a href=\"https://github.com/mmmikael/vlfeat/tree/python-wrappers/python\" target=\"_blank\" rel=\"external\">pyhton wrappers主页</a>（居然是寄生在MATLAB的插件下面）可是。。可是。在它的readme发现只能在linux和Mac OX使用。。书中亦提到包装器的安装需要非常高的技巧。好吧放弃。</p>\n<p>再次寻找。发现一个python官网提供的一个<a href=\"https://pypi.python.org/pypi/pyvlfeat\" target=\"_blank\" rel=\"external\">python插件</a>。直接可以利用setup.py insatll进行安装。好了进行安装</p>\n<pre class=\"brush: shell; gutter: true\">python setup.py install\n</pre>\n\n<p>居然出现了bug</p>\n<pre class=\"brush: shell; gutter: true\">Unable to find vcvarsall.bat\n</pre>\n\n<p>找到一些<a href=\"http://stackoverflow.com/questions/2817869/error-unable-to-find-vcvarsall-bat\" target=\"_blank\" rel=\"external\">讨论</a>，大家都说是要安MinGW，找到它的官网，<a href=\"http://sourceforge.net/projects/mingw/files/Installer/\" target=\"_blank\" rel=\"external\">这个</a>看起来不错。默认选择了安装路径，又安装了一堆.bin 的类库。输入</p>\n<pre class=\"brush: shell; gutter: true\">setup.py install build --compiler=mingw32\n</pre>\n\n<p>又出现了bug</p>\n<pre class=\"brush: shell; gutter: true\">error: numpy/arrayobject.h: No such file or directory\n</pre>\n\n<p>日了狗了。在<a href=\"http://stackoverflow.com/questions/14657375/cython-fatal-error-numpy-arrayobject-h-no-such-file-or-directory\" target=\"_blank\" rel=\"external\">这里</a>说需要加点什么路径，然后又在<a href=\"http://stackoverflow.com/questions/14657375/cython-fatal-error-numpy-arrayobject-h-no-such-file-or-directory\" target=\"_blank\" rel=\"external\">这里</a>发现了说是它的mingw已经很旧了不太能匹配新的版本的软件了。可以找到一个<a href=\"https://github.com/develersrl/gccwinbinaries\" target=\"_blank\" rel=\"external\">非官方版本</a>。</p>\n<p>好吧。开心的安上。再一次安了gcc等一系列乱七八糟的bin库。然后执行。。。shit。又是bug arraypobjects.h又找不到。。</p>\n<p>好吧超出了我的技能点了。顺带在半路还捡到一个非官方的python类库，叫做<a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/\" target=\"_blank\" rel=\"external\">unofficial windows binaries for python extention package</a><br>..</p>\n<p>正在绝望之时。。居然在csdn发现了这本书的<a href=\"http://download.csdn.net/detail/shidecai1230/8255391#comment\" target=\"_blank\" rel=\"external\">源代码</a>oh wtf。居然它的自带vlfeat能用。好吧到此结束了。直接用命令行好了。py中利用</p>\n<pre class=\"brush: python; gutter: true\">os.system(&#039;cmd&#039;)</pre>\n\n<p>使用命令行进行编写。</p>","excerpt":"","more":"<p>基于上回对Harris的角点检测和匹配的过程，试想这学习一下另一种角点检测和匹配算法sift.<br>在《Python计算机视觉》书中，由于Python实现所有步骤的效率并不是很高，提到了VLFeat工具进行SIFT兴趣点的检测。</p>\n<p>好的，那就去<a href=\"http://www.vlfeat.org/\">官网</a>找。它明确写着Windows Mac Linux都可用。太好了。但是主要提供的是c 和 MATLAB 的api，在python中只能利用shell进行接口的调用。将目录下的\\bin\\arch\\sift.exe 添加到path环境路径，就能在cmd控制台使用shell。可是测试了几次，依据<a href=\"http://www.vlfeat.org/man/sift.html#EXAMPLES\">例子</a>或者普林斯顿的<a href=\"http://vision.cs.princeton.edu/pvt/SiftFu/SiftFu/SIFTransac/vlfeat/doc/man/sift.html\">抄袭版本</a>，都只能打开可视化的界面，不能输入需要的.sift或者frame图像。</p>\n<p>好吧换个方案，听说Python有一个包装器。找到了供github下的<a href=\"https://github.com/mmmikael/vlfeat/tree/python-wrappers/python\">pyhton wrappers主页</a>（居然是寄生在MATLAB的插件下面）可是。。可是。在它的readme发现只能在linux和Mac OX使用。。书中亦提到包装器的安装需要非常高的技巧。好吧放弃。</p>\n<p>再次寻找。发现一个python官网提供的一个<a href=\"https://pypi.python.org/pypi/pyvlfeat\">python插件</a>。直接可以利用setup.py insatll进行安装。好了进行安装</p>\n<pre class=\"brush: shell; gutter: true\">python setup.py install\n</pre>\n\n<p>居然出现了bug</p>\n<pre class=\"brush: shell; gutter: true\">Unable to find vcvarsall.bat\n</pre>\n\n<p>找到一些<a href=\"http://stackoverflow.com/questions/2817869/error-unable-to-find-vcvarsall-bat\">讨论</a>，大家都说是要安MinGW，找到它的官网，<a href=\"http://sourceforge.net/projects/mingw/files/Installer/\">这个</a>看起来不错。默认选择了安装路径，又安装了一堆.bin 的类库。输入</p>\n<pre class=\"brush: shell; gutter: true\">setup.py install build --compiler=mingw32\n</pre>\n\n<p>又出现了bug</p>\n<pre class=\"brush: shell; gutter: true\">error: numpy/arrayobject.h: No such file or directory\n</pre>\n\n<p>日了狗了。在<a href=\"http://stackoverflow.com/questions/14657375/cython-fatal-error-numpy-arrayobject-h-no-such-file-or-directory\">这里</a>说需要加点什么路径，然后又在<a href=\"http://stackoverflow.com/questions/14657375/cython-fatal-error-numpy-arrayobject-h-no-such-file-or-directory\">这里</a>发现了说是它的mingw已经很旧了不太能匹配新的版本的软件了。可以找到一个<a href=\"https://github.com/develersrl/gccwinbinaries\">非官方版本</a>。</p>\n<p>好吧。开心的安上。再一次安了gcc等一系列乱七八糟的bin库。然后执行。。。shit。又是bug arraypobjects.h又找不到。。</p>\n<p>好吧超出了我的技能点了。顺带在半路还捡到一个非官方的python类库，叫做<a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/\">unofficial windows binaries for python extention package</a><br>..</p>\n<p>正在绝望之时。。居然在csdn发现了这本书的<a href=\"http://download.csdn.net/detail/shidecai1230/8255391#comment\">源代码</a>oh wtf。居然它的自带vlfeat能用。好吧到此结束了。直接用命令行好了。py中利用</p>\n<pre class=\"brush: python; gutter: true\">os.system(&#039;cmd&#039;)</pre>\n\n<p>使用命令行进行编写。</p>"},{"title":"so be better man?","id":"415","date":"2013-11-22T17:48:43.000Z","_content":"\n[caption id=\"\" align=\"aligncenter\" width=\"875\"][![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/20131122.png)](http://i1061.photobucket.com/albums/t476/ov_beeshoot/20131122.png) 海马20131122[/caption]","source":"_posts/so-be-better-man.md","raw":"---\ntitle: so be better man?\ncategories:\n  - 槽\ntags:\n  - 吐槽\nid: 415\ndate: 2013-11-23 01:48:43\n---\n\n[caption id=\"\" align=\"aligncenter\" width=\"875\"][![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/20131122.png)](http://i1061.photobucket.com/albums/t476/ov_beeshoot/20131122.png) 海马20131122[/caption]","slug":"so-be-better-man","published":1,"updated":"2016-04-11T14:09:45.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7o8003wuco4hd1cc2v7","content":"<p>[caption id=”” align=”aligncenter” width=”875”]<a href=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/20131122.png\" target=\"_blank\" rel=\"external\"><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/20131122.png\" alt=\"\"></a> 海马20131122[/caption]</p>","excerpt":"","more":"<p>[caption id=”” align=”aligncenter” width=”875”]<a href=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/20131122.png\"><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/20131122.png\" alt=\"\"></a> 海马20131122[/caption]</p>"},{"title":"svm初探","date":"2016-04-28T14:26:41.000Z","_content":"待更……","source":"_posts/svm初探.md","raw":"---\ntitle: svm初探\ndate: 2016-04-28 22:26:41\ntags:\n---\n待更……","slug":"svm初探","published":1,"updated":"2016-04-28T15:16:56.004Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7oo003yuco4umlof7ql","content":"<p>待更……</p>","excerpt":"","more":"<p>待更……</p>"},{"title":"targets by 07.2014","id":"392","date":"2013-11-08T15:32:56.000Z","_content":"\n1。数学140+。。。呵呵看我的。\n2。写一个人人的wp插件 这个必须完成\n3。腹肌。至少4块。。。\n4。撸一个考研视频的盗版网站或者app吧。。看情况。\n---------------------华丽的分割线-------------------------------\n1.算了。说说而已的嘛。。。股份370左右吧。。尼玛碧\n2.来来来！\n3.下学期开始。\n4.ing。","source":"_posts/targets-by-07-2014.md","raw":"---\ntitle: targets by 07.2014\ncategories:\n  - 槽\ntags:\n  - 考研\nid: 392\ndate: 2013-11-08 23:32:56\n---\n\n1。数学140+。。。呵呵看我的。\n2。写一个人人的wp插件 这个必须完成\n3。腹肌。至少4块。。。\n4。撸一个考研视频的盗版网站或者app吧。。看情况。\n---------------------华丽的分割线-------------------------------\n1.算了。说说而已的嘛。。。股份370左右吧。。尼玛碧\n2.来来来！\n3.下学期开始。\n4.ing。","slug":"targets-by-07-2014","published":1,"updated":"2016-04-11T14:09:45.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7ov0043uco4sytuuysp","content":"<p>1。数学140+。。。呵呵看我的。<br>2。写一个人人的wp插件 这个必须完成<br>3。腹肌。至少4块。。。<br>4。撸一个考研视频的盗版网站或者app吧。。看情况。<br>———————华丽的分割线——————————-<br>1.算了。说说而已的嘛。。。股份370左右吧。。尼玛碧<br>2.来来来！<br>3.下学期开始。<br>4.ing。</p>","excerpt":"","more":"<p>1。数学140+。。。呵呵看我的。<br>2。写一个人人的wp插件 这个必须完成<br>3。腹肌。至少4块。。。<br>4。撸一个考研视频的盗版网站或者app吧。。看情况。<br>———————华丽的分割线——————————-<br>1.算了。说说而已的嘛。。。股份370左右吧。。尼玛碧<br>2.来来来！<br>3.下学期开始。<br>4.ing。</p>"},{"title":"Time to fight!","id":"325","date":"2013-07-30T19:27:09.000Z","_content":"\n结束了。貌似还有钱发的样子。总算可以专心投入考研了。需要心平气和的做下去。莫浮躁！","source":"_posts/time-to-fight.md","raw":"---\ntitle: 'Time to fight!'\ncategories:\n  - 槽\ntags:\n  - 吐槽\n  - 考研\nid: 325\ndate: 2013-07-31 03:27:09\n---\n\n结束了。貌似还有钱发的样子。总算可以专心投入考研了。需要心平气和的做下去。莫浮躁！","slug":"time-to-fight","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7oy0046uco46ovbz0s2","content":"<p>结束了。貌似还有钱发的样子。总算可以专心投入考研了。需要心平气和的做下去。莫浮躁！</p>","excerpt":"","more":"<p>结束了。貌似还有钱发的样子。总算可以专心投入考研了。需要心平气和的做下去。莫浮躁！</p>"},{"title":"the miss next life","id":"426","date":"2013-11-29T15:44:53.000Z","_content":"\n[xiami id=\"374917\"]来生缘 -- 刘德华[/xiami] 说到心里了。","source":"_posts/the-miss-next-life.md","raw":"---\ntitle: the miss next life\ncategories:\n  - 槽\ntags:\n  - 我失恋了\nid: 426\ndate: 2013-11-29 23:44:53\n---\n\n[xiami id=\"374917\"]来生缘 -- 刘德华[/xiami] 说到心里了。","slug":"the-miss-next-life","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7p0004buco47qxpkiqe","content":"<p>[xiami id=”374917”]来生缘 – 刘德华[/xiami] 说到心里了。</p>","excerpt":"","more":"<p>[xiami id=”374917”]来生缘 – 刘德华[/xiami] 说到心里了。</p>"},{"title":"Top 10 Reasons to Root Your Android Phone","id":"331","date":"2013-08-11T01:29:04.000Z","_content":"\n[http://lifehacker.com/top-10-reasons-to-root-your-android-phone-1079161983](http://lifehacker.com/top-10-reasons-to-root-your-android-phone-1079161983)Top 10 Reasons to Root Your Android Phone","source":"_posts/top-10-reasons-to-root-your-android-phone.md","raw":"---\ntitle: Top 10 Reasons to Root Your Android Phone\ncategories:\n  - 什么都学一下\n  - 学习log\ntags:\n  - Android\n  - 马克\nid: 331\ndate: 2013-08-11 09:29:04\n---\n\n[http://lifehacker.com/top-10-reasons-to-root-your-android-phone-1079161983](http://lifehacker.com/top-10-reasons-to-root-your-android-phone-1079161983)Top 10 Reasons to Root Your Android Phone","slug":"top-10-reasons-to-root-your-android-phone","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7p3004euco4pc6rcly3","content":"<p><a href=\"http://lifehacker.com/top-10-reasons-to-root-your-android-phone-1079161983\" target=\"_blank\" rel=\"external\">http://lifehacker.com/top-10-reasons-to-root-your-android-phone-1079161983</a>Top 10 Reasons to Root Your Android Phone</p>","excerpt":"","more":"<p><a href=\"http://lifehacker.com/top-10-reasons-to-root-your-android-phone-1079161983\">http://lifehacker.com/top-10-reasons-to-root-your-android-phone-1079161983</a>Top 10 Reasons to Root Your Android Phone</p>"},{"title":"[汇总][2014.05.08]电脑与移动端及不同移动端间无线传输的方式","id":"473","date":"2014-05-08T17:17:30.000Z","_content":"\n1.猎豹wifi3.0 只需[电脑端](http://wifi.liebao.cn/)\n\n仅支持移动端向电脑端发图，移动端不限平台（还可支持遥控关机）。\n\n[caption id=\"\" align=\"aligncenter\" width=\"315\"]![](http://ww1.sinaimg.cn/large/005ygACVjw1eg7clynb5aj30hs0vk413.jpg) 遥控关机和传图到电脑[/caption]\n\n图片缓存到本地的C:\\Users\\<span style=\"color: #ff0000;\">**Username**</span>\\AppData\\Local\\Temp 可以另存和看原图\n\n[caption id=\"\" align=\"aligncenter\" width=\"312\"][![](http://ww4.sinaimg.cn/large/005ygACVjw1eg7ckyzg8cj308o06n74f.jpg)](http://ww4.sinaimg.cn/large/005ygACVjw1eg7ckyzg8cj308o06n74f.jpg) 小伙伴发来图片[/caption]\n\n特点：电脑端有可共享的有线网络，图片只能单次传输一张。速度极快。\n\n&nbsp;\n\n2.qq 同时需要移动端和电脑端登录qq\n\nqq电脑端：安装qq（应该都有安）\n\n![](http://ww4.sinaimg.cn/large/005ygACVjw1eg7ztlsd0ej306209o0t2.jpg) 点击企鹅主菜单：两个醒目的菜单（传文件到手机&amp;导出手机相册）\n\n&nbsp;\n\n[![](http://ww2.sinaimg.cn/large/005ygACVjw1eg8019egwxj30bc0eet97.jpg)](http://ww2.sinaimg.cn/large/005ygACVjw1eg8019egwxj30bc0eet97.jpg)\n\n传文件到手机，菜单里可以传输文件及截图到手机（最好保持手机端启动，否则可能收不到）\n\n![](http://ww2.sinaimg.cn/large/005ygACVjw1eg817q7wifj30hs0vkgo2.jpg) ![](http://ww1.sinaimg.cn/large/005ygACVjw1eg814da1fdj30hs0vk0uc.jpg) ![](http://ww2.sinaimg.cn/large/005ygACVjw1eg818n3bifj30hs0vkdho.jpg)\n\n手机端会收到一个来自移动端的消息，如果是图片、文字、音频会立即下载并显示或播放，如果是其他文件会等待用户下载。\n\n同样的，手机端在主界面-动态醒目位置可以看到传文件/照片到电脑的功能，电脑端在同样的窗口接收到文件。\n\n特点：同时安装有电脑端和移动端的qq，并分别同时能连上互联网，能单次传输多张照片、多个文件，兼容性好。速度中等。\n\n&nbsp;\n\n3 茄子快传 [电脑端&amp;移动端](http://kc.lenovo.com/) ：快牙是最近兴起的互传客户端，原因也众所周知，请了n多女优一起打广告啦。\n\n[![](http://a4.mzstatic.com/us/r30/Purple4/v4/e1/c0/8d/e1c08dca-fc92-982f-bef4-11906db0263f/screen568x568.jpeg)\n](http://kc.lenovo.com/)[移动端互传faq](http://kc.lenovo.com/faq.html) ：支持传输移动端应用程序额（Android，暂缺iOS版），支持1对多互传，支持无wifi无网络传输。利用点对点的热点进行连接。\n\n![](http://kc.lenovo.com/anyshare_help/help1.jpg)\n\n[电脑客户端连接移动端&amp;电脑客户端faq](http://kc.lenovo.com/pc-faq.html)  ：支持多种格式文件传输，支持多文件同时传输，支持传输到移动端和电脑端，支持无wifi无互联网传输。利用笔记本热点共享传输数据。需停止共享网络及一切使用移动网卡的行为。\n\n特点：速度奇快，支持所有端所有文件类型的传输，需同时装有客户端。\n\n&nbsp;\n\n4.快牙 [电脑端移动端](http://www.kuaiya.cn/) android平台最最早的互传应用。最早实现android和iOS互通的互传软件。\n\n功能与茄子类似，使用环境非常便利。\n\n电脑与手机端的使用环境\n\n![](http://ww2.sinaimg.cn/large/005ygACVjw1eg83avw6wsj30fi04dgm2.jpg)\n\n&nbsp;\n\n电脑之间互传的使用环境\n\n![](http://ww4.sinaimg.cn/large/005ygACVjw1eg83bc1fd6j30bx08ogmi.jpg)\n\n同一wifi环境或者连接电脑或手机建立的热点均可以快捷的传输，利用的就是局域网内文件互传的原理。\n\n特点:与茄子同类型同特点的软件，传输条件要求低，速度快，起步早，可传输移动端内的应用，安装包小，技术成熟。\n\n&nbsp;\n\n5.网盘共享 （百度网盘 金山快盘 360网盘 新浪网盘 华为网盘 qq微云 onedrive dropbox googledrive）[尤其对大文件、视频、音频]\n\n利用不同网盘客户端 上传下载的功能进行文件传输。\n\n特点：速度在教育网络的时候，上传下载都极其快，但是条件苛刻，流程有些繁琐。\n\n附：百度网盘内置了闪电快传的新功能，原理和茄子快牙类似，可登录同一账号进行不同客户端之间的传输，搜索客户端的效率有些低。没有传输到电脑的功能。\n\n&nbsp;\n\n6.笔记共享（印象笔记，随笔记，网易云笔记）[针对网页、文字段落、手写笔记等]\n\n对网页、文章、列表等的copy和手记摘要的同步较迅速，尤其是印象笔记的chrome插件有非常大的优势 。\n\n![](http://ww2.sinaimg.cn/large/005ygACVjw1eg83n8mf54j304l0a9gls.jpg)印象笔记的极为便利的网页摘抄。\n\n特点：针对文字同步，对有排版，需要按照原文格式传输的文件方便。需要安装较大的移动端安装包，电脑端在网页同步。\n\n7。UC\n\n浏览器附带的功能是为了便利标签页，书签，保存的网页等特殊格式的同步和传输。\n\n![](http://ww4.sinaimg.cn/large/005ygACVjw1eg83ulxllij30hs0vk40y.jpg)\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n![](http://ww1.sinaimg.cn/large/005ygACVjw1eg83xd8rjkj30a606ngls.jpg)\n\n&nbsp;\n\n特点：支持浏览器和不同移动端网页的书签、标签页同步，电脑无需客户端，移动端需要安装uc浏览器。\n\n此外，android端的UC浏览器还嵌入了插件功能，下载文件分享助手的插件，可以将本地任意文件或分类好的不同格式文件进行共wifi传输。电脑端无须软件，浏览器输入地址即可。共享速度可达600kb/s.\n\n[caption id=\"\" align=\"aligncenter\" width=\"214\"][![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/65E068079898.png)](http://i1061.photobucket.com/albums/t476/ov_beeshoot/65E068079898.png) 秒速600+[/caption]\n\n@转载注明原文地址。","source":"_posts/trans-between-pc-and-phone.md","raw":"---\ntitle: '[汇总][2014.05.08]电脑与移动端及不同移动端间无线传输的方式'\ncategories:\n  - 软件测评\n  - 软文\ntags:\n  - 无线传输\n  - 测评\nid: 473\ndate: 2014-05-09 01:17:30\n---\n\n1.猎豹wifi3.0 只需[电脑端](http://wifi.liebao.cn/)\n\n仅支持移动端向电脑端发图，移动端不限平台（还可支持遥控关机）。\n\n[caption id=\"\" align=\"aligncenter\" width=\"315\"]![](http://ww1.sinaimg.cn/large/005ygACVjw1eg7clynb5aj30hs0vk413.jpg) 遥控关机和传图到电脑[/caption]\n\n图片缓存到本地的C:\\Users\\<span style=\"color: #ff0000;\">**Username**</span>\\AppData\\Local\\Temp 可以另存和看原图\n\n[caption id=\"\" align=\"aligncenter\" width=\"312\"][![](http://ww4.sinaimg.cn/large/005ygACVjw1eg7ckyzg8cj308o06n74f.jpg)](http://ww4.sinaimg.cn/large/005ygACVjw1eg7ckyzg8cj308o06n74f.jpg) 小伙伴发来图片[/caption]\n\n特点：电脑端有可共享的有线网络，图片只能单次传输一张。速度极快。\n\n&nbsp;\n\n2.qq 同时需要移动端和电脑端登录qq\n\nqq电脑端：安装qq（应该都有安）\n\n![](http://ww4.sinaimg.cn/large/005ygACVjw1eg7ztlsd0ej306209o0t2.jpg) 点击企鹅主菜单：两个醒目的菜单（传文件到手机&amp;导出手机相册）\n\n&nbsp;\n\n[![](http://ww2.sinaimg.cn/large/005ygACVjw1eg8019egwxj30bc0eet97.jpg)](http://ww2.sinaimg.cn/large/005ygACVjw1eg8019egwxj30bc0eet97.jpg)\n\n传文件到手机，菜单里可以传输文件及截图到手机（最好保持手机端启动，否则可能收不到）\n\n![](http://ww2.sinaimg.cn/large/005ygACVjw1eg817q7wifj30hs0vkgo2.jpg) ![](http://ww1.sinaimg.cn/large/005ygACVjw1eg814da1fdj30hs0vk0uc.jpg) ![](http://ww2.sinaimg.cn/large/005ygACVjw1eg818n3bifj30hs0vkdho.jpg)\n\n手机端会收到一个来自移动端的消息，如果是图片、文字、音频会立即下载并显示或播放，如果是其他文件会等待用户下载。\n\n同样的，手机端在主界面-动态醒目位置可以看到传文件/照片到电脑的功能，电脑端在同样的窗口接收到文件。\n\n特点：同时安装有电脑端和移动端的qq，并分别同时能连上互联网，能单次传输多张照片、多个文件，兼容性好。速度中等。\n\n&nbsp;\n\n3 茄子快传 [电脑端&amp;移动端](http://kc.lenovo.com/) ：快牙是最近兴起的互传客户端，原因也众所周知，请了n多女优一起打广告啦。\n\n[![](http://a4.mzstatic.com/us/r30/Purple4/v4/e1/c0/8d/e1c08dca-fc92-982f-bef4-11906db0263f/screen568x568.jpeg)\n](http://kc.lenovo.com/)[移动端互传faq](http://kc.lenovo.com/faq.html) ：支持传输移动端应用程序额（Android，暂缺iOS版），支持1对多互传，支持无wifi无网络传输。利用点对点的热点进行连接。\n\n![](http://kc.lenovo.com/anyshare_help/help1.jpg)\n\n[电脑客户端连接移动端&amp;电脑客户端faq](http://kc.lenovo.com/pc-faq.html)  ：支持多种格式文件传输，支持多文件同时传输，支持传输到移动端和电脑端，支持无wifi无互联网传输。利用笔记本热点共享传输数据。需停止共享网络及一切使用移动网卡的行为。\n\n特点：速度奇快，支持所有端所有文件类型的传输，需同时装有客户端。\n\n&nbsp;\n\n4.快牙 [电脑端移动端](http://www.kuaiya.cn/) android平台最最早的互传应用。最早实现android和iOS互通的互传软件。\n\n功能与茄子类似，使用环境非常便利。\n\n电脑与手机端的使用环境\n\n![](http://ww2.sinaimg.cn/large/005ygACVjw1eg83avw6wsj30fi04dgm2.jpg)\n\n&nbsp;\n\n电脑之间互传的使用环境\n\n![](http://ww4.sinaimg.cn/large/005ygACVjw1eg83bc1fd6j30bx08ogmi.jpg)\n\n同一wifi环境或者连接电脑或手机建立的热点均可以快捷的传输，利用的就是局域网内文件互传的原理。\n\n特点:与茄子同类型同特点的软件，传输条件要求低，速度快，起步早，可传输移动端内的应用，安装包小，技术成熟。\n\n&nbsp;\n\n5.网盘共享 （百度网盘 金山快盘 360网盘 新浪网盘 华为网盘 qq微云 onedrive dropbox googledrive）[尤其对大文件、视频、音频]\n\n利用不同网盘客户端 上传下载的功能进行文件传输。\n\n特点：速度在教育网络的时候，上传下载都极其快，但是条件苛刻，流程有些繁琐。\n\n附：百度网盘内置了闪电快传的新功能，原理和茄子快牙类似，可登录同一账号进行不同客户端之间的传输，搜索客户端的效率有些低。没有传输到电脑的功能。\n\n&nbsp;\n\n6.笔记共享（印象笔记，随笔记，网易云笔记）[针对网页、文字段落、手写笔记等]\n\n对网页、文章、列表等的copy和手记摘要的同步较迅速，尤其是印象笔记的chrome插件有非常大的优势 。\n\n![](http://ww2.sinaimg.cn/large/005ygACVjw1eg83n8mf54j304l0a9gls.jpg)印象笔记的极为便利的网页摘抄。\n\n特点：针对文字同步，对有排版，需要按照原文格式传输的文件方便。需要安装较大的移动端安装包，电脑端在网页同步。\n\n7。UC\n\n浏览器附带的功能是为了便利标签页，书签，保存的网页等特殊格式的同步和传输。\n\n![](http://ww4.sinaimg.cn/large/005ygACVjw1eg83ulxllij30hs0vk40y.jpg)\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n&nbsp;\n\n![](http://ww1.sinaimg.cn/large/005ygACVjw1eg83xd8rjkj30a606ngls.jpg)\n\n&nbsp;\n\n特点：支持浏览器和不同移动端网页的书签、标签页同步，电脑无需客户端，移动端需要安装uc浏览器。\n\n此外，android端的UC浏览器还嵌入了插件功能，下载文件分享助手的插件，可以将本地任意文件或分类好的不同格式文件进行共wifi传输。电脑端无须软件，浏览器输入地址即可。共享速度可达600kb/s.\n\n[caption id=\"\" align=\"aligncenter\" width=\"214\"][![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/65E068079898.png)](http://i1061.photobucket.com/albums/t476/ov_beeshoot/65E068079898.png) 秒速600+[/caption]\n\n@转载注明原文地址。","slug":"trans-between-pc-and-phone","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7p6004juco48wrzsam5","content":"<p>1.猎豹wifi3.0 只需<a href=\"http://wifi.liebao.cn/\" target=\"_blank\" rel=\"external\">电脑端</a></p>\n<p>仅支持移动端向电脑端发图，移动端不限平台（还可支持遥控关机）。</p>\n<p>[caption id=”” align=”aligncenter” width=”315”]<img src=\"http://ww1.sinaimg.cn/large/005ygACVjw1eg7clynb5aj30hs0vk413.jpg\" alt=\"\"> 遥控关机和传图到电脑[/caption]</p>\n<p>图片缓存到本地的C:\\Users\\<span style=\"color: #ff0000\"><strong>Username</strong></span>\\AppData\\Local\\Temp 可以另存和看原图</p>\n<p>[caption id=”” align=”aligncenter” width=”312”]<a href=\"http://ww4.sinaimg.cn/large/005ygACVjw1eg7ckyzg8cj308o06n74f.jpg\" target=\"_blank\" rel=\"external\"><img src=\"http://ww4.sinaimg.cn/large/005ygACVjw1eg7ckyzg8cj308o06n74f.jpg\" alt=\"\"></a> 小伙伴发来图片[/caption]</p>\n<p>特点：电脑端有可共享的有线网络，图片只能单次传输一张。速度极快。</p>\n<p>&nbsp;</p>\n<p>2.qq 同时需要移动端和电脑端登录qq</p>\n<p>qq电脑端：安装qq（应该都有安）</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/005ygACVjw1eg7ztlsd0ej306209o0t2.jpg\" alt=\"\"> 点击企鹅主菜单：两个醒目的菜单（传文件到手机&amp;导出手机相册）</p>\n<p>&nbsp;</p>\n<p><a href=\"http://ww2.sinaimg.cn/large/005ygACVjw1eg8019egwxj30bc0eet97.jpg\" target=\"_blank\" rel=\"external\"><img src=\"http://ww2.sinaimg.cn/large/005ygACVjw1eg8019egwxj30bc0eet97.jpg\" alt=\"\"></a></p>\n<p>传文件到手机，菜单里可以传输文件及截图到手机（最好保持手机端启动，否则可能收不到）</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/005ygACVjw1eg817q7wifj30hs0vkgo2.jpg\" alt=\"\"> <img src=\"http://ww1.sinaimg.cn/large/005ygACVjw1eg814da1fdj30hs0vk0uc.jpg\" alt=\"\"> <img src=\"http://ww2.sinaimg.cn/large/005ygACVjw1eg818n3bifj30hs0vkdho.jpg\" alt=\"\"></p>\n<p>手机端会收到一个来自移动端的消息，如果是图片、文字、音频会立即下载并显示或播放，如果是其他文件会等待用户下载。</p>\n<p>同样的，手机端在主界面-动态醒目位置可以看到传文件/照片到电脑的功能，电脑端在同样的窗口接收到文件。</p>\n<p>特点：同时安装有电脑端和移动端的qq，并分别同时能连上互联网，能单次传输多张照片、多个文件，兼容性好。速度中等。</p>\n<p>&nbsp;</p>\n<p>3 茄子快传 <a href=\"http://kc.lenovo.com/\" target=\"_blank\" rel=\"external\">电脑端&amp;移动端</a> ：快牙是最近兴起的互传客户端，原因也众所周知，请了n多女优一起打广告啦。</p>\n<p><a href=\"http://kc.lenovo.com/\" target=\"_blank\" rel=\"external\"><img src=\"http://a4.mzstatic.com/us/r30/Purple4/v4/e1/c0/8d/e1c08dca-fc92-982f-bef4-11906db0263f/screen568x568.jpeg\" alt=\"\">\n</a><a href=\"http://kc.lenovo.com/faq.html\" target=\"_blank\" rel=\"external\">移动端互传faq</a> ：支持传输移动端应用程序额（Android，暂缺iOS版），支持1对多互传，支持无wifi无网络传输。利用点对点的热点进行连接。</p>\n<p><img src=\"http://kc.lenovo.com/anyshare_help/help1.jpg\" alt=\"\"></p>\n<p><a href=\"http://kc.lenovo.com/pc-faq.html\" target=\"_blank\" rel=\"external\">电脑客户端连接移动端&amp;电脑客户端faq</a>  ：支持多种格式文件传输，支持多文件同时传输，支持传输到移动端和电脑端，支持无wifi无互联网传输。利用笔记本热点共享传输数据。需停止共享网络及一切使用移动网卡的行为。</p>\n<p>特点：速度奇快，支持所有端所有文件类型的传输，需同时装有客户端。</p>\n<p>&nbsp;</p>\n<p>4.快牙 <a href=\"http://www.kuaiya.cn/\" target=\"_blank\" rel=\"external\">电脑端移动端</a> android平台最最早的互传应用。最早实现android和iOS互通的互传软件。</p>\n<p>功能与茄子类似，使用环境非常便利。</p>\n<p>电脑与手机端的使用环境</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/005ygACVjw1eg83avw6wsj30fi04dgm2.jpg\" alt=\"\"></p>\n<p>&nbsp;</p>\n<p>电脑之间互传的使用环境</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/005ygACVjw1eg83bc1fd6j30bx08ogmi.jpg\" alt=\"\"></p>\n<p>同一wifi环境或者连接电脑或手机建立的热点均可以快捷的传输，利用的就是局域网内文件互传的原理。</p>\n<p>特点:与茄子同类型同特点的软件，传输条件要求低，速度快，起步早，可传输移动端内的应用，安装包小，技术成熟。</p>\n<p>&nbsp;</p>\n<p>5.网盘共享 （百度网盘 金山快盘 360网盘 新浪网盘 华为网盘 qq微云 onedrive dropbox googledrive）[尤其对大文件、视频、音频]</p>\n<p>利用不同网盘客户端 上传下载的功能进行文件传输。</p>\n<p>特点：速度在教育网络的时候，上传下载都极其快，但是条件苛刻，流程有些繁琐。</p>\n<p>附：百度网盘内置了闪电快传的新功能，原理和茄子快牙类似，可登录同一账号进行不同客户端之间的传输，搜索客户端的效率有些低。没有传输到电脑的功能。</p>\n<p>&nbsp;</p>\n<p>6.笔记共享（印象笔记，随笔记，网易云笔记）[针对网页、文字段落、手写笔记等]</p>\n<p>对网页、文章、列表等的copy和手记摘要的同步较迅速，尤其是印象笔记的chrome插件有非常大的优势 。</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/005ygACVjw1eg83n8mf54j304l0a9gls.jpg\" alt=\"\">印象笔记的极为便利的网页摘抄。</p>\n<p>特点：针对文字同步，对有排版，需要按照原文格式传输的文件方便。需要安装较大的移动端安装包，电脑端在网页同步。</p>\n<p>7。UC</p>\n<p>浏览器附带的功能是为了便利标签页，书签，保存的网页等特殊格式的同步和传输。</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/005ygACVjw1eg83ulxllij30hs0vk40y.jpg\" alt=\"\"></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/005ygACVjw1eg83xd8rjkj30a606ngls.jpg\" alt=\"\"></p>\n<p>&nbsp;</p>\n<p>特点：支持浏览器和不同移动端网页的书签、标签页同步，电脑无需客户端，移动端需要安装uc浏览器。</p>\n<p>此外，android端的UC浏览器还嵌入了插件功能，下载文件分享助手的插件，可以将本地任意文件或分类好的不同格式文件进行共wifi传输。电脑端无须软件，浏览器输入地址即可。共享速度可达600kb/s.</p>\n<p>[caption id=”” align=”aligncenter” width=”214”]<a href=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/65E068079898.png\" target=\"_blank\" rel=\"external\"><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/65E068079898.png\" alt=\"\"></a> 秒速600+[/caption]</p>\n<p>@转载注明原文地址。</p>","excerpt":"","more":"<p>1.猎豹wifi3.0 只需<a href=\"http://wifi.liebao.cn/\">电脑端</a></p>\n<p>仅支持移动端向电脑端发图，移动端不限平台（还可支持遥控关机）。</p>\n<p>[caption id=”” align=”aligncenter” width=”315”]<img src=\"http://ww1.sinaimg.cn/large/005ygACVjw1eg7clynb5aj30hs0vk413.jpg\" alt=\"\"> 遥控关机和传图到电脑[/caption]</p>\n<p>图片缓存到本地的C:\\Users\\<span style=\"color: #ff0000\"><strong>Username</strong></span>\\AppData\\Local\\Temp 可以另存和看原图</p>\n<p>[caption id=”” align=”aligncenter” width=”312”]<a href=\"http://ww4.sinaimg.cn/large/005ygACVjw1eg7ckyzg8cj308o06n74f.jpg\"><img src=\"http://ww4.sinaimg.cn/large/005ygACVjw1eg7ckyzg8cj308o06n74f.jpg\" alt=\"\"></a> 小伙伴发来图片[/caption]</p>\n<p>特点：电脑端有可共享的有线网络，图片只能单次传输一张。速度极快。</p>\n<p>&nbsp;</p>\n<p>2.qq 同时需要移动端和电脑端登录qq</p>\n<p>qq电脑端：安装qq（应该都有安）</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/005ygACVjw1eg7ztlsd0ej306209o0t2.jpg\" alt=\"\"> 点击企鹅主菜单：两个醒目的菜单（传文件到手机&amp;导出手机相册）</p>\n<p>&nbsp;</p>\n<p><a href=\"http://ww2.sinaimg.cn/large/005ygACVjw1eg8019egwxj30bc0eet97.jpg\"><img src=\"http://ww2.sinaimg.cn/large/005ygACVjw1eg8019egwxj30bc0eet97.jpg\" alt=\"\"></a></p>\n<p>传文件到手机，菜单里可以传输文件及截图到手机（最好保持手机端启动，否则可能收不到）</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/005ygACVjw1eg817q7wifj30hs0vkgo2.jpg\" alt=\"\"> <img src=\"http://ww1.sinaimg.cn/large/005ygACVjw1eg814da1fdj30hs0vk0uc.jpg\" alt=\"\"> <img src=\"http://ww2.sinaimg.cn/large/005ygACVjw1eg818n3bifj30hs0vkdho.jpg\" alt=\"\"></p>\n<p>手机端会收到一个来自移动端的消息，如果是图片、文字、音频会立即下载并显示或播放，如果是其他文件会等待用户下载。</p>\n<p>同样的，手机端在主界面-动态醒目位置可以看到传文件/照片到电脑的功能，电脑端在同样的窗口接收到文件。</p>\n<p>特点：同时安装有电脑端和移动端的qq，并分别同时能连上互联网，能单次传输多张照片、多个文件，兼容性好。速度中等。</p>\n<p>&nbsp;</p>\n<p>3 茄子快传 <a href=\"http://kc.lenovo.com/\">电脑端&amp;移动端</a> ：快牙是最近兴起的互传客户端，原因也众所周知，请了n多女优一起打广告啦。</p>\n<p><a href=\"http://kc.lenovo.com/\"><img src=\"http://a4.mzstatic.com/us/r30/Purple4/v4/e1/c0/8d/e1c08dca-fc92-982f-bef4-11906db0263f/screen568x568.jpeg\" alt=\"\">\n</a><a href=\"http://kc.lenovo.com/faq.html\">移动端互传faq</a> ：支持传输移动端应用程序额（Android，暂缺iOS版），支持1对多互传，支持无wifi无网络传输。利用点对点的热点进行连接。</p>\n<p><img src=\"http://kc.lenovo.com/anyshare_help/help1.jpg\" alt=\"\"></p>\n<p><a href=\"http://kc.lenovo.com/pc-faq.html\">电脑客户端连接移动端&amp;电脑客户端faq</a>  ：支持多种格式文件传输，支持多文件同时传输，支持传输到移动端和电脑端，支持无wifi无互联网传输。利用笔记本热点共享传输数据。需停止共享网络及一切使用移动网卡的行为。</p>\n<p>特点：速度奇快，支持所有端所有文件类型的传输，需同时装有客户端。</p>\n<p>&nbsp;</p>\n<p>4.快牙 <a href=\"http://www.kuaiya.cn/\">电脑端移动端</a> android平台最最早的互传应用。最早实现android和iOS互通的互传软件。</p>\n<p>功能与茄子类似，使用环境非常便利。</p>\n<p>电脑与手机端的使用环境</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/005ygACVjw1eg83avw6wsj30fi04dgm2.jpg\" alt=\"\"></p>\n<p>&nbsp;</p>\n<p>电脑之间互传的使用环境</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/005ygACVjw1eg83bc1fd6j30bx08ogmi.jpg\" alt=\"\"></p>\n<p>同一wifi环境或者连接电脑或手机建立的热点均可以快捷的传输，利用的就是局域网内文件互传的原理。</p>\n<p>特点:与茄子同类型同特点的软件，传输条件要求低，速度快，起步早，可传输移动端内的应用，安装包小，技术成熟。</p>\n<p>&nbsp;</p>\n<p>5.网盘共享 （百度网盘 金山快盘 360网盘 新浪网盘 华为网盘 qq微云 onedrive dropbox googledrive）[尤其对大文件、视频、音频]</p>\n<p>利用不同网盘客户端 上传下载的功能进行文件传输。</p>\n<p>特点：速度在教育网络的时候，上传下载都极其快，但是条件苛刻，流程有些繁琐。</p>\n<p>附：百度网盘内置了闪电快传的新功能，原理和茄子快牙类似，可登录同一账号进行不同客户端之间的传输，搜索客户端的效率有些低。没有传输到电脑的功能。</p>\n<p>&nbsp;</p>\n<p>6.笔记共享（印象笔记，随笔记，网易云笔记）[针对网页、文字段落、手写笔记等]</p>\n<p>对网页、文章、列表等的copy和手记摘要的同步较迅速，尤其是印象笔记的chrome插件有非常大的优势 。</p>\n<p><img src=\"http://ww2.sinaimg.cn/large/005ygACVjw1eg83n8mf54j304l0a9gls.jpg\" alt=\"\">印象笔记的极为便利的网页摘抄。</p>\n<p>特点：针对文字同步，对有排版，需要按照原文格式传输的文件方便。需要安装较大的移动端安装包，电脑端在网页同步。</p>\n<p>7。UC</p>\n<p>浏览器附带的功能是为了便利标签页，书签，保存的网页等特殊格式的同步和传输。</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/005ygACVjw1eg83ulxllij30hs0vk40y.jpg\" alt=\"\"></p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/005ygACVjw1eg83xd8rjkj30a606ngls.jpg\" alt=\"\"></p>\n<p>&nbsp;</p>\n<p>特点：支持浏览器和不同移动端网页的书签、标签页同步，电脑无需客户端，移动端需要安装uc浏览器。</p>\n<p>此外，android端的UC浏览器还嵌入了插件功能，下载文件分享助手的插件，可以将本地任意文件或分类好的不同格式文件进行共wifi传输。电脑端无须软件，浏览器输入地址即可。共享速度可达600kb/s.</p>\n<p>[caption id=”” align=”aligncenter” width=”214”]<a href=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/65E068079898.png\"><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/65E068079898.png\" alt=\"\"></a> 秒速600+[/caption]</p>\n<p>@转载注明原文地址。</p>"},{"title":"【游记】江南10日游（绍兴-杭州-乌镇-嘉兴-西塘-同里-苏州-无锡-扬州）","id":"468","date":"2014-05-05T15:07:56.000Z","_content":"\n马蜂窝游记：[江南8城10日毕业漂流&amp;tips（绍兴-杭州-乌镇-嘉兴-西塘-同里-苏州-无锡-扬州）](http://www.mafengwo.cn/i/3056280.html \"江南8城10日毕业漂流&amp;tips（绍兴-杭州-乌镇-嘉兴-西塘-同里-苏州-无锡-扬州）\")\n\n面包旅行图片日记：[绍兴杭州乌镇嘉兴西塘同里苏州无锡扬州毕业漂流](http://breadtrip.com/trips/2387921398/ \"绍兴杭州乌镇嘉兴西塘同里苏州无锡扬州毕业漂流\")\n\n人人相册（单反）：【待更新】\n\n&nbsp;\n\n[caption id=\"\" align=\"aligncenter\" width=\"524\"][![](http://i.imgur.com/1451Xq4.png?1)](http://i.imgur.com/1451Xq4.png?1) 旅程记录-截至2014.5[/caption]\n\n目前为止的国内省份记录。除了4个自治区。2个岛。2个直辖市。四川。福建。安徽。河南。山西。东三省都差不多去过了。安徽、河南路过无数次姑且也没什么玩的吧。\n\n毕业前目测能去一趟梦寐已久的都江堰和九寨沟。东三省，内蒙，河南，山西，目测研究僧的时候能去一发。这样下来。就差出境游和危险地带了。go and continue go.","source":"_posts/travel-to-jiangnan-10-days.md","raw":"---\ntitle: 【游记】江南10日游（绍兴-杭州-乌镇-嘉兴-西塘-同里-苏州-无锡-扬州）\ncategories:\n  - 槽\ntags:\n  - 游记\nid: 468\ndate: 2014-05-05 23:07:56\n---\n\n马蜂窝游记：[江南8城10日毕业漂流&amp;tips（绍兴-杭州-乌镇-嘉兴-西塘-同里-苏州-无锡-扬州）](http://www.mafengwo.cn/i/3056280.html \"江南8城10日毕业漂流&amp;tips（绍兴-杭州-乌镇-嘉兴-西塘-同里-苏州-无锡-扬州）\")\n\n面包旅行图片日记：[绍兴杭州乌镇嘉兴西塘同里苏州无锡扬州毕业漂流](http://breadtrip.com/trips/2387921398/ \"绍兴杭州乌镇嘉兴西塘同里苏州无锡扬州毕业漂流\")\n\n人人相册（单反）：【待更新】\n\n&nbsp;\n\n[caption id=\"\" align=\"aligncenter\" width=\"524\"][![](http://i.imgur.com/1451Xq4.png?1)](http://i.imgur.com/1451Xq4.png?1) 旅程记录-截至2014.5[/caption]\n\n目前为止的国内省份记录。除了4个自治区。2个岛。2个直辖市。四川。福建。安徽。河南。山西。东三省都差不多去过了。安徽、河南路过无数次姑且也没什么玩的吧。\n\n毕业前目测能去一趟梦寐已久的都江堰和九寨沟。东三省，内蒙，河南，山西，目测研究僧的时候能去一发。这样下来。就差出境游和危险地带了。go and continue go.","slug":"travel-to-jiangnan-10-days","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7p9004muco4zh1bd1ij","content":"<p>马蜂窝游记：<a href=\"http://www.mafengwo.cn/i/3056280.html\" title=\"江南8城10日毕业漂流&amp;tips（绍兴-杭州-乌镇-嘉兴-西塘-同里-苏州-无锡-扬州）\" target=\"_blank\" rel=\"external\">江南8城10日毕业漂流&amp;tips（绍兴-杭州-乌镇-嘉兴-西塘-同里-苏州-无锡-扬州）</a></p>\n<p>面包旅行图片日记：<a href=\"http://breadtrip.com/trips/2387921398/\" title=\"绍兴杭州乌镇嘉兴西塘同里苏州无锡扬州毕业漂流\" target=\"_blank\" rel=\"external\">绍兴杭州乌镇嘉兴西塘同里苏州无锡扬州毕业漂流</a></p>\n<p>人人相册（单反）：【待更新】</p>\n<p>&nbsp;</p>\n<p>[caption id=”” align=”aligncenter” width=”524”]<a href=\"http://i.imgur.com/1451Xq4.png?1\" target=\"_blank\" rel=\"external\"><img src=\"http://i.imgur.com/1451Xq4.png?1\" alt=\"\"></a> 旅程记录-截至2014.5[/caption]</p>\n<p>目前为止的国内省份记录。除了4个自治区。2个岛。2个直辖市。四川。福建。安徽。河南。山西。东三省都差不多去过了。安徽、河南路过无数次姑且也没什么玩的吧。</p>\n<p>毕业前目测能去一趟梦寐已久的都江堰和九寨沟。东三省，内蒙，河南，山西，目测研究僧的时候能去一发。这样下来。就差出境游和危险地带了。go and continue go.</p>","excerpt":"","more":"<p>马蜂窝游记：<a href=\"http://www.mafengwo.cn/i/3056280.html\" title=\"江南8城10日毕业漂流&amp;tips（绍兴-杭州-乌镇-嘉兴-西塘-同里-苏州-无锡-扬州）\">江南8城10日毕业漂流&amp;tips（绍兴-杭州-乌镇-嘉兴-西塘-同里-苏州-无锡-扬州）</a></p>\n<p>面包旅行图片日记：<a href=\"http://breadtrip.com/trips/2387921398/\" title=\"绍兴杭州乌镇嘉兴西塘同里苏州无锡扬州毕业漂流\">绍兴杭州乌镇嘉兴西塘同里苏州无锡扬州毕业漂流</a></p>\n<p>人人相册（单反）：【待更新】</p>\n<p>&nbsp;</p>\n<p>[caption id=”” align=”aligncenter” width=”524”]<a href=\"http://i.imgur.com/1451Xq4.png?1\"><img src=\"http://i.imgur.com/1451Xq4.png?1\" alt=\"\"></a> 旅程记录-截至2014.5[/caption]</p>\n<p>目前为止的国内省份记录。除了4个自治区。2个岛。2个直辖市。四川。福建。安徽。河南。山西。东三省都差不多去过了。安徽、河南路过无数次姑且也没什么玩的吧。</p>\n<p>毕业前目测能去一趟梦寐已久的都江堰和九寨沟。东三省，内蒙，河南，山西，目测研究僧的时候能去一发。这样下来。就差出境游和危险地带了。go and continue go.</p>"},{"title":"无人机影像相关--拍摄、校正、平差、拼接","id":"816","date":"2015-11-04T13:12:46.000Z","_content":"\n无人机在近地拍摄全色或者多光谱数据，进行近景摄影测量，成图为后期的制图反演批处理提供数据来源。一般对像片各项操作，都需要知道像片的<font color=\"#FF0000\">空中姿态及其位置</font>。然而，无人机自身系统受外界干扰较大，飞行姿态难以准确控制，同时缺乏监测飞机姿态的设备，处理无人机数据不能完全采用传统航摄流程进行作业。\n\n关于摄影平台——无人机或带着单数码相机或组合相机，或带着遥感平台。常用的大面阵数码航摄相机，有DMC和UC（UCD UCX UCXp UCE）。DMC由4个全色4个多光谱镜头组成，4个中心投影拼接合成一副具有虚拟投影中心固定虚拟焦距的投影合成影像。UC4个全色波段对应3*3矩阵排列的9个CCD面阵，分别为<font color=\"#FF0000\">4221</font>（分别对应二行左二（东南东北西南西北），二行左一（正南正北），二行左三（正东正西），二行左四（中心））.如下图所示，UC革新的将四个角的镜头设为主镜头（master cone）其他三个为从属镜头（slave cone）为的是控制相机区域，尽量覆盖完整视场角，其他3个镜头的影响依据它进行精确配准保证输出的影响具有强健刚性的严格中心投影。\n\n![](http://ww3.sinaimg.cn/large/68eb7c93gw1exq55pwc5xj20l30cyjt1.jpg)\n\n几个全色影像CCD之间存在重叠（航向258旁向262），通过重叠部分<font color=\"#FF0000\">影像精确配准</font>，消除曝光时间带来的误差影响，生成一个完整的中心投影影像。图为四个镜头在不同时刻曝光，最后生成虚拟影像。值得一提的是，UC系统四个镜头虽然在不同时刻曝光拍摄，但是<font color=\"#FF0000\">**选取了合适了速度并沿着第二行相机方向飞行**</font>时，每个曝光的相机都几乎在同一时空位置，因此得到的是一个完整的中心投影大幅面全色影像。\n\n![](http://ww1.sinaimg.cn/large/68eb7c93gw1exq5bny66wj21180koag8.jpg)\n\n关于数码航摄仪——若采用多相机进行拍摄，扩大VOF（view of field），或采取张大仰角或采取移轴摄影，都需要对多相机进行合成，<font color=\"#FF0000\">组成一张虚拟影像</font>，来达到对后面平差拼接做前期准备，因此精度相当重要。\n\n关于图像拼接——无人机搭载的数码相机虽然提高了影像的分辨率，但焦距有限视野较小，获得整个飞行区域的完整影像设计<font color=\"#FF0000\">像片的拼接问题</font>。影像拼接涉及匀光匀色等色彩处理、对误差较大的图像进行粗提取、采用某些算计对影像提取特征点或者利用空间位置进行拼接等步骤。\n\n这里可以参考的文献有，\n\n[基于光束法自由网平差的无人机影像严格拼接](http://www.cnki.net/KCMS/detail/detail.aspx?QueryID=2&amp;CurRec=1&amp;recid=&amp;filename=TJDZ201205018&amp;dbname=CJFD2012&amp;dbcode=CJFQ&amp;pr=&amp;urlid=&amp;yx=&amp;uid=WEEvREcwSlJHSldRa1FhalpDTFRFYlpBY0d5OVdscE1hTndUdWJEd0ZyRGtESXlzS2lQZ1pVUkVRNVNOL1VwNmlRPT0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!&amp;v=MTk3OTZVTDdKTVNmUGRMRzRIOVBNcW85RWJJUjhlWDFMdXhZUzdEaDFUM3FUcldNMUZyQ1VSTCtlWnVackZDam4=)&nbsp;主要总结了航摄基本方法（空三方式利用野外控制点加密测出大量控制点、通过灭点建立影像直线段与方位元素的关系、自检校光束区域平差利用定向参数解求外方位元素、量测直线段长度确定外方位元素、区域平差及SIFT+一定数量控制点针对不同尺度三维影像进行拼接、光束法区域平差+秩亏可以解决缺少控制信息的像片）\n\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\">[](http://sns.juziyue.com/webinvite.php?u=94887)&nbsp;今天你[菊子曰](http://sns.juziyue.com/webinvite.php?u=94887)了么？</div>","source":"_posts/uac-involved.md","raw":"---\ntitle: 无人机影像相关--拍摄、校正、平差、拼接\ncategories:\n  - 什么都学一下\n  - 学习log\ntags:\n  - 航空摄影测量\nid: 816\ndate: 2015-11-04 21:12:46\n---\n\n无人机在近地拍摄全色或者多光谱数据，进行近景摄影测量，成图为后期的制图反演批处理提供数据来源。一般对像片各项操作，都需要知道像片的<font color=\"#FF0000\">空中姿态及其位置</font>。然而，无人机自身系统受外界干扰较大，飞行姿态难以准确控制，同时缺乏监测飞机姿态的设备，处理无人机数据不能完全采用传统航摄流程进行作业。\n\n关于摄影平台——无人机或带着单数码相机或组合相机，或带着遥感平台。常用的大面阵数码航摄相机，有DMC和UC（UCD UCX UCXp UCE）。DMC由4个全色4个多光谱镜头组成，4个中心投影拼接合成一副具有虚拟投影中心固定虚拟焦距的投影合成影像。UC4个全色波段对应3*3矩阵排列的9个CCD面阵，分别为<font color=\"#FF0000\">4221</font>（分别对应二行左二（东南东北西南西北），二行左一（正南正北），二行左三（正东正西），二行左四（中心））.如下图所示，UC革新的将四个角的镜头设为主镜头（master cone）其他三个为从属镜头（slave cone）为的是控制相机区域，尽量覆盖完整视场角，其他3个镜头的影响依据它进行精确配准保证输出的影响具有强健刚性的严格中心投影。\n\n![](http://ww3.sinaimg.cn/large/68eb7c93gw1exq55pwc5xj20l30cyjt1.jpg)\n\n几个全色影像CCD之间存在重叠（航向258旁向262），通过重叠部分<font color=\"#FF0000\">影像精确配准</font>，消除曝光时间带来的误差影响，生成一个完整的中心投影影像。图为四个镜头在不同时刻曝光，最后生成虚拟影像。值得一提的是，UC系统四个镜头虽然在不同时刻曝光拍摄，但是<font color=\"#FF0000\">**选取了合适了速度并沿着第二行相机方向飞行**</font>时，每个曝光的相机都几乎在同一时空位置，因此得到的是一个完整的中心投影大幅面全色影像。\n\n![](http://ww1.sinaimg.cn/large/68eb7c93gw1exq5bny66wj21180koag8.jpg)\n\n关于数码航摄仪——若采用多相机进行拍摄，扩大VOF（view of field），或采取张大仰角或采取移轴摄影，都需要对多相机进行合成，<font color=\"#FF0000\">组成一张虚拟影像</font>，来达到对后面平差拼接做前期准备，因此精度相当重要。\n\n关于图像拼接——无人机搭载的数码相机虽然提高了影像的分辨率，但焦距有限视野较小，获得整个飞行区域的完整影像设计<font color=\"#FF0000\">像片的拼接问题</font>。影像拼接涉及匀光匀色等色彩处理、对误差较大的图像进行粗提取、采用某些算计对影像提取特征点或者利用空间位置进行拼接等步骤。\n\n这里可以参考的文献有，\n\n[基于光束法自由网平差的无人机影像严格拼接](http://www.cnki.net/KCMS/detail/detail.aspx?QueryID=2&amp;CurRec=1&amp;recid=&amp;filename=TJDZ201205018&amp;dbname=CJFD2012&amp;dbcode=CJFQ&amp;pr=&amp;urlid=&amp;yx=&amp;uid=WEEvREcwSlJHSldRa1FhalpDTFRFYlpBY0d5OVdscE1hTndUdWJEd0ZyRGtESXlzS2lQZ1pVUkVRNVNOL1VwNmlRPT0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!&amp;v=MTk3OTZVTDdKTVNmUGRMRzRIOVBNcW85RWJJUjhlWDFMdXhZUzdEaDFUM3FUcldNMUZyQ1VSTCtlWnVackZDam4=)&nbsp;主要总结了航摄基本方法（空三方式利用野外控制点加密测出大量控制点、通过灭点建立影像直线段与方位元素的关系、自检校光束区域平差利用定向参数解求外方位元素、量测直线段长度确定外方位元素、区域平差及SIFT+一定数量控制点针对不同尺度三维影像进行拼接、光束法区域平差+秩亏可以解决缺少控制信息的像片）\n\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\">[](http://sns.juziyue.com/webinvite.php?u=94887)&nbsp;今天你[菊子曰](http://sns.juziyue.com/webinvite.php?u=94887)了么？</div>","slug":"uac-involved","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7pd004ruco49uwum0js","content":"<p>无人机在近地拍摄全色或者多光谱数据，进行近景摄影测量，成图为后期的制图反演批处理提供数据来源。一般对像片各项操作，都需要知道像片的<font color=\"#FF0000\">空中姿态及其位置</font>。然而，无人机自身系统受外界干扰较大，飞行姿态难以准确控制，同时缺乏监测飞机姿态的设备，处理无人机数据不能完全采用传统航摄流程进行作业。</p>\n<p>关于摄影平台——无人机或带着单数码相机或组合相机，或带着遥感平台。常用的大面阵数码航摄相机，有DMC和UC（UCD UCX UCXp UCE）。DMC由4个全色4个多光谱镜头组成，4个中心投影拼接合成一副具有虚拟投影中心固定虚拟焦距的投影合成影像。UC4个全色波段对应3*3矩阵排列的9个CCD面阵，分别为<font color=\"#FF0000\">4221</font>（分别对应二行左二（东南东北西南西北），二行左一（正南正北），二行左三（正东正西），二行左四（中心））.如下图所示，UC革新的将四个角的镜头设为主镜头（master cone）其他三个为从属镜头（slave cone）为的是控制相机区域，尽量覆盖完整视场角，其他3个镜头的影响依据它进行精确配准保证输出的影响具有强健刚性的严格中心投影。</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93gw1exq55pwc5xj20l30cyjt1.jpg\" alt=\"\"></p>\n<p>几个全色影像CCD之间存在重叠（航向258旁向262），通过重叠部分<font color=\"#FF0000\">影像精确配准</font>，消除曝光时间带来的误差影响，生成一个完整的中心投影影像。图为四个镜头在不同时刻曝光，最后生成虚拟影像。值得一提的是，UC系统四个镜头虽然在不同时刻曝光拍摄，但是<font color=\"#FF0000\"><strong>选取了合适了速度并沿着第二行相机方向飞行</strong></font>时，每个曝光的相机都几乎在同一时空位置，因此得到的是一个完整的中心投影大幅面全色影像。</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93gw1exq5bny66wj21180koag8.jpg\" alt=\"\"></p>\n<p>关于数码航摄仪——若采用多相机进行拍摄，扩大VOF（view of field），或采取张大仰角或采取移轴摄影，都需要对多相机进行合成，<font color=\"#FF0000\">组成一张虚拟影像</font>，来达到对后面平差拼接做前期准备，因此精度相当重要。</p>\n<p>关于图像拼接——无人机搭载的数码相机虽然提高了影像的分辨率，但焦距有限视野较小，获得整个飞行区域的完整影像设计<font color=\"#FF0000\">像片的拼接问题</font>。影像拼接涉及匀光匀色等色彩处理、对误差较大的图像进行粗提取、采用某些算计对影像提取特征点或者利用空间位置进行拼接等步骤。</p>\n<p>这里可以参考的文献有，</p>\n<p><a href=\"http://www.cnki.net/KCMS/detail/detail.aspx?QueryID=2&amp;CurRec=1&amp;recid=&amp;filename=TJDZ201205018&amp;dbname=CJFD2012&amp;dbcode=CJFQ&amp;pr=&amp;urlid=&amp;yx=&amp;uid=WEEvREcwSlJHSldRa1FhalpDTFRFYlpBY0d5OVdscE1hTndUdWJEd0ZyRGtESXlzS2lQZ1pVUkVRNVNOL1VwNmlRPT0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!&amp;v=MTk3OTZVTDdKTVNmUGRMRzRIOVBNcW85RWJJUjhlWDFMdXhZUzdEaDFUM3FUcldNMUZyQ1VSTCtlWnVackZDam4=\" target=\"_blank\" rel=\"external\">基于光束法自由网平差的无人机影像严格拼接</a>&nbsp;主要总结了航摄基本方法（空三方式利用野外控制点加密测出大量控制点、通过灭点建立影像直线段与方位元素的关系、自检校光束区域平差利用定向参数解求外方位元素、量测直线段长度确定外方位元素、区域平差及SIFT+一定数量控制点针对不同尺度三维影像进行拼接、光束法区域平差+秩亏可以解决缺少控制信息的像片）</p>\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\"><a href=\"http://sns.juziyue.com/webinvite.php?u=94887\" target=\"_blank\" rel=\"external\"></a>&nbsp;今天你<a href=\"http://sns.juziyue.com/webinvite.php?u=94887\" target=\"_blank\" rel=\"external\">菊子曰</a>了么？</div>","excerpt":"","more":"<p>无人机在近地拍摄全色或者多光谱数据，进行近景摄影测量，成图为后期的制图反演批处理提供数据来源。一般对像片各项操作，都需要知道像片的<font color=\"#FF0000\">空中姿态及其位置</font>。然而，无人机自身系统受外界干扰较大，飞行姿态难以准确控制，同时缺乏监测飞机姿态的设备，处理无人机数据不能完全采用传统航摄流程进行作业。</p>\n<p>关于摄影平台——无人机或带着单数码相机或组合相机，或带着遥感平台。常用的大面阵数码航摄相机，有DMC和UC（UCD UCX UCXp UCE）。DMC由4个全色4个多光谱镜头组成，4个中心投影拼接合成一副具有虚拟投影中心固定虚拟焦距的投影合成影像。UC4个全色波段对应3*3矩阵排列的9个CCD面阵，分别为<font color=\"#FF0000\">4221</font>（分别对应二行左二（东南东北西南西北），二行左一（正南正北），二行左三（正东正西），二行左四（中心））.如下图所示，UC革新的将四个角的镜头设为主镜头（master cone）其他三个为从属镜头（slave cone）为的是控制相机区域，尽量覆盖完整视场角，其他3个镜头的影响依据它进行精确配准保证输出的影响具有强健刚性的严格中心投影。</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93gw1exq55pwc5xj20l30cyjt1.jpg\" alt=\"\"></p>\n<p>几个全色影像CCD之间存在重叠（航向258旁向262），通过重叠部分<font color=\"#FF0000\">影像精确配准</font>，消除曝光时间带来的误差影响，生成一个完整的中心投影影像。图为四个镜头在不同时刻曝光，最后生成虚拟影像。值得一提的是，UC系统四个镜头虽然在不同时刻曝光拍摄，但是<font color=\"#FF0000\"><strong>选取了合适了速度并沿着第二行相机方向飞行</strong></font>时，每个曝光的相机都几乎在同一时空位置，因此得到的是一个完整的中心投影大幅面全色影像。</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93gw1exq5bny66wj21180koag8.jpg\" alt=\"\"></p>\n<p>关于数码航摄仪——若采用多相机进行拍摄，扩大VOF（view of field），或采取张大仰角或采取移轴摄影，都需要对多相机进行合成，<font color=\"#FF0000\">组成一张虚拟影像</font>，来达到对后面平差拼接做前期准备，因此精度相当重要。</p>\n<p>关于图像拼接——无人机搭载的数码相机虽然提高了影像的分辨率，但焦距有限视野较小，获得整个飞行区域的完整影像设计<font color=\"#FF0000\">像片的拼接问题</font>。影像拼接涉及匀光匀色等色彩处理、对误差较大的图像进行粗提取、采用某些算计对影像提取特征点或者利用空间位置进行拼接等步骤。</p>\n<p>这里可以参考的文献有，</p>\n<p><a href=\"http://www.cnki.net/KCMS/detail/detail.aspx?QueryID=2&amp;CurRec=1&amp;recid=&amp;filename=TJDZ201205018&amp;dbname=CJFD2012&amp;dbcode=CJFQ&amp;pr=&amp;urlid=&amp;yx=&amp;uid=WEEvREcwSlJHSldRa1FhalpDTFRFYlpBY0d5OVdscE1hTndUdWJEd0ZyRGtESXlzS2lQZ1pVUkVRNVNOL1VwNmlRPT0=$9A4hF_YAuvQ5obgVAqNKPCYcEjKensW4IQMovwHtwkF4VYPoHbKxJw!!&amp;v=MTk3OTZVTDdKTVNmUGRMRzRIOVBNcW85RWJJUjhlWDFMdXhZUzdEaDFUM3FUcldNMUZyQ1VSTCtlWnVackZDam4=\">基于光束法自由网平差的无人机影像严格拼接</a>&nbsp;主要总结了航摄基本方法（空三方式利用野外控制点加密测出大量控制点、通过灭点建立影像直线段与方位元素的关系、自检校光束区域平差利用定向参数解求外方位元素、量测直线段长度确定外方位元素、区域平差及SIFT+一定数量控制点针对不同尺度三维影像进行拼接、光束法区域平差+秩亏可以解决缺少控制信息的像片）</p>\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\"><a href=\"http://sns.juziyue.com/webinvite.php?u=94887\"></a>&nbsp;今天你<a href=\"http://sns.juziyue.com/webinvite.php?u=94887\">菊子曰</a>了么？</div>"},{"title":"Update & Efficient","id":"334","date":"2013-08-12T10:22:09.000Z","_content":"\n更新了CCleaner 4.04.4197 迅雷7.9破解 Sublime Text3-3033工作效率一下高了好多","source":"_posts/update-efficient.md","raw":"---\ntitle: 'Update & Efficient'\ncategories:\n  - App强推\n  - 软文\ntags:\n  - 吐槽\nid: 334\ndate: 2013-08-12 18:22:09\n---\n\n更新了CCleaner 4.04.4197 迅雷7.9破解 Sublime Text3-3033工作效率一下高了好多","slug":"update-efficient","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7pg004tuco48tt9n2x0","content":"<p>更新了CCleaner 4.04.4197 迅雷7.9破解 Sublime Text3-3033工作效率一下高了好多</p>","excerpt":"","more":"<p>更新了CCleaner 4.04.4197 迅雷7.9破解 Sublime Text3-3033工作效率一下高了好多</p>"},{"title":"删除sdf文件导致转到定义失效","date":"2016-04-22T08:38:11.000Z","_content":"\ncmomit的时候发现一个**.sdf**的文件特别大，项目才不到2m，一个sdf就30多m了。能不能删？\n谷歌了一下，提示sdf文件和iph文件是存放预编译头和Intellisense的。\n<!-- more -->\n> 预编译头是 c++下的.h和.hpp等需要调用的文件头   \n> Intellisense是自动补齐和代码检测的文件。\n\n巨硬在[这里](https://msdn.microsoft.com/en-us/library/hcw1s69b.aspx)也给出了Intellisense的强大功效。\n\n在工具->选项->文本编辑器->C/C++->高级->禁用数据库改为true。的确就能不生成了。\n怒删了。居然?调试的时候转到定义（F12）失效了。自动补全和错误更正失效了。该选项的第一个表单Intellisense居然全都不能改变了。。。那么问题来了。我每次commit都需要删掉。然后每次又给我生成。烦躁。\n\nsearch到很多F12失效和类名找不到的，都很有可能是这个问题。即使，再次把禁用数据库false掉、把 工具->选项->项目和解决方案->常规->在解决方案资源管理器中跟踪活动项 反复勾选也没有用。呵呵哒。好险回收站里的sdf文件没有删。同时，这一更改在别的工程不会影响，只要sdf在就没事。\n\n解决方案：尝试每次删简直繁琐。在选项禁用数据库上面，可以改正sdf文件的存放位置。将始终使用退回位置设为true，把sdf删掉。使用一个每次不需要同步的文件夹，编译调试时能使用，又不影响git速度，棒呆。\n![haha](http://ooo.0o0.ooo/2016/04/22/5719e9865cfc6.png)\n","source":"_posts/what-the-hell-of-sdf.md","raw":"---\ntitle: 删除sdf文件导致转到定义失效\ndate: 2016-04-22 16:38:11\ncategories: \n  - 什么都学一下\n  - 学习log\ntags:\n  - c++\n---\n\ncmomit的时候发现一个**.sdf**的文件特别大，项目才不到2m，一个sdf就30多m了。能不能删？\n谷歌了一下，提示sdf文件和iph文件是存放预编译头和Intellisense的。\n<!-- more -->\n> 预编译头是 c++下的.h和.hpp等需要调用的文件头   \n> Intellisense是自动补齐和代码检测的文件。\n\n巨硬在[这里](https://msdn.microsoft.com/en-us/library/hcw1s69b.aspx)也给出了Intellisense的强大功效。\n\n在工具->选项->文本编辑器->C/C++->高级->禁用数据库改为true。的确就能不生成了。\n怒删了。居然?调试的时候转到定义（F12）失效了。自动补全和错误更正失效了。该选项的第一个表单Intellisense居然全都不能改变了。。。那么问题来了。我每次commit都需要删掉。然后每次又给我生成。烦躁。\n\nsearch到很多F12失效和类名找不到的，都很有可能是这个问题。即使，再次把禁用数据库false掉、把 工具->选项->项目和解决方案->常规->在解决方案资源管理器中跟踪活动项 反复勾选也没有用。呵呵哒。好险回收站里的sdf文件没有删。同时，这一更改在别的工程不会影响，只要sdf在就没事。\n\n解决方案：尝试每次删简直繁琐。在选项禁用数据库上面，可以改正sdf文件的存放位置。将始终使用退回位置设为true，把sdf删掉。使用一个每次不需要同步的文件夹，编译调试时能使用，又不影响git速度，棒呆。\n![haha](http://ooo.0o0.ooo/2016/04/22/5719e9865cfc6.png)\n","slug":"what-the-hell-of-sdf","published":1,"updated":"2016-04-23T12:18:50.416Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7pi004wuco4v0oehfzf","content":"<p>cmomit的时候发现一个<strong>.sdf</strong>的文件特别大，项目才不到2m，一个sdf就30多m了。能不能删？<br>谷歌了一下，提示sdf文件和iph文件是存放预编译头和Intellisense的。<br><a id=\"more\"></a></p>\n<blockquote>\n<p>预编译头是 c++下的.h和.hpp等需要调用的文件头<br>Intellisense是自动补齐和代码检测的文件。</p>\n</blockquote>\n<p>巨硬在<a href=\"https://msdn.microsoft.com/en-us/library/hcw1s69b.aspx\" target=\"_blank\" rel=\"external\">这里</a>也给出了Intellisense的强大功效。</p>\n<p>在工具-&gt;选项-&gt;文本编辑器-&gt;C/C++-&gt;高级-&gt;禁用数据库改为true。的确就能不生成了。<br>怒删了。居然?调试的时候转到定义（F12）失效了。自动补全和错误更正失效了。该选项的第一个表单Intellisense居然全都不能改变了。。。那么问题来了。我每次commit都需要删掉。然后每次又给我生成。烦躁。</p>\n<p>search到很多F12失效和类名找不到的，都很有可能是这个问题。即使，再次把禁用数据库false掉、把 工具-&gt;选项-&gt;项目和解决方案-&gt;常规-&gt;在解决方案资源管理器中跟踪活动项 反复勾选也没有用。呵呵哒。好险回收站里的sdf文件没有删。同时，这一更改在别的工程不会影响，只要sdf在就没事。</p>\n<p>解决方案：尝试每次删简直繁琐。在选项禁用数据库上面，可以改正sdf文件的存放位置。将始终使用退回位置设为true，把sdf删掉。使用一个每次不需要同步的文件夹，编译调试时能使用，又不影响git速度，棒呆。<br><img src=\"http://ooo.0o0.ooo/2016/04/22/5719e9865cfc6.png\" alt=\"haha\"></p>","excerpt":"<p>cmomit的时候发现一个<strong>.sdf</strong>的文件特别大，项目才不到2m，一个sdf就30多m了。能不能删？<br>谷歌了一下，提示sdf文件和iph文件是存放预编译头和Intellisense的。<br>","more":"</p>\n<blockquote>\n<p>预编译头是 c++下的.h和.hpp等需要调用的文件头<br>Intellisense是自动补齐和代码检测的文件。</p>\n</blockquote>\n<p>巨硬在<a href=\"https://msdn.microsoft.com/en-us/library/hcw1s69b.aspx\">这里</a>也给出了Intellisense的强大功效。</p>\n<p>在工具-&gt;选项-&gt;文本编辑器-&gt;C/C++-&gt;高级-&gt;禁用数据库改为true。的确就能不生成了。<br>怒删了。居然?调试的时候转到定义（F12）失效了。自动补全和错误更正失效了。该选项的第一个表单Intellisense居然全都不能改变了。。。那么问题来了。我每次commit都需要删掉。然后每次又给我生成。烦躁。</p>\n<p>search到很多F12失效和类名找不到的，都很有可能是这个问题。即使，再次把禁用数据库false掉、把 工具-&gt;选项-&gt;项目和解决方案-&gt;常规-&gt;在解决方案资源管理器中跟踪活动项 反复勾选也没有用。呵呵哒。好险回收站里的sdf文件没有删。同时，这一更改在别的工程不会影响，只要sdf在就没事。</p>\n<p>解决方案：尝试每次删简直繁琐。在选项禁用数据库上面，可以改正sdf文件的存放位置。将始终使用退回位置设为true，把sdf删掉。使用一个每次不需要同步的文件夹，编译调试时能使用，又不影响git速度，棒呆。<br><img src=\"http://ooo.0o0.ooo/2016/04/22/5719e9865cfc6.png\" alt=\"haha\"></p>"},{"title":"win8笔记本热点创建","id":"187","date":"2013-05-17T01:18:46.000Z","_content":"\n-netsh wlan show drivers\n查看是否支持承载网络\n-netsh wlan set hostednetwork mode=allow ssid=wlanname key=password\n设置密码和名字\n-netsh wlan start hostednetwork\n启动热点\n-netsh wlan stop hostednetwork\n关闭热点\n我不会告诉你这个会更加方便\nhttp://jingyan.baidu.com/article/48b558e371b8e87f38c09a8e.html","source":"_posts/win8笔记本热点创建.md","raw":"---\ntitle: win8笔记本热点创建\ncategories:\n  - 软件测评\n  - 软文\ntags:\n  - 热点\nid: 187\ndate: 2013-05-17 09:18:46\n---\n\n-netsh wlan show drivers\n查看是否支持承载网络\n-netsh wlan set hostednetwork mode=allow ssid=wlanname key=password\n设置密码和名字\n-netsh wlan start hostednetwork\n启动热点\n-netsh wlan stop hostednetwork\n关闭热点\n我不会告诉你这个会更加方便\nhttp://jingyan.baidu.com/article/48b558e371b8e87f38c09a8e.html","slug":"win8笔记本热点创建","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7pk0050uco4xsnm1kkl","content":"<p>-netsh wlan show drivers<br>查看是否支持承载网络<br>-netsh wlan set hostednetwork mode=allow ssid=wlanname key=password<br>设置密码和名字<br>-netsh wlan start hostednetwork<br>启动热点<br>-netsh wlan stop hostednetwork<br>关闭热点<br>我不会告诉你这个会更加方便<br><a href=\"http://jingyan.baidu.com/article/48b558e371b8e87f38c09a8e.html\" target=\"_blank\" rel=\"external\">http://jingyan.baidu.com/article/48b558e371b8e87f38c09a8e.html</a></p>","excerpt":"","more":"<p>-netsh wlan show drivers<br>查看是否支持承载网络<br>-netsh wlan set hostednetwork mode=allow ssid=wlanname key=password<br>设置密码和名字<br>-netsh wlan start hostednetwork<br>启动热点<br>-netsh wlan stop hostednetwork<br>关闭热点<br>我不会告诉你这个会更加方便<br><a href=\"http://jingyan.baidu.com/article/48b558e371b8e87f38c09a8e.html\">http://jingyan.baidu.com/article/48b558e371b8e87f38c09a8e.html</a></p>"},{"title":"WUHA","id":"138","date":"2013-05-09T09:08:46.000Z","_content":"\n啊哈哈扒别人的css真是好玩阿...可是调试起来真是复杂得一比\n那个twitter g+和feed的 和 返回顶部的就这样扒好了.分享我第一个Q名的歌曲...\n[dewplayer:http://s1.mjbox.com/file/u/98978/1/.mp3]","source":"_posts/wuha.md","raw":"---\ntitle: WUHA\ncategories:\n  - 槽\ntags:\n  - 吐槽\nid: 138\ndate: 2013-05-09 17:08:46\n---\n\n啊哈哈扒别人的css真是好玩阿...可是调试起来真是复杂得一比\n那个twitter g+和feed的 和 返回顶部的就这样扒好了.分享我第一个Q名的歌曲...\n[dewplayer:http://s1.mjbox.com/file/u/98978/1/.mp3]","slug":"wuha","published":1,"updated":"2016-04-11T14:09:45.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7pm0054uco4l6jskjxl","content":"<p>啊哈哈扒别人的css真是好玩阿…可是调试起来真是复杂得一比<br>那个twitter g+和feed的 和 返回顶部的就这样扒好了.分享我第一个Q名的歌曲…<br>[dewplayer:<a href=\"http://s1.mjbox.com/file/u/98978/1/.mp3\" target=\"_blank\" rel=\"external\">http://s1.mjbox.com/file/u/98978/1/.mp3</a>]</p>","excerpt":"","more":"<p>啊哈哈扒别人的css真是好玩阿…可是调试起来真是复杂得一比<br>那个twitter g+和feed的 和 返回顶部的就这样扒好了.分享我第一个Q名的歌曲…<br>[dewplayer:<a href=\"http://s1.mjbox.com/file/u/98978/1/.mp3\">http://s1.mjbox.com/file/u/98978/1/.mp3</a>]</p>"},{"title":"小米和360：两个100亿美元的故事_创事记_新浪科技_新浪网","id":"338","date":"2013-08-29T13:34:45.000Z","_content":"\n[小米和360：两个100亿美元的故事_创事记_新浪科技_新浪网](http://tech.sina.com.cn/zl/post/detail/i/2013-08-29/pid_8433778.htm).","source":"_posts/xiaomi-360-story.md","raw":"---\ntitle: 小米和360：两个100亿美元的故事_创事记_新浪科技_新浪网\ncategories:\n  - 槽\ntags:\n  - 吐槽\nid: 338\ndate: 2013-08-29 21:34:45\n---\n\n[小米和360：两个100亿美元的故事_创事记_新浪科技_新浪网](http://tech.sina.com.cn/zl/post/detail/i/2013-08-29/pid_8433778.htm).","slug":"xiaomi-360-story","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7pp0058uco4pkpxykr6","content":"<p><a href=\"http://tech.sina.com.cn/zl/post/detail/i/2013-08-29/pid_8433778.htm\" target=\"_blank\" rel=\"external\">小米和360：两个100亿美元的故事<em>创事记</em>新浪科技_新浪网</a>.</p>","excerpt":"","more":"<p><a href=\"http://tech.sina.com.cn/zl/post/detail/i/2013-08-29/pid_8433778.htm\">小米和360：两个100亿美元的故事<em>创事记</em>新浪科技_新浪网</a>.</p>"},{"title":"【电影】【2015】 〇二次点评","id":"549","date":"2015-03-03T13:42:06.000Z","_content":"\n春节档简直是近5年最烂的  国产保护加上喜庆保温 导致所谓最强的影片「狼图腾」也差强人意 主题和细节都没能相当程度上还原原著  更别提钟馗伏魔 澳门风云二这样稀烂的影片了\n\n&nbsp;\n\n「少年时代」\n\n伙伴 陪伴 和自己的成长 这就是最朴素 最大众的少年时代 最写实的美国家庭 姐弟 新朋友 新家庭 新恋情 新的开始 18岁。执着的剧组和执着的男主家庭 用12年撑起了一个自己的纪录片 若要说一些遗憾 便是 少了些许波澜和累点罢 或许生活都这样⭐⭐⭐⭐\n\n&nbsp;\n\n「有一个地方只有我们知道」\n\n文艺老徐 好男人帅哥  穿越时空的爱恋 等一个人 王朔的剧本很婉转 梦一样让人回味 布拉格  老房子 水晶围脖 一封信 老车票 一尊永远在那儿的雕塑 对的人，你是不会失去的。。似青春又纷纷错过 似回忆总记不起  双线结构以老少相遇作为交点  些许落入俗套  吴亦凡王丽坤一类的偶像演员让平静暖心的剧情变得热火朝天 不时耳语尖叫拍凳跺腿  加上布拉格东欧浪漫文艺的风景 让小说剧情电影实实在在成了偶像剧  也罢情人节唯一的爱情剧吧 ⭐⭐⭐⭐\n\n&nbsp;\n\n「狼图腾」\n\n毕竟小说的影响力超过了电影不止一两个数量级，电影也精选了小说的几个重要的节点和精彩桥段 暴风雪夜与狼的决斗 与小狼的故事 刨狼的猎物 构成了电影的主要情节 草原上的故事也相对圆满的完成了人与自然取舍和相处的主旨传递 也成为了春节档独特突出的异类主题 且不谈拍摄草原的艰辛和狼形态的捕捉 单是时间跨度就足以见得设置组的用心 美中不足便是冯的演技还是略微僵硬 ⭐⭐⭐⭐\n\n&nbsp;\n\n「逃离德黑兰」\n\n剧情较为无趣 逃离的拍摄实在有些险峻而超离实际 宣扬大义大勇的拯救公民 以及拯救敌意世界意识形态暴力黑的典型 与刺杀金正恩等都有类似的资本主义潮吹的感慨 既然是得到了西方各大电影节认可的电影 唯一印象深刻的是躲在加国大使馆的美帝人员的紧张和凌乱变现的异常出彩 相比是比较中庸而符合G点的⭐⭐⭐\n\n&nbsp;\n\n「天将雄师」\n\n各种混搭各种奇葩 中西合璧的成龙大哥和 乱入的朱孝天崔始源 还有捧哏和逗哏的筷子兄弟 就这样奇葩的馅料居然还捏成了不错的饺子 大汉天国终于和古罗马骑兵来了一次穿越搏击和惺惺相惜 龙哥的光环强的无限续命 主角以开头就注定了死掉的命运 好惨的是死的还这么简单 但作为毫无特效的古装漠片能紧扣剧情一气呵成也不容易 给春节档一个惊喜⭐⭐⭐⭐\n\n&nbsp;\n\n「澳门风云2」\n\n不多谈 粤式无厘头笑点 无3d的3d片 春节呵呵不起来的嘻嘻档 烂 ⭐⭐\n\n「一路惊喜」\n\n虽然格调挺俗的 虽然演员挺作的 虽然情节挺狗血的 但是我居然感到了一丝暖意 挺好 ⭐⭐⭐⭐\n\n&nbsp;\n\n「模仿游戏」\n\n看点除了卷福的超群演技外 似乎并没什么深刻人心的 没有残酷的谍战 没有缜密的逻辑推理和演绎 没有繁复的破解技巧和战争胜利的重要性 只有时间段的跳跃 被基佬利用的爱情 和实验室（算是在做实验吧 和一大群基佬们的斗智斗勇和最后争夺经费和战略隐瞒的剧情冲突 但这就正是电影节电影的思路 對基佬對打擊 對戰爭勝利至高重要性對年代 對人性大義對褒獎 都是獲得普遍認可的重要原因 ⭐⭐⭐⭐\n\n&nbsp;\n\n&nbsp;","source":"_posts/【电影】【2015】 〇二次点评.md","raw":"---\ntitle: 【电影】【2015】 〇二次点评\ncategories:\n  - 槽\ntags:\n  - 电影\nid: 549\ndate: 2015-03-03 21:42:06\n---\n\n春节档简直是近5年最烂的  国产保护加上喜庆保温 导致所谓最强的影片「狼图腾」也差强人意 主题和细节都没能相当程度上还原原著  更别提钟馗伏魔 澳门风云二这样稀烂的影片了\n\n&nbsp;\n\n「少年时代」\n\n伙伴 陪伴 和自己的成长 这就是最朴素 最大众的少年时代 最写实的美国家庭 姐弟 新朋友 新家庭 新恋情 新的开始 18岁。执着的剧组和执着的男主家庭 用12年撑起了一个自己的纪录片 若要说一些遗憾 便是 少了些许波澜和累点罢 或许生活都这样⭐⭐⭐⭐\n\n&nbsp;\n\n「有一个地方只有我们知道」\n\n文艺老徐 好男人帅哥  穿越时空的爱恋 等一个人 王朔的剧本很婉转 梦一样让人回味 布拉格  老房子 水晶围脖 一封信 老车票 一尊永远在那儿的雕塑 对的人，你是不会失去的。。似青春又纷纷错过 似回忆总记不起  双线结构以老少相遇作为交点  些许落入俗套  吴亦凡王丽坤一类的偶像演员让平静暖心的剧情变得热火朝天 不时耳语尖叫拍凳跺腿  加上布拉格东欧浪漫文艺的风景 让小说剧情电影实实在在成了偶像剧  也罢情人节唯一的爱情剧吧 ⭐⭐⭐⭐\n\n&nbsp;\n\n「狼图腾」\n\n毕竟小说的影响力超过了电影不止一两个数量级，电影也精选了小说的几个重要的节点和精彩桥段 暴风雪夜与狼的决斗 与小狼的故事 刨狼的猎物 构成了电影的主要情节 草原上的故事也相对圆满的完成了人与自然取舍和相处的主旨传递 也成为了春节档独特突出的异类主题 且不谈拍摄草原的艰辛和狼形态的捕捉 单是时间跨度就足以见得设置组的用心 美中不足便是冯的演技还是略微僵硬 ⭐⭐⭐⭐\n\n&nbsp;\n\n「逃离德黑兰」\n\n剧情较为无趣 逃离的拍摄实在有些险峻而超离实际 宣扬大义大勇的拯救公民 以及拯救敌意世界意识形态暴力黑的典型 与刺杀金正恩等都有类似的资本主义潮吹的感慨 既然是得到了西方各大电影节认可的电影 唯一印象深刻的是躲在加国大使馆的美帝人员的紧张和凌乱变现的异常出彩 相比是比较中庸而符合G点的⭐⭐⭐\n\n&nbsp;\n\n「天将雄师」\n\n各种混搭各种奇葩 中西合璧的成龙大哥和 乱入的朱孝天崔始源 还有捧哏和逗哏的筷子兄弟 就这样奇葩的馅料居然还捏成了不错的饺子 大汉天国终于和古罗马骑兵来了一次穿越搏击和惺惺相惜 龙哥的光环强的无限续命 主角以开头就注定了死掉的命运 好惨的是死的还这么简单 但作为毫无特效的古装漠片能紧扣剧情一气呵成也不容易 给春节档一个惊喜⭐⭐⭐⭐\n\n&nbsp;\n\n「澳门风云2」\n\n不多谈 粤式无厘头笑点 无3d的3d片 春节呵呵不起来的嘻嘻档 烂 ⭐⭐\n\n「一路惊喜」\n\n虽然格调挺俗的 虽然演员挺作的 虽然情节挺狗血的 但是我居然感到了一丝暖意 挺好 ⭐⭐⭐⭐\n\n&nbsp;\n\n「模仿游戏」\n\n看点除了卷福的超群演技外 似乎并没什么深刻人心的 没有残酷的谍战 没有缜密的逻辑推理和演绎 没有繁复的破解技巧和战争胜利的重要性 只有时间段的跳跃 被基佬利用的爱情 和实验室（算是在做实验吧 和一大群基佬们的斗智斗勇和最后争夺经费和战略隐瞒的剧情冲突 但这就正是电影节电影的思路 對基佬對打擊 對戰爭勝利至高重要性對年代 對人性大義對褒獎 都是獲得普遍認可的重要原因 ⭐⭐⭐⭐\n\n&nbsp;\n\n&nbsp;","slug":"【电影】【2015】 〇二次点评","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7ps005cuco4zjje1cse","content":"<p>春节档简直是近5年最烂的  国产保护加上喜庆保温 导致所谓最强的影片「狼图腾」也差强人意 主题和细节都没能相当程度上还原原著  更别提钟馗伏魔 澳门风云二这样稀烂的影片了</p>\n<p>&nbsp;</p>\n<p>「少年时代」</p>\n<p>伙伴 陪伴 和自己的成长 这就是最朴素 最大众的少年时代 最写实的美国家庭 姐弟 新朋友 新家庭 新恋情 新的开始 18岁。执着的剧组和执着的男主家庭 用12年撑起了一个自己的纪录片 若要说一些遗憾 便是 少了些许波澜和累点罢 或许生活都这样⭐⭐⭐⭐</p>\n<p>&nbsp;</p>\n<p>「有一个地方只有我们知道」</p>\n<p>文艺老徐 好男人帅哥  穿越时空的爱恋 等一个人 王朔的剧本很婉转 梦一样让人回味 布拉格  老房子 水晶围脖 一封信 老车票 一尊永远在那儿的雕塑 对的人，你是不会失去的。。似青春又纷纷错过 似回忆总记不起  双线结构以老少相遇作为交点  些许落入俗套  吴亦凡王丽坤一类的偶像演员让平静暖心的剧情变得热火朝天 不时耳语尖叫拍凳跺腿  加上布拉格东欧浪漫文艺的风景 让小说剧情电影实实在在成了偶像剧  也罢情人节唯一的爱情剧吧 ⭐⭐⭐⭐</p>\n<p>&nbsp;</p>\n<p>「狼图腾」</p>\n<p>毕竟小说的影响力超过了电影不止一两个数量级，电影也精选了小说的几个重要的节点和精彩桥段 暴风雪夜与狼的决斗 与小狼的故事 刨狼的猎物 构成了电影的主要情节 草原上的故事也相对圆满的完成了人与自然取舍和相处的主旨传递 也成为了春节档独特突出的异类主题 且不谈拍摄草原的艰辛和狼形态的捕捉 单是时间跨度就足以见得设置组的用心 美中不足便是冯的演技还是略微僵硬 ⭐⭐⭐⭐</p>\n<p>&nbsp;</p>\n<p>「逃离德黑兰」</p>\n<p>剧情较为无趣 逃离的拍摄实在有些险峻而超离实际 宣扬大义大勇的拯救公民 以及拯救敌意世界意识形态暴力黑的典型 与刺杀金正恩等都有类似的资本主义潮吹的感慨 既然是得到了西方各大电影节认可的电影 唯一印象深刻的是躲在加国大使馆的美帝人员的紧张和凌乱变现的异常出彩 相比是比较中庸而符合G点的⭐⭐⭐</p>\n<p>&nbsp;</p>\n<p>「天将雄师」</p>\n<p>各种混搭各种奇葩 中西合璧的成龙大哥和 乱入的朱孝天崔始源 还有捧哏和逗哏的筷子兄弟 就这样奇葩的馅料居然还捏成了不错的饺子 大汉天国终于和古罗马骑兵来了一次穿越搏击和惺惺相惜 龙哥的光环强的无限续命 主角以开头就注定了死掉的命运 好惨的是死的还这么简单 但作为毫无特效的古装漠片能紧扣剧情一气呵成也不容易 给春节档一个惊喜⭐⭐⭐⭐</p>\n<p>&nbsp;</p>\n<p>「澳门风云2」</p>\n<p>不多谈 粤式无厘头笑点 无3d的3d片 春节呵呵不起来的嘻嘻档 烂 ⭐⭐</p>\n<p>「一路惊喜」</p>\n<p>虽然格调挺俗的 虽然演员挺作的 虽然情节挺狗血的 但是我居然感到了一丝暖意 挺好 ⭐⭐⭐⭐</p>\n<p>&nbsp;</p>\n<p>「模仿游戏」</p>\n<p>看点除了卷福的超群演技外 似乎并没什么深刻人心的 没有残酷的谍战 没有缜密的逻辑推理和演绎 没有繁复的破解技巧和战争胜利的重要性 只有时间段的跳跃 被基佬利用的爱情 和实验室（算是在做实验吧 和一大群基佬们的斗智斗勇和最后争夺经费和战略隐瞒的剧情冲突 但这就正是电影节电影的思路 對基佬對打擊 對戰爭勝利至高重要性對年代 對人性大義對褒獎 都是獲得普遍認可的重要原因 ⭐⭐⭐⭐</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>","excerpt":"","more":"<p>春节档简直是近5年最烂的  国产保护加上喜庆保温 导致所谓最强的影片「狼图腾」也差强人意 主题和细节都没能相当程度上还原原著  更别提钟馗伏魔 澳门风云二这样稀烂的影片了</p>\n<p>&nbsp;</p>\n<p>「少年时代」</p>\n<p>伙伴 陪伴 和自己的成长 这就是最朴素 最大众的少年时代 最写实的美国家庭 姐弟 新朋友 新家庭 新恋情 新的开始 18岁。执着的剧组和执着的男主家庭 用12年撑起了一个自己的纪录片 若要说一些遗憾 便是 少了些许波澜和累点罢 或许生活都这样⭐⭐⭐⭐</p>\n<p>&nbsp;</p>\n<p>「有一个地方只有我们知道」</p>\n<p>文艺老徐 好男人帅哥  穿越时空的爱恋 等一个人 王朔的剧本很婉转 梦一样让人回味 布拉格  老房子 水晶围脖 一封信 老车票 一尊永远在那儿的雕塑 对的人，你是不会失去的。。似青春又纷纷错过 似回忆总记不起  双线结构以老少相遇作为交点  些许落入俗套  吴亦凡王丽坤一类的偶像演员让平静暖心的剧情变得热火朝天 不时耳语尖叫拍凳跺腿  加上布拉格东欧浪漫文艺的风景 让小说剧情电影实实在在成了偶像剧  也罢情人节唯一的爱情剧吧 ⭐⭐⭐⭐</p>\n<p>&nbsp;</p>\n<p>「狼图腾」</p>\n<p>毕竟小说的影响力超过了电影不止一两个数量级，电影也精选了小说的几个重要的节点和精彩桥段 暴风雪夜与狼的决斗 与小狼的故事 刨狼的猎物 构成了电影的主要情节 草原上的故事也相对圆满的完成了人与自然取舍和相处的主旨传递 也成为了春节档独特突出的异类主题 且不谈拍摄草原的艰辛和狼形态的捕捉 单是时间跨度就足以见得设置组的用心 美中不足便是冯的演技还是略微僵硬 ⭐⭐⭐⭐</p>\n<p>&nbsp;</p>\n<p>「逃离德黑兰」</p>\n<p>剧情较为无趣 逃离的拍摄实在有些险峻而超离实际 宣扬大义大勇的拯救公民 以及拯救敌意世界意识形态暴力黑的典型 与刺杀金正恩等都有类似的资本主义潮吹的感慨 既然是得到了西方各大电影节认可的电影 唯一印象深刻的是躲在加国大使馆的美帝人员的紧张和凌乱变现的异常出彩 相比是比较中庸而符合G点的⭐⭐⭐</p>\n<p>&nbsp;</p>\n<p>「天将雄师」</p>\n<p>各种混搭各种奇葩 中西合璧的成龙大哥和 乱入的朱孝天崔始源 还有捧哏和逗哏的筷子兄弟 就这样奇葩的馅料居然还捏成了不错的饺子 大汉天国终于和古罗马骑兵来了一次穿越搏击和惺惺相惜 龙哥的光环强的无限续命 主角以开头就注定了死掉的命运 好惨的是死的还这么简单 但作为毫无特效的古装漠片能紧扣剧情一气呵成也不容易 给春节档一个惊喜⭐⭐⭐⭐</p>\n<p>&nbsp;</p>\n<p>「澳门风云2」</p>\n<p>不多谈 粤式无厘头笑点 无3d的3d片 春节呵呵不起来的嘻嘻档 烂 ⭐⭐</p>\n<p>「一路惊喜」</p>\n<p>虽然格调挺俗的 虽然演员挺作的 虽然情节挺狗血的 但是我居然感到了一丝暖意 挺好 ⭐⭐⭐⭐</p>\n<p>&nbsp;</p>\n<p>「模仿游戏」</p>\n<p>看点除了卷福的超群演技外 似乎并没什么深刻人心的 没有残酷的谍战 没有缜密的逻辑推理和演绎 没有繁复的破解技巧和战争胜利的重要性 只有时间段的跳跃 被基佬利用的爱情 和实验室（算是在做实验吧 和一大群基佬们的斗智斗勇和最后争夺经费和战略隐瞒的剧情冲突 但这就正是电影节电影的思路 對基佬對打擊 對戰爭勝利至高重要性對年代 對人性大義對褒獎 都是獲得普遍認可的重要原因 ⭐⭐⭐⭐</p>\n<p>&nbsp;</p>\n<p>&nbsp;</p>"},{"title":"【电影】【2015】〇一次点评","id":"541","date":"2015-01-31T20:07:13.000Z","_content":"\n最近闲的慌 拔草了许多电影 有当下上映的 也有各种高分&nbsp;&nbsp;【重返20岁】\n\n[![](http://ww3.sinaimg.cn/large/68eb7c93gw1eotcq3l0l9j21kw16o13e.jpg)](http://ww3.sinaimg.cn/large/68eb7c93gw1eotcq3l0l9j21kw16o13e.jpg)\n尽管是中文版【奇怪的她】 对白和情节上也不仅相似 但是剧情在中国化的喜剧氛围后 在幽默之余更加动人 讲述了60岁老太太进入青春照相馆穿越回20岁重回亲朋身边的逗趣温馨故事 &nbsp;贴近百姓人心的穿越让本显得平庸的幻想片令人动容 婆媳关系 婆婆的唠叨 祖辈对晚辈的疼爱 都和中国家庭的生活息息相关应该是举家都适合观看的好电影 推荐 ★★★★★\n\n&nbsp;【博物馆奇妙夜3】\n\n[![](http://ww3.sinaimg.cn/large/68eb7c93gw1eotbmtz5rxj21kw16othr.jpg)](http://ww3.sinaimg.cn/large/68eb7c93gw1eotbmtz5rxj21kw16othr.jpg)个人感觉这样的穿越就显得有些苍白 尽管秉承了1和2的故事串联和笑点 但是终归只能作为商业喜剧 凭借着一流的但却不入流的特效展示和脸谱化的人物和动物 使得笑点单调不具深意 终归是围绕着如何防止一块会褪色的石头褪色的故事展开 在大英博物馆碰到各种大变活人的化石疯跑了好几圈终于找到咪咪的俗套剧情 重口的爱情 木乃伊一家的温情 仅仅是难得的喜剧之外的意外 不推荐&nbsp;★★★\n\n&nbsp;&nbsp;\n\n【辩护人】\n\n![](http://ww1.sinaimg.cn/large/68eb7c93gw1eotbu6095ej211y0lcwkg.jpg)\n\n韩国电影最近经常入我的眼球 除了一贯的感情戏让人缠绵得撕心裂肺 更高的立意也是值得国产电影学习的地方 辩护人类似的主题若是在国内上映应该是冷处理禁播状态 结社游行反共主义 都是大忌讳 更甚的是提到了民主主义 权力交给人民 法律真正能凌驾于人制之上 从微观一个发际的律师心态的变化 到宏观上整个社会的响应整个律师界的声援 充满了正义（敢于与政府抵触）和正气 我宁愿相信学生是社会的源动力 科技的变革 政治和思潮的涌动 都是从底层接受教育感受最清澈的思维发出的 社会是个大熔炉 不进去不知道疾苦 但是进去了也便只晓得尝到疾苦了 剧中律师和家人的纠结 律师和阿玛的纠结 律师和法官和原告的纠结 都影射了整个社会的人际关系和人情来往对法制的影响 无论社会主义资本主义 暴力机关大抵上都是为了统治阶级服务的 但是能发声 能自由的发声 能自由的不加掩饰的发声 也便只有某些地方 才有罢 推荐★★★★★&nbsp;\n\n&nbsp;【布达佩斯大饭店】\n[![](http://ww2.sinaimg.cn/large/68eb7c93gw1eoud0ihps8j211y0lcwkg.jpg)](http://ww2.sinaimg.cn/large/68eb7c93gw1eoud0ihps8j211y0lcwkg.jpg)\n据传2014年奥斯卡就炒鸡火了今年又被捧红了 文艺到醉 拼接章节式的小段故事一般 娓娓道来 层层递进 把越狱 偷画 偷腥 逃亡表现的如此的幽默 但又不失结构感 尽管脸谱化过重了一些但是人物表现的张力十足 要强有能力的门童 广结人缘唠叨满腹又一路坎坷的酒店主管 冷酷的杀手 可爱懵懂为爱奋不顾身的女孩 极致的展现了导演的造化功力 推荐★★★★★\n\n&nbsp;【恐怖直播】&nbsp;\n\n韩国独特角度和独特风格的电影 特爱把主角从内心到外表抓狂捉急焦虑挣扎各种心理状态细微刻画 又是一场 针对国家针对政府层面的立意 最近几部看到的韩国高分电影都带有政治色彩 这一步甚是左派风格 毅然决然的在绝望的时候化身成了恐怖分子 这样的延伸在国内甚至可能成为民族主义 民粹主义分裂人民和国家的借口 因为值得深思的是国家尊严和个人尊严冲突时的应激处理方式 自我价值和他人价值联系融和时生命取舍的价值观对待问题 诚然 身处电影的灾难时 我也不清楚会不会暴力的变成一个为了自证而自我毁灭恐怖分子 ★★★★&nbsp;\n\n【素媛】\n\n&nbsp;超棒暖人心的电影 情节有些虐  在火车上本以为是个故事剧情 居然在被窝里看哭了 韩国的心理戏真是让人赞 超离了父母的爱外依旧心系整个国家整个社会的法制正义 推荐★★★★★&nbsp;\n\n【疯狂原始人】&nbsp;\n\n米帝梦工厂动画始终如一的剧情和特效完美结合 加上些许或勇气或希望或爱情的立意 搭配完美结局 整合成套的美国动画标准制作 些许欢乐些许感人 讲述了原始人老爹不愿接触新事物到勇于探索新天地的历程 ★★★★&nbsp;\n\n【霍比特人3-五军之战】\n\n&nbsp;没有资格评价 过于复杂的家族关系和世界观 但相比霍比特人1睡着了的我已经充满斗志的看完了 抛开剧情设置而言 对覆灭濒临崩溃的军队的描绘并没有让人看到绝望或者惨痛 而主角们过于单一化的主线进入单挑模式也不让人有更多现象空间 面对黄金魔咒而挣脱出来的索林也显得有些唐突 最出彩的怂蛋却压制了主角的人物化性格 战争格斗场面甚至想起了早些年的一些国产历史剧 特效不太值得imax 只有颜值影迷和故事系列影迷能够如此深邃的看下去罢 ★★★★&nbsp;\n\n【无人区】&nbsp;\n\n人只有在群居时才是人类 给独特的视角和故事结构赞 主角光环有些过于负重了 血腥暴力可以再更贴近实际 但一切的黑暗和光明都已很出彩 推荐★★★★★\n\n&nbsp;【消失的爱人】\n\n&nbsp;剧情反转以至于电影的类型都突然翻转 本以为是黄赌毒的温情片 结果意想不到的确是恐怖剧情悬疑片 女主有高圆圆那种独特的大方而温柔的美 我要是男主都被吓傻了 这妞完全没法hold 各大影评好评到爆 目测奥斯卡有一些收获 不过本应生活的太过跳跃了★★★★&nbsp;\n\n【智取威虎山】&nbsp;\n\n难得的国产战争片一气呵成的2个多小时 尽管任务化妆和服装都略假 但剧情层层深入以及反派的桀骜残暴性格给加分不少 其中少数土匪的幽默细胞和土匪帮派的对话、组织、反间等特殊场景成为亮点 最后的特性也十分酷炫 作为红色电影能有如此震撼而连贯的气质徐克展现不俗实力 推荐★★★★★ &nbsp; &nbsp;","source":"_posts/【电影】【2015】〇一次点评.md","raw":"---\ntitle: 【电影】【2015】〇一次点评\ncategories:\n  - 槽\ntags:\n  - 电影\nid: 541\ndate: 2015-02-01 04:07:13\n---\n\n最近闲的慌 拔草了许多电影 有当下上映的 也有各种高分&nbsp;&nbsp;【重返20岁】\n\n[![](http://ww3.sinaimg.cn/large/68eb7c93gw1eotcq3l0l9j21kw16o13e.jpg)](http://ww3.sinaimg.cn/large/68eb7c93gw1eotcq3l0l9j21kw16o13e.jpg)\n尽管是中文版【奇怪的她】 对白和情节上也不仅相似 但是剧情在中国化的喜剧氛围后 在幽默之余更加动人 讲述了60岁老太太进入青春照相馆穿越回20岁重回亲朋身边的逗趣温馨故事 &nbsp;贴近百姓人心的穿越让本显得平庸的幻想片令人动容 婆媳关系 婆婆的唠叨 祖辈对晚辈的疼爱 都和中国家庭的生活息息相关应该是举家都适合观看的好电影 推荐 ★★★★★\n\n&nbsp;【博物馆奇妙夜3】\n\n[![](http://ww3.sinaimg.cn/large/68eb7c93gw1eotbmtz5rxj21kw16othr.jpg)](http://ww3.sinaimg.cn/large/68eb7c93gw1eotbmtz5rxj21kw16othr.jpg)个人感觉这样的穿越就显得有些苍白 尽管秉承了1和2的故事串联和笑点 但是终归只能作为商业喜剧 凭借着一流的但却不入流的特效展示和脸谱化的人物和动物 使得笑点单调不具深意 终归是围绕着如何防止一块会褪色的石头褪色的故事展开 在大英博物馆碰到各种大变活人的化石疯跑了好几圈终于找到咪咪的俗套剧情 重口的爱情 木乃伊一家的温情 仅仅是难得的喜剧之外的意外 不推荐&nbsp;★★★\n\n&nbsp;&nbsp;\n\n【辩护人】\n\n![](http://ww1.sinaimg.cn/large/68eb7c93gw1eotbu6095ej211y0lcwkg.jpg)\n\n韩国电影最近经常入我的眼球 除了一贯的感情戏让人缠绵得撕心裂肺 更高的立意也是值得国产电影学习的地方 辩护人类似的主题若是在国内上映应该是冷处理禁播状态 结社游行反共主义 都是大忌讳 更甚的是提到了民主主义 权力交给人民 法律真正能凌驾于人制之上 从微观一个发际的律师心态的变化 到宏观上整个社会的响应整个律师界的声援 充满了正义（敢于与政府抵触）和正气 我宁愿相信学生是社会的源动力 科技的变革 政治和思潮的涌动 都是从底层接受教育感受最清澈的思维发出的 社会是个大熔炉 不进去不知道疾苦 但是进去了也便只晓得尝到疾苦了 剧中律师和家人的纠结 律师和阿玛的纠结 律师和法官和原告的纠结 都影射了整个社会的人际关系和人情来往对法制的影响 无论社会主义资本主义 暴力机关大抵上都是为了统治阶级服务的 但是能发声 能自由的发声 能自由的不加掩饰的发声 也便只有某些地方 才有罢 推荐★★★★★&nbsp;\n\n&nbsp;【布达佩斯大饭店】\n[![](http://ww2.sinaimg.cn/large/68eb7c93gw1eoud0ihps8j211y0lcwkg.jpg)](http://ww2.sinaimg.cn/large/68eb7c93gw1eoud0ihps8j211y0lcwkg.jpg)\n据传2014年奥斯卡就炒鸡火了今年又被捧红了 文艺到醉 拼接章节式的小段故事一般 娓娓道来 层层递进 把越狱 偷画 偷腥 逃亡表现的如此的幽默 但又不失结构感 尽管脸谱化过重了一些但是人物表现的张力十足 要强有能力的门童 广结人缘唠叨满腹又一路坎坷的酒店主管 冷酷的杀手 可爱懵懂为爱奋不顾身的女孩 极致的展现了导演的造化功力 推荐★★★★★\n\n&nbsp;【恐怖直播】&nbsp;\n\n韩国独特角度和独特风格的电影 特爱把主角从内心到外表抓狂捉急焦虑挣扎各种心理状态细微刻画 又是一场 针对国家针对政府层面的立意 最近几部看到的韩国高分电影都带有政治色彩 这一步甚是左派风格 毅然决然的在绝望的时候化身成了恐怖分子 这样的延伸在国内甚至可能成为民族主义 民粹主义分裂人民和国家的借口 因为值得深思的是国家尊严和个人尊严冲突时的应激处理方式 自我价值和他人价值联系融和时生命取舍的价值观对待问题 诚然 身处电影的灾难时 我也不清楚会不会暴力的变成一个为了自证而自我毁灭恐怖分子 ★★★★&nbsp;\n\n【素媛】\n\n&nbsp;超棒暖人心的电影 情节有些虐  在火车上本以为是个故事剧情 居然在被窝里看哭了 韩国的心理戏真是让人赞 超离了父母的爱外依旧心系整个国家整个社会的法制正义 推荐★★★★★&nbsp;\n\n【疯狂原始人】&nbsp;\n\n米帝梦工厂动画始终如一的剧情和特效完美结合 加上些许或勇气或希望或爱情的立意 搭配完美结局 整合成套的美国动画标准制作 些许欢乐些许感人 讲述了原始人老爹不愿接触新事物到勇于探索新天地的历程 ★★★★&nbsp;\n\n【霍比特人3-五军之战】\n\n&nbsp;没有资格评价 过于复杂的家族关系和世界观 但相比霍比特人1睡着了的我已经充满斗志的看完了 抛开剧情设置而言 对覆灭濒临崩溃的军队的描绘并没有让人看到绝望或者惨痛 而主角们过于单一化的主线进入单挑模式也不让人有更多现象空间 面对黄金魔咒而挣脱出来的索林也显得有些唐突 最出彩的怂蛋却压制了主角的人物化性格 战争格斗场面甚至想起了早些年的一些国产历史剧 特效不太值得imax 只有颜值影迷和故事系列影迷能够如此深邃的看下去罢 ★★★★&nbsp;\n\n【无人区】&nbsp;\n\n人只有在群居时才是人类 给独特的视角和故事结构赞 主角光环有些过于负重了 血腥暴力可以再更贴近实际 但一切的黑暗和光明都已很出彩 推荐★★★★★\n\n&nbsp;【消失的爱人】\n\n&nbsp;剧情反转以至于电影的类型都突然翻转 本以为是黄赌毒的温情片 结果意想不到的确是恐怖剧情悬疑片 女主有高圆圆那种独特的大方而温柔的美 我要是男主都被吓傻了 这妞完全没法hold 各大影评好评到爆 目测奥斯卡有一些收获 不过本应生活的太过跳跃了★★★★&nbsp;\n\n【智取威虎山】&nbsp;\n\n难得的国产战争片一气呵成的2个多小时 尽管任务化妆和服装都略假 但剧情层层深入以及反派的桀骜残暴性格给加分不少 其中少数土匪的幽默细胞和土匪帮派的对话、组织、反间等特殊场景成为亮点 最后的特性也十分酷炫 作为红色电影能有如此震撼而连贯的气质徐克展现不俗实力 推荐★★★★★ &nbsp; &nbsp;","slug":"【电影】【2015】〇一次点评","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7pu005guco41nu18y7r","content":"<p>最近闲的慌 拔草了许多电影 有当下上映的 也有各种高分&nbsp;&nbsp;【重返20岁】</p>\n<p><a href=\"http://ww3.sinaimg.cn/large/68eb7c93gw1eotcq3l0l9j21kw16o13e.jpg\" target=\"_blank\" rel=\"external\"><img src=\"http://ww3.sinaimg.cn/large/68eb7c93gw1eotcq3l0l9j21kw16o13e.jpg\" alt=\"\"></a><br>尽管是中文版【奇怪的她】 对白和情节上也不仅相似 但是剧情在中国化的喜剧氛围后 在幽默之余更加动人 讲述了60岁老太太进入青春照相馆穿越回20岁重回亲朋身边的逗趣温馨故事 &nbsp;贴近百姓人心的穿越让本显得平庸的幻想片令人动容 婆媳关系 婆婆的唠叨 祖辈对晚辈的疼爱 都和中国家庭的生活息息相关应该是举家都适合观看的好电影 推荐 ★★★★★</p>\n<p>&nbsp;【博物馆奇妙夜3】</p>\n<p><a href=\"http://ww3.sinaimg.cn/large/68eb7c93gw1eotbmtz5rxj21kw16othr.jpg\" target=\"_blank\" rel=\"external\"><img src=\"http://ww3.sinaimg.cn/large/68eb7c93gw1eotbmtz5rxj21kw16othr.jpg\" alt=\"\"></a>个人感觉这样的穿越就显得有些苍白 尽管秉承了1和2的故事串联和笑点 但是终归只能作为商业喜剧 凭借着一流的但却不入流的特效展示和脸谱化的人物和动物 使得笑点单调不具深意 终归是围绕着如何防止一块会褪色的石头褪色的故事展开 在大英博物馆碰到各种大变活人的化石疯跑了好几圈终于找到咪咪的俗套剧情 重口的爱情 木乃伊一家的温情 仅仅是难得的喜剧之外的意外 不推荐&nbsp;★★★</p>\n<p>&nbsp;&nbsp;</p>\n<p>【辩护人】</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93gw1eotbu6095ej211y0lcwkg.jpg\" alt=\"\"></p>\n<p>韩国电影最近经常入我的眼球 除了一贯的感情戏让人缠绵得撕心裂肺 更高的立意也是值得国产电影学习的地方 辩护人类似的主题若是在国内上映应该是冷处理禁播状态 结社游行反共主义 都是大忌讳 更甚的是提到了民主主义 权力交给人民 法律真正能凌驾于人制之上 从微观一个发际的律师心态的变化 到宏观上整个社会的响应整个律师界的声援 充满了正义（敢于与政府抵触）和正气 我宁愿相信学生是社会的源动力 科技的变革 政治和思潮的涌动 都是从底层接受教育感受最清澈的思维发出的 社会是个大熔炉 不进去不知道疾苦 但是进去了也便只晓得尝到疾苦了 剧中律师和家人的纠结 律师和阿玛的纠结 律师和法官和原告的纠结 都影射了整个社会的人际关系和人情来往对法制的影响 无论社会主义资本主义 暴力机关大抵上都是为了统治阶级服务的 但是能发声 能自由的发声 能自由的不加掩饰的发声 也便只有某些地方 才有罢 推荐★★★★★&nbsp;</p>\n<p>&nbsp;【布达佩斯大饭店】<br><a href=\"http://ww2.sinaimg.cn/large/68eb7c93gw1eoud0ihps8j211y0lcwkg.jpg\" target=\"_blank\" rel=\"external\"><img src=\"http://ww2.sinaimg.cn/large/68eb7c93gw1eoud0ihps8j211y0lcwkg.jpg\" alt=\"\"></a><br>据传2014年奥斯卡就炒鸡火了今年又被捧红了 文艺到醉 拼接章节式的小段故事一般 娓娓道来 层层递进 把越狱 偷画 偷腥 逃亡表现的如此的幽默 但又不失结构感 尽管脸谱化过重了一些但是人物表现的张力十足 要强有能力的门童 广结人缘唠叨满腹又一路坎坷的酒店主管 冷酷的杀手 可爱懵懂为爱奋不顾身的女孩 极致的展现了导演的造化功力 推荐★★★★★</p>\n<p>&nbsp;【恐怖直播】&nbsp;</p>\n<p>韩国独特角度和独特风格的电影 特爱把主角从内心到外表抓狂捉急焦虑挣扎各种心理状态细微刻画 又是一场 针对国家针对政府层面的立意 最近几部看到的韩国高分电影都带有政治色彩 这一步甚是左派风格 毅然决然的在绝望的时候化身成了恐怖分子 这样的延伸在国内甚至可能成为民族主义 民粹主义分裂人民和国家的借口 因为值得深思的是国家尊严和个人尊严冲突时的应激处理方式 自我价值和他人价值联系融和时生命取舍的价值观对待问题 诚然 身处电影的灾难时 我也不清楚会不会暴力的变成一个为了自证而自我毁灭恐怖分子 ★★★★&nbsp;</p>\n<p>【素媛】</p>\n<p>&nbsp;超棒暖人心的电影 情节有些虐  在火车上本以为是个故事剧情 居然在被窝里看哭了 韩国的心理戏真是让人赞 超离了父母的爱外依旧心系整个国家整个社会的法制正义 推荐★★★★★&nbsp;</p>\n<p>【疯狂原始人】&nbsp;</p>\n<p>米帝梦工厂动画始终如一的剧情和特效完美结合 加上些许或勇气或希望或爱情的立意 搭配完美结局 整合成套的美国动画标准制作 些许欢乐些许感人 讲述了原始人老爹不愿接触新事物到勇于探索新天地的历程 ★★★★&nbsp;</p>\n<p>【霍比特人3-五军之战】</p>\n<p>&nbsp;没有资格评价 过于复杂的家族关系和世界观 但相比霍比特人1睡着了的我已经充满斗志的看完了 抛开剧情设置而言 对覆灭濒临崩溃的军队的描绘并没有让人看到绝望或者惨痛 而主角们过于单一化的主线进入单挑模式也不让人有更多现象空间 面对黄金魔咒而挣脱出来的索林也显得有些唐突 最出彩的怂蛋却压制了主角的人物化性格 战争格斗场面甚至想起了早些年的一些国产历史剧 特效不太值得imax 只有颜值影迷和故事系列影迷能够如此深邃的看下去罢 ★★★★&nbsp;</p>\n<p>【无人区】&nbsp;</p>\n<p>人只有在群居时才是人类 给独特的视角和故事结构赞 主角光环有些过于负重了 血腥暴力可以再更贴近实际 但一切的黑暗和光明都已很出彩 推荐★★★★★</p>\n<p>&nbsp;【消失的爱人】</p>\n<p>&nbsp;剧情反转以至于电影的类型都突然翻转 本以为是黄赌毒的温情片 结果意想不到的确是恐怖剧情悬疑片 女主有高圆圆那种独特的大方而温柔的美 我要是男主都被吓傻了 这妞完全没法hold 各大影评好评到爆 目测奥斯卡有一些收获 不过本应生活的太过跳跃了★★★★&nbsp;</p>\n<p>【智取威虎山】&nbsp;</p>\n<p>难得的国产战争片一气呵成的2个多小时 尽管任务化妆和服装都略假 但剧情层层深入以及反派的桀骜残暴性格给加分不少 其中少数土匪的幽默细胞和土匪帮派的对话、组织、反间等特殊场景成为亮点 最后的特性也十分酷炫 作为红色电影能有如此震撼而连贯的气质徐克展现不俗实力 推荐★★★★★ &nbsp; &nbsp;</p>","excerpt":"","more":"<p>最近闲的慌 拔草了许多电影 有当下上映的 也有各种高分&nbsp;&nbsp;【重返20岁】</p>\n<p><a href=\"http://ww3.sinaimg.cn/large/68eb7c93gw1eotcq3l0l9j21kw16o13e.jpg\"><img src=\"http://ww3.sinaimg.cn/large/68eb7c93gw1eotcq3l0l9j21kw16o13e.jpg\" alt=\"\"></a><br>尽管是中文版【奇怪的她】 对白和情节上也不仅相似 但是剧情在中国化的喜剧氛围后 在幽默之余更加动人 讲述了60岁老太太进入青春照相馆穿越回20岁重回亲朋身边的逗趣温馨故事 &nbsp;贴近百姓人心的穿越让本显得平庸的幻想片令人动容 婆媳关系 婆婆的唠叨 祖辈对晚辈的疼爱 都和中国家庭的生活息息相关应该是举家都适合观看的好电影 推荐 ★★★★★</p>\n<p>&nbsp;【博物馆奇妙夜3】</p>\n<p><a href=\"http://ww3.sinaimg.cn/large/68eb7c93gw1eotbmtz5rxj21kw16othr.jpg\"><img src=\"http://ww3.sinaimg.cn/large/68eb7c93gw1eotbmtz5rxj21kw16othr.jpg\" alt=\"\"></a>个人感觉这样的穿越就显得有些苍白 尽管秉承了1和2的故事串联和笑点 但是终归只能作为商业喜剧 凭借着一流的但却不入流的特效展示和脸谱化的人物和动物 使得笑点单调不具深意 终归是围绕着如何防止一块会褪色的石头褪色的故事展开 在大英博物馆碰到各种大变活人的化石疯跑了好几圈终于找到咪咪的俗套剧情 重口的爱情 木乃伊一家的温情 仅仅是难得的喜剧之外的意外 不推荐&nbsp;★★★</p>\n<p>&nbsp;&nbsp;</p>\n<p>【辩护人】</p>\n<p><img src=\"http://ww1.sinaimg.cn/large/68eb7c93gw1eotbu6095ej211y0lcwkg.jpg\" alt=\"\"></p>\n<p>韩国电影最近经常入我的眼球 除了一贯的感情戏让人缠绵得撕心裂肺 更高的立意也是值得国产电影学习的地方 辩护人类似的主题若是在国内上映应该是冷处理禁播状态 结社游行反共主义 都是大忌讳 更甚的是提到了民主主义 权力交给人民 法律真正能凌驾于人制之上 从微观一个发际的律师心态的变化 到宏观上整个社会的响应整个律师界的声援 充满了正义（敢于与政府抵触）和正气 我宁愿相信学生是社会的源动力 科技的变革 政治和思潮的涌动 都是从底层接受教育感受最清澈的思维发出的 社会是个大熔炉 不进去不知道疾苦 但是进去了也便只晓得尝到疾苦了 剧中律师和家人的纠结 律师和阿玛的纠结 律师和法官和原告的纠结 都影射了整个社会的人际关系和人情来往对法制的影响 无论社会主义资本主义 暴力机关大抵上都是为了统治阶级服务的 但是能发声 能自由的发声 能自由的不加掩饰的发声 也便只有某些地方 才有罢 推荐★★★★★&nbsp;</p>\n<p>&nbsp;【布达佩斯大饭店】<br><a href=\"http://ww2.sinaimg.cn/large/68eb7c93gw1eoud0ihps8j211y0lcwkg.jpg\"><img src=\"http://ww2.sinaimg.cn/large/68eb7c93gw1eoud0ihps8j211y0lcwkg.jpg\" alt=\"\"></a><br>据传2014年奥斯卡就炒鸡火了今年又被捧红了 文艺到醉 拼接章节式的小段故事一般 娓娓道来 层层递进 把越狱 偷画 偷腥 逃亡表现的如此的幽默 但又不失结构感 尽管脸谱化过重了一些但是人物表现的张力十足 要强有能力的门童 广结人缘唠叨满腹又一路坎坷的酒店主管 冷酷的杀手 可爱懵懂为爱奋不顾身的女孩 极致的展现了导演的造化功力 推荐★★★★★</p>\n<p>&nbsp;【恐怖直播】&nbsp;</p>\n<p>韩国独特角度和独特风格的电影 特爱把主角从内心到外表抓狂捉急焦虑挣扎各种心理状态细微刻画 又是一场 针对国家针对政府层面的立意 最近几部看到的韩国高分电影都带有政治色彩 这一步甚是左派风格 毅然决然的在绝望的时候化身成了恐怖分子 这样的延伸在国内甚至可能成为民族主义 民粹主义分裂人民和国家的借口 因为值得深思的是国家尊严和个人尊严冲突时的应激处理方式 自我价值和他人价值联系融和时生命取舍的价值观对待问题 诚然 身处电影的灾难时 我也不清楚会不会暴力的变成一个为了自证而自我毁灭恐怖分子 ★★★★&nbsp;</p>\n<p>【素媛】</p>\n<p>&nbsp;超棒暖人心的电影 情节有些虐  在火车上本以为是个故事剧情 居然在被窝里看哭了 韩国的心理戏真是让人赞 超离了父母的爱外依旧心系整个国家整个社会的法制正义 推荐★★★★★&nbsp;</p>\n<p>【疯狂原始人】&nbsp;</p>\n<p>米帝梦工厂动画始终如一的剧情和特效完美结合 加上些许或勇气或希望或爱情的立意 搭配完美结局 整合成套的美国动画标准制作 些许欢乐些许感人 讲述了原始人老爹不愿接触新事物到勇于探索新天地的历程 ★★★★&nbsp;</p>\n<p>【霍比特人3-五军之战】</p>\n<p>&nbsp;没有资格评价 过于复杂的家族关系和世界观 但相比霍比特人1睡着了的我已经充满斗志的看完了 抛开剧情设置而言 对覆灭濒临崩溃的军队的描绘并没有让人看到绝望或者惨痛 而主角们过于单一化的主线进入单挑模式也不让人有更多现象空间 面对黄金魔咒而挣脱出来的索林也显得有些唐突 最出彩的怂蛋却压制了主角的人物化性格 战争格斗场面甚至想起了早些年的一些国产历史剧 特效不太值得imax 只有颜值影迷和故事系列影迷能够如此深邃的看下去罢 ★★★★&nbsp;</p>\n<p>【无人区】&nbsp;</p>\n<p>人只有在群居时才是人类 给独特的视角和故事结构赞 主角光环有些过于负重了 血腥暴力可以再更贴近实际 但一切的黑暗和光明都已很出彩 推荐★★★★★</p>\n<p>&nbsp;【消失的爱人】</p>\n<p>&nbsp;剧情反转以至于电影的类型都突然翻转 本以为是黄赌毒的温情片 结果意想不到的确是恐怖剧情悬疑片 女主有高圆圆那种独特的大方而温柔的美 我要是男主都被吓傻了 这妞完全没法hold 各大影评好评到爆 目测奥斯卡有一些收获 不过本应生活的太过跳跃了★★★★&nbsp;</p>\n<p>【智取威虎山】&nbsp;</p>\n<p>难得的国产战争片一气呵成的2个多小时 尽管任务化妆和服装都略假 但剧情层层深入以及反派的桀骜残暴性格给加分不少 其中少数土匪的幽默细胞和土匪帮派的对话、组织、反间等特殊场景成为亮点 最后的特性也十分酷炫 作为红色电影能有如此震撼而连贯的气质徐克展现不俗实力 推荐★★★★★ &nbsp; &nbsp;</p>"},{"title":"一个装机清单","id":"590","date":"2015-06-21T08:36:25.000Z","_content":"\n分享一个装机[清单](https://qdan.me/list/VYA83-njGa_t4EkD)。","source":"_posts/一个装机清单.md","raw":"---\ntitle: 一个装机清单\ncategories:\n  - App强推\n  - 软文\ntags:\n  - 装机\nid: 590\ndate: 2015-06-21 16:36:25\n---\n\n分享一个装机[清单](https://qdan.me/list/VYA83-njGa_t4EkD)。","slug":"一个装机清单","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7px005kuco4vm18k8xp","content":"<p>分享一个装机<a href=\"https://qdan.me/list/VYA83-njGa_t4EkD\" target=\"_blank\" rel=\"external\">清单</a>。</p>","excerpt":"","more":"<p>分享一个装机<a href=\"https://qdan.me/list/VYA83-njGa_t4EkD\">清单</a>。</p>"},{"title":"不予置评。","id":"434","date":"2013-12-16T17:12:14.000Z","_content":"\n<object width=\"460\" height=\"372\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" align=\"middle\"><param name=\"src\" value=\"http://static.video.qq.com/TPout.swf?auto=1&amp;vid=t01238l2e1b\" /><param name=\"quality\" value=\"high\" /><param name=\"allowscriptaccess\" value=\"sameDomain\" /><param name=\"allowfullscreen\" value=\"true\" /><embed width=\"460\" height=\"372\" type=\"application/x-shockwave-flash\" src=\"http://static.video.qq.com/TPout.swf?auto=0&amp;vid=t01238l2e1b\" quality=\"high\" allowscriptaccess=\"sameDomain\" allowfullscreen=\"true\" align=\"middle\" /></object>\n学习的态度来发现问题。虽然问题很多。也被质疑不客观。但是总的来说还是有值得学习的东西。比如体验考量标准，考量参数，考量层级和对比角度。\n\n&nbsp;[](http://www.zhihu.com/question/22232499)","source":"_posts/不予置评。.md","raw":"---\ntitle: 不予置评。\ncategories:\n  - 槽\ntags:\n  - 吐槽\nid: 434\ndate: 2013-12-17 01:12:14\n---\n\n<object width=\"460\" height=\"372\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" align=\"middle\"><param name=\"src\" value=\"http://static.video.qq.com/TPout.swf?auto=1&amp;vid=t01238l2e1b\" /><param name=\"quality\" value=\"high\" /><param name=\"allowscriptaccess\" value=\"sameDomain\" /><param name=\"allowfullscreen\" value=\"true\" /><embed width=\"460\" height=\"372\" type=\"application/x-shockwave-flash\" src=\"http://static.video.qq.com/TPout.swf?auto=0&amp;vid=t01238l2e1b\" quality=\"high\" allowscriptaccess=\"sameDomain\" allowfullscreen=\"true\" align=\"middle\" /></object>\n学习的态度来发现问题。虽然问题很多。也被质疑不客观。但是总的来说还是有值得学习的东西。比如体验考量标准，考量参数，考量层级和对比角度。\n\n&nbsp;[](http://www.zhihu.com/question/22232499)","slug":"不予置评。","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7q2005ouco4hi7cn5d7","content":"<p><object width=\"460\" height=\"372\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" align=\"middle\"><param name=\"src\" value=\"http://static.video.qq.com/TPout.swf?auto=1&amp;vid=t01238l2e1b\"><param name=\"quality\" value=\"high\"><param name=\"allowscriptaccess\" value=\"sameDomain\"><param name=\"allowfullscreen\" value=\"true\"><embed width=\"460\" height=\"372\" type=\"application/x-shockwave-flash\" src=\"http://static.video.qq.com/TPout.swf?auto=0&amp;vid=t01238l2e1b\" quality=\"high\" allowscriptaccess=\"sameDomain\" allowfullscreen=\"true\" align=\"middle\"></object><br>学习的态度来发现问题。虽然问题很多。也被质疑不客观。但是总的来说还是有值得学习的东西。比如体验考量标准，考量参数，考量层级和对比角度。</p>\n<p>&nbsp;<a href=\"http://www.zhihu.com/question/22232499\" target=\"_blank\" rel=\"external\"></a></p>","excerpt":"","more":"<p><object width=\"460\" height=\"372\" classid=\"clsid:d27cdb6e-ae6d-11cf-96b8-444553540000\" codebase=\"http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab#version=6,0,40,0\" align=\"middle\"><param name=\"src\" value=\"http://static.video.qq.com/TPout.swf?auto=1&amp;vid=t01238l2e1b\"><param name=\"quality\" value=\"high\"><param name=\"allowscriptaccess\" value=\"sameDomain\"><param name=\"allowfullscreen\" value=\"true\"><embed width=\"460\" height=\"372\" type=\"application/x-shockwave-flash\" src=\"http://static.video.qq.com/TPout.swf?auto=0&amp;vid=t01238l2e1b\" quality=\"high\" allowscriptaccess=\"sameDomain\" allowfullscreen=\"true\" align=\"middle\"></object><br>学习的态度来发现问题。虽然问题很多。也被质疑不客观。但是总的来说还是有值得学习的东西。比如体验考量标准，考量参数，考量层级和对比角度。</p>\n<p>&nbsp;<a href=\"http://www.zhihu.com/question/22232499\"></a></p>"},{"title":"主题更新伤不起","id":"248","date":"2013-07-10T20:34:54.000Z","_content":"\n主题更新被迫开了一个子主题。。好多没有提取粗来的细节部分又得重新改了。。。网速慢成狗效率好低。。改改停停又到破晓了。。不过发现了个插件FVD Video Downloader...妈妈再也不用担心我去cache里面找视频了。。","source":"_posts/主题更新伤不起.md","raw":"---\ntitle: 主题更新伤不起\ncategories:\n  - 槽\ntags:\n  - 吐槽\nid: 248\ndate: 2013-07-11 04:34:54\n---\n\n主题更新被迫开了一个子主题。。好多没有提取粗来的细节部分又得重新改了。。。网速慢成狗效率好低。。改改停停又到破晓了。。不过发现了个插件FVD Video Downloader...妈妈再也不用担心我去cache里面找视频了。。","slug":"主题更新伤不起","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7q4005suco4aotrq8e6","content":"<p>主题更新被迫开了一个子主题。。好多没有提取粗来的细节部分又得重新改了。。。网速慢成狗效率好低。。改改停停又到破晓了。。不过发现了个插件FVD Video Downloader…妈妈再也不用担心我去cache里面找视频了。。</p>","excerpt":"","more":"<p>主题更新被迫开了一个子主题。。好多没有提取粗来的细节部分又得重新改了。。。网速慢成狗效率好低。。改改停停又到破晓了。。不过发现了个插件FVD Video Downloader…妈妈再也不用担心我去cache里面找视频了。。</p>"},{"title":"今日吐槽","id":"97","date":"2013-05-07T17:36:20.000Z","_content":"\n**槽点满满啊。说说今日finished**\n\n标签云结了 还挺漂亮 颜色和大小可调整\n学会了wp的页面结构。main和sidebar还是听容易弄的。添加了豆瓣音乐的界面。\n完善了图片的查看。对于一个没有php基础的来说还是有些头大。\n其实吧。何必买个域名。用bae做也挺好的。\n话说添加了filter怎么就行不通了。神奇的地球。发布不成功页面还是可以打开的。等待答复中。","source":"_posts/今日吐槽.md","raw":"---\ntitle: 今日吐槽\ncategories:\n  - 槽\ntags:\n  - 吐槽\nid: 97\ndate: 2013-05-08 01:36:20\n---\n\n**槽点满满啊。说说今日finished**\n\n标签云结了 还挺漂亮 颜色和大小可调整\n学会了wp的页面结构。main和sidebar还是听容易弄的。添加了豆瓣音乐的界面。\n完善了图片的查看。对于一个没有php基础的来说还是有些头大。\n其实吧。何必买个域名。用bae做也挺好的。\n话说添加了filter怎么就行不通了。神奇的地球。发布不成功页面还是可以打开的。等待答复中。","slug":"今日吐槽","published":1,"updated":"2016-04-11T14:09:45.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7q6005wuco4cz6figzv","content":"<p><strong>槽点满满啊。说说今日finished</strong></p>\n<p>标签云结了 还挺漂亮 颜色和大小可调整<br>学会了wp的页面结构。main和sidebar还是听容易弄的。添加了豆瓣音乐的界面。<br>完善了图片的查看。对于一个没有php基础的来说还是有些头大。<br>其实吧。何必买个域名。用bae做也挺好的。<br>话说添加了filter怎么就行不通了。神奇的地球。发布不成功页面还是可以打开的。等待答复中。</p>","excerpt":"","more":"<p><strong>槽点满满啊。说说今日finished</strong></p>\n<p>标签云结了 还挺漂亮 颜色和大小可调整<br>学会了wp的页面结构。main和sidebar还是听容易弄的。添加了豆瓣音乐的界面。<br>完善了图片的查看。对于一个没有php基础的来说还是有些头大。<br>其实吧。何必买个域名。用bae做也挺好的。<br>话说添加了filter怎么就行不通了。神奇的地球。发布不成功页面还是可以打开的。等待答复中。</p>"},{"title":"位运算各种","date":"2016-05-12T03:12:00.000Z","_content":"\n最近发现位运算在很多场合有很多运用啊。大概有以下几个方面:\n\n- 涉及二进制及其2^n进制的运算\n- 很少字段的struct class的改写例如棋盘记录和模式比较\n- 逼格&效率比较高的小心机\n\n\n# 几个运算符\n|   符号  |   名称       | 含义  |\n| :--------: |:------:| :------:|\n| ``^``      | 按位亦或 | 同为0，异为1 |\n| 竖线(打不了) | 按位或  |  有1则1，双0为0 |\n| ``&``      |  按位与  |  有0则0，双为1 |\n|``~``      |按位取反|变1为0，变0为1（包含符号位）|\n|``<<``|按位左移（包括符号）|对应二进制每移一位乘二|\n|``>>``|按位右移（包括符号）|对应二进制每移一位除二|\n|``>>>`|按位无符号右移|对应二进制全指定的位数|\n以上均是按位操作，要区分逻辑运算``&& ||``和位运算符``& |``\n\n# 关于取反\n普通的Integer char等按位操作都是直接按照它们的二进制补码操作，int直接使用该数字的补码，char则先按照ascii转换成二进制在进行操作。  \ne.g.``char a = 'a'``a的ascii码十进制为097，二进制原码为1100001，这里注意，作为char，它在java中是一个<font color=\"red\">无符号16位的整数</font>，所以补齐它的\n二进制原码 补码 反码（非负数原码 补码 反码相同）\n> 000000000 1100001\n\n取反后的补码\n> 111111111 0011110\n\n取反后的反码\n> 111111111 0011101\n\n取反后的源码\n> 100000000 1100010\n\n十进制即为 **-98**。 \n同理的，byte如果存储字符型也是按照先转成ascii码进行操作，即便是字符型的数字也一样。\n\n```java\nbyte a = 2;\nint b = ~a;//输出b为-3\nbyte c = '2';\nint d = ~c;//输出d为-51 2的ascii为50(十进制) 32(十六进制)\n```\n# 关于亦或\n亦或相当的特别同时阴森啊，有几个性质\n\n- a^a = 0 也就是亦或自己为0，因为每位都是相同的。\n- a^a^a = a^0 = 0^a  = a\n- a^b = b^a 符合交换律\n- (a^b)^c = a^(b^c) 符合结合律\n- e = a^b^c^d <-> e^a = b^c^d <-> e^a^b= c^d <-> e^a^b^c=d\n\n既然满足交换律结合律，则如果出现这么一种情况，\n> [一个数组里除了一个数值出现一次，其他都出现了两次。找出这个数值。]\n将这个数组全部亦或一遍，则出现两次的都可以按照交换律结合律化为0，\n\n## 数组内只存在两个奇数次出现的数，其他都出现了偶数次，找出这两个数\n>思路：这就是上面实例的改进，因为知道了其他数字都出现了偶数次，全体亦或的结果就是``x=a^b`` 其中a b分别是所要找的这两个数。由于a b不同，则x必然不为零，也必然存在为1的位（可以取从右第一次出现1的位置）。同时由于是亦或操作，这个1必然是a和b相异造成的。这样，把这一位为1的分一组，这一位为0的分一组，出现偶数次的依然会被分到一组通过亦或自己消除。\n\n```java\n    //从右寻找补码中1第一次出现的位置\n    public static int getFirst1(int num){\n        int index = 0;\n        while(index<32){\n            if(((num&(1<<index))^(1<<index))==0)\n                return index+1;\n            else\n                index++;\n        }\n        return -1;\n    }\n\n    //判断这个数这一位是否为1\n    public static boolean is1AtPos(int num,int pos){    \n        return ((num>>(pos-1))&1)==1;\n    }\n\n    //寻找这两个数\n    public static int[] get2Num(int[] a){\n        int [] find2Num = new int[2];\n        //默认初始化0\n        int rs = 0;\n        for (int i : a) {\n            rs ^= i;//亦或全体求x\n        int pos=getFirst1(rs);//寻找第一个出现1的位\n        for (int j : a) {\n            if(is1AtPos(j,pos))//按这位是否位1分组\n                find2Num[0] ^= j;\n            else\n                find2Num[1] ^= j;           \n        }\n        System.out.println(find2Num[0]+\" \"+find2Num[1]);\n        return find2Num;\n    }\n```\n## 使用位亦或(^)节约空间的数据交换\n\n原理：a亦或b=c，b亦或a=c，也就是亦或满足交换律；位亦或的逆运算，也就是``(a^b)^b=a``等于它自己。所以，只需三个亦或运算即可交换数据。看代码。\n\n```\n    a ^= b;\n    b ^= a;\n    a ^= b;\n```\n## 使用亦或加密\n\n中文配合亦或加密再加上其他的一些加密算法可以很好的掩护原文。\n\n```\n        char  a1='晚' ,  a2='上' ,  a3='来' ,  a4='我',  a5='家' ; \n        char secret='8' ; \n        a1=(char) (a1^secret); \n        a2=(char) (a2^secret); \n        a3=(char) (a3^secret); \n        a4=(char) (a4^secret); \n        a5=(char) (a5^secret); \n        System.out.println(\"密文:\"+a1+a2+a3+a4+a5); \n        a1=(char) (a1^secret); \n        a2=(char) (a2^secret); \n        a3=(char) (a3^secret); \n        a4=(char) (a4^secret); \n        a5=(char) (a5^secret); \n        System.out.println(\"原文:\"+a1+a2+a3+a4+a5); \n```\n## 亦或判别IP地址是否相等\n使用亦或在加上按位与的方式比==加&&的方式效率高。\n```\n    static int ipv6_addr_equal(int[] in6_addr_a1, int[] in6_addr_a2)\n    {\n    return (((in6_addr_a1[0] ^ in6_addr_a2[0]) |\n        (in6_addr_a1[1] ^ in6_addr_a2[1]) |\n        (in6_addr_a1[2] ^ in6_addr_a2[2]) |\n        (in6_addr_a1[3] ^ in6_addr_a2[3])) == 0);\n    }\n```\n\n# 关于按位与\n按位与操作一般是与1配合 判断奇偶，或者判断某位是否为1；或保留下某位位数字(与位移结合)\n\n```\na&1 == 0    偶数\na&1 == 1    奇数\n```\n# 关于按位与\n按位或操作一般与0配合 \n# 按位左右移\n左右移本质上就是以bit为单元进行二进制的操作，而二进制左右移n位在十进制就意味着乘以2^n或除以2^n.按位操作可以大大提升效率\n港真，很多面试都有求幂的题目。很棒，刷题狗就喜欢做这种题，然而第一次碰到这题我懵逼的采用了树。傻缺了。\n\n将二进制数绕圈循环，取往左(右)第k个为头。很多题目里面有啊\n\n```java\nint a = a<<k | a >> (Integer.SIZE-k); //左数第k个当头\nint b = b>>k | b >> (Integer.SIZE-k); //右数第k个当头\n```\n第k位置1\n\n```java\n    a|(1<<k);\n```\n第k位置0\n\n```\n    a&(~(1<<k));\n```\n取第k位的数值\n\n```\n    a>>k&1;\n```\n后k位为0，其余为1\n\n```\n    (~0)&(1<<(k+1));\n```\n后k位为1，其余为0\n\n```\n    ~((~0)<<k);\n```\n\n## 左右移应用-二分求幂\n\n<font>Caution！这个思想很重要!</font>\n\n```java\n    public static int Power(int a, int n){\n        int ans = 1;\n        while (n > 0) {\n           if ((n & 1)!=0) {//末位不为零\n                ans *= a;\n                n--;\n            } \n            else {\n                a *= a;\n                n >>= 1;\n            }\n        }\n        return ans;\n    }\n```\n递归版本\n\n```java\n    public static int power(int a,int n)  \n    {  \n        if(n==1) return a;  \n        if(n&1)  \n          return power(a,n-1) * a;  \n        else  \n        {  \n            int t=power(a,n>>1);  \n            return t*t;  \n        }  \n    }  \n```","source":"_posts/位运算各种.md","raw":"---\ntitle: 位运算各种\ndate: 2016-05-12 11:12:00\ntags: BitManipulattion\ncategories:\n  - 代码狗\n  - 学习log\n---\n\n最近发现位运算在很多场合有很多运用啊。大概有以下几个方面:\n\n- 涉及二进制及其2^n进制的运算\n- 很少字段的struct class的改写例如棋盘记录和模式比较\n- 逼格&效率比较高的小心机\n\n\n# 几个运算符\n|   符号  |   名称       | 含义  |\n| :--------: |:------:| :------:|\n| ``^``      | 按位亦或 | 同为0，异为1 |\n| 竖线(打不了) | 按位或  |  有1则1，双0为0 |\n| ``&``      |  按位与  |  有0则0，双为1 |\n|``~``      |按位取反|变1为0，变0为1（包含符号位）|\n|``<<``|按位左移（包括符号）|对应二进制每移一位乘二|\n|``>>``|按位右移（包括符号）|对应二进制每移一位除二|\n|``>>>`|按位无符号右移|对应二进制全指定的位数|\n以上均是按位操作，要区分逻辑运算``&& ||``和位运算符``& |``\n\n# 关于取反\n普通的Integer char等按位操作都是直接按照它们的二进制补码操作，int直接使用该数字的补码，char则先按照ascii转换成二进制在进行操作。  \ne.g.``char a = 'a'``a的ascii码十进制为097，二进制原码为1100001，这里注意，作为char，它在java中是一个<font color=\"red\">无符号16位的整数</font>，所以补齐它的\n二进制原码 补码 反码（非负数原码 补码 反码相同）\n> 000000000 1100001\n\n取反后的补码\n> 111111111 0011110\n\n取反后的反码\n> 111111111 0011101\n\n取反后的源码\n> 100000000 1100010\n\n十进制即为 **-98**。 \n同理的，byte如果存储字符型也是按照先转成ascii码进行操作，即便是字符型的数字也一样。\n\n```java\nbyte a = 2;\nint b = ~a;//输出b为-3\nbyte c = '2';\nint d = ~c;//输出d为-51 2的ascii为50(十进制) 32(十六进制)\n```\n# 关于亦或\n亦或相当的特别同时阴森啊，有几个性质\n\n- a^a = 0 也就是亦或自己为0，因为每位都是相同的。\n- a^a^a = a^0 = 0^a  = a\n- a^b = b^a 符合交换律\n- (a^b)^c = a^(b^c) 符合结合律\n- e = a^b^c^d <-> e^a = b^c^d <-> e^a^b= c^d <-> e^a^b^c=d\n\n既然满足交换律结合律，则如果出现这么一种情况，\n> [一个数组里除了一个数值出现一次，其他都出现了两次。找出这个数值。]\n将这个数组全部亦或一遍，则出现两次的都可以按照交换律结合律化为0，\n\n## 数组内只存在两个奇数次出现的数，其他都出现了偶数次，找出这两个数\n>思路：这就是上面实例的改进，因为知道了其他数字都出现了偶数次，全体亦或的结果就是``x=a^b`` 其中a b分别是所要找的这两个数。由于a b不同，则x必然不为零，也必然存在为1的位（可以取从右第一次出现1的位置）。同时由于是亦或操作，这个1必然是a和b相异造成的。这样，把这一位为1的分一组，这一位为0的分一组，出现偶数次的依然会被分到一组通过亦或自己消除。\n\n```java\n    //从右寻找补码中1第一次出现的位置\n    public static int getFirst1(int num){\n        int index = 0;\n        while(index<32){\n            if(((num&(1<<index))^(1<<index))==0)\n                return index+1;\n            else\n                index++;\n        }\n        return -1;\n    }\n\n    //判断这个数这一位是否为1\n    public static boolean is1AtPos(int num,int pos){    \n        return ((num>>(pos-1))&1)==1;\n    }\n\n    //寻找这两个数\n    public static int[] get2Num(int[] a){\n        int [] find2Num = new int[2];\n        //默认初始化0\n        int rs = 0;\n        for (int i : a) {\n            rs ^= i;//亦或全体求x\n        int pos=getFirst1(rs);//寻找第一个出现1的位\n        for (int j : a) {\n            if(is1AtPos(j,pos))//按这位是否位1分组\n                find2Num[0] ^= j;\n            else\n                find2Num[1] ^= j;           \n        }\n        System.out.println(find2Num[0]+\" \"+find2Num[1]);\n        return find2Num;\n    }\n```\n## 使用位亦或(^)节约空间的数据交换\n\n原理：a亦或b=c，b亦或a=c，也就是亦或满足交换律；位亦或的逆运算，也就是``(a^b)^b=a``等于它自己。所以，只需三个亦或运算即可交换数据。看代码。\n\n```\n    a ^= b;\n    b ^= a;\n    a ^= b;\n```\n## 使用亦或加密\n\n中文配合亦或加密再加上其他的一些加密算法可以很好的掩护原文。\n\n```\n        char  a1='晚' ,  a2='上' ,  a3='来' ,  a4='我',  a5='家' ; \n        char secret='8' ; \n        a1=(char) (a1^secret); \n        a2=(char) (a2^secret); \n        a3=(char) (a3^secret); \n        a4=(char) (a4^secret); \n        a5=(char) (a5^secret); \n        System.out.println(\"密文:\"+a1+a2+a3+a4+a5); \n        a1=(char) (a1^secret); \n        a2=(char) (a2^secret); \n        a3=(char) (a3^secret); \n        a4=(char) (a4^secret); \n        a5=(char) (a5^secret); \n        System.out.println(\"原文:\"+a1+a2+a3+a4+a5); \n```\n## 亦或判别IP地址是否相等\n使用亦或在加上按位与的方式比==加&&的方式效率高。\n```\n    static int ipv6_addr_equal(int[] in6_addr_a1, int[] in6_addr_a2)\n    {\n    return (((in6_addr_a1[0] ^ in6_addr_a2[0]) |\n        (in6_addr_a1[1] ^ in6_addr_a2[1]) |\n        (in6_addr_a1[2] ^ in6_addr_a2[2]) |\n        (in6_addr_a1[3] ^ in6_addr_a2[3])) == 0);\n    }\n```\n\n# 关于按位与\n按位与操作一般是与1配合 判断奇偶，或者判断某位是否为1；或保留下某位位数字(与位移结合)\n\n```\na&1 == 0    偶数\na&1 == 1    奇数\n```\n# 关于按位与\n按位或操作一般与0配合 \n# 按位左右移\n左右移本质上就是以bit为单元进行二进制的操作，而二进制左右移n位在十进制就意味着乘以2^n或除以2^n.按位操作可以大大提升效率\n港真，很多面试都有求幂的题目。很棒，刷题狗就喜欢做这种题，然而第一次碰到这题我懵逼的采用了树。傻缺了。\n\n将二进制数绕圈循环，取往左(右)第k个为头。很多题目里面有啊\n\n```java\nint a = a<<k | a >> (Integer.SIZE-k); //左数第k个当头\nint b = b>>k | b >> (Integer.SIZE-k); //右数第k个当头\n```\n第k位置1\n\n```java\n    a|(1<<k);\n```\n第k位置0\n\n```\n    a&(~(1<<k));\n```\n取第k位的数值\n\n```\n    a>>k&1;\n```\n后k位为0，其余为1\n\n```\n    (~0)&(1<<(k+1));\n```\n后k位为1，其余为0\n\n```\n    ~((~0)<<k);\n```\n\n## 左右移应用-二分求幂\n\n<font>Caution！这个思想很重要!</font>\n\n```java\n    public static int Power(int a, int n){\n        int ans = 1;\n        while (n > 0) {\n           if ((n & 1)!=0) {//末位不为零\n                ans *= a;\n                n--;\n            } \n            else {\n                a *= a;\n                n >>= 1;\n            }\n        }\n        return ans;\n    }\n```\n递归版本\n\n```java\n    public static int power(int a,int n)  \n    {  \n        if(n==1) return a;  \n        if(n&1)  \n          return power(a,n-1) * a;  \n        else  \n        {  \n            int t=power(a,n>>1);  \n            return t*t;  \n        }  \n    }  \n```","slug":"位运算各种","published":1,"updated":"2016-05-18T13:13:18.644Z","_id":"cio8sn7q90060uco4qkofiqax","comments":1,"layout":"post","photos":[],"link":"","content":"<p>最近发现位运算在很多场合有很多运用啊。大概有以下几个方面:</p>\n<ul>\n<li>涉及二进制及其2^n进制的运算</li>\n<li>很少字段的struct class的改写例如棋盘记录和模式比较</li>\n<li>逼格&amp;效率比较高的小心机</li>\n</ul>\n<h1 id=\"几个运算符\"><a href=\"#几个运算符\" class=\"headerlink\" title=\"几个运算符\"></a>几个运算符</h1><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>^</code></td>\n<td style=\"text-align:center\">按位亦或</td>\n<td style=\"text-align:center\">同为0，异为1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">竖线(打不了)</td>\n<td style=\"text-align:center\">按位或</td>\n<td style=\"text-align:center\">有1则1，双0为0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>&amp;</code></td>\n<td style=\"text-align:center\">按位与</td>\n<td style=\"text-align:center\">有0则0，双为1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>~</code></td>\n<td style=\"text-align:center\">按位取反</td>\n<td style=\"text-align:center\">变1为0，变0为1（包含符号位）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>&lt;&lt;</code></td>\n<td style=\"text-align:center\">按位左移（包括符号）</td>\n<td style=\"text-align:center\">对应二进制每移一位乘二</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>&gt;&gt;</code></td>\n<td style=\"text-align:center\">按位右移（包括符号）</td>\n<td style=\"text-align:center\">对应二进制每移一位除二</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>`&gt;&gt;&gt;</code></td>\n<td style=\"text-align:center\">按位无符号右移</td>\n<td style=\"text-align:center\">对应二进制全指定的位数</td>\n</tr>\n</tbody>\n</table>\n<p>以上均是按位操作，要区分逻辑运算<code>&amp;&amp; ||</code>和位运算符<code>&amp; |</code></p>\n<h1 id=\"关于取反\"><a href=\"#关于取反\" class=\"headerlink\" title=\"关于取反\"></a>关于取反</h1><p>普通的Integer char等按位操作都是直接按照它们的二进制补码操作，int直接使用该数字的补码，char则先按照ascii转换成二进制在进行操作。<br>e.g.<code>char a = &#39;a&#39;</code>a的ascii码十进制为097，二进制原码为1100001，这里注意，作为char，它在java中是一个<font color=\"red\">无符号16位的整数</font>，所以补齐它的<br>二进制原码 补码 反码（非负数原码 补码 反码相同）</p>\n<blockquote>\n<p>000000000 1100001</p>\n</blockquote>\n<p>取反后的补码</p>\n<blockquote>\n<p>111111111 0011110</p>\n</blockquote>\n<p>取反后的反码</p>\n<blockquote>\n<p>111111111 0011101</p>\n</blockquote>\n<p>取反后的源码</p>\n<blockquote>\n<p>100000000 1100010</p>\n</blockquote>\n<p>十进制即为 <strong>-98</strong>。<br>同理的，byte如果存储字符型也是按照先转成ascii码进行操作，即便是字符型的数字也一样。</p>\n<pre><code class=\"java\">byte a = 2;\nint b = ~a;//输出b为-3\nbyte c = &#39;2&#39;;\nint d = ~c;//输出d为-51 2的ascii为50(十进制) 32(十六进制)\n</code></pre>\n<h1 id=\"关于亦或\"><a href=\"#关于亦或\" class=\"headerlink\" title=\"关于亦或\"></a>关于亦或</h1><p>亦或相当的特别同时阴森啊，有几个性质</p>\n<ul>\n<li>a^a = 0 也就是亦或自己为0，因为每位都是相同的。</li>\n<li>a^a^a = a^0 = 0^a  = a</li>\n<li>a^b = b^a 符合交换律</li>\n<li>(a^b)^c = a^(b^c) 符合结合律</li>\n<li>e = a^b^c^d &lt;-&gt; e^a = b^c^d &lt;-&gt; e^a^b= c^d &lt;-&gt; e^a^b^c=d</li>\n</ul>\n<p>既然满足交换律结合律，则如果出现这么一种情况，</p>\n<blockquote>\n<p>[一个数组里除了一个数值出现一次，其他都出现了两次。找出这个数值。]<br>将这个数组全部亦或一遍，则出现两次的都可以按照交换律结合律化为0，</p>\n</blockquote>\n<h2 id=\"数组内只存在两个奇数次出现的数，其他都出现了偶数次，找出这两个数\"><a href=\"#数组内只存在两个奇数次出现的数，其他都出现了偶数次，找出这两个数\" class=\"headerlink\" title=\"数组内只存在两个奇数次出现的数，其他都出现了偶数次，找出这两个数\"></a>数组内只存在两个奇数次出现的数，其他都出现了偶数次，找出这两个数</h2><blockquote>\n<p>思路：这就是上面实例的改进，因为知道了其他数字都出现了偶数次，全体亦或的结果就是<code>x=a^b</code> 其中a b分别是所要找的这两个数。由于a b不同，则x必然不为零，也必然存在为1的位（可以取从右第一次出现1的位置）。同时由于是亦或操作，这个1必然是a和b相异造成的。这样，把这一位为1的分一组，这一位为0的分一组，出现偶数次的依然会被分到一组通过亦或自己消除。</p>\n</blockquote>\n<pre><code class=\"java\">    //从右寻找补码中1第一次出现的位置\n    public static int getFirst1(int num){\n        int index = 0;\n        while(index&lt;32){\n            if(((num&amp;(1&lt;&lt;index))^(1&lt;&lt;index))==0)\n                return index+1;\n            else\n                index++;\n        }\n        return -1;\n    }\n\n    //判断这个数这一位是否为1\n    public static boolean is1AtPos(int num,int pos){    \n        return ((num&gt;&gt;(pos-1))&amp;1)==1;\n    }\n\n    //寻找这两个数\n    public static int[] get2Num(int[] a){\n        int [] find2Num = new int[2];\n        //默认初始化0\n        int rs = 0;\n        for (int i : a) {\n            rs ^= i;//亦或全体求x\n        int pos=getFirst1(rs);//寻找第一个出现1的位\n        for (int j : a) {\n            if(is1AtPos(j,pos))//按这位是否位1分组\n                find2Num[0] ^= j;\n            else\n                find2Num[1] ^= j;           \n        }\n        System.out.println(find2Num[0]+&quot; &quot;+find2Num[1]);\n        return find2Num;\n    }\n</code></pre>\n<h2 id=\"使用位亦或-节约空间的数据交换\"><a href=\"#使用位亦或-节约空间的数据交换\" class=\"headerlink\" title=\"使用位亦或(^)节约空间的数据交换\"></a>使用位亦或(^)节约空间的数据交换</h2><p>原理：a亦或b=c，b亦或a=c，也就是亦或满足交换律；位亦或的逆运算，也就是<code>(a^b)^b=a</code>等于它自己。所以，只需三个亦或运算即可交换数据。看代码。</p>\n<pre><code>    a ^= b;\n    b ^= a;\n    a ^= b;\n</code></pre><h2 id=\"使用亦或加密\"><a href=\"#使用亦或加密\" class=\"headerlink\" title=\"使用亦或加密\"></a>使用亦或加密</h2><p>中文配合亦或加密再加上其他的一些加密算法可以很好的掩护原文。</p>\n<pre><code>        char  a1=&#39;晚&#39; ,  a2=&#39;上&#39; ,  a3=&#39;来&#39; ,  a4=&#39;我&#39;,  a5=&#39;家&#39; ; \n        char secret=&#39;8&#39; ; \n        a1=(char) (a1^secret); \n        a2=(char) (a2^secret); \n        a3=(char) (a3^secret); \n        a4=(char) (a4^secret); \n        a5=(char) (a5^secret); \n        System.out.println(&quot;密文:&quot;+a1+a2+a3+a4+a5); \n        a1=(char) (a1^secret); \n        a2=(char) (a2^secret); \n        a3=(char) (a3^secret); \n        a4=(char) (a4^secret); \n        a5=(char) (a5^secret); \n        System.out.println(&quot;原文:&quot;+a1+a2+a3+a4+a5);\n</code></pre><h2 id=\"亦或判别IP地址是否相等\"><a href=\"#亦或判别IP地址是否相等\" class=\"headerlink\" title=\"亦或判别IP地址是否相等\"></a>亦或判别IP地址是否相等</h2><p>使用亦或在加上按位与的方式比==加&amp;&amp;的方式效率高。</p>\n<pre><code>    static int ipv6_addr_equal(int[] in6_addr_a1, int[] in6_addr_a2)\n    {\n    return (((in6_addr_a1[0] ^ in6_addr_a2[0]) |\n        (in6_addr_a1[1] ^ in6_addr_a2[1]) |\n        (in6_addr_a1[2] ^ in6_addr_a2[2]) |\n        (in6_addr_a1[3] ^ in6_addr_a2[3])) == 0);\n    }\n</code></pre><h1 id=\"关于按位与\"><a href=\"#关于按位与\" class=\"headerlink\" title=\"关于按位与\"></a>关于按位与</h1><p>按位与操作一般是与1配合 判断奇偶，或者判断某位是否为1；或保留下某位位数字(与位移结合)</p>\n<pre><code>a&amp;1 == 0    偶数\na&amp;1 == 1    奇数\n</code></pre><h1 id=\"关于按位与-1\"><a href=\"#关于按位与-1\" class=\"headerlink\" title=\"关于按位与\"></a>关于按位与</h1><p>按位或操作一般与0配合 </p>\n<h1 id=\"按位左右移\"><a href=\"#按位左右移\" class=\"headerlink\" title=\"按位左右移\"></a>按位左右移</h1><p>左右移本质上就是以bit为单元进行二进制的操作，而二进制左右移n位在十进制就意味着乘以2^n或除以2^n.按位操作可以大大提升效率<br>港真，很多面试都有求幂的题目。很棒，刷题狗就喜欢做这种题，然而第一次碰到这题我懵逼的采用了树。傻缺了。</p>\n<p>将二进制数绕圈循环，取往左(右)第k个为头。很多题目里面有啊</p>\n<pre><code class=\"java\">int a = a&lt;&lt;k | a &gt;&gt; (Integer.SIZE-k); //左数第k个当头\nint b = b&gt;&gt;k | b &gt;&gt; (Integer.SIZE-k); //右数第k个当头\n</code></pre>\n<p>第k位置1</p>\n<pre><code class=\"java\">    a|(1&lt;&lt;k);\n</code></pre>\n<p>第k位置0</p>\n<pre><code>    a&amp;(~(1&lt;&lt;k));\n</code></pre><p>取第k位的数值</p>\n<pre><code>    a&gt;&gt;k&amp;1;\n</code></pre><p>后k位为0，其余为1</p>\n<pre><code>    (~0)&amp;(1&lt;&lt;(k+1));\n</code></pre><p>后k位为1，其余为0</p>\n<pre><code>    ~((~0)&lt;&lt;k);\n</code></pre><h2 id=\"左右移应用-二分求幂\"><a href=\"#左右移应用-二分求幂\" class=\"headerlink\" title=\"左右移应用-二分求幂\"></a>左右移应用-二分求幂</h2><font>Caution！这个思想很重要!</font>\n\n<pre><code class=\"java\">    public static int Power(int a, int n){\n        int ans = 1;\n        while (n &gt; 0) {\n           if ((n &amp; 1)!=0) {//末位不为零\n                ans *= a;\n                n--;\n            } \n            else {\n                a *= a;\n                n &gt;&gt;= 1;\n            }\n        }\n        return ans;\n    }\n</code></pre>\n<p>递归版本</p>\n<pre><code class=\"java\">    public static int power(int a,int n)  \n    {  \n        if(n==1) return a;  \n        if(n&amp;1)  \n          return power(a,n-1) * a;  \n        else  \n        {  \n            int t=power(a,n&gt;&gt;1);  \n            return t*t;  \n        }  \n    }\n</code></pre>","excerpt":"","more":"<p>最近发现位运算在很多场合有很多运用啊。大概有以下几个方面:</p>\n<ul>\n<li>涉及二进制及其2^n进制的运算</li>\n<li>很少字段的struct class的改写例如棋盘记录和模式比较</li>\n<li>逼格&amp;效率比较高的小心机</li>\n</ul>\n<h1 id=\"几个运算符\"><a href=\"#几个运算符\" class=\"headerlink\" title=\"几个运算符\"></a>几个运算符</h1><table>\n<thead>\n<tr>\n<th style=\"text-align:center\">符号</th>\n<th style=\"text-align:center\">名称</th>\n<th style=\"text-align:center\">含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\"><code>^</code></td>\n<td style=\"text-align:center\">按位亦或</td>\n<td style=\"text-align:center\">同为0，异为1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">竖线(打不了)</td>\n<td style=\"text-align:center\">按位或</td>\n<td style=\"text-align:center\">有1则1，双0为0</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>&amp;</code></td>\n<td style=\"text-align:center\">按位与</td>\n<td style=\"text-align:center\">有0则0，双为1</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>~</code></td>\n<td style=\"text-align:center\">按位取反</td>\n<td style=\"text-align:center\">变1为0，变0为1（包含符号位）</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>&lt;&lt;</code></td>\n<td style=\"text-align:center\">按位左移（包括符号）</td>\n<td style=\"text-align:center\">对应二进制每移一位乘二</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>&gt;&gt;</code></td>\n<td style=\"text-align:center\">按位右移（包括符号）</td>\n<td style=\"text-align:center\">对应二进制每移一位除二</td>\n</tr>\n<tr>\n<td style=\"text-align:center\"><code>`&gt;&gt;&gt;</code></td>\n<td style=\"text-align:center\">按位无符号右移</td>\n<td style=\"text-align:center\">对应二进制全指定的位数</td>\n</tr>\n</tbody>\n</table>\n<p>以上均是按位操作，要区分逻辑运算<code>&amp;&amp; ||</code>和位运算符<code>&amp; |</code></p>\n<h1 id=\"关于取反\"><a href=\"#关于取反\" class=\"headerlink\" title=\"关于取反\"></a>关于取反</h1><p>普通的Integer char等按位操作都是直接按照它们的二进制补码操作，int直接使用该数字的补码，char则先按照ascii转换成二进制在进行操作。<br>e.g.<code>char a = &#39;a&#39;</code>a的ascii码十进制为097，二进制原码为1100001，这里注意，作为char，它在java中是一个<font color=\"red\">无符号16位的整数</font>，所以补齐它的<br>二进制原码 补码 反码（非负数原码 补码 反码相同）</p>\n<blockquote>\n<p>000000000 1100001</p>\n</blockquote>\n<p>取反后的补码</p>\n<blockquote>\n<p>111111111 0011110</p>\n</blockquote>\n<p>取反后的反码</p>\n<blockquote>\n<p>111111111 0011101</p>\n</blockquote>\n<p>取反后的源码</p>\n<blockquote>\n<p>100000000 1100010</p>\n</blockquote>\n<p>十进制即为 <strong>-98</strong>。<br>同理的，byte如果存储字符型也是按照先转成ascii码进行操作，即便是字符型的数字也一样。</p>\n<pre><code class=\"java\">byte a = 2;\nint b = ~a;//输出b为-3\nbyte c = &#39;2&#39;;\nint d = ~c;//输出d为-51 2的ascii为50(十进制) 32(十六进制)\n</code></pre>\n<h1 id=\"关于亦或\"><a href=\"#关于亦或\" class=\"headerlink\" title=\"关于亦或\"></a>关于亦或</h1><p>亦或相当的特别同时阴森啊，有几个性质</p>\n<ul>\n<li>a^a = 0 也就是亦或自己为0，因为每位都是相同的。</li>\n<li>a^a^a = a^0 = 0^a  = a</li>\n<li>a^b = b^a 符合交换律</li>\n<li>(a^b)^c = a^(b^c) 符合结合律</li>\n<li>e = a^b^c^d &lt;-&gt; e^a = b^c^d &lt;-&gt; e^a^b= c^d &lt;-&gt; e^a^b^c=d</li>\n</ul>\n<p>既然满足交换律结合律，则如果出现这么一种情况，</p>\n<blockquote>\n<p>[一个数组里除了一个数值出现一次，其他都出现了两次。找出这个数值。]<br>将这个数组全部亦或一遍，则出现两次的都可以按照交换律结合律化为0，</p>\n</blockquote>\n<h2 id=\"数组内只存在两个奇数次出现的数，其他都出现了偶数次，找出这两个数\"><a href=\"#数组内只存在两个奇数次出现的数，其他都出现了偶数次，找出这两个数\" class=\"headerlink\" title=\"数组内只存在两个奇数次出现的数，其他都出现了偶数次，找出这两个数\"></a>数组内只存在两个奇数次出现的数，其他都出现了偶数次，找出这两个数</h2><blockquote>\n<p>思路：这就是上面实例的改进，因为知道了其他数字都出现了偶数次，全体亦或的结果就是<code>x=a^b</code> 其中a b分别是所要找的这两个数。由于a b不同，则x必然不为零，也必然存在为1的位（可以取从右第一次出现1的位置）。同时由于是亦或操作，这个1必然是a和b相异造成的。这样，把这一位为1的分一组，这一位为0的分一组，出现偶数次的依然会被分到一组通过亦或自己消除。</p>\n</blockquote>\n<pre><code class=\"java\">    //从右寻找补码中1第一次出现的位置\n    public static int getFirst1(int num){\n        int index = 0;\n        while(index&lt;32){\n            if(((num&amp;(1&lt;&lt;index))^(1&lt;&lt;index))==0)\n                return index+1;\n            else\n                index++;\n        }\n        return -1;\n    }\n\n    //判断这个数这一位是否为1\n    public static boolean is1AtPos(int num,int pos){    \n        return ((num&gt;&gt;(pos-1))&amp;1)==1;\n    }\n\n    //寻找这两个数\n    public static int[] get2Num(int[] a){\n        int [] find2Num = new int[2];\n        //默认初始化0\n        int rs = 0;\n        for (int i : a) {\n            rs ^= i;//亦或全体求x\n        int pos=getFirst1(rs);//寻找第一个出现1的位\n        for (int j : a) {\n            if(is1AtPos(j,pos))//按这位是否位1分组\n                find2Num[0] ^= j;\n            else\n                find2Num[1] ^= j;           \n        }\n        System.out.println(find2Num[0]+&quot; &quot;+find2Num[1]);\n        return find2Num;\n    }\n</code></pre>\n<h2 id=\"使用位亦或-节约空间的数据交换\"><a href=\"#使用位亦或-节约空间的数据交换\" class=\"headerlink\" title=\"使用位亦或(^)节约空间的数据交换\"></a>使用位亦或(^)节约空间的数据交换</h2><p>原理：a亦或b=c，b亦或a=c，也就是亦或满足交换律；位亦或的逆运算，也就是<code>(a^b)^b=a</code>等于它自己。所以，只需三个亦或运算即可交换数据。看代码。</p>\n<pre><code>    a ^= b;\n    b ^= a;\n    a ^= b;\n</code></pre><h2 id=\"使用亦或加密\"><a href=\"#使用亦或加密\" class=\"headerlink\" title=\"使用亦或加密\"></a>使用亦或加密</h2><p>中文配合亦或加密再加上其他的一些加密算法可以很好的掩护原文。</p>\n<pre><code>        char  a1=&#39;晚&#39; ,  a2=&#39;上&#39; ,  a3=&#39;来&#39; ,  a4=&#39;我&#39;,  a5=&#39;家&#39; ; \n        char secret=&#39;8&#39; ; \n        a1=(char) (a1^secret); \n        a2=(char) (a2^secret); \n        a3=(char) (a3^secret); \n        a4=(char) (a4^secret); \n        a5=(char) (a5^secret); \n        System.out.println(&quot;密文:&quot;+a1+a2+a3+a4+a5); \n        a1=(char) (a1^secret); \n        a2=(char) (a2^secret); \n        a3=(char) (a3^secret); \n        a4=(char) (a4^secret); \n        a5=(char) (a5^secret); \n        System.out.println(&quot;原文:&quot;+a1+a2+a3+a4+a5);\n</code></pre><h2 id=\"亦或判别IP地址是否相等\"><a href=\"#亦或判别IP地址是否相等\" class=\"headerlink\" title=\"亦或判别IP地址是否相等\"></a>亦或判别IP地址是否相等</h2><p>使用亦或在加上按位与的方式比==加&amp;&amp;的方式效率高。</p>\n<pre><code>    static int ipv6_addr_equal(int[] in6_addr_a1, int[] in6_addr_a2)\n    {\n    return (((in6_addr_a1[0] ^ in6_addr_a2[0]) |\n        (in6_addr_a1[1] ^ in6_addr_a2[1]) |\n        (in6_addr_a1[2] ^ in6_addr_a2[2]) |\n        (in6_addr_a1[3] ^ in6_addr_a2[3])) == 0);\n    }\n</code></pre><h1 id=\"关于按位与\"><a href=\"#关于按位与\" class=\"headerlink\" title=\"关于按位与\"></a>关于按位与</h1><p>按位与操作一般是与1配合 判断奇偶，或者判断某位是否为1；或保留下某位位数字(与位移结合)</p>\n<pre><code>a&amp;1 == 0    偶数\na&amp;1 == 1    奇数\n</code></pre><h1 id=\"关于按位与-1\"><a href=\"#关于按位与-1\" class=\"headerlink\" title=\"关于按位与\"></a>关于按位与</h1><p>按位或操作一般与0配合 </p>\n<h1 id=\"按位左右移\"><a href=\"#按位左右移\" class=\"headerlink\" title=\"按位左右移\"></a>按位左右移</h1><p>左右移本质上就是以bit为单元进行二进制的操作，而二进制左右移n位在十进制就意味着乘以2^n或除以2^n.按位操作可以大大提升效率<br>港真，很多面试都有求幂的题目。很棒，刷题狗就喜欢做这种题，然而第一次碰到这题我懵逼的采用了树。傻缺了。</p>\n<p>将二进制数绕圈循环，取往左(右)第k个为头。很多题目里面有啊</p>\n<pre><code class=\"java\">int a = a&lt;&lt;k | a &gt;&gt; (Integer.SIZE-k); //左数第k个当头\nint b = b&gt;&gt;k | b &gt;&gt; (Integer.SIZE-k); //右数第k个当头\n</code></pre>\n<p>第k位置1</p>\n<pre><code class=\"java\">    a|(1&lt;&lt;k);\n</code></pre>\n<p>第k位置0</p>\n<pre><code>    a&amp;(~(1&lt;&lt;k));\n</code></pre><p>取第k位的数值</p>\n<pre><code>    a&gt;&gt;k&amp;1;\n</code></pre><p>后k位为0，其余为1</p>\n<pre><code>    (~0)&amp;(1&lt;&lt;(k+1));\n</code></pre><p>后k位为1，其余为0</p>\n<pre><code>    ~((~0)&lt;&lt;k);\n</code></pre><h2 id=\"左右移应用-二分求幂\"><a href=\"#左右移应用-二分求幂\" class=\"headerlink\" title=\"左右移应用-二分求幂\"></a>左右移应用-二分求幂</h2><font>Caution！这个思想很重要!</font>\n\n<pre><code class=\"java\">    public static int Power(int a, int n){\n        int ans = 1;\n        while (n &gt; 0) {\n           if ((n &amp; 1)!=0) {//末位不为零\n                ans *= a;\n                n--;\n            } \n            else {\n                a *= a;\n                n &gt;&gt;= 1;\n            }\n        }\n        return ans;\n    }\n</code></pre>\n<p>递归版本</p>\n<pre><code class=\"java\">    public static int power(int a,int n)  \n    {  \n        if(n==1) return a;  \n        if(n&amp;1)  \n          return power(a,n-1) * a;  \n        else  \n        {  \n            int t=power(a,n&gt;&gt;1);  \n            return t*t;  \n        }  \n    }\n</code></pre>"},{"title":"你他妈的在逗我？——为什么小时代是烂片","id":"286","date":"2013-07-17T19:56:53.000Z","_content":"\n我还是脑残的去看了著名的小说改编电影《小时代》\n\n你们都说的嘛，没有看过评论个球。可是看玩了，这tmd和没看有什么区别?!茅塞顿悟我看了一部电影诶！\n[![201307081730117243](http://farm8.staticflickr.com/7448/9310599406_9a6d7656c7.jpg)](http://www.flickr.com/photos/ovbeeshoot/9310599406/ \"Flickr 上 Liar1992 的 201307081730117243\")\n\n堆砌华丽堂皇奢侈品是价值观问题，没什么好讨论的你心里已经烙下规则了。只说说电影相关。\n\n1.这稀里糊涂剧情是什么呢?什么。。这有剧情吗?!哦。。3部曲呢不急,可这一部是凑数加排片加前奏的是么。\n\n*   王琳嫌郭采洁小家子气没有钱配不上柯震东。哦。怒嫌弃分了吧\n*   宫洺无厘头送的戒指被杨幂放包里内叫啥的男的发现了。哦。有外遇甩了。\n*   hold住姐表错情送了有对象的偶像。。哦。好失落失恋了。\n*   咦？哪里来的席城？哦原来是郭碧婷的家暴狂对象。分分合合那还是分了吧。恩我们都失恋了呢！\n\n——完美的角色情景契合！少女春心！渺小星辰的青春！我们都是这座城市微茫的存在。咦，你他妈在逗我？这你他妈叫爱情？并未拜读过小说，但从这场电影的剧本来说就是不及格的。\n\n唐突的剧情——说失恋就携手失恋几个白富美一起啃肉包子？你妈是李刚还真是李刚又是领导又是评委又是大艺术家？踩高跟的幂幂说摔跤还真给力的摔的不忘来一段酷炫的意淫？够了没啊。第一天就上岗的实习生就操纵内部任务？耍我呢？还他喜欢的和讨厌的。这种肥皂剧毫无伟大的导演加工过的痕迹呐。要我说是扣人心弦呢还是感同身受呢还是满怀渴望潜规则的少女的自白呢。\n\n似乎有点台湾偶像剧的样子可是档次却难以望其项背啊。某次郊游只搜到了大芒果的频道居然啃着瓜子傻愣愣的看了3集联播的《 [华丽一族](http://video.baidu.com/tv_intro/?page=1&amp;id=18745 \"华丽一族\")》的快感都比这部不伦不类的小时代来的强烈啊摔。\n\n过时的冷幽默元素——不厌其烦的一次又一次扯出hold住姐格格的套路就算了，尼玛自黑我幂幂的娇嫩的声线是哪一出?虽然吧大家的笑点也是挺低的但是有这么侮辱影迷智商的么!\n\n人格分裂——两个好机油携手去看前女友和前女友友女们的表演，这是什么心态？复合？回扇一巴掌？当面对质？四个大学生堵车疯子一样扛着衣服往前冲，闹哪样啊，你们当白富美就是不合格的！这tmd也叫青春无悔我在不疯狂就老了？一个大老板这么禁不起幂幂的诱惑一送就送戒指送殷勤？我内个擦啊直接说来潜规则一发吧你就可以当正职助理了。一大老女人还不害臊还和一大学生扯淡这么羞嗒嗒的事好歹也是个大佬级别的拜托血那么厚。啃肉包子的女屌丝是怎么和住别野的白富美混在一起的，他们是有怎样的共同语言和背景才被撮合在一起过了童年的。\n\n2.华而不实的取景和电影元素。\n\n*   <span style=\"line-height: 15px;\">摩天大楼，堂皇居所，美艳舞会，溢彩喷泉，奢华得像总统套房的宿舍，洋气的杂志办公室。</span>\n*   可惜，你们不是置身事外的少女，你们是炫富的白富美。\n*   和恋爱和青春毫无关系\n*   意淫狂\n\n不否认的确有的场景拍的很光色十足的炫，可毕竟这不是现代人文风景展示，否则你在摄影论坛混迹就好了。不切合主旨（虽然我不知道他是个毛的主旨）的摄影画面显得只让人有爽了一发，然后突然想起，咦什么？他们分了？为毛分了？分了还要这么暖意融融快意人心？渺小星辰和大千世界的具象对比？算了吧。\n\n> 你们都是上层建筑，就别说什么肉包子的屁话了。\n\n多而贵的杯具们。多而炫的秀场们。多而疾驰的豪车们。多而富的男朋友们。多而粗枝大叶的母亲父亲们。多而心计城府的女秘书们。其实呢，我们吃个肉包子吧，我们都是小星辰而已啦。够了，目测这是一步小三原配势力贵族谍战大片吧。\n\n真是毁了郁可唯的歌了。唱的真心是不错。可惜，歌不对文，曲不达境。歌放的point也是很奇怪。\n\n怒。青峰是怎么接受小四先生的邀请的？！希望他只脑残这么一次好了。\n\n最后跳的那一出舞是闹哪样？4先生你是专门负责高效的么。、\n\n3.我们缺乏的是什么?\n\n不怕国产出烂片，就怕烂得这么彻底还这么多人捧。传说截止今日已经突破5亿元。目测收官可以囊入6亿。这到底是怎样一种吸金实力，网络营销，商业宣传，粉丝基数，高排片率这就是他票房红透半边天的必要原因么？\n\n一个把青春浸泡了奢望的时代才是可悲的。\n\n不切实际的奢望，奢求，奢取。我们只在意淫的世界里战个大汗淋漓却又剥离了现实世界的人的本来存在。就像网游上瘾的想一个大招一个暴击陨灭敌人想你所想得你所望，可却发现只是个梦但还是意淫了好久。我们失去了茶余饭后酒饱饭足，因为我们从来回不这么想，所以我们只有食物和餐具。当然，这可不是一般的膳食啦。一部电影堆砌了我们的抱负和暴富，纯粹的就是想要一座肉包子山。管它怎么得的？\n\n至少可能是因为我们的童年是缺失丰富色彩的，我们没有镀金的风花雪月，没有盛装出席的筵席，没有刚爸刚妈。也并非说拥有了一定物质基础的少年时代就能摒弃脱俗的只盼着华贵的小星辰，但至少，脑残粉就失去了它脑残的意义。或许这就是小四先生的营销成功方案罢了。但于我们中国的一代人，绝逼要唾弃。\n\n一个不争的事实如《人民日报》所言，是把物质本身作为人生追逐的目标，奉消费主义为圭臬，是小了时代，窄了格局，矮了思想。这个分析是一针见血的。中美媒体五毛水军左右派别难得一致的摆出一致的姿势还是很让人欣慰的（至少小时代还不是一个派吧如果可以的话）[大西洋月刊](http://www.theatlantic.com/china/archive/2013/07/chinas-sex-and-the-city-film-is-a-great-leap-backward-for-women/277841/ \"大西洋月刊\")真让人稀罕的指出——\n\n> # China's 'Sex and the City' Film Is a Great Leap Backward for Women\n\n无疑的是，倘若2个月之后的重磅出击的2.0版本在如此短的时间内连放两发还有如此票房，抱歉，中国人80后后&amp;90前前智商堪忧。\n\n最后很抱歉，由于不切合本片的帅富气质，我还是决定下了个枪的TinyTImes1.0磕着瓜子与小四同乐了。顺带说，宫洺先生还是挺帅的可惜他是直男，目测和南湘有一腿吧。\n\n4.爱屋及乌\n\n不得不说小时代超越了之前很看好的富春山居图。\n\n[![14386545_004800](http://farm6.staticflickr.com/5515/9321126223_2a303afb06.jpg)](http://www.flickr.com/photos/ovbeeshoot/9321126223/ \"Flickr 上 Liar1992 的 14386545_004800\")\n[![45646_film_photo_0](http://farm8.staticflickr.com/7426/9321126057_f3ba7225a2.jpg)](http://www.flickr.com/photos/ovbeeshoot/9321126057/ \"Flickr 上 Liar1992 的 45646_film_photo_0\")\n\n吐槽度顺序为排名标准：\n\n*   <span style=\"line-height: 15px;\">卖胸的群众演员&amp;&amp;我最爱的志玲姐姐的华服！</span>\n*   泡妞高手兼首席正派间谍华仔&amp;买保险的华夫人张静初。当然。凶器野很具威力\n*   自以为很屌炸的日本2货佟大为&amp;恋母爱爱\n*   杭州 北京 迪拜 米兰 东京 国际化好莱坞大视角上档次\n*   威猛的跌宕胃痉挛的剧情。很刺激很爽。\n*   忘了。\n\n最后，哭哭，好容易高票房就输给小时代了！\n\n最最后，中国观影群众的底线在哪里。","source":"_posts/你他妈的在逗我？——为什么小时代是烂片.md","raw":"---\ntitle: 你他妈的在逗我？——为什么小时代是烂片\ncategories:\n  - 槽\ntags:\n  - 吐槽\n  - 电影\nid: 286\ndate: 2013-07-18 03:56:53\n---\n\n我还是脑残的去看了著名的小说改编电影《小时代》\n\n你们都说的嘛，没有看过评论个球。可是看玩了，这tmd和没看有什么区别?!茅塞顿悟我看了一部电影诶！\n[![201307081730117243](http://farm8.staticflickr.com/7448/9310599406_9a6d7656c7.jpg)](http://www.flickr.com/photos/ovbeeshoot/9310599406/ \"Flickr 上 Liar1992 的 201307081730117243\")\n\n堆砌华丽堂皇奢侈品是价值观问题，没什么好讨论的你心里已经烙下规则了。只说说电影相关。\n\n1.这稀里糊涂剧情是什么呢?什么。。这有剧情吗?!哦。。3部曲呢不急,可这一部是凑数加排片加前奏的是么。\n\n*   王琳嫌郭采洁小家子气没有钱配不上柯震东。哦。怒嫌弃分了吧\n*   宫洺无厘头送的戒指被杨幂放包里内叫啥的男的发现了。哦。有外遇甩了。\n*   hold住姐表错情送了有对象的偶像。。哦。好失落失恋了。\n*   咦？哪里来的席城？哦原来是郭碧婷的家暴狂对象。分分合合那还是分了吧。恩我们都失恋了呢！\n\n——完美的角色情景契合！少女春心！渺小星辰的青春！我们都是这座城市微茫的存在。咦，你他妈在逗我？这你他妈叫爱情？并未拜读过小说，但从这场电影的剧本来说就是不及格的。\n\n唐突的剧情——说失恋就携手失恋几个白富美一起啃肉包子？你妈是李刚还真是李刚又是领导又是评委又是大艺术家？踩高跟的幂幂说摔跤还真给力的摔的不忘来一段酷炫的意淫？够了没啊。第一天就上岗的实习生就操纵内部任务？耍我呢？还他喜欢的和讨厌的。这种肥皂剧毫无伟大的导演加工过的痕迹呐。要我说是扣人心弦呢还是感同身受呢还是满怀渴望潜规则的少女的自白呢。\n\n似乎有点台湾偶像剧的样子可是档次却难以望其项背啊。某次郊游只搜到了大芒果的频道居然啃着瓜子傻愣愣的看了3集联播的《 [华丽一族](http://video.baidu.com/tv_intro/?page=1&amp;id=18745 \"华丽一族\")》的快感都比这部不伦不类的小时代来的强烈啊摔。\n\n过时的冷幽默元素——不厌其烦的一次又一次扯出hold住姐格格的套路就算了，尼玛自黑我幂幂的娇嫩的声线是哪一出?虽然吧大家的笑点也是挺低的但是有这么侮辱影迷智商的么!\n\n人格分裂——两个好机油携手去看前女友和前女友友女们的表演，这是什么心态？复合？回扇一巴掌？当面对质？四个大学生堵车疯子一样扛着衣服往前冲，闹哪样啊，你们当白富美就是不合格的！这tmd也叫青春无悔我在不疯狂就老了？一个大老板这么禁不起幂幂的诱惑一送就送戒指送殷勤？我内个擦啊直接说来潜规则一发吧你就可以当正职助理了。一大老女人还不害臊还和一大学生扯淡这么羞嗒嗒的事好歹也是个大佬级别的拜托血那么厚。啃肉包子的女屌丝是怎么和住别野的白富美混在一起的，他们是有怎样的共同语言和背景才被撮合在一起过了童年的。\n\n2.华而不实的取景和电影元素。\n\n*   <span style=\"line-height: 15px;\">摩天大楼，堂皇居所，美艳舞会，溢彩喷泉，奢华得像总统套房的宿舍，洋气的杂志办公室。</span>\n*   可惜，你们不是置身事外的少女，你们是炫富的白富美。\n*   和恋爱和青春毫无关系\n*   意淫狂\n\n不否认的确有的场景拍的很光色十足的炫，可毕竟这不是现代人文风景展示，否则你在摄影论坛混迹就好了。不切合主旨（虽然我不知道他是个毛的主旨）的摄影画面显得只让人有爽了一发，然后突然想起，咦什么？他们分了？为毛分了？分了还要这么暖意融融快意人心？渺小星辰和大千世界的具象对比？算了吧。\n\n> 你们都是上层建筑，就别说什么肉包子的屁话了。\n\n多而贵的杯具们。多而炫的秀场们。多而疾驰的豪车们。多而富的男朋友们。多而粗枝大叶的母亲父亲们。多而心计城府的女秘书们。其实呢，我们吃个肉包子吧，我们都是小星辰而已啦。够了，目测这是一步小三原配势力贵族谍战大片吧。\n\n真是毁了郁可唯的歌了。唱的真心是不错。可惜，歌不对文，曲不达境。歌放的point也是很奇怪。\n\n怒。青峰是怎么接受小四先生的邀请的？！希望他只脑残这么一次好了。\n\n最后跳的那一出舞是闹哪样？4先生你是专门负责高效的么。、\n\n3.我们缺乏的是什么?\n\n不怕国产出烂片，就怕烂得这么彻底还这么多人捧。传说截止今日已经突破5亿元。目测收官可以囊入6亿。这到底是怎样一种吸金实力，网络营销，商业宣传，粉丝基数，高排片率这就是他票房红透半边天的必要原因么？\n\n一个把青春浸泡了奢望的时代才是可悲的。\n\n不切实际的奢望，奢求，奢取。我们只在意淫的世界里战个大汗淋漓却又剥离了现实世界的人的本来存在。就像网游上瘾的想一个大招一个暴击陨灭敌人想你所想得你所望，可却发现只是个梦但还是意淫了好久。我们失去了茶余饭后酒饱饭足，因为我们从来回不这么想，所以我们只有食物和餐具。当然，这可不是一般的膳食啦。一部电影堆砌了我们的抱负和暴富，纯粹的就是想要一座肉包子山。管它怎么得的？\n\n至少可能是因为我们的童年是缺失丰富色彩的，我们没有镀金的风花雪月，没有盛装出席的筵席，没有刚爸刚妈。也并非说拥有了一定物质基础的少年时代就能摒弃脱俗的只盼着华贵的小星辰，但至少，脑残粉就失去了它脑残的意义。或许这就是小四先生的营销成功方案罢了。但于我们中国的一代人，绝逼要唾弃。\n\n一个不争的事实如《人民日报》所言，是把物质本身作为人生追逐的目标，奉消费主义为圭臬，是小了时代，窄了格局，矮了思想。这个分析是一针见血的。中美媒体五毛水军左右派别难得一致的摆出一致的姿势还是很让人欣慰的（至少小时代还不是一个派吧如果可以的话）[大西洋月刊](http://www.theatlantic.com/china/archive/2013/07/chinas-sex-and-the-city-film-is-a-great-leap-backward-for-women/277841/ \"大西洋月刊\")真让人稀罕的指出——\n\n> # China's 'Sex and the City' Film Is a Great Leap Backward for Women\n\n无疑的是，倘若2个月之后的重磅出击的2.0版本在如此短的时间内连放两发还有如此票房，抱歉，中国人80后后&amp;90前前智商堪忧。\n\n最后很抱歉，由于不切合本片的帅富气质，我还是决定下了个枪的TinyTImes1.0磕着瓜子与小四同乐了。顺带说，宫洺先生还是挺帅的可惜他是直男，目测和南湘有一腿吧。\n\n4.爱屋及乌\n\n不得不说小时代超越了之前很看好的富春山居图。\n\n[![14386545_004800](http://farm6.staticflickr.com/5515/9321126223_2a303afb06.jpg)](http://www.flickr.com/photos/ovbeeshoot/9321126223/ \"Flickr 上 Liar1992 的 14386545_004800\")\n[![45646_film_photo_0](http://farm8.staticflickr.com/7426/9321126057_f3ba7225a2.jpg)](http://www.flickr.com/photos/ovbeeshoot/9321126057/ \"Flickr 上 Liar1992 的 45646_film_photo_0\")\n\n吐槽度顺序为排名标准：\n\n*   <span style=\"line-height: 15px;\">卖胸的群众演员&amp;&amp;我最爱的志玲姐姐的华服！</span>\n*   泡妞高手兼首席正派间谍华仔&amp;买保险的华夫人张静初。当然。凶器野很具威力\n*   自以为很屌炸的日本2货佟大为&amp;恋母爱爱\n*   杭州 北京 迪拜 米兰 东京 国际化好莱坞大视角上档次\n*   威猛的跌宕胃痉挛的剧情。很刺激很爽。\n*   忘了。\n\n最后，哭哭，好容易高票房就输给小时代了！\n\n最最后，中国观影群众的底线在哪里。","slug":"你他妈的在逗我？——为什么小时代是烂片","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7qb0064uco44xhzd64c","content":"<p>我还是脑残的去看了著名的小说改编电影《小时代》</p>\n<p>你们都说的嘛，没有看过评论个球。可是看玩了，这tmd和没看有什么区别?!茅塞顿悟我看了一部电影诶！<br><a href=\"http://www.flickr.com/photos/ovbeeshoot/9310599406/\" title=\"Flickr 上 Liar1992 的 201307081730117243\" target=\"_blank\" rel=\"external\"><img src=\"http://farm8.staticflickr.com/7448/9310599406_9a6d7656c7.jpg\" alt=\"201307081730117243\"></a></p>\n<p>堆砌华丽堂皇奢侈品是价值观问题，没什么好讨论的你心里已经烙下规则了。只说说电影相关。</p>\n<p>1.这稀里糊涂剧情是什么呢?什么。。这有剧情吗?!哦。。3部曲呢不急,可这一部是凑数加排片加前奏的是么。</p>\n<ul>\n<li>王琳嫌郭采洁小家子气没有钱配不上柯震东。哦。怒嫌弃分了吧</li>\n<li>宫洺无厘头送的戒指被杨幂放包里内叫啥的男的发现了。哦。有外遇甩了。</li>\n<li>hold住姐表错情送了有对象的偶像。。哦。好失落失恋了。</li>\n<li>咦？哪里来的席城？哦原来是郭碧婷的家暴狂对象。分分合合那还是分了吧。恩我们都失恋了呢！</li>\n</ul>\n<p>——完美的角色情景契合！少女春心！渺小星辰的青春！我们都是这座城市微茫的存在。咦，你他妈在逗我？这你他妈叫爱情？并未拜读过小说，但从这场电影的剧本来说就是不及格的。</p>\n<p>唐突的剧情——说失恋就携手失恋几个白富美一起啃肉包子？你妈是李刚还真是李刚又是领导又是评委又是大艺术家？踩高跟的幂幂说摔跤还真给力的摔的不忘来一段酷炫的意淫？够了没啊。第一天就上岗的实习生就操纵内部任务？耍我呢？还他喜欢的和讨厌的。这种肥皂剧毫无伟大的导演加工过的痕迹呐。要我说是扣人心弦呢还是感同身受呢还是满怀渴望潜规则的少女的自白呢。</p>\n<p>似乎有点台湾偶像剧的样子可是档次却难以望其项背啊。某次郊游只搜到了大芒果的频道居然啃着瓜子傻愣愣的看了3集联播的《 <a href=\"http://video.baidu.com/tv_intro/?page=1&amp;id=18745\" title=\"华丽一族\" target=\"_blank\" rel=\"external\">华丽一族</a>》的快感都比这部不伦不类的小时代来的强烈啊摔。</p>\n<p>过时的冷幽默元素——不厌其烦的一次又一次扯出hold住姐格格的套路就算了，尼玛自黑我幂幂的娇嫩的声线是哪一出?虽然吧大家的笑点也是挺低的但是有这么侮辱影迷智商的么!</p>\n<p>人格分裂——两个好机油携手去看前女友和前女友友女们的表演，这是什么心态？复合？回扇一巴掌？当面对质？四个大学生堵车疯子一样扛着衣服往前冲，闹哪样啊，你们当白富美就是不合格的！这tmd也叫青春无悔我在不疯狂就老了？一个大老板这么禁不起幂幂的诱惑一送就送戒指送殷勤？我内个擦啊直接说来潜规则一发吧你就可以当正职助理了。一大老女人还不害臊还和一大学生扯淡这么羞嗒嗒的事好歹也是个大佬级别的拜托血那么厚。啃肉包子的女屌丝是怎么和住别野的白富美混在一起的，他们是有怎样的共同语言和背景才被撮合在一起过了童年的。</p>\n<p>2.华而不实的取景和电影元素。</p>\n<ul>\n<li><span style=\"line-height: 15px\">摩天大楼，堂皇居所，美艳舞会，溢彩喷泉，奢华得像总统套房的宿舍，洋气的杂志办公室。</span></li>\n<li>可惜，你们不是置身事外的少女，你们是炫富的白富美。</li>\n<li>和恋爱和青春毫无关系</li>\n<li>意淫狂</li>\n</ul>\n<p>不否认的确有的场景拍的很光色十足的炫，可毕竟这不是现代人文风景展示，否则你在摄影论坛混迹就好了。不切合主旨（虽然我不知道他是个毛的主旨）的摄影画面显得只让人有爽了一发，然后突然想起，咦什么？他们分了？为毛分了？分了还要这么暖意融融快意人心？渺小星辰和大千世界的具象对比？算了吧。</p>\n<blockquote>\n<p>你们都是上层建筑，就别说什么肉包子的屁话了。</p>\n</blockquote>\n<p>多而贵的杯具们。多而炫的秀场们。多而疾驰的豪车们。多而富的男朋友们。多而粗枝大叶的母亲父亲们。多而心计城府的女秘书们。其实呢，我们吃个肉包子吧，我们都是小星辰而已啦。够了，目测这是一步小三原配势力贵族谍战大片吧。</p>\n<p>真是毁了郁可唯的歌了。唱的真心是不错。可惜，歌不对文，曲不达境。歌放的point也是很奇怪。</p>\n<p>怒。青峰是怎么接受小四先生的邀请的？！希望他只脑残这么一次好了。</p>\n<p>最后跳的那一出舞是闹哪样？4先生你是专门负责高效的么。、</p>\n<p>3.我们缺乏的是什么?</p>\n<p>不怕国产出烂片，就怕烂得这么彻底还这么多人捧。传说截止今日已经突破5亿元。目测收官可以囊入6亿。这到底是怎样一种吸金实力，网络营销，商业宣传，粉丝基数，高排片率这就是他票房红透半边天的必要原因么？</p>\n<p>一个把青春浸泡了奢望的时代才是可悲的。</p>\n<p>不切实际的奢望，奢求，奢取。我们只在意淫的世界里战个大汗淋漓却又剥离了现实世界的人的本来存在。就像网游上瘾的想一个大招一个暴击陨灭敌人想你所想得你所望，可却发现只是个梦但还是意淫了好久。我们失去了茶余饭后酒饱饭足，因为我们从来回不这么想，所以我们只有食物和餐具。当然，这可不是一般的膳食啦。一部电影堆砌了我们的抱负和暴富，纯粹的就是想要一座肉包子山。管它怎么得的？</p>\n<p>至少可能是因为我们的童年是缺失丰富色彩的，我们没有镀金的风花雪月，没有盛装出席的筵席，没有刚爸刚妈。也并非说拥有了一定物质基础的少年时代就能摒弃脱俗的只盼着华贵的小星辰，但至少，脑残粉就失去了它脑残的意义。或许这就是小四先生的营销成功方案罢了。但于我们中国的一代人，绝逼要唾弃。</p>\n<p>一个不争的事实如《人民日报》所言，是把物质本身作为人生追逐的目标，奉消费主义为圭臬，是小了时代，窄了格局，矮了思想。这个分析是一针见血的。中美媒体五毛水军左右派别难得一致的摆出一致的姿势还是很让人欣慰的（至少小时代还不是一个派吧如果可以的话）<a href=\"http://www.theatlantic.com/china/archive/2013/07/chinas-sex-and-the-city-film-is-a-great-leap-backward-for-women/277841/\" title=\"大西洋月刊\" target=\"_blank\" rel=\"external\">大西洋月刊</a>真让人稀罕的指出——</p>\n<blockquote>\n<h1 id=\"China’s-‘Sex-and-the-City’-Film-Is-a-Great-Leap-Backward-for-Women\"><a href=\"#China’s-‘Sex-and-the-City’-Film-Is-a-Great-Leap-Backward-for-Women\" class=\"headerlink\" title=\"China’s ‘Sex and the City’ Film Is a Great Leap Backward for Women\"></a>China’s ‘Sex and the City’ Film Is a Great Leap Backward for Women</h1></blockquote>\n<p>无疑的是，倘若2个月之后的重磅出击的2.0版本在如此短的时间内连放两发还有如此票房，抱歉，中国人80后后&amp;90前前智商堪忧。</p>\n<p>最后很抱歉，由于不切合本片的帅富气质，我还是决定下了个枪的TinyTImes1.0磕着瓜子与小四同乐了。顺带说，宫洺先生还是挺帅的可惜他是直男，目测和南湘有一腿吧。</p>\n<p>4.爱屋及乌</p>\n<p>不得不说小时代超越了之前很看好的富春山居图。</p>\n<p><a href=\"http://www.flickr.com/photos/ovbeeshoot/9321126223/\" title=\"Flickr 上 Liar1992 的 14386545_004800\" target=\"_blank\" rel=\"external\"><img src=\"http://farm6.staticflickr.com/5515/9321126223_2a303afb06.jpg\" alt=\"14386545_004800\"></a><br><a href=\"http://www.flickr.com/photos/ovbeeshoot/9321126057/\" title=\"Flickr 上 Liar1992 的 45646_film_photo_0\" target=\"_blank\" rel=\"external\"><img src=\"http://farm8.staticflickr.com/7426/9321126057_f3ba7225a2.jpg\" alt=\"45646_film_photo_0\"></a></p>\n<p>吐槽度顺序为排名标准：</p>\n<ul>\n<li><span style=\"line-height: 15px\">卖胸的群众演员&amp;&amp;我最爱的志玲姐姐的华服！</span></li>\n<li>泡妞高手兼首席正派间谍华仔&amp;买保险的华夫人张静初。当然。凶器野很具威力</li>\n<li>自以为很屌炸的日本2货佟大为&amp;恋母爱爱</li>\n<li>杭州 北京 迪拜 米兰 东京 国际化好莱坞大视角上档次</li>\n<li>威猛的跌宕胃痉挛的剧情。很刺激很爽。</li>\n<li>忘了。</li>\n</ul>\n<p>最后，哭哭，好容易高票房就输给小时代了！</p>\n<p>最最后，中国观影群众的底线在哪里。</p>","excerpt":"","more":"<p>我还是脑残的去看了著名的小说改编电影《小时代》</p>\n<p>你们都说的嘛，没有看过评论个球。可是看玩了，这tmd和没看有什么区别?!茅塞顿悟我看了一部电影诶！<br><a href=\"http://www.flickr.com/photos/ovbeeshoot/9310599406/\" title=\"Flickr 上 Liar1992 的 201307081730117243\"><img src=\"http://farm8.staticflickr.com/7448/9310599406_9a6d7656c7.jpg\" alt=\"201307081730117243\"></a></p>\n<p>堆砌华丽堂皇奢侈品是价值观问题，没什么好讨论的你心里已经烙下规则了。只说说电影相关。</p>\n<p>1.这稀里糊涂剧情是什么呢?什么。。这有剧情吗?!哦。。3部曲呢不急,可这一部是凑数加排片加前奏的是么。</p>\n<ul>\n<li>王琳嫌郭采洁小家子气没有钱配不上柯震东。哦。怒嫌弃分了吧</li>\n<li>宫洺无厘头送的戒指被杨幂放包里内叫啥的男的发现了。哦。有外遇甩了。</li>\n<li>hold住姐表错情送了有对象的偶像。。哦。好失落失恋了。</li>\n<li>咦？哪里来的席城？哦原来是郭碧婷的家暴狂对象。分分合合那还是分了吧。恩我们都失恋了呢！</li>\n</ul>\n<p>——完美的角色情景契合！少女春心！渺小星辰的青春！我们都是这座城市微茫的存在。咦，你他妈在逗我？这你他妈叫爱情？并未拜读过小说，但从这场电影的剧本来说就是不及格的。</p>\n<p>唐突的剧情——说失恋就携手失恋几个白富美一起啃肉包子？你妈是李刚还真是李刚又是领导又是评委又是大艺术家？踩高跟的幂幂说摔跤还真给力的摔的不忘来一段酷炫的意淫？够了没啊。第一天就上岗的实习生就操纵内部任务？耍我呢？还他喜欢的和讨厌的。这种肥皂剧毫无伟大的导演加工过的痕迹呐。要我说是扣人心弦呢还是感同身受呢还是满怀渴望潜规则的少女的自白呢。</p>\n<p>似乎有点台湾偶像剧的样子可是档次却难以望其项背啊。某次郊游只搜到了大芒果的频道居然啃着瓜子傻愣愣的看了3集联播的《 <a href=\"http://video.baidu.com/tv_intro/?page=1&amp;id=18745\" title=\"华丽一族\">华丽一族</a>》的快感都比这部不伦不类的小时代来的强烈啊摔。</p>\n<p>过时的冷幽默元素——不厌其烦的一次又一次扯出hold住姐格格的套路就算了，尼玛自黑我幂幂的娇嫩的声线是哪一出?虽然吧大家的笑点也是挺低的但是有这么侮辱影迷智商的么!</p>\n<p>人格分裂——两个好机油携手去看前女友和前女友友女们的表演，这是什么心态？复合？回扇一巴掌？当面对质？四个大学生堵车疯子一样扛着衣服往前冲，闹哪样啊，你们当白富美就是不合格的！这tmd也叫青春无悔我在不疯狂就老了？一个大老板这么禁不起幂幂的诱惑一送就送戒指送殷勤？我内个擦啊直接说来潜规则一发吧你就可以当正职助理了。一大老女人还不害臊还和一大学生扯淡这么羞嗒嗒的事好歹也是个大佬级别的拜托血那么厚。啃肉包子的女屌丝是怎么和住别野的白富美混在一起的，他们是有怎样的共同语言和背景才被撮合在一起过了童年的。</p>\n<p>2.华而不实的取景和电影元素。</p>\n<ul>\n<li><span style=\"line-height: 15px\">摩天大楼，堂皇居所，美艳舞会，溢彩喷泉，奢华得像总统套房的宿舍，洋气的杂志办公室。</span></li>\n<li>可惜，你们不是置身事外的少女，你们是炫富的白富美。</li>\n<li>和恋爱和青春毫无关系</li>\n<li>意淫狂</li>\n</ul>\n<p>不否认的确有的场景拍的很光色十足的炫，可毕竟这不是现代人文风景展示，否则你在摄影论坛混迹就好了。不切合主旨（虽然我不知道他是个毛的主旨）的摄影画面显得只让人有爽了一发，然后突然想起，咦什么？他们分了？为毛分了？分了还要这么暖意融融快意人心？渺小星辰和大千世界的具象对比？算了吧。</p>\n<blockquote>\n<p>你们都是上层建筑，就别说什么肉包子的屁话了。</p>\n</blockquote>\n<p>多而贵的杯具们。多而炫的秀场们。多而疾驰的豪车们。多而富的男朋友们。多而粗枝大叶的母亲父亲们。多而心计城府的女秘书们。其实呢，我们吃个肉包子吧，我们都是小星辰而已啦。够了，目测这是一步小三原配势力贵族谍战大片吧。</p>\n<p>真是毁了郁可唯的歌了。唱的真心是不错。可惜，歌不对文，曲不达境。歌放的point也是很奇怪。</p>\n<p>怒。青峰是怎么接受小四先生的邀请的？！希望他只脑残这么一次好了。</p>\n<p>最后跳的那一出舞是闹哪样？4先生你是专门负责高效的么。、</p>\n<p>3.我们缺乏的是什么?</p>\n<p>不怕国产出烂片，就怕烂得这么彻底还这么多人捧。传说截止今日已经突破5亿元。目测收官可以囊入6亿。这到底是怎样一种吸金实力，网络营销，商业宣传，粉丝基数，高排片率这就是他票房红透半边天的必要原因么？</p>\n<p>一个把青春浸泡了奢望的时代才是可悲的。</p>\n<p>不切实际的奢望，奢求，奢取。我们只在意淫的世界里战个大汗淋漓却又剥离了现实世界的人的本来存在。就像网游上瘾的想一个大招一个暴击陨灭敌人想你所想得你所望，可却发现只是个梦但还是意淫了好久。我们失去了茶余饭后酒饱饭足，因为我们从来回不这么想，所以我们只有食物和餐具。当然，这可不是一般的膳食啦。一部电影堆砌了我们的抱负和暴富，纯粹的就是想要一座肉包子山。管它怎么得的？</p>\n<p>至少可能是因为我们的童年是缺失丰富色彩的，我们没有镀金的风花雪月，没有盛装出席的筵席，没有刚爸刚妈。也并非说拥有了一定物质基础的少年时代就能摒弃脱俗的只盼着华贵的小星辰，但至少，脑残粉就失去了它脑残的意义。或许这就是小四先生的营销成功方案罢了。但于我们中国的一代人，绝逼要唾弃。</p>\n<p>一个不争的事实如《人民日报》所言，是把物质本身作为人生追逐的目标，奉消费主义为圭臬，是小了时代，窄了格局，矮了思想。这个分析是一针见血的。中美媒体五毛水军左右派别难得一致的摆出一致的姿势还是很让人欣慰的（至少小时代还不是一个派吧如果可以的话）<a href=\"http://www.theatlantic.com/china/archive/2013/07/chinas-sex-and-the-city-film-is-a-great-leap-backward-for-women/277841/\" title=\"大西洋月刊\">大西洋月刊</a>真让人稀罕的指出——</p>\n<blockquote>\n<h1 id=\"China’s-‘Sex-and-the-City’-Film-Is-a-Great-Leap-Backward-for-Women\"><a href=\"#China’s-‘Sex-and-the-City’-Film-Is-a-Great-Leap-Backward-for-Women\" class=\"headerlink\" title=\"China’s ‘Sex and the City’ Film Is a Great Leap Backward for Women\"></a>China’s ‘Sex and the City’ Film Is a Great Leap Backward for Women</h1></blockquote>\n<p>无疑的是，倘若2个月之后的重磅出击的2.0版本在如此短的时间内连放两发还有如此票房，抱歉，中国人80后后&amp;90前前智商堪忧。</p>\n<p>最后很抱歉，由于不切合本片的帅富气质，我还是决定下了个枪的TinyTImes1.0磕着瓜子与小四同乐了。顺带说，宫洺先生还是挺帅的可惜他是直男，目测和南湘有一腿吧。</p>\n<p>4.爱屋及乌</p>\n<p>不得不说小时代超越了之前很看好的富春山居图。</p>\n<p><a href=\"http://www.flickr.com/photos/ovbeeshoot/9321126223/\" title=\"Flickr 上 Liar1992 的 14386545_004800\"><img src=\"http://farm6.staticflickr.com/5515/9321126223_2a303afb06.jpg\" alt=\"14386545_004800\"></a><br><a href=\"http://www.flickr.com/photos/ovbeeshoot/9321126057/\" title=\"Flickr 上 Liar1992 的 45646_film_photo_0\"><img src=\"http://farm8.staticflickr.com/7426/9321126057_f3ba7225a2.jpg\" alt=\"45646_film_photo_0\"></a></p>\n<p>吐槽度顺序为排名标准：</p>\n<ul>\n<li><span style=\"line-height: 15px\">卖胸的群众演员&amp;&amp;我最爱的志玲姐姐的华服！</span></li>\n<li>泡妞高手兼首席正派间谍华仔&amp;买保险的华夫人张静初。当然。凶器野很具威力</li>\n<li>自以为很屌炸的日本2货佟大为&amp;恋母爱爱</li>\n<li>杭州 北京 迪拜 米兰 东京 国际化好莱坞大视角上档次</li>\n<li>威猛的跌宕胃痉挛的剧情。很刺激很爽。</li>\n<li>忘了。</li>\n</ul>\n<p>最后，哭哭，好容易高票房就输给小时代了！</p>\n<p>最最后，中国观影群众的底线在哪里。</p>"},{"title":"内地研究生的所为科研和自我养成","id":"184","date":"2013-05-14T12:10:14.000Z","_content":"\n  最近在[v2ex](http://v2ex.com \"v2ex\")中看到一个帖子的确十分让我难熬...处在考研的关键时刻，却被这般冲击力搞得思绪很乱。\n  的确小c同学说的没错，找个好导师，就找到了好前途。\n  这话本该没错，但是什么是好导师，项目拿的多的拿的容易的?项目有钱景可以让你打通人脉的?可以交给你很多实战的企业的思想?翻遍数帖也得不到本该有的答案。是科研还是工程?是沉浸在ppt、论文的研讨，还是应该做一些符合企业效益的有受众的实际产品？是走沉稳妥协的中庸路线还是紧跟时代所谓的与时俱进?\n尽管我看到了大多摄这样的论断\n![研究生养成1](http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B72.jpg)\n![研究生养成2](http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B7.jpg)\n![研究生养成3](http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B71.jpg)\n当然也不乏这样的\n![研究生养成4](http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B74.jpg)\n    的确口水已经淹没了一切。毫无劲头但却无所忌惮就是现在的大学研究生生涯的写照吧。和导师学东西可能已经不仅仅是技术层面了。逃过了本科时代毕业的招聘狂潮也该到进入社会的时刻。当养家糊口成家立业摆在面前，24、25岁的人已经等不起什么所为的蛰伏，所谓潜心研究。能踏实的想呆在实验室做飘渺浩瀚研讨的，抑或未来也成为一枚教授在学校里拿着津贴颐养天年的，相信职业就早已规划好。所谓的大多数的研究生不过是等到一个更高的文凭进入社会前缓冲一点时间罢了。发paper或者是凑paper的时代就在这里，急功近利的太多，青春等不起潜心。\n    这又能怎样？你不上多少人等着踩着你的尸体上。\n    读到UCSD的一个高材生的[文章](http://blog.liulonnie.net/?p=3310)，里面写到了种种老板和自己的关系。或者就是妥协为，改变不了世界，那就把自己变得更牛逼这个俗套的话题了。什么是更牛逼的自己?问题总是满目的飘过来，和老板做好关系以后有业务有企业收了你?或者是拼命找实习奢望着未来的简历更加丰满一些么。更有甚者说是在闲极无聊的研究生时代多陶冶情操多补充一下人文的情怀。嗯，未尝不可啊。\n    人就这一次选择，选了就有错过了就有后悔了就有放弃了。我倒是看好无为者。做CEO做创业者做大亨，还是慢慢爬慢慢掏着糊口的钱陪老婆孩子?没有什么路都是能保证你会最好的生活，路在脚下，还没达到更强大到足以一笑而过的自己，何必管别人如何如何。文中有一句话很赞\n\n> 真相是，科学家本来就不是什么崇高的职业，就没他妈的什么职业是崇高的。任何行当里面也都有聪明人，只是由于行当不同而影响范围不同而已。而且，人与人智力上的差别，在个人的事业发展中，我觉得，基本可以忽略不计。从长时间的尺度看，起主要作用的，往往是动机、心态和对这个行当的认识是否清醒，是思考、判断和信仰。\n人与人不同，只有一条出路是人人都试用的----做好自己看的起的当下。慵懒只陪回忆，没有资格谈待会儿。\n最后一句话共勉吧\n\n> 学术圈这些事儿都不是什么怪现象，相反，都是在这个发展阶段最正常不过的现象而已。愤世嫉俗是一种慢性自杀不要跟谁过意不去，事在人为，谁都要过日子，科学家工程师都是。想做就做吧。\n    我要找一个好老板，写给未来的自己。。","source":"_posts/内地研究生的所为科研和自我养成.md","raw":"---\ntitle: 内地研究生的所为科研和自我养成\ncategories:\n  - 槽\ntags:\n  - 吐槽\n  - 寂寞寂寞就好\nid: 184\ndate: 2013-05-14 20:10:14\n---\n\n  最近在[v2ex](http://v2ex.com \"v2ex\")中看到一个帖子的确十分让我难熬...处在考研的关键时刻，却被这般冲击力搞得思绪很乱。\n  的确小c同学说的没错，找个好导师，就找到了好前途。\n  这话本该没错，但是什么是好导师，项目拿的多的拿的容易的?项目有钱景可以让你打通人脉的?可以交给你很多实战的企业的思想?翻遍数帖也得不到本该有的答案。是科研还是工程?是沉浸在ppt、论文的研讨，还是应该做一些符合企业效益的有受众的实际产品？是走沉稳妥协的中庸路线还是紧跟时代所谓的与时俱进?\n尽管我看到了大多摄这样的论断\n![研究生养成1](http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B72.jpg)\n![研究生养成2](http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B7.jpg)\n![研究生养成3](http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B71.jpg)\n当然也不乏这样的\n![研究生养成4](http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B74.jpg)\n    的确口水已经淹没了一切。毫无劲头但却无所忌惮就是现在的大学研究生生涯的写照吧。和导师学东西可能已经不仅仅是技术层面了。逃过了本科时代毕业的招聘狂潮也该到进入社会的时刻。当养家糊口成家立业摆在面前，24、25岁的人已经等不起什么所为的蛰伏，所谓潜心研究。能踏实的想呆在实验室做飘渺浩瀚研讨的，抑或未来也成为一枚教授在学校里拿着津贴颐养天年的，相信职业就早已规划好。所谓的大多数的研究生不过是等到一个更高的文凭进入社会前缓冲一点时间罢了。发paper或者是凑paper的时代就在这里，急功近利的太多，青春等不起潜心。\n    这又能怎样？你不上多少人等着踩着你的尸体上。\n    读到UCSD的一个高材生的[文章](http://blog.liulonnie.net/?p=3310)，里面写到了种种老板和自己的关系。或者就是妥协为，改变不了世界，那就把自己变得更牛逼这个俗套的话题了。什么是更牛逼的自己?问题总是满目的飘过来，和老板做好关系以后有业务有企业收了你?或者是拼命找实习奢望着未来的简历更加丰满一些么。更有甚者说是在闲极无聊的研究生时代多陶冶情操多补充一下人文的情怀。嗯，未尝不可啊。\n    人就这一次选择，选了就有错过了就有后悔了就有放弃了。我倒是看好无为者。做CEO做创业者做大亨，还是慢慢爬慢慢掏着糊口的钱陪老婆孩子?没有什么路都是能保证你会最好的生活，路在脚下，还没达到更强大到足以一笑而过的自己，何必管别人如何如何。文中有一句话很赞\n\n> 真相是，科学家本来就不是什么崇高的职业，就没他妈的什么职业是崇高的。任何行当里面也都有聪明人，只是由于行当不同而影响范围不同而已。而且，人与人智力上的差别，在个人的事业发展中，我觉得，基本可以忽略不计。从长时间的尺度看，起主要作用的，往往是动机、心态和对这个行当的认识是否清醒，是思考、判断和信仰。\n人与人不同，只有一条出路是人人都试用的----做好自己看的起的当下。慵懒只陪回忆，没有资格谈待会儿。\n最后一句话共勉吧\n\n> 学术圈这些事儿都不是什么怪现象，相反，都是在这个发展阶段最正常不过的现象而已。愤世嫉俗是一种慢性自杀不要跟谁过意不去，事在人为，谁都要过日子，科学家工程师都是。想做就做吧。\n    我要找一个好老板，写给未来的自己。。","slug":"内地研究生的所为科研和自我养成","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7qe0067uco4dlne288r","content":"<p>  最近在<a href=\"http://v2ex.com\" title=\"v2ex\" target=\"_blank\" rel=\"external\">v2ex</a>中看到一个帖子的确十分让我难熬…处在考研的关键时刻，却被这般冲击力搞得思绪很乱。<br>  的确小c同学说的没错，找个好导师，就找到了好前途。<br>  这话本该没错，但是什么是好导师，项目拿的多的拿的容易的?项目有钱景可以让你打通人脉的?可以交给你很多实战的企业的思想?翻遍数帖也得不到本该有的答案。是科研还是工程?是沉浸在ppt、论文的研讨，还是应该做一些符合企业效益的有受众的实际产品？是走沉稳妥协的中庸路线还是紧跟时代所谓的与时俱进?<br>尽管我看到了大多摄这样的论断<br><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B72.jpg\" alt=\"研究生养成1\"><br><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B7.jpg\" alt=\"研究生养成2\"><br><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B71.jpg\" alt=\"研究生养成3\"><br>当然也不乏这样的<br><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B74.jpg\" alt=\"研究生养成4\"><br>    的确口水已经淹没了一切。毫无劲头但却无所忌惮就是现在的大学研究生生涯的写照吧。和导师学东西可能已经不仅仅是技术层面了。逃过了本科时代毕业的招聘狂潮也该到进入社会的时刻。当养家糊口成家立业摆在面前，24、25岁的人已经等不起什么所为的蛰伏，所谓潜心研究。能踏实的想呆在实验室做飘渺浩瀚研讨的，抑或未来也成为一枚教授在学校里拿着津贴颐养天年的，相信职业就早已规划好。所谓的大多数的研究生不过是等到一个更高的文凭进入社会前缓冲一点时间罢了。发paper或者是凑paper的时代就在这里，急功近利的太多，青春等不起潜心。<br>    这又能怎样？你不上多少人等着踩着你的尸体上。<br>    读到UCSD的一个高材生的<a href=\"http://blog.liulonnie.net/?p=3310\" target=\"_blank\" rel=\"external\">文章</a>，里面写到了种种老板和自己的关系。或者就是妥协为，改变不了世界，那就把自己变得更牛逼这个俗套的话题了。什么是更牛逼的自己?问题总是满目的飘过来，和老板做好关系以后有业务有企业收了你?或者是拼命找实习奢望着未来的简历更加丰满一些么。更有甚者说是在闲极无聊的研究生时代多陶冶情操多补充一下人文的情怀。嗯，未尝不可啊。<br>    人就这一次选择，选了就有错过了就有后悔了就有放弃了。我倒是看好无为者。做CEO做创业者做大亨，还是慢慢爬慢慢掏着糊口的钱陪老婆孩子?没有什么路都是能保证你会最好的生活，路在脚下，还没达到更强大到足以一笑而过的自己，何必管别人如何如何。文中有一句话很赞</p>\n<blockquote>\n<p>真相是，科学家本来就不是什么崇高的职业，就没他妈的什么职业是崇高的。任何行当里面也都有聪明人，只是由于行当不同而影响范围不同而已。而且，人与人智力上的差别，在个人的事业发展中，我觉得，基本可以忽略不计。从长时间的尺度看，起主要作用的，往往是动机、心态和对这个行当的认识是否清醒，是思考、判断和信仰。<br>人与人不同，只有一条出路是人人都试用的—-做好自己看的起的当下。慵懒只陪回忆，没有资格谈待会儿。<br>最后一句话共勉吧</p>\n<p>学术圈这些事儿都不是什么怪现象，相反，都是在这个发展阶段最正常不过的现象而已。愤世嫉俗是一种慢性自杀不要跟谁过意不去，事在人为，谁都要过日子，科学家工程师都是。想做就做吧。<br>    我要找一个好老板，写给未来的自己。。</p>\n</blockquote>","excerpt":"","more":"<p>  最近在<a href=\"http://v2ex.com\" title=\"v2ex\">v2ex</a>中看到一个帖子的确十分让我难熬…处在考研的关键时刻，却被这般冲击力搞得思绪很乱。<br>  的确小c同学说的没错，找个好导师，就找到了好前途。<br>  这话本该没错，但是什么是好导师，项目拿的多的拿的容易的?项目有钱景可以让你打通人脉的?可以交给你很多实战的企业的思想?翻遍数帖也得不到本该有的答案。是科研还是工程?是沉浸在ppt、论文的研讨，还是应该做一些符合企业效益的有受众的实际产品？是走沉稳妥协的中庸路线还是紧跟时代所谓的与时俱进?<br>尽管我看到了大多摄这样的论断<br><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B72.jpg\" alt=\"研究生养成1\"><br><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B7.jpg\" alt=\"研究生养成2\"><br><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B71.jpg\" alt=\"研究生养成3\"><br>当然也不乏这样的<br><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/635583B74.jpg\" alt=\"研究生养成4\"><br>    的确口水已经淹没了一切。毫无劲头但却无所忌惮就是现在的大学研究生生涯的写照吧。和导师学东西可能已经不仅仅是技术层面了。逃过了本科时代毕业的招聘狂潮也该到进入社会的时刻。当养家糊口成家立业摆在面前，24、25岁的人已经等不起什么所为的蛰伏，所谓潜心研究。能踏实的想呆在实验室做飘渺浩瀚研讨的，抑或未来也成为一枚教授在学校里拿着津贴颐养天年的，相信职业就早已规划好。所谓的大多数的研究生不过是等到一个更高的文凭进入社会前缓冲一点时间罢了。发paper或者是凑paper的时代就在这里，急功近利的太多，青春等不起潜心。<br>    这又能怎样？你不上多少人等着踩着你的尸体上。<br>    读到UCSD的一个高材生的<a href=\"http://blog.liulonnie.net/?p=3310\">文章</a>，里面写到了种种老板和自己的关系。或者就是妥协为，改变不了世界，那就把自己变得更牛逼这个俗套的话题了。什么是更牛逼的自己?问题总是满目的飘过来，和老板做好关系以后有业务有企业收了你?或者是拼命找实习奢望着未来的简历更加丰满一些么。更有甚者说是在闲极无聊的研究生时代多陶冶情操多补充一下人文的情怀。嗯，未尝不可啊。<br>    人就这一次选择，选了就有错过了就有后悔了就有放弃了。我倒是看好无为者。做CEO做创业者做大亨，还是慢慢爬慢慢掏着糊口的钱陪老婆孩子?没有什么路都是能保证你会最好的生活，路在脚下，还没达到更强大到足以一笑而过的自己，何必管别人如何如何。文中有一句话很赞</p>\n<blockquote>\n<p>真相是，科学家本来就不是什么崇高的职业，就没他妈的什么职业是崇高的。任何行当里面也都有聪明人，只是由于行当不同而影响范围不同而已。而且，人与人智力上的差别，在个人的事业发展中，我觉得，基本可以忽略不计。从长时间的尺度看，起主要作用的，往往是动机、心态和对这个行当的认识是否清醒，是思考、判断和信仰。<br>人与人不同，只有一条出路是人人都试用的—-做好自己看的起的当下。慵懒只陪回忆，没有资格谈待会儿。<br>最后一句话共勉吧</p>\n<p>学术圈这些事儿都不是什么怪现象，相反，都是在这个发展阶段最正常不过的现象而已。愤世嫉俗是一种慢性自杀不要跟谁过意不去，事在人为，谁都要过日子，科学家工程师都是。想做就做吧。<br>    我要找一个好老板，写给未来的自己。。</p>\n</blockquote>"},{"title":"刷屏测试。。","id":"88","date":"2013-05-07T13:24:33.000Z","_content":"\n呵呵呵蛤蛤蛤[![tumblr_mffq451MOx1rcbuu9o1_1280](http://www.dooby.me/wp-content/uploads/2013/05/tumblr_mffq451MOx1rcbuu9o1_1280-300x200.jpg)](http://www.dooby.me/wp-content/uploads/2013/05/tumblr_mffq451MOx1rcbuu9o1_1280.jpg)","source":"_posts/刷屏测试。。.md","raw":"---\ntitle: 刷屏测试。。\ncategories:\n  - 什么都学一下\n  - 学习log\ntags:\n  - 寂寞寂寞就好\nid: 88\ndate: 2013-05-07 21:24:33\n---\n\n呵呵呵蛤蛤蛤[![tumblr_mffq451MOx1rcbuu9o1_1280](http://www.dooby.me/wp-content/uploads/2013/05/tumblr_mffq451MOx1rcbuu9o1_1280-300x200.jpg)](http://www.dooby.me/wp-content/uploads/2013/05/tumblr_mffq451MOx1rcbuu9o1_1280.jpg)","slug":"刷屏测试。。","published":1,"updated":"2016-04-11T14:09:45.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7qh006cuco4yhwwalec","content":"<p>呵呵呵蛤蛤蛤<a href=\"http://www.dooby.me/wp-content/uploads/2013/05/tumblr_mffq451MOx1rcbuu9o1_1280.jpg\" target=\"_blank\" rel=\"external\"><img src=\"http://www.dooby.me/wp-content/uploads/2013/05/tumblr_mffq451MOx1rcbuu9o1_1280-300x200.jpg\" alt=\"tumblr_mffq451MOx1rcbuu9o1_1280\"></a></p>","excerpt":"","more":"<p>呵呵呵蛤蛤蛤<a href=\"http://www.dooby.me/wp-content/uploads/2013/05/tumblr_mffq451MOx1rcbuu9o1_1280.jpg\"><img src=\"http://www.dooby.me/wp-content/uploads/2013/05/tumblr_mffq451MOx1rcbuu9o1_1280-300x200.jpg\" alt=\"tumblr_mffq451MOx1rcbuu9o1_1280\"></a></p>"},{"title":"后方交会检校(1)--前景 共线方程及其线性化","id":"599","date":"2015-10-10T15:29:57.000Z","_content":"\n各种文档看得累。条理不清结构不明缺斤少两。决定自己总结一个。（公式较多，墙外浏览更顺哟）\n\n 一些注意\n\n**   后方交会是为了获取影像的内外方位数据，其中外方位数据可以通过GPS、INS（惯性导航系统）、雷达、星相摄像机来获取；然而由于穷穷穷，只能利用影响覆盖范围内的一定控制点来计算空间坐标与影响坐标之间的关系，来反算外方位元素。\n**   多片检校基于单片检校。在矩阵组合时分别解算外方位元素。但使用同一组内方位元素。在一个大矩阵内进行。\n**   后方交会可以只检校外方位元素。当需要进行畸变差校正时（即畸变差不可忽略时），可在方程中加入畸变差项进行迭代；当需要进行内方位元素检校时（即内方位元素精度没有达到需求），可在方程中加入内方位元素进行迭代。\n**   对于畸变差校正，包括径向畸变、切向畸变、薄棱镜畸变，其中多数情况考察径向畸变的前两项系数k1 k2和切向畸变p1 p2 ，在某些组合相机的畸变模型中，还包括α像素非正方形比例和βccd非正交性畸变系数。\n**   对于内方位元素检校，有的地方将f分为fx和fy即f在坐标两个方向上的像素值（由于有的xy不是同一比例尺即不是正方形）\n**   检校，就是纠正相机各个方面的误差和精度，可以得到相机内部的主点、焦距、畸变的客观信息，这些信息在大部分情况下不会轻易改变；而相机外部的空间位置时时刻刻都在改变，但一些论文指出，在焦距变化、空间位置变化、移轴、高空拍摄情况下，相机的焦距、主点位置也会随之或多或少的改变，因此迭代时最好能带上这些参数一起进行平差。\n*\n\n 一些重要概念\n\n**   后方交会基于<span style=\"COLOR: #ff0000\">**共线方程**</span>，物理含义为同一个三维坐标系中投影中心、物方点、像平面投影的点在同一条直线上。\n*\n\n $$!x-x_{0}=-f\\cdot \\frac{a_{1}(X-X_{s})+b_{1}(Y-Y_{s})+c_{1}(Z-Z_{s})}{a_{3}(X-X_{s})+b_{3}(Y-Y_{s})+c_{3}(Z-Z_{s})}$$\n\n $$!y-y_{0}=-f\\cdot \\frac{a_{2}(X-X_{s})+b_{2}(Y-Y_{s})+c_{2}(Z-Z_{s})}{a_{3}(X-X_{s})+b_{3}(Y-Y_{s})+c_{3}(Z-Z_{s})}$$\n\n 上式中，包含留个外方位元素，即Xs、Ys、Zs、φ、Ω、k。只有确定了六个外方位元素，才能确定摄影中心在物方空间的位置。a1、a2、a3、b1、b2、b3、c1、c2、c3是需要计算的直线方程的系数，其物理性质是3个外方位角元素组成的9个方向余弦。该方程利用了相似三角形的性质；f是焦距长，X Y Z均值控制点的测量坐标，默认为精确的，因此物方控制点测量的精度很大程度上决定了最后检校的精度；x y是X Y Z对应的像平面的坐标，x0，y0是主点在像平面的坐标，有时当作已知并不再改变，有时也参与迭代计算。\n\n 共线条件方程用途有：\n\n1.2.  单像、多像空间后方交会；多像空间前方交会\n3.4.  解析空中三角测量的光束法平差\n5.6.  数字投影的基础\n7.8.  计算模拟影像数据（已知内外方位元素和物方坐标点求像点）\n9.10.  DEM与共线方程制作正射影像\n11.12.  DEM与共线方程进行单幅影像测图\n13.\n\n> **注意 一个方程代表一个点在像平面和物方世界的关系，因此一个点对应两个方程，若有n个控制点，则对应2n个方程**\n\n 若f x0 y0当作已知，则有外方位元素6个未知数，因此需要6个方程，即3个控制点的方程；若f x0 y0当作位置，则有9个未知数，因此需要至少5个控制点的方程。当然，很多文章也指出，**越多的冗余数据**参与计算得到的结果也越精确；**越多的像片**参与计算，得到的结果越精确；**更均匀的控制点分布**，能更多的控制整张像片，均匀的分布在边缘，得到的结果更精确。\n\n 一般情况下，令\n $$!\\overline{X}=a_{1}(X-X_{s})+b_{1}(Y-Y_{s})+c_{1}(Z-Z_{s})$$\n\n$$!\\overline{Y}=a_{2}(X-X_{s})+b_{2}(Y-Y_{s})+c_{2}(Z-Z_{s})$$\n\n$$!\\overline{Z}=a_{3}(X-X_{s})+b_{3}(Y-Y_{s})+c_{3}(Z-Z_{s})$$\n\n 而用矩阵的形式可以表示为：\n\n $$!\\begin{pmatrix}\\overline{X}\\\\ \\overline{Y}\\\\ \\overline{Z}\\end{pmatrix}=\\begin{pmatrix}a_{1}&amp;b_{1}&amp;c_{1}\\\\a_{2}&amp;b_{2}&amp;c_{2}\\\\a_{3}&amp;b_{3}&amp;c_{3}\\end{pmatrix}\\cdot\\begin{pmatrix}X-Xs\\\\Y-Ys\\\\Z-Zs\\end{pmatrix}=R^{T}\\begin{pmatrix}X-Xs\\\\Y-Ys\\\\Z-Zs\\end{pmatrix}$$\n\n这里R是旋转矩阵，且$$R^{T}=R^{-1}$$,行列式的值为0，即任意元素等于其代数余子式的值.则共线方程变为：\n\n $$!x-x_{0}=-f\\cdot \\frac{\\overline{X}}{\\overline{Z}}$$\n\n$$!y-y_{0}=-f\\cdot \\frac{\\overline{Y}}{\\overline{Z}}$$\n\n 由于上式是共线方程的变形，因此Fx和Fy是六个外方位元素为参数的函数。由于方程是非线性的，因此不能解求数值，**需要对方程进行线性化**。思路是，对上式按泰勒级数在初值处展开并保留一次项，将非线性方程转化为各参数<span style=\"COLOR: #ff0000\">**改正数**</span>的线性方程\n\n 设<span style=\"COLOR: #ff0000\">初值</span>为$$!X_{S}^{0},X_{S}^{0},Z_{S}^{0},\\varphi^{0},\\omega^{0},\\kappa {0},X^{0},Y^{0},Z^{0},x_{0}^{0},y_{0}^{0},f^{0}$$\n\n 相应的<span style=\"COLOR: #ff0000\">改正数</span>为\n\n $$!dXs=\\triangle Xs=Xs-Xs^{0},dYs=\\triangle Ys=Ys-Ys^{0},dZs=\\triangle Zs=Zs-Zs^{0}$$\n\n $$!d\\varphi=\\triangle \\varphi=\\varphi-\\varphi^{0},d\\omega=\\triangle \\omega=\\omega-\\omega^{0},d\\kappa=\\triangle \\kappa=\\kappa-\\kappa^{0}$$\n\n $$!dX=\\triangle X=X-X^{0},dY=\\triangle Y=Y-Y^{0},dZ=\\triangle Z=Z-Z^{0}$$\n\n &nbsp;则<font color=\"#FF0000\" size=\"5\">共线方程的泰勒一次展开一般式</font>为<font color=\"#FF0000\" size=\"5\">①</font>\n\n $$!x=(x)+\\frac{\\partial x}{\\partial Xs}dXs+\\frac{\\partial x}{\\partial Ys}dYs+\\frac{\\partial x}{\\partial Zs}dZs+\\frac{\\partial x}{\\partial \\varphi }d\\varphi +\\frac{\\partial x}{\\partial \\omega }d\\omega +\\frac{\\partial x}{\\partial \\kappa }d\\kappa +\\frac{\\partial x}{\\partial X}dX+\\frac{\\partial x}{\\partial Y}dY+\\frac{\\partial x}{\\partial x_{0}}dx_{0}+\\frac{\\partial x}{\\partial y_{0}}dy_{0}+\\frac{\\partial x}{\\partial f}df$$\n\n$$!y=(y)+\\frac{\\partial y}{\\partial Xs}dXs+\\frac{\\partial y}{\\partial Ys}dYs+\\frac{\\partial y}{\\partial Zs}dZs+\\frac{\\partial y}{\\partial \\varphi }d\\varphi +\\frac{\\partial y}{\\partial \\omega }d\\omega +\\frac{\\partial y}{\\partial \\kappa }d\\kappa +\\frac{\\partial y}{\\partial X}dX+\\frac{\\partial y}{\\partial Y}dY+\\frac{\\partial y}{\\partial x_{0}}dx_{0}+\\frac{\\partial y}{\\partial y_{0}}dy_{0}+\\frac{\\partial y}{\\partial f}df$$\n\n这是一个重要的总结性公式。(x)(y)分别是内方位元素x，y的初值。式中包含了所有内外元素和物放测量点。当进行不同矩阵运算时，可以选择需要的精度不足够的进行迭代计算。\n\n其中，对x和y求各未知项的偏导：\n\n $$!\\frac{\\partial x}{\\partial Xs}=-f\\cdot \\frac{\\frac{\\partial \\overline{X}}{\\partial Xs}\\overline{Z}-\\frac{\\partial \\overline{Z}}{\\partial Xs}\\overline{X}}{\\overline{Z}^{2}}=-\\frac{f}{\\overline{Z}^{2}}(-a_{1}\\overline{Z}+a_{3}\\overline{X})=\\frac{1}{\\overline{Z}}[a_{1}f-a_{3}f\\frac{\\overline{X}}{\\overline{Z}}]=\\frac{1}{\\overline{Z}}[a_{1}f+a_{3}(x-x_{0})]$$\n\n 同理，其他的偏导为\n\n $$!\\frac{\\partial x}{\\partial Ys}=\\frac{1}{\\overline{Z}}[b_{1}f+b_{3}(x-x_{0})]$$\n\n $$!\\frac{\\partial x}{\\partial Zs}=\\frac{1}{\\overline{Z}}[c_{1}f+b_{3}(x-x_{0})]$$\n\n $$!\\frac{\\partial y}{\\partial Xs}=\\frac{1}{\\overline{Z}}[a_{2}f+a_{3}(x-x_{0})]$$\n\n $$!\\frac{\\partial y}{\\partial Ys}=\\frac{1}{\\overline{Z}}[b_{2}f+b_{3}(x-x_{0})]$$\n\n $$!\\frac{\\partial y}{\\partial Zs}=\\frac{1}{\\overline{Z}}[c_{2}f+c_{3}(x-x_{0})]$$\n\n $$!\\frac{\\partial x}{\\partial f}=\\frac{x-x_{0}}{f}=-\\frac{\\overline{X}}{\\overline{Z}}$$\n\n$$!\\frac{\\partial y}{\\partial f}=\\frac{y-y_{0}}{f}=-\\frac{\\overline{Y}}{\\overline{Z}}$$\n\n$$!\\frac{\\partial x}{\\partial x_{0}}=1,\\frac{\\partial x}{\\partial y_{0}}=0$$\n\n$$!\\frac{\\partial y}{\\partial x_{0}}=0,\\frac{\\partial y}{\\partial y_{0}}=1$$\n\n 这里相对比较难解决的是角元素的偏导，关于角度的问题可以参考第三篇。\n\n 角度的变换在这里不再详述，两个坐标系之间的转换可以归结为变换矩阵的求取。三个角元素共同构成了矩阵的元素确定。\n\n 由于\n\n$$!R^{T}=R_{\\kappa }^{T}R_{\\omega }^{T}R_{\\varphi }^{T} $$\n\n因而，难度转到求取$$\\overline{X}\\overline{Y} \\overline{Z} $$对角元素的偏导上。对角元素求偏导可以分为三个步骤：\n\n①求各个方向余弦$$a_{i},b_{i},c_{i}$$对ω、k、φ的偏导数。共27个。\n\n②求$$\\overline{X},\\overline{Y},\\overline{Z}$$对ω、k、φ的偏导数，共9个。\n\n③求x、y对ω、k、φ的偏导数，共6个。\n\n如下是$$\\overline{X},\\overline{Y},\\overline{Z}$$对φ的偏导，三个参数写在矩阵中，有的地方也展开写成每一项的等式形式。\n\n$$!\\frac{\\partial }{\\partial \\varphi }\\begin{pmatrix}\\overline{X}\\\\\\overline{Y}\\\\\\overline{Z}\\end{pmatrix}=R_{\\kappa }^{T}R_{\\omega }^{T}\\frac{\\partial R_{\\varphi }^{T}}{\\partial \\varphi }\\begin{pmatrix}X-Xs\\\\ Y-Ys\\\\ Z-Zs\\end{pmatrix}=R_{\\kappa }^{T}R_{\\omega }^{T}\\frac{\\partial R_{\\varphi }^{T}}{\\partial \\varphi }(R^{T})^{-1}\\begin{pmatrix}\\overline{X}\\\\ \\overline{Y}\\\\ \\overline{Z}\\end{pmatrix}=R_{\\kappa }^{T}R_{\\omega }^{T}\\frac{\\partial R_{\\varphi }^{T}}{\\partial \\varphi }R\\begin{pmatrix}\\overline{X}\\\\ \\overline{Y}\\\\ \\overline{Z}\\end{pmatrix}=R_{\\kappa }^{T}R_{\\omega }^{T}(R_{\\varphi }^{T}R_{\\varphi })\\frac{\\partial R_{\\varphi }^{T}}{\\partial \\varphi }R\\begin{pmatrix}\\overline{X}\\\\ \\overline{Y}\\\\ \\overline{Z}\\end{pmatrix}=R^{T}R_{\\varphi }\\frac{\\partial R_{\\varphi }^{T}}{\\partial \\varphi }R\\begin{pmatrix}\\overline{X}\\\\ \\overline{Y}\\\\ \\overline{Z}\\end{pmatrix}$$\n\n带入具体系数，上式可变形为\n\n$$!\\begin{pmatrix}a_{1} &amp; b_{1} &amp; c_{1}\\\\a_{2} &amp; b_{2} &amp; c_{2}\\\\a_{3} &amp; b_{3} &amp; c_{3}\\end{pmatrix}\\begin{pmatrix}0 &amp; 0 &amp;1\\\\0 &amp; 0 &amp; 0\\\\-1 &amp; 0 &amp; 0\\end{pmatrix}\\begin{pmatrix}a_{1} &amp; a_{2} &amp; a_{3}\\\\b_{1} &amp; b_{2} &amp; b_{3}\\\\c_{1} &amp; c_{2}&amp;c_{3} \\end{pmatrix}\\begin{pmatrix}\\overline{X}\\\\\\overline{Y}\\\\\\overline{Z} \\end{pmatrix}=\\begin{pmatrix}0 &amp;-a_{2}c_{1}+a_{1}c_{2}&amp;-a_{3}c_{1}+a_{1}c_{3}\\\\-a_{1}c_{2}+a_{2}c_{1} &amp; 0 &amp; -a_{3}c_{2}+a_{2}c_{3}\\\\ -a_{1}c_{3}+a_{3}c_{1}&amp; -a_{2}c_{3}+a_{3}c_{2} &amp;0\\end{pmatrix}\\begin{pmatrix}\\overline{X}\\\\\\overline{Y}\\\\\\overline{Z} \\end{pmatrix}=\\begin{pmatrix}0 &amp; -b_{3} &amp; b_{2}\\\\b_{3}&amp;0&amp;-b_{1}\\\\-b_{2}&amp;b_{1}&amp;0\\end{pmatrix}\\begin{pmatrix}\\overline{X}\\\\\\overline{Y}\\\\\\overline{Z} \\end{pmatrix}$$\n\n其中利用了旋转矩阵一个元素的值<font color=\"#FF0000\">等于代数余子式的值</font>。如下是$$\\overline{X},\\overline{Y},\\overline{Z}$$对ω的偏导。\n\n$$!\\frac{\\partial }{\\partial \\omega }\\begin{pmatrix}\\overline{X}\\\\\\overline{Y}\\\\\\overline{Z}\\end{pmatrix}=R_{\\kappa }^{T}\\frac{\\partial R_{\\omega}^{T}}{\\partial \\omega }R_{\\varphi }^{T}\\begin{pmatrix}X-Xs\\\\Y-Ys\\\\Z-Zs\\end{pmatrix}=R_{\\kappa}^{T}\\frac{\\partial R_{\\omega }^{T}}{\\partial \\omega }R_{\\varphi }^{T}(R_{\\varphi }R_{\\omega }R_{\\kappa })\\begin{pmatrix}\\overline{X}\\\\ \\overline{Y}\\\\ \\overline{Z}\\end{pmatrix}=R_{\\kappa }^{T}\\frac{\\partial R_{\\omega }^{T}}{\\partial \\omega}R_{\\omega }R_{\\kappa }\\begin{pmatrix}\\overline{X}\\\\ \\overline{Y}\\\\ \\overline{Z}\\end{pmatrix}=\\begin{pmatrix}0&amp;0&amp;sin\\kappa\\\\ 0&amp;0&amp;cos\\kappa\\\\-sin\\kappa&amp;-cos \\kappa&amp;0\\end{pmatrix}\\begin{pmatrix}\\overline{X}\\\\ \\overline{Y}\\\\ \\overline{Z}\\end{pmatrix}$$其中，这里用到了\n\n$$!\\begin{pmatrix}\\overline{X}\\\\\\overline{Y}\\\\\\overline{Z}\\end{pmatrix}=R^{T}\\begin{pmatrix}X-Xs\\\\Y-Ys\\\\Z-Zs\\end{pmatrix}=(R_{\\varphi}R_{\\omega}R_{\\kappa })^{T}\\begin{pmatrix}X-Xs\\\\Y-Ys\\\\Z-Zs\\end{pmatrix}=R_{\\kappa }^{T}R_{\\omega }^{T}R_{\\varphi }^{T}\\begin{pmatrix}X-Xs\\\\Y-Ys\\\\Z-Zs\\end{pmatrix}$$\n\n$$!\\begin{pmatrix}X-Xs\\\\Y-Ys\\\\Z-Zs\\end{pmatrix}=(R^{T})^{-1}\\begin{pmatrix}\\overline{X}\\\\\\overline{Y}\\\\\\overline{Z}\\end{pmatrix}=R\\begin{pmatrix}\\overline{X}\\\\\\overline{Y}\\\\\\overline{Z}\\end{pmatrix}=R_{\\varphi }R_{\\omega }R_{\\kappa }\\begin{pmatrix}\\overline{X}\\\\\\overline{Y}\\\\\\overline{Z}\\end{pmatrix}$$\n\n如下是$$\\overline{X},\\overline{Y},\\overline{Z}$$对k的偏导。\n\n$$!\\frac{\\partial }{\\partial \\kappa }\\begin{pmatrix}\\overline{X}\\\\ \\overline{Y}\\\\ \\overline{Z}\\end{pmatrix}=\\frac{\\partial R_{\\kappa }^{T}}{\\partial \\kappa }R_{\\omega }^{T}R_{\\varphi }^{T}\\begin{pmatrix}X-Xs\\\\Y-Ys\\\\Z-Zs\\end{pmatrix}=\\frac{\\partial R_{\\kappa }^{T}}{\\partial \\kappa }(R_{\\kappa }R_{\\kappa }^{T})R_{\\omega }^{T}R_{\\varphi }^{T}\\begin{pmatrix}X-Xs\\\\Y-Ys\\\\Z-Zs\\end{pmatrix}=\\frac{\\partial R_{\\kappa }^{T}}{\\partial \\kappa }R_{\\kappa }\\begin{pmatrix}\\overline{X}\\\\ \\overline{Y}\\\\ \\overline{Z}\\end{pmatrix}=\\begin{pmatrix}\\overline{Y}\\\\ -\\overline{X}\\\\0\\end{pmatrix}$$\n 通过以上三式可得到x和y对各角元素未知数的偏导。有的地方，将x，y先分别除以$$\\overline{Z}$$,\n\n这样可以在求取偏导的时候减少计算量。\n\n$$!\\frac{\\partial x}{\\partial \\varphi }=-\\frac{f}{\\overline{Z}^{2}}(\\frac{\\partial \\overleftarrow{X}}{\\partial \\varphi }\\overline{Z}-\\frac{\\partial \\overline{Z}}{\\partial \\varphi }\\overline{X})=-\\frac{f}{\\overline{Z}^{2}}(-b_{3}\\overline{Y}+b_{2}\\overline{Z})\\overline{Z}+\\frac{f}{\\overline{Z}^{2}}(b_{2}\\overline{X}-b_{1}\\overline{Y})\\overline{X}=-(y-y_{0})b_{3}-fb_{2}-\\frac{(x-x_{0})^{2}}{f}b_{2}+\\frac{(x-x_{0})(y-y_{0})}{f}b_{1}=\\frac{(x-x_{0})(y-y_{0})}{f}b_{1}-(f+\\frac{(x-x_{0})^{2}}{f})b_{2}-(y-y_{0})b_{3}$$其他一次类推\n\n$$!\\frac{\\partial x}{\\partial \\omega }=\\frac{(x-x_{0})^{2}}{f}sin\\kappa-\\frac{(x-x_{0})(y-y_{0})}{f}cos\\kappa -fsin\\kappa $$\n\n$$!\\frac{\\partial x}{\\partial \\kappa }=y-y_{0}$$\n\n$$!\\frac{\\partial y}{\\partial \\varphi }=(f+\\frac{(y-y_{0}^{2})}{f})b_{1}-\\frac{(x-x_{0})(y-y_{0})}{f}b_{2}-(x-x_{0})b_{3}$$\n\n$$!\\frac{\\partial y}{\\partial \\omega }=-\\frac{(x-x_{0})(y-y_{0})}{f}sin\\kappa -\\frac{(y-y_{0})^{2}}{f}cos\\kappa -fcos\\kappa $$\n\n$$!\\frac{\\partial y}{\\partial \\kappa }=-(x-x_{0})$$\n\n以上求出了所有的偏导，则①式的公式可变为<font color=\"#FF0000\" size=\"5\">更重要的</font>式<font color=\"#FF0000\">②</font>\n\n$$!c_{11}dXs+c_{12}dYs+c_{13}dZs+c_{14}d\\phi +c_{15}d\\omega +c_{16}d\\kappa -c_{11}dX-c_{12}dY-c_{13}dZ+c_{17}df+c_{18}dx_{0}+c_{19}dy_{0}-lx=0$$\n\n$$!c_{21}dXs+c_{22}dYs+c_{23}dZs+c_{24}d\\phi +c_{25}d\\omega +c_{26}d\\kappa -c_{21}dX-c_{22}dY-c_{23}dZ+c_{27}df+c_{28}dx_{0}+c_{29}dy_{0}-ly=0$$这里可以看到，Xs和X Ys和Y Zs和Z的偏导互为相反数，因此12个未知数只需要求解9个。 其中c的系数分别为：\n\n$$!c_{11}=\\frac{1}{\\overline{Z}}(a_{1}f+a_{3}(x-x_{0}))$$\n\n$$!c_{12}=\\frac{1}{\\overline{Z}}(b_{1}f+b_{3}(x-x_{0}))$$\n\n$$!c_{13}=\\frac{1}{\\overline{Z}}(c_{1}f+c_{3}(x-x_{0}))$$\n\n$$!c_{14}=\\frac{(x-x_{0})(y-y_{0})}{f}b_{1}-(f+\\frac{(x-x_{0})^{2}}{f})b_{2}-(y-y_{0})b_{3}$$\n\n$$!c_{15}=-\\frac{(x-x_{0})^{2}}{f}sin\\kappa -\\frac{(x-x_{0})(y-y_{0})}{f}cos\\kappa -fsin\\kappa$$\n\n$$!c_{16}=y-y_{0}$$\n\n$$!c_{17}=\\frac{x-x_{0}}{f},c_{18}=1,c_{19}=0,lx=x-x_{cal}$$\n\n&nbsp;\n\n$$!c_{21}=\\frac{1}{\\overline{Z}}(a_{2}f+a_{3}(y-y_{0}))$$\n\n$$!c_{22}=\\frac{1}{\\overline{Z}}(b_{2}f+b_{3}(y-y_{0}))$$\n\n$$!c_{23}=\\frac{1}{\\overline{Z}}(c_{2}f+c_{3}(y-y_{0}))$$\n\n$$!c_{24}=(f+\\frac{(y-y_{0})^{2}}{f})b_{1}-\\frac{(x-x_{0})(y-y_{0})}{f}b_{2}+(x-x_{0})b_{3}$$\n\n$$!c_{25}=-\\frac{(x-x_{0})(y-y_{0})}{f}sin\\kappa -\\frac{(y-y_{0})^{2}}{f}cos\\kappa -fcos\\kappa ,c_{26}=-(x-x_{0})$$\n\n$$!c_{17}=\\frac{y-y_{0}}{f},c_{28}=0,c_{29}=1,ly=y-y_{cal}$$\n\n在正摄影像近似垂直时，可以采用φ≈ω≈k≈0,$$\\overline{Z}\\approx -H$$的取值带入系数中，则②式可化简为<font color=\"#FF0000\">本篇最终的结果式③</font>：\n\n$$!\\left\\{\\begin{matrix}v_{x}=-\\frac{f}{H}dXs-\\frac{x-x_{0}}{H}dZs-[f+\\frac{(x-x_{0})^{2}}{f}]d\\varphi-\\frac{(x-x_{0})(y-y_{0})}{f}d\\omega+(y-y_{0})d\\kappa+\\frac{f}{H}dX+\\frac{x-x_{0}}{H}dZ+\\frac{x-x_{0}}{f}df+dx_{0}-(x-x_{cal})\\\\v_{y}=-\\frac{f}{H}dYs-\\frac{y-y_{0}}{H}dZs-\\frac{(x-x_{0})(y-y_{0})}{f}d\\varphi-[f+\\frac{(y-y_{0})^{2}}{f}]d\\omega+(x-x_{0})d\\kappa+\\frac{f}{H}dY+\\frac{y-y_{0}}{H}dZ+\\frac{y-y_{0}}{f}df+dy_{0}-(y-y_{cal})\\end{matrix}\\right.$$\n\n式中相对①式添加了改正项，为了平衡一次项以下的展开式对结果的影响，是平差方程中重要的一部。误差方程将在下文提到。\n\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\">[](http://sns.juziyue.com/webinvite.php?u=94887)&nbsp;今天你[菊子曰](http://sns.juziyue.com/webinvite.php?u=94887)了么？</div>","source":"_posts/后方交会检校(1)--前景 共线方程及其线性化.md","raw":"---\ntitle: 后方交会检校(1)--前景 共线方程及其线性化\ncategories:\n  - 什么都学一下\n  - 学习log\ntags:\n  - 后方交会\n  - 检校\nid: 599\ndate: 2015-10-10 23:29:57\n---\n\n各种文档看得累。条理不清结构不明缺斤少两。决定自己总结一个。（公式较多，墙外浏览更顺哟）\n\n 一些注意\n\n**   后方交会是为了获取影像的内外方位数据，其中外方位数据可以通过GPS、INS（惯性导航系统）、雷达、星相摄像机来获取；然而由于穷穷穷，只能利用影响覆盖范围内的一定控制点来计算空间坐标与影响坐标之间的关系，来反算外方位元素。\n**   多片检校基于单片检校。在矩阵组合时分别解算外方位元素。但使用同一组内方位元素。在一个大矩阵内进行。\n**   后方交会可以只检校外方位元素。当需要进行畸变差校正时（即畸变差不可忽略时），可在方程中加入畸变差项进行迭代；当需要进行内方位元素检校时（即内方位元素精度没有达到需求），可在方程中加入内方位元素进行迭代。\n**   对于畸变差校正，包括径向畸变、切向畸变、薄棱镜畸变，其中多数情况考察径向畸变的前两项系数k1 k2和切向畸变p1 p2 ，在某些组合相机的畸变模型中，还包括α像素非正方形比例和βccd非正交性畸变系数。\n**   对于内方位元素检校，有的地方将f分为fx和fy即f在坐标两个方向上的像素值（由于有的xy不是同一比例尺即不是正方形）\n**   检校，就是纠正相机各个方面的误差和精度，可以得到相机内部的主点、焦距、畸变的客观信息，这些信息在大部分情况下不会轻易改变；而相机外部的空间位置时时刻刻都在改变，但一些论文指出，在焦距变化、空间位置变化、移轴、高空拍摄情况下，相机的焦距、主点位置也会随之或多或少的改变，因此迭代时最好能带上这些参数一起进行平差。\n*\n\n 一些重要概念\n\n**   后方交会基于<span style=\"COLOR: #ff0000\">**共线方程**</span>，物理含义为同一个三维坐标系中投影中心、物方点、像平面投影的点在同一条直线上。\n*\n\n $$!x-x_{0}=-f\\cdot \\frac{a_{1}(X-X_{s})+b_{1}(Y-Y_{s})+c_{1}(Z-Z_{s})}{a_{3}(X-X_{s})+b_{3}(Y-Y_{s})+c_{3}(Z-Z_{s})}$$\n\n $$!y-y_{0}=-f\\cdot \\frac{a_{2}(X-X_{s})+b_{2}(Y-Y_{s})+c_{2}(Z-Z_{s})}{a_{3}(X-X_{s})+b_{3}(Y-Y_{s})+c_{3}(Z-Z_{s})}$$\n\n 上式中，包含留个外方位元素，即Xs、Ys、Zs、φ、Ω、k。只有确定了六个外方位元素，才能确定摄影中心在物方空间的位置。a1、a2、a3、b1、b2、b3、c1、c2、c3是需要计算的直线方程的系数，其物理性质是3个外方位角元素组成的9个方向余弦。该方程利用了相似三角形的性质；f是焦距长，X Y Z均值控制点的测量坐标，默认为精确的，因此物方控制点测量的精度很大程度上决定了最后检校的精度；x y是X Y Z对应的像平面的坐标，x0，y0是主点在像平面的坐标，有时当作已知并不再改变，有时也参与迭代计算。\n\n 共线条件方程用途有：\n\n1.2.  单像、多像空间后方交会；多像空间前方交会\n3.4.  解析空中三角测量的光束法平差\n5.6.  数字投影的基础\n7.8.  计算模拟影像数据（已知内外方位元素和物方坐标点求像点）\n9.10.  DEM与共线方程制作正射影像\n11.12.  DEM与共线方程进行单幅影像测图\n13.\n\n> **注意 一个方程代表一个点在像平面和物方世界的关系，因此一个点对应两个方程，若有n个控制点，则对应2n个方程**\n\n 若f x0 y0当作已知，则有外方位元素6个未知数，因此需要6个方程，即3个控制点的方程；若f x0 y0当作位置，则有9个未知数，因此需要至少5个控制点的方程。当然，很多文章也指出，**越多的冗余数据**参与计算得到的结果也越精确；**越多的像片**参与计算，得到的结果越精确；**更均匀的控制点分布**，能更多的控制整张像片，均匀的分布在边缘，得到的结果更精确。\n\n 一般情况下，令\n $$!\\overline{X}=a_{1}(X-X_{s})+b_{1}(Y-Y_{s})+c_{1}(Z-Z_{s})$$\n\n$$!\\overline{Y}=a_{2}(X-X_{s})+b_{2}(Y-Y_{s})+c_{2}(Z-Z_{s})$$\n\n$$!\\overline{Z}=a_{3}(X-X_{s})+b_{3}(Y-Y_{s})+c_{3}(Z-Z_{s})$$\n\n 而用矩阵的形式可以表示为：\n\n $$!\\begin{pmatrix}\\overline{X}\\\\ \\overline{Y}\\\\ \\overline{Z}\\end{pmatrix}=\\begin{pmatrix}a_{1}&amp;b_{1}&amp;c_{1}\\\\a_{2}&amp;b_{2}&amp;c_{2}\\\\a_{3}&amp;b_{3}&amp;c_{3}\\end{pmatrix}\\cdot\\begin{pmatrix}X-Xs\\\\Y-Ys\\\\Z-Zs\\end{pmatrix}=R^{T}\\begin{pmatrix}X-Xs\\\\Y-Ys\\\\Z-Zs\\end{pmatrix}$$\n\n这里R是旋转矩阵，且$$R^{T}=R^{-1}$$,行列式的值为0，即任意元素等于其代数余子式的值.则共线方程变为：\n\n $$!x-x_{0}=-f\\cdot \\frac{\\overline{X}}{\\overline{Z}}$$\n\n$$!y-y_{0}=-f\\cdot \\frac{\\overline{Y}}{\\overline{Z}}$$\n\n 由于上式是共线方程的变形，因此Fx和Fy是六个外方位元素为参数的函数。由于方程是非线性的，因此不能解求数值，**需要对方程进行线性化**。思路是，对上式按泰勒级数在初值处展开并保留一次项，将非线性方程转化为各参数<span style=\"COLOR: #ff0000\">**改正数**</span>的线性方程\n\n 设<span style=\"COLOR: #ff0000\">初值</span>为$$!X_{S}^{0},X_{S}^{0},Z_{S}^{0},\\varphi^{0},\\omega^{0},\\kappa {0},X^{0},Y^{0},Z^{0},x_{0}^{0},y_{0}^{0},f^{0}$$\n\n 相应的<span style=\"COLOR: #ff0000\">改正数</span>为\n\n $$!dXs=\\triangle Xs=Xs-Xs^{0},dYs=\\triangle Ys=Ys-Ys^{0},dZs=\\triangle Zs=Zs-Zs^{0}$$\n\n $$!d\\varphi=\\triangle \\varphi=\\varphi-\\varphi^{0},d\\omega=\\triangle \\omega=\\omega-\\omega^{0},d\\kappa=\\triangle \\kappa=\\kappa-\\kappa^{0}$$\n\n $$!dX=\\triangle X=X-X^{0},dY=\\triangle Y=Y-Y^{0},dZ=\\triangle Z=Z-Z^{0}$$\n\n &nbsp;则<font color=\"#FF0000\" size=\"5\">共线方程的泰勒一次展开一般式</font>为<font color=\"#FF0000\" size=\"5\">①</font>\n\n $$!x=(x)+\\frac{\\partial x}{\\partial Xs}dXs+\\frac{\\partial x}{\\partial Ys}dYs+\\frac{\\partial x}{\\partial Zs}dZs+\\frac{\\partial x}{\\partial \\varphi }d\\varphi +\\frac{\\partial x}{\\partial \\omega }d\\omega +\\frac{\\partial x}{\\partial \\kappa }d\\kappa +\\frac{\\partial x}{\\partial X}dX+\\frac{\\partial x}{\\partial Y}dY+\\frac{\\partial x}{\\partial x_{0}}dx_{0}+\\frac{\\partial x}{\\partial y_{0}}dy_{0}+\\frac{\\partial x}{\\partial f}df$$\n\n$$!y=(y)+\\frac{\\partial y}{\\partial Xs}dXs+\\frac{\\partial y}{\\partial Ys}dYs+\\frac{\\partial y}{\\partial Zs}dZs+\\frac{\\partial y}{\\partial \\varphi }d\\varphi +\\frac{\\partial y}{\\partial \\omega }d\\omega +\\frac{\\partial y}{\\partial \\kappa }d\\kappa +\\frac{\\partial y}{\\partial X}dX+\\frac{\\partial y}{\\partial Y}dY+\\frac{\\partial y}{\\partial x_{0}}dx_{0}+\\frac{\\partial y}{\\partial y_{0}}dy_{0}+\\frac{\\partial y}{\\partial f}df$$\n\n这是一个重要的总结性公式。(x)(y)分别是内方位元素x，y的初值。式中包含了所有内外元素和物放测量点。当进行不同矩阵运算时，可以选择需要的精度不足够的进行迭代计算。\n\n其中，对x和y求各未知项的偏导：\n\n $$!\\frac{\\partial x}{\\partial Xs}=-f\\cdot \\frac{\\frac{\\partial \\overline{X}}{\\partial Xs}\\overline{Z}-\\frac{\\partial \\overline{Z}}{\\partial Xs}\\overline{X}}{\\overline{Z}^{2}}=-\\frac{f}{\\overline{Z}^{2}}(-a_{1}\\overline{Z}+a_{3}\\overline{X})=\\frac{1}{\\overline{Z}}[a_{1}f-a_{3}f\\frac{\\overline{X}}{\\overline{Z}}]=\\frac{1}{\\overline{Z}}[a_{1}f+a_{3}(x-x_{0})]$$\n\n 同理，其他的偏导为\n\n $$!\\frac{\\partial x}{\\partial Ys}=\\frac{1}{\\overline{Z}}[b_{1}f+b_{3}(x-x_{0})]$$\n\n $$!\\frac{\\partial x}{\\partial Zs}=\\frac{1}{\\overline{Z}}[c_{1}f+b_{3}(x-x_{0})]$$\n\n $$!\\frac{\\partial y}{\\partial Xs}=\\frac{1}{\\overline{Z}}[a_{2}f+a_{3}(x-x_{0})]$$\n\n $$!\\frac{\\partial y}{\\partial Ys}=\\frac{1}{\\overline{Z}}[b_{2}f+b_{3}(x-x_{0})]$$\n\n $$!\\frac{\\partial y}{\\partial Zs}=\\frac{1}{\\overline{Z}}[c_{2}f+c_{3}(x-x_{0})]$$\n\n $$!\\frac{\\partial x}{\\partial f}=\\frac{x-x_{0}}{f}=-\\frac{\\overline{X}}{\\overline{Z}}$$\n\n$$!\\frac{\\partial y}{\\partial f}=\\frac{y-y_{0}}{f}=-\\frac{\\overline{Y}}{\\overline{Z}}$$\n\n$$!\\frac{\\partial x}{\\partial x_{0}}=1,\\frac{\\partial x}{\\partial y_{0}}=0$$\n\n$$!\\frac{\\partial y}{\\partial x_{0}}=0,\\frac{\\partial y}{\\partial y_{0}}=1$$\n\n 这里相对比较难解决的是角元素的偏导，关于角度的问题可以参考第三篇。\n\n 角度的变换在这里不再详述，两个坐标系之间的转换可以归结为变换矩阵的求取。三个角元素共同构成了矩阵的元素确定。\n\n 由于\n\n$$!R^{T}=R_{\\kappa }^{T}R_{\\omega }^{T}R_{\\varphi }^{T} $$\n\n因而，难度转到求取$$\\overline{X}\\overline{Y} \\overline{Z} $$对角元素的偏导上。对角元素求偏导可以分为三个步骤：\n\n①求各个方向余弦$$a_{i},b_{i},c_{i}$$对ω、k、φ的偏导数。共27个。\n\n②求$$\\overline{X},\\overline{Y},\\overline{Z}$$对ω、k、φ的偏导数，共9个。\n\n③求x、y对ω、k、φ的偏导数，共6个。\n\n如下是$$\\overline{X},\\overline{Y},\\overline{Z}$$对φ的偏导，三个参数写在矩阵中，有的地方也展开写成每一项的等式形式。\n\n$$!\\frac{\\partial }{\\partial \\varphi }\\begin{pmatrix}\\overline{X}\\\\\\overline{Y}\\\\\\overline{Z}\\end{pmatrix}=R_{\\kappa }^{T}R_{\\omega }^{T}\\frac{\\partial R_{\\varphi }^{T}}{\\partial \\varphi }\\begin{pmatrix}X-Xs\\\\ Y-Ys\\\\ Z-Zs\\end{pmatrix}=R_{\\kappa }^{T}R_{\\omega }^{T}\\frac{\\partial R_{\\varphi }^{T}}{\\partial \\varphi }(R^{T})^{-1}\\begin{pmatrix}\\overline{X}\\\\ \\overline{Y}\\\\ \\overline{Z}\\end{pmatrix}=R_{\\kappa }^{T}R_{\\omega }^{T}\\frac{\\partial R_{\\varphi }^{T}}{\\partial \\varphi }R\\begin{pmatrix}\\overline{X}\\\\ \\overline{Y}\\\\ \\overline{Z}\\end{pmatrix}=R_{\\kappa }^{T}R_{\\omega }^{T}(R_{\\varphi }^{T}R_{\\varphi })\\frac{\\partial R_{\\varphi }^{T}}{\\partial \\varphi }R\\begin{pmatrix}\\overline{X}\\\\ \\overline{Y}\\\\ \\overline{Z}\\end{pmatrix}=R^{T}R_{\\varphi }\\frac{\\partial R_{\\varphi }^{T}}{\\partial \\varphi }R\\begin{pmatrix}\\overline{X}\\\\ \\overline{Y}\\\\ \\overline{Z}\\end{pmatrix}$$\n\n带入具体系数，上式可变形为\n\n$$!\\begin{pmatrix}a_{1} &amp; b_{1} &amp; c_{1}\\\\a_{2} &amp; b_{2} &amp; c_{2}\\\\a_{3} &amp; b_{3} &amp; c_{3}\\end{pmatrix}\\begin{pmatrix}0 &amp; 0 &amp;1\\\\0 &amp; 0 &amp; 0\\\\-1 &amp; 0 &amp; 0\\end{pmatrix}\\begin{pmatrix}a_{1} &amp; a_{2} &amp; a_{3}\\\\b_{1} &amp; b_{2} &amp; b_{3}\\\\c_{1} &amp; c_{2}&amp;c_{3} \\end{pmatrix}\\begin{pmatrix}\\overline{X}\\\\\\overline{Y}\\\\\\overline{Z} \\end{pmatrix}=\\begin{pmatrix}0 &amp;-a_{2}c_{1}+a_{1}c_{2}&amp;-a_{3}c_{1}+a_{1}c_{3}\\\\-a_{1}c_{2}+a_{2}c_{1} &amp; 0 &amp; -a_{3}c_{2}+a_{2}c_{3}\\\\ -a_{1}c_{3}+a_{3}c_{1}&amp; -a_{2}c_{3}+a_{3}c_{2} &amp;0\\end{pmatrix}\\begin{pmatrix}\\overline{X}\\\\\\overline{Y}\\\\\\overline{Z} \\end{pmatrix}=\\begin{pmatrix}0 &amp; -b_{3} &amp; b_{2}\\\\b_{3}&amp;0&amp;-b_{1}\\\\-b_{2}&amp;b_{1}&amp;0\\end{pmatrix}\\begin{pmatrix}\\overline{X}\\\\\\overline{Y}\\\\\\overline{Z} \\end{pmatrix}$$\n\n其中利用了旋转矩阵一个元素的值<font color=\"#FF0000\">等于代数余子式的值</font>。如下是$$\\overline{X},\\overline{Y},\\overline{Z}$$对ω的偏导。\n\n$$!\\frac{\\partial }{\\partial \\omega }\\begin{pmatrix}\\overline{X}\\\\\\overline{Y}\\\\\\overline{Z}\\end{pmatrix}=R_{\\kappa }^{T}\\frac{\\partial R_{\\omega}^{T}}{\\partial \\omega }R_{\\varphi }^{T}\\begin{pmatrix}X-Xs\\\\Y-Ys\\\\Z-Zs\\end{pmatrix}=R_{\\kappa}^{T}\\frac{\\partial R_{\\omega }^{T}}{\\partial \\omega }R_{\\varphi }^{T}(R_{\\varphi }R_{\\omega }R_{\\kappa })\\begin{pmatrix}\\overline{X}\\\\ \\overline{Y}\\\\ \\overline{Z}\\end{pmatrix}=R_{\\kappa }^{T}\\frac{\\partial R_{\\omega }^{T}}{\\partial \\omega}R_{\\omega }R_{\\kappa }\\begin{pmatrix}\\overline{X}\\\\ \\overline{Y}\\\\ \\overline{Z}\\end{pmatrix}=\\begin{pmatrix}0&amp;0&amp;sin\\kappa\\\\ 0&amp;0&amp;cos\\kappa\\\\-sin\\kappa&amp;-cos \\kappa&amp;0\\end{pmatrix}\\begin{pmatrix}\\overline{X}\\\\ \\overline{Y}\\\\ \\overline{Z}\\end{pmatrix}$$其中，这里用到了\n\n$$!\\begin{pmatrix}\\overline{X}\\\\\\overline{Y}\\\\\\overline{Z}\\end{pmatrix}=R^{T}\\begin{pmatrix}X-Xs\\\\Y-Ys\\\\Z-Zs\\end{pmatrix}=(R_{\\varphi}R_{\\omega}R_{\\kappa })^{T}\\begin{pmatrix}X-Xs\\\\Y-Ys\\\\Z-Zs\\end{pmatrix}=R_{\\kappa }^{T}R_{\\omega }^{T}R_{\\varphi }^{T}\\begin{pmatrix}X-Xs\\\\Y-Ys\\\\Z-Zs\\end{pmatrix}$$\n\n$$!\\begin{pmatrix}X-Xs\\\\Y-Ys\\\\Z-Zs\\end{pmatrix}=(R^{T})^{-1}\\begin{pmatrix}\\overline{X}\\\\\\overline{Y}\\\\\\overline{Z}\\end{pmatrix}=R\\begin{pmatrix}\\overline{X}\\\\\\overline{Y}\\\\\\overline{Z}\\end{pmatrix}=R_{\\varphi }R_{\\omega }R_{\\kappa }\\begin{pmatrix}\\overline{X}\\\\\\overline{Y}\\\\\\overline{Z}\\end{pmatrix}$$\n\n如下是$$\\overline{X},\\overline{Y},\\overline{Z}$$对k的偏导。\n\n$$!\\frac{\\partial }{\\partial \\kappa }\\begin{pmatrix}\\overline{X}\\\\ \\overline{Y}\\\\ \\overline{Z}\\end{pmatrix}=\\frac{\\partial R_{\\kappa }^{T}}{\\partial \\kappa }R_{\\omega }^{T}R_{\\varphi }^{T}\\begin{pmatrix}X-Xs\\\\Y-Ys\\\\Z-Zs\\end{pmatrix}=\\frac{\\partial R_{\\kappa }^{T}}{\\partial \\kappa }(R_{\\kappa }R_{\\kappa }^{T})R_{\\omega }^{T}R_{\\varphi }^{T}\\begin{pmatrix}X-Xs\\\\Y-Ys\\\\Z-Zs\\end{pmatrix}=\\frac{\\partial R_{\\kappa }^{T}}{\\partial \\kappa }R_{\\kappa }\\begin{pmatrix}\\overline{X}\\\\ \\overline{Y}\\\\ \\overline{Z}\\end{pmatrix}=\\begin{pmatrix}\\overline{Y}\\\\ -\\overline{X}\\\\0\\end{pmatrix}$$\n 通过以上三式可得到x和y对各角元素未知数的偏导。有的地方，将x，y先分别除以$$\\overline{Z}$$,\n\n这样可以在求取偏导的时候减少计算量。\n\n$$!\\frac{\\partial x}{\\partial \\varphi }=-\\frac{f}{\\overline{Z}^{2}}(\\frac{\\partial \\overleftarrow{X}}{\\partial \\varphi }\\overline{Z}-\\frac{\\partial \\overline{Z}}{\\partial \\varphi }\\overline{X})=-\\frac{f}{\\overline{Z}^{2}}(-b_{3}\\overline{Y}+b_{2}\\overline{Z})\\overline{Z}+\\frac{f}{\\overline{Z}^{2}}(b_{2}\\overline{X}-b_{1}\\overline{Y})\\overline{X}=-(y-y_{0})b_{3}-fb_{2}-\\frac{(x-x_{0})^{2}}{f}b_{2}+\\frac{(x-x_{0})(y-y_{0})}{f}b_{1}=\\frac{(x-x_{0})(y-y_{0})}{f}b_{1}-(f+\\frac{(x-x_{0})^{2}}{f})b_{2}-(y-y_{0})b_{3}$$其他一次类推\n\n$$!\\frac{\\partial x}{\\partial \\omega }=\\frac{(x-x_{0})^{2}}{f}sin\\kappa-\\frac{(x-x_{0})(y-y_{0})}{f}cos\\kappa -fsin\\kappa $$\n\n$$!\\frac{\\partial x}{\\partial \\kappa }=y-y_{0}$$\n\n$$!\\frac{\\partial y}{\\partial \\varphi }=(f+\\frac{(y-y_{0}^{2})}{f})b_{1}-\\frac{(x-x_{0})(y-y_{0})}{f}b_{2}-(x-x_{0})b_{3}$$\n\n$$!\\frac{\\partial y}{\\partial \\omega }=-\\frac{(x-x_{0})(y-y_{0})}{f}sin\\kappa -\\frac{(y-y_{0})^{2}}{f}cos\\kappa -fcos\\kappa $$\n\n$$!\\frac{\\partial y}{\\partial \\kappa }=-(x-x_{0})$$\n\n以上求出了所有的偏导，则①式的公式可变为<font color=\"#FF0000\" size=\"5\">更重要的</font>式<font color=\"#FF0000\">②</font>\n\n$$!c_{11}dXs+c_{12}dYs+c_{13}dZs+c_{14}d\\phi +c_{15}d\\omega +c_{16}d\\kappa -c_{11}dX-c_{12}dY-c_{13}dZ+c_{17}df+c_{18}dx_{0}+c_{19}dy_{0}-lx=0$$\n\n$$!c_{21}dXs+c_{22}dYs+c_{23}dZs+c_{24}d\\phi +c_{25}d\\omega +c_{26}d\\kappa -c_{21}dX-c_{22}dY-c_{23}dZ+c_{27}df+c_{28}dx_{0}+c_{29}dy_{0}-ly=0$$这里可以看到，Xs和X Ys和Y Zs和Z的偏导互为相反数，因此12个未知数只需要求解9个。 其中c的系数分别为：\n\n$$!c_{11}=\\frac{1}{\\overline{Z}}(a_{1}f+a_{3}(x-x_{0}))$$\n\n$$!c_{12}=\\frac{1}{\\overline{Z}}(b_{1}f+b_{3}(x-x_{0}))$$\n\n$$!c_{13}=\\frac{1}{\\overline{Z}}(c_{1}f+c_{3}(x-x_{0}))$$\n\n$$!c_{14}=\\frac{(x-x_{0})(y-y_{0})}{f}b_{1}-(f+\\frac{(x-x_{0})^{2}}{f})b_{2}-(y-y_{0})b_{3}$$\n\n$$!c_{15}=-\\frac{(x-x_{0})^{2}}{f}sin\\kappa -\\frac{(x-x_{0})(y-y_{0})}{f}cos\\kappa -fsin\\kappa$$\n\n$$!c_{16}=y-y_{0}$$\n\n$$!c_{17}=\\frac{x-x_{0}}{f},c_{18}=1,c_{19}=0,lx=x-x_{cal}$$\n\n&nbsp;\n\n$$!c_{21}=\\frac{1}{\\overline{Z}}(a_{2}f+a_{3}(y-y_{0}))$$\n\n$$!c_{22}=\\frac{1}{\\overline{Z}}(b_{2}f+b_{3}(y-y_{0}))$$\n\n$$!c_{23}=\\frac{1}{\\overline{Z}}(c_{2}f+c_{3}(y-y_{0}))$$\n\n$$!c_{24}=(f+\\frac{(y-y_{0})^{2}}{f})b_{1}-\\frac{(x-x_{0})(y-y_{0})}{f}b_{2}+(x-x_{0})b_{3}$$\n\n$$!c_{25}=-\\frac{(x-x_{0})(y-y_{0})}{f}sin\\kappa -\\frac{(y-y_{0})^{2}}{f}cos\\kappa -fcos\\kappa ,c_{26}=-(x-x_{0})$$\n\n$$!c_{17}=\\frac{y-y_{0}}{f},c_{28}=0,c_{29}=1,ly=y-y_{cal}$$\n\n在正摄影像近似垂直时，可以采用φ≈ω≈k≈0,$$\\overline{Z}\\approx -H$$的取值带入系数中，则②式可化简为<font color=\"#FF0000\">本篇最终的结果式③</font>：\n\n$$!\\left\\{\\begin{matrix}v_{x}=-\\frac{f}{H}dXs-\\frac{x-x_{0}}{H}dZs-[f+\\frac{(x-x_{0})^{2}}{f}]d\\varphi-\\frac{(x-x_{0})(y-y_{0})}{f}d\\omega+(y-y_{0})d\\kappa+\\frac{f}{H}dX+\\frac{x-x_{0}}{H}dZ+\\frac{x-x_{0}}{f}df+dx_{0}-(x-x_{cal})\\\\v_{y}=-\\frac{f}{H}dYs-\\frac{y-y_{0}}{H}dZs-\\frac{(x-x_{0})(y-y_{0})}{f}d\\varphi-[f+\\frac{(y-y_{0})^{2}}{f}]d\\omega+(x-x_{0})d\\kappa+\\frac{f}{H}dY+\\frac{y-y_{0}}{H}dZ+\\frac{y-y_{0}}{f}df+dy_{0}-(y-y_{cal})\\end{matrix}\\right.$$\n\n式中相对①式添加了改正项，为了平衡一次项以下的展开式对结果的影响，是平差方程中重要的一部。误差方程将在下文提到。\n\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\">[](http://sns.juziyue.com/webinvite.php?u=94887)&nbsp;今天你[菊子曰](http://sns.juziyue.com/webinvite.php?u=94887)了么？</div>","slug":"后方交会检校(1)--前景 共线方程及其线性化","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7ql006fuco4bysz62c5","content":"<p>各种文档看得累。条理不清结构不明缺斤少两。决定自己总结一个。（公式较多，墙外浏览更顺哟）</p>\n<p> 一些注意</p>\n<p><strong>   后方交会是为了获取影像的内外方位数据，其中外方位数据可以通过GPS、INS（惯性导航系统）、雷达、星相摄像机来获取；然而由于穷穷穷，只能利用影响覆盖范围内的一定控制点来计算空间坐标与影响坐标之间的关系，来反算外方位元素。\n</strong>   多片检校基于单片检校。在矩阵组合时分别解算外方位元素。但使用同一组内方位元素。在一个大矩阵内进行。<br><strong>   后方交会可以只检校外方位元素。当需要进行畸变差校正时（即畸变差不可忽略时），可在方程中加入畸变差项进行迭代；当需要进行内方位元素检校时（即内方位元素精度没有达到需求），可在方程中加入内方位元素进行迭代。\n</strong>   对于畸变差校正，包括径向畸变、切向畸变、薄棱镜畸变，其中多数情况考察径向畸变的前两项系数k1 k2和切向畸变p1 p2 ，在某些组合相机的畸变模型中，还包括α像素非正方形比例和βccd非正交性畸变系数。<br><strong>   对于内方位元素检校，有的地方将f分为fx和fy即f在坐标两个方向上的像素值（由于有的xy不是同一比例尺即不是正方形）\n</strong>   检校，就是纠正相机各个方面的误差和精度，可以得到相机内部的主点、焦距、畸变的客观信息，这些信息在大部分情况下不会轻易改变；而相机外部的空间位置时时刻刻都在改变，但一些论文指出，在焦距变化、空间位置变化、移轴、高空拍摄情况下，相机的焦距、主点位置也会随之或多或少的改变，因此迭代时最好能带上这些参数一起进行平差。<br>*</p>\n<p> 一些重要概念</p>\n<p><strong>   后方交会基于<span style=\"COLOR: #ff0000\"></span></strong>共线方程<em>*，物理含义为同一个三维坐标系中投影中心、物方点、像平面投影的点在同一条直线上。\n</em></p>\n<p> $$!x-x<em>{0}=-f\\cdot \\frac{a</em>{1}(X-X<em>{s})+b</em>{1}(Y-Y<em>{s})+c</em>{1}(Z-Z<em>{s})}{a</em>{3}(X-X<em>{s})+b</em>{3}(Y-Y<em>{s})+c</em>{3}(Z-Z_{s})}$$</p>\n<p> $$!y-y<em>{0}=-f\\cdot \\frac{a</em>{2}(X-X<em>{s})+b</em>{2}(Y-Y<em>{s})+c</em>{2}(Z-Z<em>{s})}{a</em>{3}(X-X<em>{s})+b</em>{3}(Y-Y<em>{s})+c</em>{3}(Z-Z_{s})}$$</p>\n<p> 上式中，包含留个外方位元素，即Xs、Ys、Zs、φ、Ω、k。只有确定了六个外方位元素，才能确定摄影中心在物方空间的位置。a1、a2、a3、b1、b2、b3、c1、c2、c3是需要计算的直线方程的系数，其物理性质是3个外方位角元素组成的9个方向余弦。该方程利用了相似三角形的性质；f是焦距长，X Y Z均值控制点的测量坐标，默认为精确的，因此物方控制点测量的精度很大程度上决定了最后检校的精度；x y是X Y Z对应的像平面的坐标，x0，y0是主点在像平面的坐标，有时当作已知并不再改变，有时也参与迭代计算。</p>\n<p> 共线条件方程用途有：</p>\n<p>1.2.  单像、多像空间后方交会；多像空间前方交会<br>3.4.  解析空中三角测量的光束法平差<br>5.6.  数字投影的基础<br>7.8.  计算模拟影像数据（已知内外方位元素和物方坐标点求像点）<br>9.10.  DEM与共线方程制作正射影像<br>11.12.  DEM与共线方程进行单幅影像测图<br>13.</p>\n<blockquote>\n<p><strong>注意 一个方程代表一个点在像平面和物方世界的关系，因此一个点对应两个方程，若有n个控制点，则对应2n个方程</strong></p>\n</blockquote>\n<p> 若f x0 y0当作已知，则有外方位元素6个未知数，因此需要6个方程，即3个控制点的方程；若f x0 y0当作位置，则有9个未知数，因此需要至少5个控制点的方程。当然，很多文章也指出，<strong>越多的冗余数据</strong>参与计算得到的结果也越精确；<strong>越多的像片</strong>参与计算，得到的结果越精确；<strong>更均匀的控制点分布</strong>，能更多的控制整张像片，均匀的分布在边缘，得到的结果更精确。</p>\n<p> 一般情况下，令<br> $$!\\overline{X}=a<em>{1}(X-X</em>{s})+b<em>{1}(Y-Y</em>{s})+c<em>{1}(Z-Z</em>{s})$$</p>\n<p>$$!\\overline{Y}=a<em>{2}(X-X</em>{s})+b<em>{2}(Y-Y</em>{s})+c<em>{2}(Z-Z</em>{s})$$</p>\n<p>$$!\\overline{Z}=a<em>{3}(X-X</em>{s})+b<em>{3}(Y-Y</em>{s})+c<em>{3}(Z-Z</em>{s})$$</p>\n<p> 而用矩阵的形式可以表示为：</p>\n<p> $$!\\begin{pmatrix}\\overline{X}\\ \\overline{Y}\\ \\overline{Z}\\end{pmatrix}=\\begin{pmatrix}a<em>{1}&amp;b</em>{1}&amp;c<em>{1}\\a</em>{2}&amp;b<em>{2}&amp;c</em>{2}\\a<em>{3}&amp;b</em>{3}&amp;c_{3}\\end{pmatrix}\\cdot\\begin{pmatrix}X-Xs\\Y-Ys\\Z-Zs\\end{pmatrix}=R^{T}\\begin{pmatrix}X-Xs\\Y-Ys\\Z-Zs\\end{pmatrix}$$</p>\n<p>这里R是旋转矩阵，且$$R^{T}=R^{-1}$$,行列式的值为0，即任意元素等于其代数余子式的值.则共线方程变为：</p>\n<p> $$!x-x_{0}=-f\\cdot \\frac{\\overline{X}}{\\overline{Z}}$$</p>\n<p>$$!y-y_{0}=-f\\cdot \\frac{\\overline{Y}}{\\overline{Z}}$$</p>\n<p> 由于上式是共线方程的变形，因此Fx和Fy是六个外方位元素为参数的函数。由于方程是非线性的，因此不能解求数值，<strong>需要对方程进行线性化</strong>。思路是，对上式按泰勒级数在初值处展开并保留一次项，将非线性方程转化为各参数<span style=\"COLOR: #ff0000\"><strong>改正数</strong></span>的线性方程</p>\n<p> 设<span style=\"COLOR: #ff0000\">初值</span>为$$!X<em>{S}^{0},X</em>{S}^{0},Z<em>{S}^{0},\\varphi^{0},\\omega^{0},\\kappa {0},X^{0},Y^{0},Z^{0},x</em>{0}^{0},y_{0}^{0},f^{0}$$</p>\n<p> 相应的<span style=\"COLOR: #ff0000\">改正数</span>为</p>\n<p> $$!dXs=\\triangle Xs=Xs-Xs^{0},dYs=\\triangle Ys=Ys-Ys^{0},dZs=\\triangle Zs=Zs-Zs^{0}$$</p>\n<p> $$!d\\varphi=\\triangle \\varphi=\\varphi-\\varphi^{0},d\\omega=\\triangle \\omega=\\omega-\\omega^{0},d\\kappa=\\triangle \\kappa=\\kappa-\\kappa^{0}$$</p>\n<p> $$!dX=\\triangle X=X-X^{0},dY=\\triangle Y=Y-Y^{0},dZ=\\triangle Z=Z-Z^{0}$$</p>\n<p> &nbsp;则<font color=\"#FF0000\" size=\"5\">共线方程的泰勒一次展开一般式</font>为<font color=\"#FF0000\" size=\"5\">①</font></p>\n<p> $$!x=(x)+\\frac{\\partial x}{\\partial Xs}dXs+\\frac{\\partial x}{\\partial Ys}dYs+\\frac{\\partial x}{\\partial Zs}dZs+\\frac{\\partial x}{\\partial \\varphi }d\\varphi +\\frac{\\partial x}{\\partial \\omega }d\\omega +\\frac{\\partial x}{\\partial \\kappa }d\\kappa +\\frac{\\partial x}{\\partial X}dX+\\frac{\\partial x}{\\partial Y}dY+\\frac{\\partial x}{\\partial x<em>{0}}dx</em>{0}+\\frac{\\partial x}{\\partial y<em>{0}}dy</em>{0}+\\frac{\\partial x}{\\partial f}df$$</p>\n<p>$$!y=(y)+\\frac{\\partial y}{\\partial Xs}dXs+\\frac{\\partial y}{\\partial Ys}dYs+\\frac{\\partial y}{\\partial Zs}dZs+\\frac{\\partial y}{\\partial \\varphi }d\\varphi +\\frac{\\partial y}{\\partial \\omega }d\\omega +\\frac{\\partial y}{\\partial \\kappa }d\\kappa +\\frac{\\partial y}{\\partial X}dX+\\frac{\\partial y}{\\partial Y}dY+\\frac{\\partial y}{\\partial x<em>{0}}dx</em>{0}+\\frac{\\partial y}{\\partial y<em>{0}}dy</em>{0}+\\frac{\\partial y}{\\partial f}df$$</p>\n<p>这是一个重要的总结性公式。(x)(y)分别是内方位元素x，y的初值。式中包含了所有内外元素和物放测量点。当进行不同矩阵运算时，可以选择需要的精度不足够的进行迭代计算。</p>\n<p>其中，对x和y求各未知项的偏导：</p>\n<p> $$!\\frac{\\partial x}{\\partial Xs}=-f\\cdot \\frac{\\frac{\\partial \\overline{X}}{\\partial Xs}\\overline{Z}-\\frac{\\partial \\overline{Z}}{\\partial Xs}\\overline{X}}{\\overline{Z}^{2}}=-\\frac{f}{\\overline{Z}^{2}}(-a<em>{1}\\overline{Z}+a</em>{3}\\overline{X})=\\frac{1}{\\overline{Z}}[a<em>{1}f-a</em>{3}f\\frac{\\overline{X}}{\\overline{Z}}]=\\frac{1}{\\overline{Z}}[a<em>{1}f+a</em>{3}(x-x_{0})]$$</p>\n<p> 同理，其他的偏导为</p>\n<p> $$!\\frac{\\partial x}{\\partial Ys}=\\frac{1}{\\overline{Z}}[b<em>{1}f+b</em>{3}(x-x_{0})]$$</p>\n<p> $$!\\frac{\\partial x}{\\partial Zs}=\\frac{1}{\\overline{Z}}[c<em>{1}f+b</em>{3}(x-x_{0})]$$</p>\n<p> $$!\\frac{\\partial y}{\\partial Xs}=\\frac{1}{\\overline{Z}}[a<em>{2}f+a</em>{3}(x-x_{0})]$$</p>\n<p> $$!\\frac{\\partial y}{\\partial Ys}=\\frac{1}{\\overline{Z}}[b<em>{2}f+b</em>{3}(x-x_{0})]$$</p>\n<p> $$!\\frac{\\partial y}{\\partial Zs}=\\frac{1}{\\overline{Z}}[c<em>{2}f+c</em>{3}(x-x_{0})]$$</p>\n<p> $$!\\frac{\\partial x}{\\partial f}=\\frac{x-x_{0}}{f}=-\\frac{\\overline{X}}{\\overline{Z}}$$</p>\n<p>$$!\\frac{\\partial y}{\\partial f}=\\frac{y-y_{0}}{f}=-\\frac{\\overline{Y}}{\\overline{Z}}$$</p>\n<p>$$!\\frac{\\partial x}{\\partial x<em>{0}}=1,\\frac{\\partial x}{\\partial y</em>{0}}=0$$</p>\n<p>$$!\\frac{\\partial y}{\\partial x<em>{0}}=0,\\frac{\\partial y}{\\partial y</em>{0}}=1$$</p>\n<p> 这里相对比较难解决的是角元素的偏导，关于角度的问题可以参考第三篇。</p>\n<p> 角度的变换在这里不再详述，两个坐标系之间的转换可以归结为变换矩阵的求取。三个角元素共同构成了矩阵的元素确定。</p>\n<p> 由于</p>\n<p>$$!R^{T}=R<em>{\\kappa }^{T}R</em>{\\omega }^{T}R_{\\varphi }^{T} $$</p>\n<p>因而，难度转到求取$$\\overline{X}\\overline{Y} \\overline{Z} $$对角元素的偏导上。对角元素求偏导可以分为三个步骤：</p>\n<p>①求各个方向余弦$$a<em>{i},b</em>{i},c_{i}$$对ω、k、φ的偏导数。共27个。</p>\n<p>②求$$\\overline{X},\\overline{Y},\\overline{Z}$$对ω、k、φ的偏导数，共9个。</p>\n<p>③求x、y对ω、k、φ的偏导数，共6个。</p>\n<p>如下是$$\\overline{X},\\overline{Y},\\overline{Z}$$对φ的偏导，三个参数写在矩阵中，有的地方也展开写成每一项的等式形式。</p>\n<p>$$!\\frac{\\partial }{\\partial \\varphi }\\begin{pmatrix}\\overline{X}\\\\overline{Y}\\\\overline{Z}\\end{pmatrix}=R<em>{\\kappa }^{T}R</em>{\\omega }^{T}\\frac{\\partial R<em>{\\varphi }^{T}}{\\partial \\varphi }\\begin{pmatrix}X-Xs\\ Y-Ys\\ Z-Zs\\end{pmatrix}=R</em>{\\kappa }^{T}R<em>{\\omega }^{T}\\frac{\\partial R</em>{\\varphi }^{T}}{\\partial \\varphi }(R^{T})^{-1}\\begin{pmatrix}\\overline{X}\\ \\overline{Y}\\ \\overline{Z}\\end{pmatrix}=R<em>{\\kappa }^{T}R</em>{\\omega }^{T}\\frac{\\partial R<em>{\\varphi }^{T}}{\\partial \\varphi }R\\begin{pmatrix}\\overline{X}\\ \\overline{Y}\\ \\overline{Z}\\end{pmatrix}=R</em>{\\kappa }^{T}R<em>{\\omega }^{T}(R</em>{\\varphi }^{T}R<em>{\\varphi })\\frac{\\partial R</em>{\\varphi }^{T}}{\\partial \\varphi }R\\begin{pmatrix}\\overline{X}\\ \\overline{Y}\\ \\overline{Z}\\end{pmatrix}=R^{T}R<em>{\\varphi }\\frac{\\partial R</em>{\\varphi }^{T}}{\\partial \\varphi }R\\begin{pmatrix}\\overline{X}\\ \\overline{Y}\\ \\overline{Z}\\end{pmatrix}$$</p>\n<p>带入具体系数，上式可变形为</p>\n<p>$$!\\begin{pmatrix}a<em>{1} &amp; b</em>{1} &amp; c<em>{1}\\a</em>{2} &amp; b<em>{2} &amp; c</em>{2}\\a<em>{3} &amp; b</em>{3} &amp; c<em>{3}\\end{pmatrix}\\begin{pmatrix}0 &amp; 0 &amp;1\\0 &amp; 0 &amp; 0\\-1 &amp; 0 &amp; 0\\end{pmatrix}\\begin{pmatrix}a</em>{1} &amp; a<em>{2} &amp; a</em>{3}\\b<em>{1} &amp; b</em>{2} &amp; b<em>{3}\\c</em>{1} &amp; c<em>{2}&amp;c</em>{3} \\end{pmatrix}\\begin{pmatrix}\\overline{X}\\\\overline{Y}\\\\overline{Z} \\end{pmatrix}=\\begin{pmatrix}0 &amp;-a<em>{2}c</em>{1}+a<em>{1}c</em>{2}&amp;-a<em>{3}c</em>{1}+a<em>{1}c</em>{3}\\-a<em>{1}c</em>{2}+a<em>{2}c</em>{1} &amp; 0 &amp; -a<em>{3}c</em>{2}+a<em>{2}c</em>{3}\\ -a<em>{1}c</em>{3}+a<em>{3}c</em>{1}&amp; -a<em>{2}c</em>{3}+a<em>{3}c</em>{2} &amp;0\\end{pmatrix}\\begin{pmatrix}\\overline{X}\\\\overline{Y}\\\\overline{Z} \\end{pmatrix}=\\begin{pmatrix}0 &amp; -b<em>{3} &amp; b</em>{2}\\b<em>{3}&amp;0&amp;-b</em>{1}\\-b<em>{2}&amp;b</em>{1}&amp;0\\end{pmatrix}\\begin{pmatrix}\\overline{X}\\\\overline{Y}\\\\overline{Z} \\end{pmatrix}$$</p>\n<p>其中利用了旋转矩阵一个元素的值<font color=\"#FF0000\">等于代数余子式的值</font>。如下是$$\\overline{X},\\overline{Y},\\overline{Z}$$对ω的偏导。</p>\n<p>$$!\\frac{\\partial }{\\partial \\omega }\\begin{pmatrix}\\overline{X}\\\\overline{Y}\\\\overline{Z}\\end{pmatrix}=R<em>{\\kappa }^{T}\\frac{\\partial R</em>{\\omega}^{T}}{\\partial \\omega }R<em>{\\varphi }^{T}\\begin{pmatrix}X-Xs\\Y-Ys\\Z-Zs\\end{pmatrix}=R</em>{\\kappa}^{T}\\frac{\\partial R<em>{\\omega }^{T}}{\\partial \\omega }R</em>{\\varphi }^{T}(R<em>{\\varphi }R</em>{\\omega }R<em>{\\kappa })\\begin{pmatrix}\\overline{X}\\ \\overline{Y}\\ \\overline{Z}\\end{pmatrix}=R</em>{\\kappa }^{T}\\frac{\\partial R<em>{\\omega }^{T}}{\\partial \\omega}R</em>{\\omega }R_{\\kappa }\\begin{pmatrix}\\overline{X}\\ \\overline{Y}\\ \\overline{Z}\\end{pmatrix}=\\begin{pmatrix}0&amp;0&amp;sin\\kappa\\ 0&amp;0&amp;cos\\kappa\\-sin\\kappa&amp;-cos \\kappa&amp;0\\end{pmatrix}\\begin{pmatrix}\\overline{X}\\ \\overline{Y}\\ \\overline{Z}\\end{pmatrix}$$其中，这里用到了</p>\n<p>$$!\\begin{pmatrix}\\overline{X}\\\\overline{Y}\\\\overline{Z}\\end{pmatrix}=R^{T}\\begin{pmatrix}X-Xs\\Y-Ys\\Z-Zs\\end{pmatrix}=(R<em>{\\varphi}R</em>{\\omega}R<em>{\\kappa })^{T}\\begin{pmatrix}X-Xs\\Y-Ys\\Z-Zs\\end{pmatrix}=R</em>{\\kappa }^{T}R<em>{\\omega }^{T}R</em>{\\varphi }^{T}\\begin{pmatrix}X-Xs\\Y-Ys\\Z-Zs\\end{pmatrix}$$</p>\n<p>$$!\\begin{pmatrix}X-Xs\\Y-Ys\\Z-Zs\\end{pmatrix}=(R^{T})^{-1}\\begin{pmatrix}\\overline{X}\\\\overline{Y}\\\\overline{Z}\\end{pmatrix}=R\\begin{pmatrix}\\overline{X}\\\\overline{Y}\\\\overline{Z}\\end{pmatrix}=R<em>{\\varphi }R</em>{\\omega }R_{\\kappa }\\begin{pmatrix}\\overline{X}\\\\overline{Y}\\\\overline{Z}\\end{pmatrix}$$</p>\n<p>如下是$$\\overline{X},\\overline{Y},\\overline{Z}$$对k的偏导。</p>\n<p>$$!\\frac{\\partial }{\\partial \\kappa }\\begin{pmatrix}\\overline{X}\\ \\overline{Y}\\ \\overline{Z}\\end{pmatrix}=\\frac{\\partial R<em>{\\kappa }^{T}}{\\partial \\kappa }R</em>{\\omega }^{T}R<em>{\\varphi }^{T}\\begin{pmatrix}X-Xs\\Y-Ys\\Z-Zs\\end{pmatrix}=\\frac{\\partial R</em>{\\kappa }^{T}}{\\partial \\kappa }(R<em>{\\kappa }R</em>{\\kappa }^{T})R<em>{\\omega }^{T}R</em>{\\varphi }^{T}\\begin{pmatrix}X-Xs\\Y-Ys\\Z-Zs\\end{pmatrix}=\\frac{\\partial R<em>{\\kappa }^{T}}{\\partial \\kappa }R</em>{\\kappa }\\begin{pmatrix}\\overline{X}\\ \\overline{Y}\\ \\overline{Z}\\end{pmatrix}=\\begin{pmatrix}\\overline{Y}\\ -\\overline{X}\\0\\end{pmatrix}$$<br> 通过以上三式可得到x和y对各角元素未知数的偏导。有的地方，将x，y先分别除以$$\\overline{Z}$$,</p>\n<p>这样可以在求取偏导的时候减少计算量。</p>\n<p>$$!\\frac{\\partial x}{\\partial \\varphi }=-\\frac{f}{\\overline{Z}^{2}}(\\frac{\\partial \\overleftarrow{X}}{\\partial \\varphi }\\overline{Z}-\\frac{\\partial \\overline{Z}}{\\partial \\varphi }\\overline{X})=-\\frac{f}{\\overline{Z}^{2}}(-b<em>{3}\\overline{Y}+b</em>{2}\\overline{Z})\\overline{Z}+\\frac{f}{\\overline{Z}^{2}}(b<em>{2}\\overline{X}-b</em>{1}\\overline{Y})\\overline{X}=-(y-y<em>{0})b</em>{3}-fb<em>{2}-\\frac{(x-x</em>{0})^{2}}{f}b<em>{2}+\\frac{(x-x</em>{0})(y-y<em>{0})}{f}b</em>{1}=\\frac{(x-x<em>{0})(y-y</em>{0})}{f}b<em>{1}-(f+\\frac{(x-x</em>{0})^{2}}{f})b<em>{2}-(y-y</em>{0})b_{3}$$其他一次类推</p>\n<p>$$!\\frac{\\partial x}{\\partial \\omega }=\\frac{(x-x<em>{0})^{2}}{f}sin\\kappa-\\frac{(x-x</em>{0})(y-y_{0})}{f}cos\\kappa -fsin\\kappa $$</p>\n<p>$$!\\frac{\\partial x}{\\partial \\kappa }=y-y_{0}$$</p>\n<p>$$!\\frac{\\partial y}{\\partial \\varphi }=(f+\\frac{(y-y<em>{0}^{2})}{f})b</em>{1}-\\frac{(x-x<em>{0})(y-y</em>{0})}{f}b<em>{2}-(x-x</em>{0})b_{3}$$</p>\n<p>$$!\\frac{\\partial y}{\\partial \\omega }=-\\frac{(x-x<em>{0})(y-y</em>{0})}{f}sin\\kappa -\\frac{(y-y_{0})^{2}}{f}cos\\kappa -fcos\\kappa $$</p>\n<p>$$!\\frac{\\partial y}{\\partial \\kappa }=-(x-x_{0})$$</p>\n<p>以上求出了所有的偏导，则①式的公式可变为<font color=\"#FF0000\" size=\"5\">更重要的</font>式<font color=\"#FF0000\">②</font></p>\n<p>$$!c<em>{11}dXs+c</em>{12}dYs+c<em>{13}dZs+c</em>{14}d\\phi +c<em>{15}d\\omega +c</em>{16}d\\kappa -c<em>{11}dX-c</em>{12}dY-c<em>{13}dZ+c</em>{17}df+c<em>{18}dx</em>{0}+c<em>{19}dy</em>{0}-lx=0$$</p>\n<p>$$!c<em>{21}dXs+c</em>{22}dYs+c<em>{23}dZs+c</em>{24}d\\phi +c<em>{25}d\\omega +c</em>{26}d\\kappa -c<em>{21}dX-c</em>{22}dY-c<em>{23}dZ+c</em>{27}df+c<em>{28}dx</em>{0}+c<em>{29}dy</em>{0}-ly=0$$这里可以看到，Xs和X Ys和Y Zs和Z的偏导互为相反数，因此12个未知数只需要求解9个。 其中c的系数分别为：</p>\n<p>$$!c<em>{11}=\\frac{1}{\\overline{Z}}(a</em>{1}f+a<em>{3}(x-x</em>{0}))$$</p>\n<p>$$!c<em>{12}=\\frac{1}{\\overline{Z}}(b</em>{1}f+b<em>{3}(x-x</em>{0}))$$</p>\n<p>$$!c<em>{13}=\\frac{1}{\\overline{Z}}(c</em>{1}f+c<em>{3}(x-x</em>{0}))$$</p>\n<p>$$!c<em>{14}=\\frac{(x-x</em>{0})(y-y<em>{0})}{f}b</em>{1}-(f+\\frac{(x-x<em>{0})^{2}}{f})b</em>{2}-(y-y<em>{0})b</em>{3}$$</p>\n<p>$$!c<em>{15}=-\\frac{(x-x</em>{0})^{2}}{f}sin\\kappa -\\frac{(x-x<em>{0})(y-y</em>{0})}{f}cos\\kappa -fsin\\kappa$$</p>\n<p>$$!c<em>{16}=y-y</em>{0}$$</p>\n<p>$$!c<em>{17}=\\frac{x-x</em>{0}}{f},c<em>{18}=1,c</em>{19}=0,lx=x-x_{cal}$$</p>\n<p>&nbsp;</p>\n<p>$$!c<em>{21}=\\frac{1}{\\overline{Z}}(a</em>{2}f+a<em>{3}(y-y</em>{0}))$$</p>\n<p>$$!c<em>{22}=\\frac{1}{\\overline{Z}}(b</em>{2}f+b<em>{3}(y-y</em>{0}))$$</p>\n<p>$$!c<em>{23}=\\frac{1}{\\overline{Z}}(c</em>{2}f+c<em>{3}(y-y</em>{0}))$$</p>\n<p>$$!c<em>{24}=(f+\\frac{(y-y</em>{0})^{2}}{f})b<em>{1}-\\frac{(x-x</em>{0})(y-y<em>{0})}{f}b</em>{2}+(x-x<em>{0})b</em>{3}$$</p>\n<p>$$!c<em>{25}=-\\frac{(x-x</em>{0})(y-y<em>{0})}{f}sin\\kappa -\\frac{(y-y</em>{0})^{2}}{f}cos\\kappa -fcos\\kappa ,c<em>{26}=-(x-x</em>{0})$$</p>\n<p>$$!c<em>{17}=\\frac{y-y</em>{0}}{f},c<em>{28}=0,c</em>{29}=1,ly=y-y_{cal}$$</p>\n<p>在正摄影像近似垂直时，可以采用φ≈ω≈k≈0,$$\\overline{Z}\\approx -H$$的取值带入系数中，则②式可化简为<font color=\"#FF0000\">本篇最终的结果式③</font>：</p>\n<p>$$!\\left{\\begin{matrix}v<em>{x}=-\\frac{f}{H}dXs-\\frac{x-x</em>{0}}{H}dZs-[f+\\frac{(x-x<em>{0})^{2}}{f}]d\\varphi-\\frac{(x-x</em>{0})(y-y<em>{0})}{f}d\\omega+(y-y</em>{0})d\\kappa+\\frac{f}{H}dX+\\frac{x-x<em>{0}}{H}dZ+\\frac{x-x</em>{0}}{f}df+dx<em>{0}-(x-x</em>{cal})\\v<em>{y}=-\\frac{f}{H}dYs-\\frac{y-y</em>{0}}{H}dZs-\\frac{(x-x<em>{0})(y-y</em>{0})}{f}d\\varphi-[f+\\frac{(y-y<em>{0})^{2}}{f}]d\\omega+(x-x</em>{0})d\\kappa+\\frac{f}{H}dY+\\frac{y-y<em>{0}}{H}dZ+\\frac{y-y</em>{0}}{f}df+dy<em>{0}-(y-y</em>{cal})\\end{matrix}\\right.$$</p>\n<p>式中相对①式添加了改正项，为了平衡一次项以下的展开式对结果的影响，是平差方程中重要的一部。误差方程将在下文提到。</p>\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\"><a href=\"http://sns.juziyue.com/webinvite.php?u=94887\" target=\"_blank\" rel=\"external\"></a>&nbsp;今天你<a href=\"http://sns.juziyue.com/webinvite.php?u=94887\" target=\"_blank\" rel=\"external\">菊子曰</a>了么？</div>","excerpt":"","more":"<p>各种文档看得累。条理不清结构不明缺斤少两。决定自己总结一个。（公式较多，墙外浏览更顺哟）</p>\n<p> 一些注意</p>\n<p><strong>   后方交会是为了获取影像的内外方位数据，其中外方位数据可以通过GPS、INS（惯性导航系统）、雷达、星相摄像机来获取；然而由于穷穷穷，只能利用影响覆盖范围内的一定控制点来计算空间坐标与影响坐标之间的关系，来反算外方位元素。\n</strong>   多片检校基于单片检校。在矩阵组合时分别解算外方位元素。但使用同一组内方位元素。在一个大矩阵内进行。<br><strong>   后方交会可以只检校外方位元素。当需要进行畸变差校正时（即畸变差不可忽略时），可在方程中加入畸变差项进行迭代；当需要进行内方位元素检校时（即内方位元素精度没有达到需求），可在方程中加入内方位元素进行迭代。\n</strong>   对于畸变差校正，包括径向畸变、切向畸变、薄棱镜畸变，其中多数情况考察径向畸变的前两项系数k1 k2和切向畸变p1 p2 ，在某些组合相机的畸变模型中，还包括α像素非正方形比例和βccd非正交性畸变系数。<br><strong>   对于内方位元素检校，有的地方将f分为fx和fy即f在坐标两个方向上的像素值（由于有的xy不是同一比例尺即不是正方形）\n</strong>   检校，就是纠正相机各个方面的误差和精度，可以得到相机内部的主点、焦距、畸变的客观信息，这些信息在大部分情况下不会轻易改变；而相机外部的空间位置时时刻刻都在改变，但一些论文指出，在焦距变化、空间位置变化、移轴、高空拍摄情况下，相机的焦距、主点位置也会随之或多或少的改变，因此迭代时最好能带上这些参数一起进行平差。<br>*</p>\n<p> 一些重要概念</p>\n<p><strong>   后方交会基于<span style=\"COLOR: #ff0000\"></span></strong>共线方程<em>*，物理含义为同一个三维坐标系中投影中心、物方点、像平面投影的点在同一条直线上。\n</em></p>\n<p> $$!x-x<em>{0}=-f\\cdot \\frac{a</em>{1}(X-X<em>{s})+b</em>{1}(Y-Y<em>{s})+c</em>{1}(Z-Z<em>{s})}{a</em>{3}(X-X<em>{s})+b</em>{3}(Y-Y<em>{s})+c</em>{3}(Z-Z_{s})}$$</p>\n<p> $$!y-y<em>{0}=-f\\cdot \\frac{a</em>{2}(X-X<em>{s})+b</em>{2}(Y-Y<em>{s})+c</em>{2}(Z-Z<em>{s})}{a</em>{3}(X-X<em>{s})+b</em>{3}(Y-Y<em>{s})+c</em>{3}(Z-Z_{s})}$$</p>\n<p> 上式中，包含留个外方位元素，即Xs、Ys、Zs、φ、Ω、k。只有确定了六个外方位元素，才能确定摄影中心在物方空间的位置。a1、a2、a3、b1、b2、b3、c1、c2、c3是需要计算的直线方程的系数，其物理性质是3个外方位角元素组成的9个方向余弦。该方程利用了相似三角形的性质；f是焦距长，X Y Z均值控制点的测量坐标，默认为精确的，因此物方控制点测量的精度很大程度上决定了最后检校的精度；x y是X Y Z对应的像平面的坐标，x0，y0是主点在像平面的坐标，有时当作已知并不再改变，有时也参与迭代计算。</p>\n<p> 共线条件方程用途有：</p>\n<p>1.2.  单像、多像空间后方交会；多像空间前方交会<br>3.4.  解析空中三角测量的光束法平差<br>5.6.  数字投影的基础<br>7.8.  计算模拟影像数据（已知内外方位元素和物方坐标点求像点）<br>9.10.  DEM与共线方程制作正射影像<br>11.12.  DEM与共线方程进行单幅影像测图<br>13.</p>\n<blockquote>\n<p><strong>注意 一个方程代表一个点在像平面和物方世界的关系，因此一个点对应两个方程，若有n个控制点，则对应2n个方程</strong></p>\n</blockquote>\n<p> 若f x0 y0当作已知，则有外方位元素6个未知数，因此需要6个方程，即3个控制点的方程；若f x0 y0当作位置，则有9个未知数，因此需要至少5个控制点的方程。当然，很多文章也指出，<strong>越多的冗余数据</strong>参与计算得到的结果也越精确；<strong>越多的像片</strong>参与计算，得到的结果越精确；<strong>更均匀的控制点分布</strong>，能更多的控制整张像片，均匀的分布在边缘，得到的结果更精确。</p>\n<p> 一般情况下，令<br> $$!\\overline{X}=a<em>{1}(X-X</em>{s})+b<em>{1}(Y-Y</em>{s})+c<em>{1}(Z-Z</em>{s})$$</p>\n<p>$$!\\overline{Y}=a<em>{2}(X-X</em>{s})+b<em>{2}(Y-Y</em>{s})+c<em>{2}(Z-Z</em>{s})$$</p>\n<p>$$!\\overline{Z}=a<em>{3}(X-X</em>{s})+b<em>{3}(Y-Y</em>{s})+c<em>{3}(Z-Z</em>{s})$$</p>\n<p> 而用矩阵的形式可以表示为：</p>\n<p> $$!\\begin{pmatrix}\\overline{X}\\ \\overline{Y}\\ \\overline{Z}\\end{pmatrix}=\\begin{pmatrix}a<em>{1}&amp;b</em>{1}&amp;c<em>{1}\\a</em>{2}&amp;b<em>{2}&amp;c</em>{2}\\a<em>{3}&amp;b</em>{3}&amp;c_{3}\\end{pmatrix}\\cdot\\begin{pmatrix}X-Xs\\Y-Ys\\Z-Zs\\end{pmatrix}=R^{T}\\begin{pmatrix}X-Xs\\Y-Ys\\Z-Zs\\end{pmatrix}$$</p>\n<p>这里R是旋转矩阵，且$$R^{T}=R^{-1}$$,行列式的值为0，即任意元素等于其代数余子式的值.则共线方程变为：</p>\n<p> $$!x-x_{0}=-f\\cdot \\frac{\\overline{X}}{\\overline{Z}}$$</p>\n<p>$$!y-y_{0}=-f\\cdot \\frac{\\overline{Y}}{\\overline{Z}}$$</p>\n<p> 由于上式是共线方程的变形，因此Fx和Fy是六个外方位元素为参数的函数。由于方程是非线性的，因此不能解求数值，<strong>需要对方程进行线性化</strong>。思路是，对上式按泰勒级数在初值处展开并保留一次项，将非线性方程转化为各参数<span style=\"COLOR: #ff0000\"><strong>改正数</strong></span>的线性方程</p>\n<p> 设<span style=\"COLOR: #ff0000\">初值</span>为$$!X<em>{S}^{0},X</em>{S}^{0},Z<em>{S}^{0},\\varphi^{0},\\omega^{0},\\kappa {0},X^{0},Y^{0},Z^{0},x</em>{0}^{0},y_{0}^{0},f^{0}$$</p>\n<p> 相应的<span style=\"COLOR: #ff0000\">改正数</span>为</p>\n<p> $$!dXs=\\triangle Xs=Xs-Xs^{0},dYs=\\triangle Ys=Ys-Ys^{0},dZs=\\triangle Zs=Zs-Zs^{0}$$</p>\n<p> $$!d\\varphi=\\triangle \\varphi=\\varphi-\\varphi^{0},d\\omega=\\triangle \\omega=\\omega-\\omega^{0},d\\kappa=\\triangle \\kappa=\\kappa-\\kappa^{0}$$</p>\n<p> $$!dX=\\triangle X=X-X^{0},dY=\\triangle Y=Y-Y^{0},dZ=\\triangle Z=Z-Z^{0}$$</p>\n<p> &nbsp;则<font color=\"#FF0000\" size=\"5\">共线方程的泰勒一次展开一般式</font>为<font color=\"#FF0000\" size=\"5\">①</font></p>\n<p> $$!x=(x)+\\frac{\\partial x}{\\partial Xs}dXs+\\frac{\\partial x}{\\partial Ys}dYs+\\frac{\\partial x}{\\partial Zs}dZs+\\frac{\\partial x}{\\partial \\varphi }d\\varphi +\\frac{\\partial x}{\\partial \\omega }d\\omega +\\frac{\\partial x}{\\partial \\kappa }d\\kappa +\\frac{\\partial x}{\\partial X}dX+\\frac{\\partial x}{\\partial Y}dY+\\frac{\\partial x}{\\partial x<em>{0}}dx</em>{0}+\\frac{\\partial x}{\\partial y<em>{0}}dy</em>{0}+\\frac{\\partial x}{\\partial f}df$$</p>\n<p>$$!y=(y)+\\frac{\\partial y}{\\partial Xs}dXs+\\frac{\\partial y}{\\partial Ys}dYs+\\frac{\\partial y}{\\partial Zs}dZs+\\frac{\\partial y}{\\partial \\varphi }d\\varphi +\\frac{\\partial y}{\\partial \\omega }d\\omega +\\frac{\\partial y}{\\partial \\kappa }d\\kappa +\\frac{\\partial y}{\\partial X}dX+\\frac{\\partial y}{\\partial Y}dY+\\frac{\\partial y}{\\partial x<em>{0}}dx</em>{0}+\\frac{\\partial y}{\\partial y<em>{0}}dy</em>{0}+\\frac{\\partial y}{\\partial f}df$$</p>\n<p>这是一个重要的总结性公式。(x)(y)分别是内方位元素x，y的初值。式中包含了所有内外元素和物放测量点。当进行不同矩阵运算时，可以选择需要的精度不足够的进行迭代计算。</p>\n<p>其中，对x和y求各未知项的偏导：</p>\n<p> $$!\\frac{\\partial x}{\\partial Xs}=-f\\cdot \\frac{\\frac{\\partial \\overline{X}}{\\partial Xs}\\overline{Z}-\\frac{\\partial \\overline{Z}}{\\partial Xs}\\overline{X}}{\\overline{Z}^{2}}=-\\frac{f}{\\overline{Z}^{2}}(-a<em>{1}\\overline{Z}+a</em>{3}\\overline{X})=\\frac{1}{\\overline{Z}}[a<em>{1}f-a</em>{3}f\\frac{\\overline{X}}{\\overline{Z}}]=\\frac{1}{\\overline{Z}}[a<em>{1}f+a</em>{3}(x-x_{0})]$$</p>\n<p> 同理，其他的偏导为</p>\n<p> $$!\\frac{\\partial x}{\\partial Ys}=\\frac{1}{\\overline{Z}}[b<em>{1}f+b</em>{3}(x-x_{0})]$$</p>\n<p> $$!\\frac{\\partial x}{\\partial Zs}=\\frac{1}{\\overline{Z}}[c<em>{1}f+b</em>{3}(x-x_{0})]$$</p>\n<p> $$!\\frac{\\partial y}{\\partial Xs}=\\frac{1}{\\overline{Z}}[a<em>{2}f+a</em>{3}(x-x_{0})]$$</p>\n<p> $$!\\frac{\\partial y}{\\partial Ys}=\\frac{1}{\\overline{Z}}[b<em>{2}f+b</em>{3}(x-x_{0})]$$</p>\n<p> $$!\\frac{\\partial y}{\\partial Zs}=\\frac{1}{\\overline{Z}}[c<em>{2}f+c</em>{3}(x-x_{0})]$$</p>\n<p> $$!\\frac{\\partial x}{\\partial f}=\\frac{x-x_{0}}{f}=-\\frac{\\overline{X}}{\\overline{Z}}$$</p>\n<p>$$!\\frac{\\partial y}{\\partial f}=\\frac{y-y_{0}}{f}=-\\frac{\\overline{Y}}{\\overline{Z}}$$</p>\n<p>$$!\\frac{\\partial x}{\\partial x<em>{0}}=1,\\frac{\\partial x}{\\partial y</em>{0}}=0$$</p>\n<p>$$!\\frac{\\partial y}{\\partial x<em>{0}}=0,\\frac{\\partial y}{\\partial y</em>{0}}=1$$</p>\n<p> 这里相对比较难解决的是角元素的偏导，关于角度的问题可以参考第三篇。</p>\n<p> 角度的变换在这里不再详述，两个坐标系之间的转换可以归结为变换矩阵的求取。三个角元素共同构成了矩阵的元素确定。</p>\n<p> 由于</p>\n<p>$$!R^{T}=R<em>{\\kappa }^{T}R</em>{\\omega }^{T}R_{\\varphi }^{T} $$</p>\n<p>因而，难度转到求取$$\\overline{X}\\overline{Y} \\overline{Z} $$对角元素的偏导上。对角元素求偏导可以分为三个步骤：</p>\n<p>①求各个方向余弦$$a<em>{i},b</em>{i},c_{i}$$对ω、k、φ的偏导数。共27个。</p>\n<p>②求$$\\overline{X},\\overline{Y},\\overline{Z}$$对ω、k、φ的偏导数，共9个。</p>\n<p>③求x、y对ω、k、φ的偏导数，共6个。</p>\n<p>如下是$$\\overline{X},\\overline{Y},\\overline{Z}$$对φ的偏导，三个参数写在矩阵中，有的地方也展开写成每一项的等式形式。</p>\n<p>$$!\\frac{\\partial }{\\partial \\varphi }\\begin{pmatrix}\\overline{X}\\\\overline{Y}\\\\overline{Z}\\end{pmatrix}=R<em>{\\kappa }^{T}R</em>{\\omega }^{T}\\frac{\\partial R<em>{\\varphi }^{T}}{\\partial \\varphi }\\begin{pmatrix}X-Xs\\ Y-Ys\\ Z-Zs\\end{pmatrix}=R</em>{\\kappa }^{T}R<em>{\\omega }^{T}\\frac{\\partial R</em>{\\varphi }^{T}}{\\partial \\varphi }(R^{T})^{-1}\\begin{pmatrix}\\overline{X}\\ \\overline{Y}\\ \\overline{Z}\\end{pmatrix}=R<em>{\\kappa }^{T}R</em>{\\omega }^{T}\\frac{\\partial R<em>{\\varphi }^{T}}{\\partial \\varphi }R\\begin{pmatrix}\\overline{X}\\ \\overline{Y}\\ \\overline{Z}\\end{pmatrix}=R</em>{\\kappa }^{T}R<em>{\\omega }^{T}(R</em>{\\varphi }^{T}R<em>{\\varphi })\\frac{\\partial R</em>{\\varphi }^{T}}{\\partial \\varphi }R\\begin{pmatrix}\\overline{X}\\ \\overline{Y}\\ \\overline{Z}\\end{pmatrix}=R^{T}R<em>{\\varphi }\\frac{\\partial R</em>{\\varphi }^{T}}{\\partial \\varphi }R\\begin{pmatrix}\\overline{X}\\ \\overline{Y}\\ \\overline{Z}\\end{pmatrix}$$</p>\n<p>带入具体系数，上式可变形为</p>\n<p>$$!\\begin{pmatrix}a<em>{1} &amp; b</em>{1} &amp; c<em>{1}\\a</em>{2} &amp; b<em>{2} &amp; c</em>{2}\\a<em>{3} &amp; b</em>{3} &amp; c<em>{3}\\end{pmatrix}\\begin{pmatrix}0 &amp; 0 &amp;1\\0 &amp; 0 &amp; 0\\-1 &amp; 0 &amp; 0\\end{pmatrix}\\begin{pmatrix}a</em>{1} &amp; a<em>{2} &amp; a</em>{3}\\b<em>{1} &amp; b</em>{2} &amp; b<em>{3}\\c</em>{1} &amp; c<em>{2}&amp;c</em>{3} \\end{pmatrix}\\begin{pmatrix}\\overline{X}\\\\overline{Y}\\\\overline{Z} \\end{pmatrix}=\\begin{pmatrix}0 &amp;-a<em>{2}c</em>{1}+a<em>{1}c</em>{2}&amp;-a<em>{3}c</em>{1}+a<em>{1}c</em>{3}\\-a<em>{1}c</em>{2}+a<em>{2}c</em>{1} &amp; 0 &amp; -a<em>{3}c</em>{2}+a<em>{2}c</em>{3}\\ -a<em>{1}c</em>{3}+a<em>{3}c</em>{1}&amp; -a<em>{2}c</em>{3}+a<em>{3}c</em>{2} &amp;0\\end{pmatrix}\\begin{pmatrix}\\overline{X}\\\\overline{Y}\\\\overline{Z} \\end{pmatrix}=\\begin{pmatrix}0 &amp; -b<em>{3} &amp; b</em>{2}\\b<em>{3}&amp;0&amp;-b</em>{1}\\-b<em>{2}&amp;b</em>{1}&amp;0\\end{pmatrix}\\begin{pmatrix}\\overline{X}\\\\overline{Y}\\\\overline{Z} \\end{pmatrix}$$</p>\n<p>其中利用了旋转矩阵一个元素的值<font color=\"#FF0000\">等于代数余子式的值</font>。如下是$$\\overline{X},\\overline{Y},\\overline{Z}$$对ω的偏导。</p>\n<p>$$!\\frac{\\partial }{\\partial \\omega }\\begin{pmatrix}\\overline{X}\\\\overline{Y}\\\\overline{Z}\\end{pmatrix}=R<em>{\\kappa }^{T}\\frac{\\partial R</em>{\\omega}^{T}}{\\partial \\omega }R<em>{\\varphi }^{T}\\begin{pmatrix}X-Xs\\Y-Ys\\Z-Zs\\end{pmatrix}=R</em>{\\kappa}^{T}\\frac{\\partial R<em>{\\omega }^{T}}{\\partial \\omega }R</em>{\\varphi }^{T}(R<em>{\\varphi }R</em>{\\omega }R<em>{\\kappa })\\begin{pmatrix}\\overline{X}\\ \\overline{Y}\\ \\overline{Z}\\end{pmatrix}=R</em>{\\kappa }^{T}\\frac{\\partial R<em>{\\omega }^{T}}{\\partial \\omega}R</em>{\\omega }R_{\\kappa }\\begin{pmatrix}\\overline{X}\\ \\overline{Y}\\ \\overline{Z}\\end{pmatrix}=\\begin{pmatrix}0&amp;0&amp;sin\\kappa\\ 0&amp;0&amp;cos\\kappa\\-sin\\kappa&amp;-cos \\kappa&amp;0\\end{pmatrix}\\begin{pmatrix}\\overline{X}\\ \\overline{Y}\\ \\overline{Z}\\end{pmatrix}$$其中，这里用到了</p>\n<p>$$!\\begin{pmatrix}\\overline{X}\\\\overline{Y}\\\\overline{Z}\\end{pmatrix}=R^{T}\\begin{pmatrix}X-Xs\\Y-Ys\\Z-Zs\\end{pmatrix}=(R<em>{\\varphi}R</em>{\\omega}R<em>{\\kappa })^{T}\\begin{pmatrix}X-Xs\\Y-Ys\\Z-Zs\\end{pmatrix}=R</em>{\\kappa }^{T}R<em>{\\omega }^{T}R</em>{\\varphi }^{T}\\begin{pmatrix}X-Xs\\Y-Ys\\Z-Zs\\end{pmatrix}$$</p>\n<p>$$!\\begin{pmatrix}X-Xs\\Y-Ys\\Z-Zs\\end{pmatrix}=(R^{T})^{-1}\\begin{pmatrix}\\overline{X}\\\\overline{Y}\\\\overline{Z}\\end{pmatrix}=R\\begin{pmatrix}\\overline{X}\\\\overline{Y}\\\\overline{Z}\\end{pmatrix}=R<em>{\\varphi }R</em>{\\omega }R_{\\kappa }\\begin{pmatrix}\\overline{X}\\\\overline{Y}\\\\overline{Z}\\end{pmatrix}$$</p>\n<p>如下是$$\\overline{X},\\overline{Y},\\overline{Z}$$对k的偏导。</p>\n<p>$$!\\frac{\\partial }{\\partial \\kappa }\\begin{pmatrix}\\overline{X}\\ \\overline{Y}\\ \\overline{Z}\\end{pmatrix}=\\frac{\\partial R<em>{\\kappa }^{T}}{\\partial \\kappa }R</em>{\\omega }^{T}R<em>{\\varphi }^{T}\\begin{pmatrix}X-Xs\\Y-Ys\\Z-Zs\\end{pmatrix}=\\frac{\\partial R</em>{\\kappa }^{T}}{\\partial \\kappa }(R<em>{\\kappa }R</em>{\\kappa }^{T})R<em>{\\omega }^{T}R</em>{\\varphi }^{T}\\begin{pmatrix}X-Xs\\Y-Ys\\Z-Zs\\end{pmatrix}=\\frac{\\partial R<em>{\\kappa }^{T}}{\\partial \\kappa }R</em>{\\kappa }\\begin{pmatrix}\\overline{X}\\ \\overline{Y}\\ \\overline{Z}\\end{pmatrix}=\\begin{pmatrix}\\overline{Y}\\ -\\overline{X}\\0\\end{pmatrix}$$<br> 通过以上三式可得到x和y对各角元素未知数的偏导。有的地方，将x，y先分别除以$$\\overline{Z}$$,</p>\n<p>这样可以在求取偏导的时候减少计算量。</p>\n<p>$$!\\frac{\\partial x}{\\partial \\varphi }=-\\frac{f}{\\overline{Z}^{2}}(\\frac{\\partial \\overleftarrow{X}}{\\partial \\varphi }\\overline{Z}-\\frac{\\partial \\overline{Z}}{\\partial \\varphi }\\overline{X})=-\\frac{f}{\\overline{Z}^{2}}(-b<em>{3}\\overline{Y}+b</em>{2}\\overline{Z})\\overline{Z}+\\frac{f}{\\overline{Z}^{2}}(b<em>{2}\\overline{X}-b</em>{1}\\overline{Y})\\overline{X}=-(y-y<em>{0})b</em>{3}-fb<em>{2}-\\frac{(x-x</em>{0})^{2}}{f}b<em>{2}+\\frac{(x-x</em>{0})(y-y<em>{0})}{f}b</em>{1}=\\frac{(x-x<em>{0})(y-y</em>{0})}{f}b<em>{1}-(f+\\frac{(x-x</em>{0})^{2}}{f})b<em>{2}-(y-y</em>{0})b_{3}$$其他一次类推</p>\n<p>$$!\\frac{\\partial x}{\\partial \\omega }=\\frac{(x-x<em>{0})^{2}}{f}sin\\kappa-\\frac{(x-x</em>{0})(y-y_{0})}{f}cos\\kappa -fsin\\kappa $$</p>\n<p>$$!\\frac{\\partial x}{\\partial \\kappa }=y-y_{0}$$</p>\n<p>$$!\\frac{\\partial y}{\\partial \\varphi }=(f+\\frac{(y-y<em>{0}^{2})}{f})b</em>{1}-\\frac{(x-x<em>{0})(y-y</em>{0})}{f}b<em>{2}-(x-x</em>{0})b_{3}$$</p>\n<p>$$!\\frac{\\partial y}{\\partial \\omega }=-\\frac{(x-x<em>{0})(y-y</em>{0})}{f}sin\\kappa -\\frac{(y-y_{0})^{2}}{f}cos\\kappa -fcos\\kappa $$</p>\n<p>$$!\\frac{\\partial y}{\\partial \\kappa }=-(x-x_{0})$$</p>\n<p>以上求出了所有的偏导，则①式的公式可变为<font color=\"#FF0000\" size=\"5\">更重要的</font>式<font color=\"#FF0000\">②</font></p>\n<p>$$!c<em>{11}dXs+c</em>{12}dYs+c<em>{13}dZs+c</em>{14}d\\phi +c<em>{15}d\\omega +c</em>{16}d\\kappa -c<em>{11}dX-c</em>{12}dY-c<em>{13}dZ+c</em>{17}df+c<em>{18}dx</em>{0}+c<em>{19}dy</em>{0}-lx=0$$</p>\n<p>$$!c<em>{21}dXs+c</em>{22}dYs+c<em>{23}dZs+c</em>{24}d\\phi +c<em>{25}d\\omega +c</em>{26}d\\kappa -c<em>{21}dX-c</em>{22}dY-c<em>{23}dZ+c</em>{27}df+c<em>{28}dx</em>{0}+c<em>{29}dy</em>{0}-ly=0$$这里可以看到，Xs和X Ys和Y Zs和Z的偏导互为相反数，因此12个未知数只需要求解9个。 其中c的系数分别为：</p>\n<p>$$!c<em>{11}=\\frac{1}{\\overline{Z}}(a</em>{1}f+a<em>{3}(x-x</em>{0}))$$</p>\n<p>$$!c<em>{12}=\\frac{1}{\\overline{Z}}(b</em>{1}f+b<em>{3}(x-x</em>{0}))$$</p>\n<p>$$!c<em>{13}=\\frac{1}{\\overline{Z}}(c</em>{1}f+c<em>{3}(x-x</em>{0}))$$</p>\n<p>$$!c<em>{14}=\\frac{(x-x</em>{0})(y-y<em>{0})}{f}b</em>{1}-(f+\\frac{(x-x<em>{0})^{2}}{f})b</em>{2}-(y-y<em>{0})b</em>{3}$$</p>\n<p>$$!c<em>{15}=-\\frac{(x-x</em>{0})^{2}}{f}sin\\kappa -\\frac{(x-x<em>{0})(y-y</em>{0})}{f}cos\\kappa -fsin\\kappa$$</p>\n<p>$$!c<em>{16}=y-y</em>{0}$$</p>\n<p>$$!c<em>{17}=\\frac{x-x</em>{0}}{f},c<em>{18}=1,c</em>{19}=0,lx=x-x_{cal}$$</p>\n<p>&nbsp;</p>\n<p>$$!c<em>{21}=\\frac{1}{\\overline{Z}}(a</em>{2}f+a<em>{3}(y-y</em>{0}))$$</p>\n<p>$$!c<em>{22}=\\frac{1}{\\overline{Z}}(b</em>{2}f+b<em>{3}(y-y</em>{0}))$$</p>\n<p>$$!c<em>{23}=\\frac{1}{\\overline{Z}}(c</em>{2}f+c<em>{3}(y-y</em>{0}))$$</p>\n<p>$$!c<em>{24}=(f+\\frac{(y-y</em>{0})^{2}}{f})b<em>{1}-\\frac{(x-x</em>{0})(y-y<em>{0})}{f}b</em>{2}+(x-x<em>{0})b</em>{3}$$</p>\n<p>$$!c<em>{25}=-\\frac{(x-x</em>{0})(y-y<em>{0})}{f}sin\\kappa -\\frac{(y-y</em>{0})^{2}}{f}cos\\kappa -fcos\\kappa ,c<em>{26}=-(x-x</em>{0})$$</p>\n<p>$$!c<em>{17}=\\frac{y-y</em>{0}}{f},c<em>{28}=0,c</em>{29}=1,ly=y-y_{cal}$$</p>\n<p>在正摄影像近似垂直时，可以采用φ≈ω≈k≈0,$$\\overline{Z}\\approx -H$$的取值带入系数中，则②式可化简为<font color=\"#FF0000\">本篇最终的结果式③</font>：</p>\n<p>$$!\\left{\\begin{matrix}v<em>{x}=-\\frac{f}{H}dXs-\\frac{x-x</em>{0}}{H}dZs-[f+\\frac{(x-x<em>{0})^{2}}{f}]d\\varphi-\\frac{(x-x</em>{0})(y-y<em>{0})}{f}d\\omega+(y-y</em>{0})d\\kappa+\\frac{f}{H}dX+\\frac{x-x<em>{0}}{H}dZ+\\frac{x-x</em>{0}}{f}df+dx<em>{0}-(x-x</em>{cal})\\v<em>{y}=-\\frac{f}{H}dYs-\\frac{y-y</em>{0}}{H}dZs-\\frac{(x-x<em>{0})(y-y</em>{0})}{f}d\\varphi-[f+\\frac{(y-y<em>{0})^{2}}{f}]d\\omega+(x-x</em>{0})d\\kappa+\\frac{f}{H}dY+\\frac{y-y<em>{0}}{H}dZ+\\frac{y-y</em>{0}}{f}df+dy<em>{0}-(y-y</em>{cal})\\end{matrix}\\right.$$</p>\n<p>式中相对①式添加了改正项，为了平衡一次项以下的展开式对结果的影响，是平差方程中重要的一部。误差方程将在下文提到。</p>\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\"><a href=\"http://sns.juziyue.com/webinvite.php?u=94887\"></a>&nbsp;今天你<a href=\"http://sns.juziyue.com/webinvite.php?u=94887\">菊子曰</a>了么？</div>"},{"title":"后方交会检校(2)--误差方程及各项系数解求及精度","id":"721","date":"2015-10-12T09:16:52.000Z","_content":"<script type=\"text/javascript\" src=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=default\"></script>\n上文中明确了两个式子：\n\n$$\\left\\{\\begin{matrix}\\frac{f}{\\overline{Z}}dXs+\\frac{x}{\\overline{Z}}dZs-(f+\\frac{x^{2}}{f})d\\varphi-\\frac{xy}{f}d\\omega+yd\\kappa -\\frac{f}{\\overline{Z}}dX-\\frac{x}{\\overline{Z}}dZ+\\frac{x}{f}df+dx_{0}-(x-x_{cal})=0\\\\\\\\\\frac{f}{\\overline{Z}}dYs+\\frac{y}{\\overline{Z}}dZs -\\frac{xy}{f}d\\varphi-(f+\\frac{x^{2}}{f})d\\omega-xd\\kappa -\\frac{f}{\\overline{Z}}dX-\\frac{y}{\\overline{Z}}dZ+\\frac{y}{f}df+dy_{0}-(y-y_{cal})=0\\end{matrix}\\right.$$\n\n 上式即称为<font color=\"#FF0000\">线性化的共线方程</font>。\n\n$$\\left\\{\\begin{matrix}\\frac{f}{\\overline{Z}}dXs+\\frac{x}{\\overline{Z}}dZs-(f+\\frac{x^{2}}{f})d\\varphi-\\frac{xy}{f}d\\omega+yd\\kappa -\\frac{f}{\\overline{Z}}dX-\\frac{x}{\\overline{Z}}dZ+\\frac{x}{f}df+dx_{0}-(x-x_{cal})=v_{x}\\\\\\\\\\frac{f}{\\overline{Z}}dYs+\\frac{y}{\\overline{Z}}dZs -\\frac{xy}{f}d\\varphi-(f+\\frac{x^{2}}{f})d\\omega-xd\\kappa -\\frac{f}{\\overline{Z}}dX-\\frac{y}{\\overline{Z}}dZ+\\frac{y}{f}df+dy_{0}-(y-y_{cal})=v_{y}\\end{matrix}\\right.$$\n\n上式则称为<font color=\"#FF0000\">误差方程</font>。\n\n这里面$$-(x-x_{Cal})$$即**每一步计算后的值与实际测量值的差**，在平差计算过程中，多余的观测数据就是为了进行平差计算获得更精确更均匀的结果。分别命名为$-l_{x}$和$-l_{y}$.一个控制点物方坐标和一个像点坐标组成的两个方程也就有两个误差方程，误差方程的基本公式为\n\n$$V=AX-L$$\n\n有的地方也写为\n\n$$V=A\\Delta -L$$\n\n 其中V代表误差矩阵，X是待求解的每个元素的改正数矩阵，L是x-x计 y-y计的矩阵。\n\n通常，不会解算物方空间的坐标，同时加入对畸变系数的解算和矫正(将在第四篇提到)，将X分为$X_{in}$、$X_{out}$、$X_{distortion}$，则上式变形为\n\n$$V=AX_{out}+BX_{in}+CX_{distortion}-(xy)_{res}$$\n\n其中，A B C都是各项未知数的系数，$$xy_{res}$$是像点坐标的误差\n\n$$\\left\\{\\begin{matrix}x_{res}=x-x_{cal}+x_{dis}\\\\y_{res}=y-y_{cal}+y_{dis}\\end{matrix}\\right.$$\n\n其中，右边三项分别为像点观测坐标，像点计算坐标，畸变误差。\n 在后方交会时，当只计算外方位元素时：\n\n $$V_{2n\\times 1}=A_{2n\\times6}X_{6\\times1}-L_{2n\\times1}$$.\n\n 其中，式子每两行具体为\n\n$$\\begin{bmatrix}v_{x}\\\\v_{y}\\end{bmatrix}=\\begin{bmatrix}\\frac{f}{\\overline{Z}}&0&\\frac{x}{\\overline{Z}}&-(f+\\frac{x^{2}}{f})&-\\frac{xy}{f}&y\\\\0&\\frac{f}{\\overline{Z}}&\\frac{y}{\\overline{Z}}&-\\frac{xy}{f}&-(f+\\frac{y^{2}}{f})&-x\\end{bmatrix}\\begin{bmatrix}dXs\\\\dYs\\\\dZs\\\\d\\varphi\\\\d\\omega\\\\d\\kappa\\end{bmatrix}-\\begin{bmatrix}l_{x}\\\\l_{y}\\end{bmatrix}$$\n\n若要求出V方程的最佳估计值，在摄影测量中，一般按照最小二乘原理进行解答，即<font color=\"#FF0000\">**$$V^{T}V=min$$**</font>这就转化为了对该式求极值的问题。\n\n$$V^{T}V=(AX-L)^{T}(AX-L)=X^{T}A^{T}AX-2X^{T}A^{T}L+L^{T}L\\Rightarrow \\frac{\\partial V^{T}V}{\\partial X}=2A^{T}AX-2A^{T}L=0$$\n\n上式中大X的含义是待求解的每个元素的残差矩阵包含了Xs Ys Zs Ω φ k，而不是实际测量三维点坐标X。此外，推导过程中对$V^{T}V$求导，则可得到对应6个残差的最佳估计值。这个过程称为误差方程式的<font color=\"#FF0000\">**法化**</font>。\n\n上式整理后可得$$A^{T}AX-A^{T}L=A^{T}(AX-L)=0$$\n\n有的地方亦写作$$A^{T}P(A\\Delta -L)=0$$Δ与X同含义，而P是测量平差中进行稳健估计而使用的权矩阵，即\n\n$$\\begin{bmatrix}P_{1}&&&&&\\\\&P_{2}&&&&\\\\&&.&&&\\\\&&&.&&\\\\&&&&.&\\\\&&&&&P_{n}\\end{bmatrix}$$非主要内容略微说一下测量平差的估值。主要目的是处理含有误差（其中一些误差可能较大，定义为比最大偶然误差还要大的误差，称为粗差）依赖一定的数学模型，包含<font color=\"#FF0000\">**函数模型和随即模型**</font>，按照某种估计准则，求出未知参数的<font color=\"#FF0000\">**最优估值**</font>，并评定其精度。当粗差归为函数模型，粗差表现为观测量误差绝对值较大且偏离群体，处理思想是在正式进行最小二乘平差之前探测和定位粗差，然后剔除含有粗差的观测值，得到一组比较净化的观测值，模型为<font color=\"#FF0000\">**均值漂移模型**</font>；将粗差归为随机模型，粗差即表现为先验随机模型和实际随机模型的差异过大，处理方法为根据逐次迭代平差的结果不断地改变观测值的权或者方差，最终使粗差观测值的权趋于零或者方差趋于无穷大，模型为<font color=\"#FF0000\">**方差膨胀模型**</font>。\n\n该方法的实践逻辑是由于不大准确知道观测数据中有效信息和有害信息所占的比例及其它们具体包含在哪些观测中，要冒着损失一些效率的风险，去获得较可靠的、具有实际意义的、较有效的估值。针对极大似然估计的稳健估计模型主要使用M估计。而M估计应用最广的是选权迭代法。而P可以使等权独立观测的P=I，也可以是权函数矩阵代替观测权阵P。这里不展开来讲。\n\n法化后的方程称为<font color=\"#FF0000\">**法方程式**</font>，一般写作\n\n$$NX=A^{T}L$$,其中$N=A^{T}A$也把<font color=\"#FF0000\">**N称为法方程的系数**。</font>\n\n上两式就是法方程，也是△Xs，△Ys，△Zs，△k，△φ，△ω的解。\n\n<font color=\"#FF0000\">**答解改正数**</font>：$$X=(A^{T}A)^{-1}A^{T}L$$或$$\\Delta =(A^{T}PA)^{-1}A^{T}PL$$\n\n计算每一步<font color=\"#FF0000\">**迭代值**</font>：$$X_{s}^{k+1}=X_{s}^{k}+dXs^{k+1},Y_{s}^{k+1}=Y_{s}^{k}+dYs^{k+1},Z_{s}^{k+1}=Z_{s}^{k}+dZs^{k+1}$$\n\n$$\\varphi ^{k+1}=\\varphi ^{k}+d\\varphi ^{k+1},\\omega ^{k+1}=\\omega ^{k}+d\\omega ^{k+1},\\kappa ^{k+1}=\\kappa ^{k}+d\\kappa ^{k+1}$$\n\n这里注意，<font color=\"#FF0000\">**平坦地区不适宜内外元素同时答解**</font>，因为dXs0与dx0相关，dYs0与dy0相关。\n\n空间后方交会的平面二维坐标的选点，应尽可能的布满整个区域。或者覆盖中心和边缘的更全面的位置，如图。不均匀以及不足够数量的控制点参与迭代会极大的影响最终计算的精度。\n\n![](http://ww4.sinaimg.cn/large/68eb7c93gw1exesrtmyzlj20rr0iiq5q.jpg)\n\n<font color=\"#FF0000\">**具体的迭代流程**</font>如下：\n\n<font color=\"#FF0000\">①确定各未知数的初值$$X_{s}^{0},Y_{s}^{0},Z_{s}^{0},\\varphi ^{0},\\omega ^{0},\\kappa ^{0}$$</font>\n\n<font color=\"#FF0000\">②对每个控制点计算误差方程系数aij和lx、ly。按照最上面的公式列出误差方程。</font>\n\n<font color=\"#FF0000\">③答解线性方程组，得到△Xs，△Ys，△Zs，△k，△ω，△φ</font>\n\n<font color=\"#FF0000\">④将增量△和初值相加，得到新的一个外方位元素。</font>\n\n<font color=\"#FF0000\">⑤各个增量△与一个给定的限差作比较，若小于则停止迭代运算；若不是则重复②到⑤</font>\n\n分别对上式各步骤进行解释：\n\n①$$X_{s}^{0},Y_{s}^{0}$$可以利用X Y的物方点均值设置，$$Z_{s}^{0}$$一般为H即航摄高度，有时也用mf表示。m是航摄比例尺，f是相机焦距。这些值也可以直接给定某个初值。三个角元素则一般设为0,k有时可根据航迹图给定。\n\n②该步骤可分解为计算旋转矩阵R（R的具体值参考下文）、计算得到的变换坐标$$\\overline{X},\\overline{Y},\\overline{Z}$$（其实就是地面辅助坐标系的坐标）、计算x计、y计（即由<font color=\"#FF0000\">**相应地面坐标点**</font>和<font color=\"#FF0000\">**外方位元素**</font>计算得到的像点坐标，$$x_{cal}=-f\\frac{\\overline{X}}{\\overline{Z}}$$,$$y_{cal}=-f\\frac{\\overline{Y}}{\\overline{Z}}$$）、计算误差方程各项系数、组成误差方程V=AX-L\n\n③该步骤其实就是矩阵运算，求出$A^{T}PA$   ($A^{T}A$) 及其逆矩阵。求出$A^{T}L$ ($A^{T}PL$)，两式相乘求取X[△Xs,△Ys,△Zs,△k,△ω,△φ]\n\n④根据改正数的值加上上一步的值得到各项新值。\n\n⑤检查是否收敛时，一般只对角元素改正数设定限差，为0.1'（按弧度值是<span style=\"WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 13px/30px arial; WIDOWS: 1; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px\">0.0000291rad</span>）当三个角改正数都小于限差时迭代结束。\n\n&nbsp;\n\n平差理论中，单位权中的误差为\n\n$$m_{0}=\\sqrt{\\frac{\\sum v_{i}^{2}}{2n-t}}$$其中m0为单位权中误差。vi是第i个方程的残差，n是控制点个数，t是未知数个数。只解求外方位精度则只有6个精度。\n\n根据传播定律，$$m^{2}=N^{-1}m_{0}^{2}$$式中$N^{-1}$是法方程系数矩阵的逆矩阵。即\n\n$$N^{-1}=\\begin{bmatrix}Q_{11}&Q_{12}&.&.&.&Q_{1t}\\\\Q_{21}&Q_{22}&.&.&.&Q_{2t}\\\\.&.&&.&&.\\\\.&.&&.&&.\\\\.&.&&.&&.\\\\Q_{t1}&Q_{t2}&.&.&.&Q_{tt}\\end{bmatrix}$$,则<font color=\"#FF0000\">**第i个未知数中的误差**</font>为:\n\n$$m_{i}=\\sqrt{Q_{ii}}m_{0}$$,其中$Q_{ii}$为$N^{-1}$的各项系数的对角元素,也称为第i个未知数的权倒数。\n\n\n——**<font color=\"#FF0000\">一点说明</font>**\n\n再次声明，无论半片还是全片，增加控制点都可以提高精度，但精度提高的不是很大；采用相同数量控制点，全片比半片精度成倍的提高，分布良好更有利于精度改善。\n","source":"_posts/后方交会检校(2)--误差方程及各项系数解求及精度.md","raw":"---\ntitle: 后方交会检校(2)--误差方程及各项系数解求及精度\ncategories:\n  - 什么都学一下\n  - 学习log\ntags:\n  - 检校\nid: 721\ndate: 2015-10-12 17:16:52\n---\n<script type=\"text/javascript\" src=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=default\"></script>\n上文中明确了两个式子：\n\n$$\\left\\{\\begin{matrix}\\frac{f}{\\overline{Z}}dXs+\\frac{x}{\\overline{Z}}dZs-(f+\\frac{x^{2}}{f})d\\varphi-\\frac{xy}{f}d\\omega+yd\\kappa -\\frac{f}{\\overline{Z}}dX-\\frac{x}{\\overline{Z}}dZ+\\frac{x}{f}df+dx_{0}-(x-x_{cal})=0\\\\\\\\\\frac{f}{\\overline{Z}}dYs+\\frac{y}{\\overline{Z}}dZs -\\frac{xy}{f}d\\varphi-(f+\\frac{x^{2}}{f})d\\omega-xd\\kappa -\\frac{f}{\\overline{Z}}dX-\\frac{y}{\\overline{Z}}dZ+\\frac{y}{f}df+dy_{0}-(y-y_{cal})=0\\end{matrix}\\right.$$\n\n 上式即称为<font color=\"#FF0000\">线性化的共线方程</font>。\n\n$$\\left\\{\\begin{matrix}\\frac{f}{\\overline{Z}}dXs+\\frac{x}{\\overline{Z}}dZs-(f+\\frac{x^{2}}{f})d\\varphi-\\frac{xy}{f}d\\omega+yd\\kappa -\\frac{f}{\\overline{Z}}dX-\\frac{x}{\\overline{Z}}dZ+\\frac{x}{f}df+dx_{0}-(x-x_{cal})=v_{x}\\\\\\\\\\frac{f}{\\overline{Z}}dYs+\\frac{y}{\\overline{Z}}dZs -\\frac{xy}{f}d\\varphi-(f+\\frac{x^{2}}{f})d\\omega-xd\\kappa -\\frac{f}{\\overline{Z}}dX-\\frac{y}{\\overline{Z}}dZ+\\frac{y}{f}df+dy_{0}-(y-y_{cal})=v_{y}\\end{matrix}\\right.$$\n\n上式则称为<font color=\"#FF0000\">误差方程</font>。\n\n这里面$$-(x-x_{Cal})$$即**每一步计算后的值与实际测量值的差**，在平差计算过程中，多余的观测数据就是为了进行平差计算获得更精确更均匀的结果。分别命名为$-l_{x}$和$-l_{y}$.一个控制点物方坐标和一个像点坐标组成的两个方程也就有两个误差方程，误差方程的基本公式为\n\n$$V=AX-L$$\n\n有的地方也写为\n\n$$V=A\\Delta -L$$\n\n 其中V代表误差矩阵，X是待求解的每个元素的改正数矩阵，L是x-x计 y-y计的矩阵。\n\n通常，不会解算物方空间的坐标，同时加入对畸变系数的解算和矫正(将在第四篇提到)，将X分为$X_{in}$、$X_{out}$、$X_{distortion}$，则上式变形为\n\n$$V=AX_{out}+BX_{in}+CX_{distortion}-(xy)_{res}$$\n\n其中，A B C都是各项未知数的系数，$$xy_{res}$$是像点坐标的误差\n\n$$\\left\\{\\begin{matrix}x_{res}=x-x_{cal}+x_{dis}\\\\y_{res}=y-y_{cal}+y_{dis}\\end{matrix}\\right.$$\n\n其中，右边三项分别为像点观测坐标，像点计算坐标，畸变误差。\n 在后方交会时，当只计算外方位元素时：\n\n $$V_{2n\\times 1}=A_{2n\\times6}X_{6\\times1}-L_{2n\\times1}$$.\n\n 其中，式子每两行具体为\n\n$$\\begin{bmatrix}v_{x}\\\\v_{y}\\end{bmatrix}=\\begin{bmatrix}\\frac{f}{\\overline{Z}}&0&\\frac{x}{\\overline{Z}}&-(f+\\frac{x^{2}}{f})&-\\frac{xy}{f}&y\\\\0&\\frac{f}{\\overline{Z}}&\\frac{y}{\\overline{Z}}&-\\frac{xy}{f}&-(f+\\frac{y^{2}}{f})&-x\\end{bmatrix}\\begin{bmatrix}dXs\\\\dYs\\\\dZs\\\\d\\varphi\\\\d\\omega\\\\d\\kappa\\end{bmatrix}-\\begin{bmatrix}l_{x}\\\\l_{y}\\end{bmatrix}$$\n\n若要求出V方程的最佳估计值，在摄影测量中，一般按照最小二乘原理进行解答，即<font color=\"#FF0000\">**$$V^{T}V=min$$**</font>这就转化为了对该式求极值的问题。\n\n$$V^{T}V=(AX-L)^{T}(AX-L)=X^{T}A^{T}AX-2X^{T}A^{T}L+L^{T}L\\Rightarrow \\frac{\\partial V^{T}V}{\\partial X}=2A^{T}AX-2A^{T}L=0$$\n\n上式中大X的含义是待求解的每个元素的残差矩阵包含了Xs Ys Zs Ω φ k，而不是实际测量三维点坐标X。此外，推导过程中对$V^{T}V$求导，则可得到对应6个残差的最佳估计值。这个过程称为误差方程式的<font color=\"#FF0000\">**法化**</font>。\n\n上式整理后可得$$A^{T}AX-A^{T}L=A^{T}(AX-L)=0$$\n\n有的地方亦写作$$A^{T}P(A\\Delta -L)=0$$Δ与X同含义，而P是测量平差中进行稳健估计而使用的权矩阵，即\n\n$$\\begin{bmatrix}P_{1}&&&&&\\\\&P_{2}&&&&\\\\&&.&&&\\\\&&&.&&\\\\&&&&.&\\\\&&&&&P_{n}\\end{bmatrix}$$非主要内容略微说一下测量平差的估值。主要目的是处理含有误差（其中一些误差可能较大，定义为比最大偶然误差还要大的误差，称为粗差）依赖一定的数学模型，包含<font color=\"#FF0000\">**函数模型和随即模型**</font>，按照某种估计准则，求出未知参数的<font color=\"#FF0000\">**最优估值**</font>，并评定其精度。当粗差归为函数模型，粗差表现为观测量误差绝对值较大且偏离群体，处理思想是在正式进行最小二乘平差之前探测和定位粗差，然后剔除含有粗差的观测值，得到一组比较净化的观测值，模型为<font color=\"#FF0000\">**均值漂移模型**</font>；将粗差归为随机模型，粗差即表现为先验随机模型和实际随机模型的差异过大，处理方法为根据逐次迭代平差的结果不断地改变观测值的权或者方差，最终使粗差观测值的权趋于零或者方差趋于无穷大，模型为<font color=\"#FF0000\">**方差膨胀模型**</font>。\n\n该方法的实践逻辑是由于不大准确知道观测数据中有效信息和有害信息所占的比例及其它们具体包含在哪些观测中，要冒着损失一些效率的风险，去获得较可靠的、具有实际意义的、较有效的估值。针对极大似然估计的稳健估计模型主要使用M估计。而M估计应用最广的是选权迭代法。而P可以使等权独立观测的P=I，也可以是权函数矩阵代替观测权阵P。这里不展开来讲。\n\n法化后的方程称为<font color=\"#FF0000\">**法方程式**</font>，一般写作\n\n$$NX=A^{T}L$$,其中$N=A^{T}A$也把<font color=\"#FF0000\">**N称为法方程的系数**。</font>\n\n上两式就是法方程，也是△Xs，△Ys，△Zs，△k，△φ，△ω的解。\n\n<font color=\"#FF0000\">**答解改正数**</font>：$$X=(A^{T}A)^{-1}A^{T}L$$或$$\\Delta =(A^{T}PA)^{-1}A^{T}PL$$\n\n计算每一步<font color=\"#FF0000\">**迭代值**</font>：$$X_{s}^{k+1}=X_{s}^{k}+dXs^{k+1},Y_{s}^{k+1}=Y_{s}^{k}+dYs^{k+1},Z_{s}^{k+1}=Z_{s}^{k}+dZs^{k+1}$$\n\n$$\\varphi ^{k+1}=\\varphi ^{k}+d\\varphi ^{k+1},\\omega ^{k+1}=\\omega ^{k}+d\\omega ^{k+1},\\kappa ^{k+1}=\\kappa ^{k}+d\\kappa ^{k+1}$$\n\n这里注意，<font color=\"#FF0000\">**平坦地区不适宜内外元素同时答解**</font>，因为dXs0与dx0相关，dYs0与dy0相关。\n\n空间后方交会的平面二维坐标的选点，应尽可能的布满整个区域。或者覆盖中心和边缘的更全面的位置，如图。不均匀以及不足够数量的控制点参与迭代会极大的影响最终计算的精度。\n\n![](http://ww4.sinaimg.cn/large/68eb7c93gw1exesrtmyzlj20rr0iiq5q.jpg)\n\n<font color=\"#FF0000\">**具体的迭代流程**</font>如下：\n\n<font color=\"#FF0000\">①确定各未知数的初值$$X_{s}^{0},Y_{s}^{0},Z_{s}^{0},\\varphi ^{0},\\omega ^{0},\\kappa ^{0}$$</font>\n\n<font color=\"#FF0000\">②对每个控制点计算误差方程系数aij和lx、ly。按照最上面的公式列出误差方程。</font>\n\n<font color=\"#FF0000\">③答解线性方程组，得到△Xs，△Ys，△Zs，△k，△ω，△φ</font>\n\n<font color=\"#FF0000\">④将增量△和初值相加，得到新的一个外方位元素。</font>\n\n<font color=\"#FF0000\">⑤各个增量△与一个给定的限差作比较，若小于则停止迭代运算；若不是则重复②到⑤</font>\n\n分别对上式各步骤进行解释：\n\n①$$X_{s}^{0},Y_{s}^{0}$$可以利用X Y的物方点均值设置，$$Z_{s}^{0}$$一般为H即航摄高度，有时也用mf表示。m是航摄比例尺，f是相机焦距。这些值也可以直接给定某个初值。三个角元素则一般设为0,k有时可根据航迹图给定。\n\n②该步骤可分解为计算旋转矩阵R（R的具体值参考下文）、计算得到的变换坐标$$\\overline{X},\\overline{Y},\\overline{Z}$$（其实就是地面辅助坐标系的坐标）、计算x计、y计（即由<font color=\"#FF0000\">**相应地面坐标点**</font>和<font color=\"#FF0000\">**外方位元素**</font>计算得到的像点坐标，$$x_{cal}=-f\\frac{\\overline{X}}{\\overline{Z}}$$,$$y_{cal}=-f\\frac{\\overline{Y}}{\\overline{Z}}$$）、计算误差方程各项系数、组成误差方程V=AX-L\n\n③该步骤其实就是矩阵运算，求出$A^{T}PA$   ($A^{T}A$) 及其逆矩阵。求出$A^{T}L$ ($A^{T}PL$)，两式相乘求取X[△Xs,△Ys,△Zs,△k,△ω,△φ]\n\n④根据改正数的值加上上一步的值得到各项新值。\n\n⑤检查是否收敛时，一般只对角元素改正数设定限差，为0.1'（按弧度值是<span style=\"WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 13px/30px arial; WIDOWS: 1; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px\">0.0000291rad</span>）当三个角改正数都小于限差时迭代结束。\n\n&nbsp;\n\n平差理论中，单位权中的误差为\n\n$$m_{0}=\\sqrt{\\frac{\\sum v_{i}^{2}}{2n-t}}$$其中m0为单位权中误差。vi是第i个方程的残差，n是控制点个数，t是未知数个数。只解求外方位精度则只有6个精度。\n\n根据传播定律，$$m^{2}=N^{-1}m_{0}^{2}$$式中$N^{-1}$是法方程系数矩阵的逆矩阵。即\n\n$$N^{-1}=\\begin{bmatrix}Q_{11}&Q_{12}&.&.&.&Q_{1t}\\\\Q_{21}&Q_{22}&.&.&.&Q_{2t}\\\\.&.&&.&&.\\\\.&.&&.&&.\\\\.&.&&.&&.\\\\Q_{t1}&Q_{t2}&.&.&.&Q_{tt}\\end{bmatrix}$$,则<font color=\"#FF0000\">**第i个未知数中的误差**</font>为:\n\n$$m_{i}=\\sqrt{Q_{ii}}m_{0}$$,其中$Q_{ii}$为$N^{-1}$的各项系数的对角元素,也称为第i个未知数的权倒数。\n\n\n——**<font color=\"#FF0000\">一点说明</font>**\n\n再次声明，无论半片还是全片，增加控制点都可以提高精度，但精度提高的不是很大；采用相同数量控制点，全片比半片精度成倍的提高，分布良好更有利于精度改善。\n","slug":"后方交会检校(2)--误差方程及各项系数解求及精度","published":1,"updated":"2016-04-19T09:37:40.732Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7qn006juco4ro38twny","content":"<p><script type=\"text/javascript\" src=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=default\"></script><br>上文中明确了两个式子：</p>\n<p>$$\\left{\\begin{matrix}\\frac{f}{\\overline{Z}}dXs+\\frac{x}{\\overline{Z}}dZs-(f+\\frac{x^{2}}{f})d\\varphi-\\frac{xy}{f}d\\omega+yd\\kappa -\\frac{f}{\\overline{Z}}dX-\\frac{x}{\\overline{Z}}dZ+\\frac{x}{f}df+dx<em>{0}-(x-x</em>{cal})=0\\\\\\frac{f}{\\overline{Z}}dYs+\\frac{y}{\\overline{Z}}dZs -\\frac{xy}{f}d\\varphi-(f+\\frac{x^{2}}{f})d\\omega-xd\\kappa -\\frac{f}{\\overline{Z}}dX-\\frac{y}{\\overline{Z}}dZ+\\frac{y}{f}df+dy<em>{0}-(y-y</em>{cal})=0\\end{matrix}\\right.$$</p>\n<p> 上式即称为<font color=\"#FF0000\">线性化的共线方程</font>。</p>\n<p>$$\\left{\\begin{matrix}\\frac{f}{\\overline{Z}}dXs+\\frac{x}{\\overline{Z}}dZs-(f+\\frac{x^{2}}{f})d\\varphi-\\frac{xy}{f}d\\omega+yd\\kappa -\\frac{f}{\\overline{Z}}dX-\\frac{x}{\\overline{Z}}dZ+\\frac{x}{f}df+dx<em>{0}-(x-x</em>{cal})=v<em>{x}\\\\\\frac{f}{\\overline{Z}}dYs+\\frac{y}{\\overline{Z}}dZs -\\frac{xy}{f}d\\varphi-(f+\\frac{x^{2}}{f})d\\omega-xd\\kappa -\\frac{f}{\\overline{Z}}dX-\\frac{y}{\\overline{Z}}dZ+\\frac{y}{f}df+dy</em>{0}-(y-y<em>{cal})=v</em>{y}\\end{matrix}\\right.$$</p>\n<p>上式则称为<font color=\"#FF0000\">误差方程</font>。</p>\n<p>这里面$$-(x-x<em>{Cal})$$即<strong>每一步计算后的值与实际测量值的差</strong>，在平差计算过程中，多余的观测数据就是为了进行平差计算获得更精确更均匀的结果。分别命名为$-l</em>{x}$和$-l_{y}$.一个控制点物方坐标和一个像点坐标组成的两个方程也就有两个误差方程，误差方程的基本公式为</p>\n<p>$$V=AX-L$$</p>\n<p>有的地方也写为</p>\n<p>$$V=A\\Delta -L$$</p>\n<p> 其中V代表误差矩阵，X是待求解的每个元素的改正数矩阵，L是x-x计 y-y计的矩阵。</p>\n<p>通常，不会解算物方空间的坐标，同时加入对畸变系数的解算和矫正(将在第四篇提到)，将X分为$X<em>{in}$、$X</em>{out}$、$X_{distortion}$，则上式变形为</p>\n<p>$$V=AX<em>{out}+BX</em>{in}+CX<em>{distortion}-(xy)</em>{res}$$</p>\n<p>其中，A B C都是各项未知数的系数，$$xy_{res}$$是像点坐标的误差</p>\n<p>$$\\left{\\begin{matrix}x<em>{res}=x-x</em>{cal}+x<em>{dis}\\y</em>{res}=y-y<em>{cal}+y</em>{dis}\\end{matrix}\\right.$$</p>\n<p>其中，右边三项分别为像点观测坐标，像点计算坐标，畸变误差。<br> 在后方交会时，当只计算外方位元素时：</p>\n<p> $$V<em>{2n\\times 1}=A</em>{2n\\times6}X<em>{6\\times1}-L</em>{2n\\times1}$$.</p>\n<p> 其中，式子每两行具体为</p>\n<p>$$\\begin{bmatrix}v<em>{x}\\v</em>{y}\\end{bmatrix}=\\begin{bmatrix}\\frac{f}{\\overline{Z}}&amp;0&amp;\\frac{x}{\\overline{Z}}&amp;-(f+\\frac{x^{2}}{f})&amp;-\\frac{xy}{f}&amp;y\\0&amp;\\frac{f}{\\overline{Z}}&amp;\\frac{y}{\\overline{Z}}&amp;-\\frac{xy}{f}&amp;-(f+\\frac{y^{2}}{f})&amp;-x\\end{bmatrix}\\begin{bmatrix}dXs\\dYs\\dZs\\d\\varphi\\d\\omega\\d\\kappa\\end{bmatrix}-\\begin{bmatrix}l<em>{x}\\l</em>{y}\\end{bmatrix}$$</p>\n<p>若要求出V方程的最佳估计值，在摄影测量中，一般按照最小二乘原理进行解答，即<font color=\"#FF0000\"><strong>$$V^{T}V=min$$</strong></font>这就转化为了对该式求极值的问题。</p>\n<p>$$V^{T}V=(AX-L)^{T}(AX-L)=X^{T}A^{T}AX-2X^{T}A^{T}L+L^{T}L\\Rightarrow \\frac{\\partial V^{T}V}{\\partial X}=2A^{T}AX-2A^{T}L=0$$</p>\n<p>上式中大X的含义是待求解的每个元素的残差矩阵包含了Xs Ys Zs Ω φ k，而不是实际测量三维点坐标X。此外，推导过程中对$V^{T}V$求导，则可得到对应6个残差的最佳估计值。这个过程称为误差方程式的<font color=\"#FF0000\"><strong>法化</strong></font>。</p>\n<p>上式整理后可得$$A^{T}AX-A^{T}L=A^{T}(AX-L)=0$$</p>\n<p>有的地方亦写作$$A^{T}P(A\\Delta -L)=0$$Δ与X同含义，而P是测量平差中进行稳健估计而使用的权矩阵，即</p>\n<p>$$\\begin{bmatrix}P<em>{1}&amp;&amp;&amp;&amp;&amp;\\&amp;P</em>{2}&amp;&amp;&amp;&amp;\\&amp;&amp;.&amp;&amp;&amp;\\&amp;&amp;&amp;.&amp;&amp;\\&amp;&amp;&amp;&amp;.&amp;\\&amp;&amp;&amp;&amp;&amp;P_{n}\\end{bmatrix}$$非主要内容略微说一下测量平差的估值。主要目的是处理含有误差（其中一些误差可能较大，定义为比最大偶然误差还要大的误差，称为粗差）依赖一定的数学模型，包含<font color=\"#FF0000\"><strong>函数模型和随即模型</strong></font>，按照某种估计准则，求出未知参数的<font color=\"#FF0000\"><strong>最优估值</strong></font>，并评定其精度。当粗差归为函数模型，粗差表现为观测量误差绝对值较大且偏离群体，处理思想是在正式进行最小二乘平差之前探测和定位粗差，然后剔除含有粗差的观测值，得到一组比较净化的观测值，模型为<font color=\"#FF0000\"><strong>均值漂移模型</strong></font>；将粗差归为随机模型，粗差即表现为先验随机模型和实际随机模型的差异过大，处理方法为根据逐次迭代平差的结果不断地改变观测值的权或者方差，最终使粗差观测值的权趋于零或者方差趋于无穷大，模型为<font color=\"#FF0000\"><strong>方差膨胀模型</strong></font>。</p>\n<p>该方法的实践逻辑是由于不大准确知道观测数据中有效信息和有害信息所占的比例及其它们具体包含在哪些观测中，要冒着损失一些效率的风险，去获得较可靠的、具有实际意义的、较有效的估值。针对极大似然估计的稳健估计模型主要使用M估计。而M估计应用最广的是选权迭代法。而P可以使等权独立观测的P=I，也可以是权函数矩阵代替观测权阵P。这里不展开来讲。</p>\n<p>法化后的方程称为<font color=\"#FF0000\"><strong>法方程式</strong></font>，一般写作</p>\n<p>$$NX=A^{T}L$$,其中$N=A^{T}A$也把<font color=\"#FF0000\"><strong>N称为法方程的系数</strong>。</font></p>\n<p>上两式就是法方程，也是△Xs，△Ys，△Zs，△k，△φ，△ω的解。</p>\n<font color=\"#FF0000\"><strong>答解改正数</strong></font>：$$X=(A^{T}A)^{-1}A^{T}L$$或$$\\Delta =(A^{T}PA)^{-1}A^{T}PL$$<br><br>计算每一步<font color=\"#FF0000\"><strong>迭代值</strong></font>：$$X<em>{s}^{k+1}=X</em>{s}^{k}+dXs^{k+1},Y<em>{s}^{k+1}=Y</em>{s}^{k}+dYs^{k+1},Z<em>{s}^{k+1}=Z</em>{s}^{k}+dZs^{k+1}$$<br><br>$$\\varphi ^{k+1}=\\varphi ^{k}+d\\varphi ^{k+1},\\omega ^{k+1}=\\omega ^{k}+d\\omega ^{k+1},\\kappa ^{k+1}=\\kappa ^{k}+d\\kappa ^{k+1}$$<br><br>这里注意，<font color=\"#FF0000\"><strong>平坦地区不适宜内外元素同时答解</strong></font>，因为dXs0与dx0相关，dYs0与dy0相关。<br><br>空间后方交会的平面二维坐标的选点，应尽可能的布满整个区域。或者覆盖中心和边缘的更全面的位置，如图。不均匀以及不足够数量的控制点参与迭代会极大的影响最终计算的精度。<br><br><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1exesrtmyzlj20rr0iiq5q.jpg\" alt=\"\"><br><br><font color=\"#FF0000\"><strong>具体的迭代流程</strong></font>如下：<br><br><font color=\"#FF0000\">①确定各未知数的初值$$X<em>{s}^{0},Y</em>{s}^{0},Z_{s}^{0},\\varphi ^{0},\\omega ^{0},\\kappa ^{0}$$</font>\n\n<font color=\"#FF0000\">②对每个控制点计算误差方程系数aij和lx、ly。按照最上面的公式列出误差方程。</font>\n\n<font color=\"#FF0000\">③答解线性方程组，得到△Xs，△Ys，△Zs，△k，△ω，△φ</font>\n\n<font color=\"#FF0000\">④将增量△和初值相加，得到新的一个外方位元素。</font>\n\n<font color=\"#FF0000\">⑤各个增量△与一个给定的限差作比较，若小于则停止迭代运算；若不是则重复②到⑤</font>\n\n<p>分别对上式各步骤进行解释：</p>\n<p>①$$X<em>{s}^{0},Y</em>{s}^{0}$$可以利用X Y的物方点均值设置，$$Z_{s}^{0}$$一般为H即航摄高度，有时也用mf表示。m是航摄比例尺，f是相机焦距。这些值也可以直接给定某个初值。三个角元素则一般设为0,k有时可根据航迹图给定。</p>\n<p>②该步骤可分解为计算旋转矩阵R（R的具体值参考下文）、计算得到的变换坐标$$\\overline{X},\\overline{Y},\\overline{Z}$$（其实就是地面辅助坐标系的坐标）、计算x计、y计（即由<font color=\"#FF0000\"><strong>相应地面坐标点</strong></font>和<font color=\"#FF0000\"><strong>外方位元素</strong></font>计算得到的像点坐标，$$x<em>{cal}=-f\\frac{\\overline{X}}{\\overline{Z}}$$,$$y</em>{cal}=-f\\frac{\\overline{Y}}{\\overline{Z}}$$）、计算误差方程各项系数、组成误差方程V=AX-L</p>\n<p>③该步骤其实就是矩阵运算，求出$A^{T}PA$   ($A^{T}A$) 及其逆矩阵。求出$A^{T}L$ ($A^{T}PL$)，两式相乘求取X[△Xs,△Ys,△Zs,△k,△ω,△φ]</p>\n<p>④根据改正数的值加上上一步的值得到各项新值。</p>\n<p>⑤检查是否收敛时，一般只对角元素改正数设定限差，为0.1’（按弧度值是<span style=\"WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 13px/30px arial; WIDOWS: 1; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px\">0.0000291rad</span>）当三个角改正数都小于限差时迭代结束。</p>\n<p>&nbsp;</p>\n<p>平差理论中，单位权中的误差为</p>\n<p>$$m<em>{0}=\\sqrt{\\frac{\\sum v</em>{i}^{2}}{2n-t}}$$其中m0为单位权中误差。vi是第i个方程的残差，n是控制点个数，t是未知数个数。只解求外方位精度则只有6个精度。</p>\n<p>根据传播定律，$$m^{2}=N^{-1}m_{0}^{2}$$式中$N^{-1}$是法方程系数矩阵的逆矩阵。即</p>\n<p>$$N^{-1}=\\begin{bmatrix}Q<em>{11}&amp;Q</em>{12}&amp;.&amp;.&amp;.&amp;Q<em>{1t}\\Q</em>{21}&amp;Q<em>{22}&amp;.&amp;.&amp;.&amp;Q</em>{2t}\\.&amp;.&amp;&amp;.&amp;&amp;.\\.&amp;.&amp;&amp;.&amp;&amp;.\\.&amp;.&amp;&amp;.&amp;&amp;.\\Q<em>{t1}&amp;Q</em>{t2}&amp;.&amp;.&amp;.&amp;Q_{tt}\\end{bmatrix}$$,则<font color=\"#FF0000\"><strong>第i个未知数中的误差</strong></font>为:</p>\n<p>$$m<em>{i}=\\sqrt{Q</em>{ii}}m<em>{0}$$,其中$Q</em>{ii}$为$N^{-1}$的各项系数的对角元素,也称为第i个未知数的权倒数。</p>\n<p>——<strong><font color=\"#FF0000\">一点说明</font></strong></p>\n<p>再次声明，无论半片还是全片，增加控制点都可以提高精度，但精度提高的不是很大；采用相同数量控制点，全片比半片精度成倍的提高，分布良好更有利于精度改善。</p>","excerpt":"","more":"<p><script type=\"text/javascript\" src=\"http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=default\"></script><br>上文中明确了两个式子：</p>\n<p>$$\\left{\\begin{matrix}\\frac{f}{\\overline{Z}}dXs+\\frac{x}{\\overline{Z}}dZs-(f+\\frac{x^{2}}{f})d\\varphi-\\frac{xy}{f}d\\omega+yd\\kappa -\\frac{f}{\\overline{Z}}dX-\\frac{x}{\\overline{Z}}dZ+\\frac{x}{f}df+dx<em>{0}-(x-x</em>{cal})=0\\\\\\frac{f}{\\overline{Z}}dYs+\\frac{y}{\\overline{Z}}dZs -\\frac{xy}{f}d\\varphi-(f+\\frac{x^{2}}{f})d\\omega-xd\\kappa -\\frac{f}{\\overline{Z}}dX-\\frac{y}{\\overline{Z}}dZ+\\frac{y}{f}df+dy<em>{0}-(y-y</em>{cal})=0\\end{matrix}\\right.$$</p>\n<p> 上式即称为<font color=\"#FF0000\">线性化的共线方程</font>。</p>\n<p>$$\\left{\\begin{matrix}\\frac{f}{\\overline{Z}}dXs+\\frac{x}{\\overline{Z}}dZs-(f+\\frac{x^{2}}{f})d\\varphi-\\frac{xy}{f}d\\omega+yd\\kappa -\\frac{f}{\\overline{Z}}dX-\\frac{x}{\\overline{Z}}dZ+\\frac{x}{f}df+dx<em>{0}-(x-x</em>{cal})=v<em>{x}\\\\\\frac{f}{\\overline{Z}}dYs+\\frac{y}{\\overline{Z}}dZs -\\frac{xy}{f}d\\varphi-(f+\\frac{x^{2}}{f})d\\omega-xd\\kappa -\\frac{f}{\\overline{Z}}dX-\\frac{y}{\\overline{Z}}dZ+\\frac{y}{f}df+dy</em>{0}-(y-y<em>{cal})=v</em>{y}\\end{matrix}\\right.$$</p>\n<p>上式则称为<font color=\"#FF0000\">误差方程</font>。</p>\n<p>这里面$$-(x-x<em>{Cal})$$即<strong>每一步计算后的值与实际测量值的差</strong>，在平差计算过程中，多余的观测数据就是为了进行平差计算获得更精确更均匀的结果。分别命名为$-l</em>{x}$和$-l_{y}$.一个控制点物方坐标和一个像点坐标组成的两个方程也就有两个误差方程，误差方程的基本公式为</p>\n<p>$$V=AX-L$$</p>\n<p>有的地方也写为</p>\n<p>$$V=A\\Delta -L$$</p>\n<p> 其中V代表误差矩阵，X是待求解的每个元素的改正数矩阵，L是x-x计 y-y计的矩阵。</p>\n<p>通常，不会解算物方空间的坐标，同时加入对畸变系数的解算和矫正(将在第四篇提到)，将X分为$X<em>{in}$、$X</em>{out}$、$X_{distortion}$，则上式变形为</p>\n<p>$$V=AX<em>{out}+BX</em>{in}+CX<em>{distortion}-(xy)</em>{res}$$</p>\n<p>其中，A B C都是各项未知数的系数，$$xy_{res}$$是像点坐标的误差</p>\n<p>$$\\left{\\begin{matrix}x<em>{res}=x-x</em>{cal}+x<em>{dis}\\y</em>{res}=y-y<em>{cal}+y</em>{dis}\\end{matrix}\\right.$$</p>\n<p>其中，右边三项分别为像点观测坐标，像点计算坐标，畸变误差。<br> 在后方交会时，当只计算外方位元素时：</p>\n<p> $$V<em>{2n\\times 1}=A</em>{2n\\times6}X<em>{6\\times1}-L</em>{2n\\times1}$$.</p>\n<p> 其中，式子每两行具体为</p>\n<p>$$\\begin{bmatrix}v<em>{x}\\v</em>{y}\\end{bmatrix}=\\begin{bmatrix}\\frac{f}{\\overline{Z}}&amp;0&amp;\\frac{x}{\\overline{Z}}&amp;-(f+\\frac{x^{2}}{f})&amp;-\\frac{xy}{f}&amp;y\\0&amp;\\frac{f}{\\overline{Z}}&amp;\\frac{y}{\\overline{Z}}&amp;-\\frac{xy}{f}&amp;-(f+\\frac{y^{2}}{f})&amp;-x\\end{bmatrix}\\begin{bmatrix}dXs\\dYs\\dZs\\d\\varphi\\d\\omega\\d\\kappa\\end{bmatrix}-\\begin{bmatrix}l<em>{x}\\l</em>{y}\\end{bmatrix}$$</p>\n<p>若要求出V方程的最佳估计值，在摄影测量中，一般按照最小二乘原理进行解答，即<font color=\"#FF0000\"><strong>$$V^{T}V=min$$</strong></font>这就转化为了对该式求极值的问题。</p>\n<p>$$V^{T}V=(AX-L)^{T}(AX-L)=X^{T}A^{T}AX-2X^{T}A^{T}L+L^{T}L\\Rightarrow \\frac{\\partial V^{T}V}{\\partial X}=2A^{T}AX-2A^{T}L=0$$</p>\n<p>上式中大X的含义是待求解的每个元素的残差矩阵包含了Xs Ys Zs Ω φ k，而不是实际测量三维点坐标X。此外，推导过程中对$V^{T}V$求导，则可得到对应6个残差的最佳估计值。这个过程称为误差方程式的<font color=\"#FF0000\"><strong>法化</strong></font>。</p>\n<p>上式整理后可得$$A^{T}AX-A^{T}L=A^{T}(AX-L)=0$$</p>\n<p>有的地方亦写作$$A^{T}P(A\\Delta -L)=0$$Δ与X同含义，而P是测量平差中进行稳健估计而使用的权矩阵，即</p>\n<p>$$\\begin{bmatrix}P<em>{1}&amp;&amp;&amp;&amp;&amp;\\&amp;P</em>{2}&amp;&amp;&amp;&amp;\\&amp;&amp;.&amp;&amp;&amp;\\&amp;&amp;&amp;.&amp;&amp;\\&amp;&amp;&amp;&amp;.&amp;\\&amp;&amp;&amp;&amp;&amp;P_{n}\\end{bmatrix}$$非主要内容略微说一下测量平差的估值。主要目的是处理含有误差（其中一些误差可能较大，定义为比最大偶然误差还要大的误差，称为粗差）依赖一定的数学模型，包含<font color=\"#FF0000\"><strong>函数模型和随即模型</strong></font>，按照某种估计准则，求出未知参数的<font color=\"#FF0000\"><strong>最优估值</strong></font>，并评定其精度。当粗差归为函数模型，粗差表现为观测量误差绝对值较大且偏离群体，处理思想是在正式进行最小二乘平差之前探测和定位粗差，然后剔除含有粗差的观测值，得到一组比较净化的观测值，模型为<font color=\"#FF0000\"><strong>均值漂移模型</strong></font>；将粗差归为随机模型，粗差即表现为先验随机模型和实际随机模型的差异过大，处理方法为根据逐次迭代平差的结果不断地改变观测值的权或者方差，最终使粗差观测值的权趋于零或者方差趋于无穷大，模型为<font color=\"#FF0000\"><strong>方差膨胀模型</strong></font>。</p>\n<p>该方法的实践逻辑是由于不大准确知道观测数据中有效信息和有害信息所占的比例及其它们具体包含在哪些观测中，要冒着损失一些效率的风险，去获得较可靠的、具有实际意义的、较有效的估值。针对极大似然估计的稳健估计模型主要使用M估计。而M估计应用最广的是选权迭代法。而P可以使等权独立观测的P=I，也可以是权函数矩阵代替观测权阵P。这里不展开来讲。</p>\n<p>法化后的方程称为<font color=\"#FF0000\"><strong>法方程式</strong></font>，一般写作</p>\n<p>$$NX=A^{T}L$$,其中$N=A^{T}A$也把<font color=\"#FF0000\"><strong>N称为法方程的系数</strong>。</font></p>\n<p>上两式就是法方程，也是△Xs，△Ys，△Zs，△k，△φ，△ω的解。</p>\n<font color=\"#FF0000\"><strong>答解改正数</strong></font>：$$X=(A^{T}A)^{-1}A^{T}L$$或$$\\Delta =(A^{T}PA)^{-1}A^{T}PL$$<br><br>计算每一步<font color=\"#FF0000\"><strong>迭代值</strong></font>：$$X<em>{s}^{k+1}=X</em>{s}^{k}+dXs^{k+1},Y<em>{s}^{k+1}=Y</em>{s}^{k}+dYs^{k+1},Z<em>{s}^{k+1}=Z</em>{s}^{k}+dZs^{k+1}$$<br><br>$$\\varphi ^{k+1}=\\varphi ^{k}+d\\varphi ^{k+1},\\omega ^{k+1}=\\omega ^{k}+d\\omega ^{k+1},\\kappa ^{k+1}=\\kappa ^{k}+d\\kappa ^{k+1}$$<br><br>这里注意，<font color=\"#FF0000\"><strong>平坦地区不适宜内外元素同时答解</strong></font>，因为dXs0与dx0相关，dYs0与dy0相关。<br><br>空间后方交会的平面二维坐标的选点，应尽可能的布满整个区域。或者覆盖中心和边缘的更全面的位置，如图。不均匀以及不足够数量的控制点参与迭代会极大的影响最终计算的精度。<br><br><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1exesrtmyzlj20rr0iiq5q.jpg\" alt=\"\"><br><br><font color=\"#FF0000\"><strong>具体的迭代流程</strong></font>如下：<br><br><font color=\"#FF0000\">①确定各未知数的初值$$X<em>{s}^{0},Y</em>{s}^{0},Z_{s}^{0},\\varphi ^{0},\\omega ^{0},\\kappa ^{0}$$</font>\n\n<font color=\"#FF0000\">②对每个控制点计算误差方程系数aij和lx、ly。按照最上面的公式列出误差方程。</font>\n\n<font color=\"#FF0000\">③答解线性方程组，得到△Xs，△Ys，△Zs，△k，△ω，△φ</font>\n\n<font color=\"#FF0000\">④将增量△和初值相加，得到新的一个外方位元素。</font>\n\n<font color=\"#FF0000\">⑤各个增量△与一个给定的限差作比较，若小于则停止迭代运算；若不是则重复②到⑤</font>\n\n<p>分别对上式各步骤进行解释：</p>\n<p>①$$X<em>{s}^{0},Y</em>{s}^{0}$$可以利用X Y的物方点均值设置，$$Z_{s}^{0}$$一般为H即航摄高度，有时也用mf表示。m是航摄比例尺，f是相机焦距。这些值也可以直接给定某个初值。三个角元素则一般设为0,k有时可根据航迹图给定。</p>\n<p>②该步骤可分解为计算旋转矩阵R（R的具体值参考下文）、计算得到的变换坐标$$\\overline{X},\\overline{Y},\\overline{Z}$$（其实就是地面辅助坐标系的坐标）、计算x计、y计（即由<font color=\"#FF0000\"><strong>相应地面坐标点</strong></font>和<font color=\"#FF0000\"><strong>外方位元素</strong></font>计算得到的像点坐标，$$x<em>{cal}=-f\\frac{\\overline{X}}{\\overline{Z}}$$,$$y</em>{cal}=-f\\frac{\\overline{Y}}{\\overline{Z}}$$）、计算误差方程各项系数、组成误差方程V=AX-L</p>\n<p>③该步骤其实就是矩阵运算，求出$A^{T}PA$   ($A^{T}A$) 及其逆矩阵。求出$A^{T}L$ ($A^{T}PL$)，两式相乘求取X[△Xs,△Ys,△Zs,△k,△ω,△φ]</p>\n<p>④根据改正数的值加上上一步的值得到各项新值。</p>\n<p>⑤检查是否收敛时，一般只对角元素改正数设定限差，为0.1’（按弧度值是<span style=\"WHITE-SPACE: normal; WORD-SPACING: 0px; TEXT-TRANSFORM: none; FLOAT: none; COLOR: rgb(0,0,0); TEXT-ALIGN: left; FONT: 13px/30px arial; WIDOWS: 1; DISPLAY: inline !important; LETTER-SPACING: normal; BACKGROUND-COLOR: rgb(255,255,255); TEXT-INDENT: 0px; -webkit-text-stroke-width: 0px\">0.0000291rad</span>）当三个角改正数都小于限差时迭代结束。</p>\n<p>&nbsp;</p>\n<p>平差理论中，单位权中的误差为</p>\n<p>$$m<em>{0}=\\sqrt{\\frac{\\sum v</em>{i}^{2}}{2n-t}}$$其中m0为单位权中误差。vi是第i个方程的残差，n是控制点个数，t是未知数个数。只解求外方位精度则只有6个精度。</p>\n<p>根据传播定律，$$m^{2}=N^{-1}m_{0}^{2}$$式中$N^{-1}$是法方程系数矩阵的逆矩阵。即</p>\n<p>$$N^{-1}=\\begin{bmatrix}Q<em>{11}&amp;Q</em>{12}&amp;.&amp;.&amp;.&amp;Q<em>{1t}\\Q</em>{21}&amp;Q<em>{22}&amp;.&amp;.&amp;.&amp;Q</em>{2t}\\.&amp;.&amp;&amp;.&amp;&amp;.\\.&amp;.&amp;&amp;.&amp;&amp;.\\.&amp;.&amp;&amp;.&amp;&amp;.\\Q<em>{t1}&amp;Q</em>{t2}&amp;.&amp;.&amp;.&amp;Q_{tt}\\end{bmatrix}$$,则<font color=\"#FF0000\"><strong>第i个未知数中的误差</strong></font>为:</p>\n<p>$$m<em>{i}=\\sqrt{Q</em>{ii}}m<em>{0}$$,其中$Q</em>{ii}$为$N^{-1}$的各项系数的对角元素,也称为第i个未知数的权倒数。</p>\n<p>——<strong><font color=\"#FF0000\">一点说明</font></strong></p>\n<p>再次声明，无论半片还是全片，增加控制点都可以提高精度，但精度提高的不是很大；采用相同数量控制点，全片比半片精度成倍的提高，分布良好更有利于精度改善。</p>"},{"title":"后方交会检校(5)--多片后方交会&相对绝对定向","id":"808","date":"2015-11-04T04:00:00.000Z","_content":"\n[多片检校方程](#多片交会)&nbsp;[相对定向完成标志](#相对定向完成标志)&nbsp;&nbsp;[相对定向解答的两种方式](#两种方式)&nbsp;[图解连续像片和单独像对](#图解)\n\n单片检校主要目的是精确测量相机的内方位元素和检校相机镜头畸变。由于只使用一幅影像进行参数的解算，使用了较少的几何约束条件和观测值，最容易产生内方位元素x0 y0 与外方位元素Xs Ys的不定解或强相关，使检校结果稳定性和可靠性受到影响。多片后方交会则可以更精确的解算这些参数，尤其是<font color=\"#FF0000\">主点位置的精度</font>问题。多片空间后方交会与单片空间后方交会的根本区别是：在不同的位置拍摄多张照片，由于各像片在同一主距条件下拍摄，因而解算所得的各相片的<font color=\"#FF0000\">外方位元素不同</font>，解算的<font color=\"#FF0000\">内方位元素和畸变参数被认为相同</font>。\n\n这样，就可以用下式方程表达<a name=\"多片交会\">多片交会</a>：\n\n$$!\\begin{bmatrix}A_{I}&amp;0&amp;\\cdot&amp;\\cdot&amp;\\cdot&amp;0&amp;B_{I}&amp;C_{I}\\\\0&amp;A_{II}&amp;.&amp;.&amp;.&amp;0&amp;B_{II}&amp;C_{II}\\\\.&amp;.&amp; &amp; &amp; &amp;0&amp;.&amp;.\\\\.&amp;.&amp; &amp; &amp; &amp;0&amp;.&amp;.\\\\0&amp;.&amp;.&amp;.&amp;.&amp;A_{n}&amp;B_{n}&amp;C_{n}\\end{bmatrix}_{2n\\times (6n+7)}\\begin{bmatrix}X_{out_{I}}\\\\X_{out_{II}}\\\\.\\\\.\\\\.\\\\X_{out_{n}}\\\\X_{in}\\\\X_{res}\\end{bmatrix}_{(6n+7)\\times1}-\\begin{bmatrix}xy_{res 1}\\\\xy_{res 2}\\\\.\\\\.\\\\.\\\\xy_{res n}\\end{bmatrix}_{2\\times1}=0$$\n\n这一点与图像配准极其相似，用一副影像作为参考影像去配准多幅图像的结果显然没有用周边多幅图像组为参考标准的结果令人信服。由于每张相片的外方位元素不同（一般都是围绕检校场左中右进行拍摄），所以良好的消除了外方位元素和内方位元素的强相关性。\n\n针对多片，提出了相对定向和绝对定向的概念，绝对定向即利用共线方程检校计算出的外方位元素绝对值，这是以物方坐标系的原点作为参考值；而相对定向则是以被检校出的某一张像片为参考，计算出其余像片在其坐标系的坐标值，即相对关系。相对关系的求取的精度对图像拼接有至关重要的影像。\n\n<a name=\"相对定向完成标志\"><font color=\"#FF0000\">相对定向完成的标志</font></a>：同名光线对对相交。所有点在其承影面上的上下视差为零。即通过矩阵变换改变投影器的相对位置，使光线相交。<font color=\"#FF0000\">&nbsp;&nbsp;&nbsp;</font>\n\n<a name=\"两种方式\"><font color=\"#FF0000\">相对定向有两种方式</font></a>：①根据单片分别解算出的不同像片（可以使同相机可以不同）物方坐标系下的外方位元素绝对值，计算相对定向的五个元素，By,Bz,φ2，ω2，k2;或多片解算的某一相机的物方绝对值（必须统一相机，保证内方位元素相同），同样计算相对定向元素。可以作为航拍的连续拍摄的相对方位的确定，也可以作为立体固定的某些相机之间的相对方位的确定②直接根据同名点的像点坐标（6组以上），计算相对定向的旋转矩阵[R|t]，<font color=\"#FF0000\">不需要地面控制点！</font>。\n\n<a name=\"图解\">图解①方式的连续像对和单独像对</a>\n\n上面提到的连续像对，如下图所示，By Bz决定了摄影基线（即摄影中心移动的向量），φ2，ω2，k2决定了右片光束对于左光束的旋转。固定一个光束，旋转和移动第二个，便可以确定两个光束之间的相对方位，第三张相片可以和第二张相片确定相对方位，一次类推，所形成的相对方位元素称为连续像对系统。\n\n![](http://ww4.sinaimg.cn/large/68eb7c93gw1eyb8jft5rpj20ln0fmgoj.jpg)\n\n而单独相对，即可以取左片摄影中心XZ平面为主核面，摄影基线为X轴的右手空间直角坐标系。由φ1，ω1，k1,φ2，ω2，k2组成。\n\n![](http://ww3.sinaimg.cn/large/68eb7c93gw1eyb93i6vwcj20lg0d0dii.jpg)\n\n&nbsp;\n\n相对定向共面条件\n\n在相对定向中，答解相对元素的重要依据就是共面条件，当光线相交时，易知B（摄影基线，即S1S2）,S1a1,S2a2共面。如图可以看到，解求相对定向元素就是解求两个摄影中心的像方辅助坐标系的转换。共面条件方程形式为：\n\n$$!\\overrightarrow{S_{1}S_{2}}\\cdot (\\overrightarrow{S_{1}a_{1}}\\times \\overrightarrow{S_{2}a_{2}})=0$$\n\n共面条件方程无需地面控制点，一个同名点列一个方程。必须有5个以上定向点。\n\n![](http://ww4.sinaimg.cn/large/68eb7c93gw1eyb9drztouj20lz0ig782.jpg)\n\n如图，设像点a1、a2在大地坐标系坐标分别为(X1,Y1,Z1)、(X2,Y2,Z2).摄站S1、S2在大地坐标系坐标分别为$$(X_{S1},Y_{S1},Z_{S1}),(X_{S2},Y_{S2},Z_{S2})$$,则上式在即可表示为向量形式的行列式。\n\n$$!\\begin{vmatrix}X_{S2}-X_{S1}&amp;Y_{S2}-Y_{S1}&amp;Z_{S2}-Z_{S1}\\\\X_{1}-X_{S1}&amp;Y_{1}-Y_{S1}&amp;Z_{1}-Z_{S1}\\\\X_{2}-X_{S2}&amp;Y_{2}-Y_{S2}&amp;Z_{2}-Z_{S2}\\end{vmatrix}$$\n\n又令(X,Y,Z)、(Bx,By,Bz)为a1,S2在S1的像辅系S1-XYZ中的坐标，(X',Y',Z')为a2在S2像辅系S2-XYZ中的坐标。由三点共面的方程，\n\n$$!\\begin{vmatrix}B_{X}&amp;B_{Y}&amp;B_{Z}\\\\X&amp;Y&amp;Z\\\\X'&amp;Y'&amp;Z'\\end{vmatrix}=0$$上式可改写为：\n\n$$!\\begin{bmatrix}B_{X}&amp;B_{Y}&amp;B_{Z}\\end{bmatrix}\\begin{bmatrix}0&amp;-Z&amp;Y\\\\Z&amp;0&amp;-X\\\\-Y&amp;X&amp;0\\end{bmatrix}\\begin{bmatrix}X'\\\\Y'\\\\Z'\\end{bmatrix}=0$$\n\n光线是否成对相交与摄影测量坐标系的选择无关，但可以<font color=\"#FF0000\">选择适当的像辅系</font>，改变共面条件便于实际应用。\n\n（1）<font color=\"#FF0000\">选择左侧像空系</font>——连续像对系统。此时R1=E，即左系的旋转矩阵为0，像平面的z坐标均为-f；或为右片的旋转矩阵。则，公式未改变。\n\n$$!\\begin{vmatrix}B_{X}&amp;B_{Y}&amp;B_{Z}\\\\X&amp;Y&amp;Z\\\\X'&amp;Y'&amp;Z'\\end{vmatrix}=0$$\n\n（2）选择基线坐标系——单独像对系统。此时，$$B_{Y}=B_{Z}=0$$，即需要求取两个像片对基线坐标系的旋转。\n\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\">[](http://sns.juziyue.com/webinvite.php?u=94887)&nbsp;今天你[菊子曰](http://sns.juziyue.com/webinvite.php?u=94887)了么？</div>","source":"_posts/后方交会检校(5)--多片后方交会 相对绝对定向.md","raw":"---\ntitle: '后方交会检校(5)--多片后方交会&相对绝对定向'\ncategories:\n  - 什么都学一下\n  - 学习log\ntags:\n  - 后方交会\nid: 808\ndate: 2015-11-04 12:00:00\n---\n\n[多片检校方程](#多片交会)&nbsp;[相对定向完成标志](#相对定向完成标志)&nbsp;&nbsp;[相对定向解答的两种方式](#两种方式)&nbsp;[图解连续像片和单独像对](#图解)\n\n单片检校主要目的是精确测量相机的内方位元素和检校相机镜头畸变。由于只使用一幅影像进行参数的解算，使用了较少的几何约束条件和观测值，最容易产生内方位元素x0 y0 与外方位元素Xs Ys的不定解或强相关，使检校结果稳定性和可靠性受到影响。多片后方交会则可以更精确的解算这些参数，尤其是<font color=\"#FF0000\">主点位置的精度</font>问题。多片空间后方交会与单片空间后方交会的根本区别是：在不同的位置拍摄多张照片，由于各像片在同一主距条件下拍摄，因而解算所得的各相片的<font color=\"#FF0000\">外方位元素不同</font>，解算的<font color=\"#FF0000\">内方位元素和畸变参数被认为相同</font>。\n\n这样，就可以用下式方程表达<a name=\"多片交会\">多片交会</a>：\n\n$$!\\begin{bmatrix}A_{I}&amp;0&amp;\\cdot&amp;\\cdot&amp;\\cdot&amp;0&amp;B_{I}&amp;C_{I}\\\\0&amp;A_{II}&amp;.&amp;.&amp;.&amp;0&amp;B_{II}&amp;C_{II}\\\\.&amp;.&amp; &amp; &amp; &amp;0&amp;.&amp;.\\\\.&amp;.&amp; &amp; &amp; &amp;0&amp;.&amp;.\\\\0&amp;.&amp;.&amp;.&amp;.&amp;A_{n}&amp;B_{n}&amp;C_{n}\\end{bmatrix}_{2n\\times (6n+7)}\\begin{bmatrix}X_{out_{I}}\\\\X_{out_{II}}\\\\.\\\\.\\\\.\\\\X_{out_{n}}\\\\X_{in}\\\\X_{res}\\end{bmatrix}_{(6n+7)\\times1}-\\begin{bmatrix}xy_{res 1}\\\\xy_{res 2}\\\\.\\\\.\\\\.\\\\xy_{res n}\\end{bmatrix}_{2\\times1}=0$$\n\n这一点与图像配准极其相似，用一副影像作为参考影像去配准多幅图像的结果显然没有用周边多幅图像组为参考标准的结果令人信服。由于每张相片的外方位元素不同（一般都是围绕检校场左中右进行拍摄），所以良好的消除了外方位元素和内方位元素的强相关性。\n\n针对多片，提出了相对定向和绝对定向的概念，绝对定向即利用共线方程检校计算出的外方位元素绝对值，这是以物方坐标系的原点作为参考值；而相对定向则是以被检校出的某一张像片为参考，计算出其余像片在其坐标系的坐标值，即相对关系。相对关系的求取的精度对图像拼接有至关重要的影像。\n\n<a name=\"相对定向完成标志\"><font color=\"#FF0000\">相对定向完成的标志</font></a>：同名光线对对相交。所有点在其承影面上的上下视差为零。即通过矩阵变换改变投影器的相对位置，使光线相交。<font color=\"#FF0000\">&nbsp;&nbsp;&nbsp;</font>\n\n<a name=\"两种方式\"><font color=\"#FF0000\">相对定向有两种方式</font></a>：①根据单片分别解算出的不同像片（可以使同相机可以不同）物方坐标系下的外方位元素绝对值，计算相对定向的五个元素，By,Bz,φ2，ω2，k2;或多片解算的某一相机的物方绝对值（必须统一相机，保证内方位元素相同），同样计算相对定向元素。可以作为航拍的连续拍摄的相对方位的确定，也可以作为立体固定的某些相机之间的相对方位的确定②直接根据同名点的像点坐标（6组以上），计算相对定向的旋转矩阵[R|t]，<font color=\"#FF0000\">不需要地面控制点！</font>。\n\n<a name=\"图解\">图解①方式的连续像对和单独像对</a>\n\n上面提到的连续像对，如下图所示，By Bz决定了摄影基线（即摄影中心移动的向量），φ2，ω2，k2决定了右片光束对于左光束的旋转。固定一个光束，旋转和移动第二个，便可以确定两个光束之间的相对方位，第三张相片可以和第二张相片确定相对方位，一次类推，所形成的相对方位元素称为连续像对系统。\n\n![](http://ww4.sinaimg.cn/large/68eb7c93gw1eyb8jft5rpj20ln0fmgoj.jpg)\n\n而单独相对，即可以取左片摄影中心XZ平面为主核面，摄影基线为X轴的右手空间直角坐标系。由φ1，ω1，k1,φ2，ω2，k2组成。\n\n![](http://ww3.sinaimg.cn/large/68eb7c93gw1eyb93i6vwcj20lg0d0dii.jpg)\n\n&nbsp;\n\n相对定向共面条件\n\n在相对定向中，答解相对元素的重要依据就是共面条件，当光线相交时，易知B（摄影基线，即S1S2）,S1a1,S2a2共面。如图可以看到，解求相对定向元素就是解求两个摄影中心的像方辅助坐标系的转换。共面条件方程形式为：\n\n$$!\\overrightarrow{S_{1}S_{2}}\\cdot (\\overrightarrow{S_{1}a_{1}}\\times \\overrightarrow{S_{2}a_{2}})=0$$\n\n共面条件方程无需地面控制点，一个同名点列一个方程。必须有5个以上定向点。\n\n![](http://ww4.sinaimg.cn/large/68eb7c93gw1eyb9drztouj20lz0ig782.jpg)\n\n如图，设像点a1、a2在大地坐标系坐标分别为(X1,Y1,Z1)、(X2,Y2,Z2).摄站S1、S2在大地坐标系坐标分别为$$(X_{S1},Y_{S1},Z_{S1}),(X_{S2},Y_{S2},Z_{S2})$$,则上式在即可表示为向量形式的行列式。\n\n$$!\\begin{vmatrix}X_{S2}-X_{S1}&amp;Y_{S2}-Y_{S1}&amp;Z_{S2}-Z_{S1}\\\\X_{1}-X_{S1}&amp;Y_{1}-Y_{S1}&amp;Z_{1}-Z_{S1}\\\\X_{2}-X_{S2}&amp;Y_{2}-Y_{S2}&amp;Z_{2}-Z_{S2}\\end{vmatrix}$$\n\n又令(X,Y,Z)、(Bx,By,Bz)为a1,S2在S1的像辅系S1-XYZ中的坐标，(X',Y',Z')为a2在S2像辅系S2-XYZ中的坐标。由三点共面的方程，\n\n$$!\\begin{vmatrix}B_{X}&amp;B_{Y}&amp;B_{Z}\\\\X&amp;Y&amp;Z\\\\X'&amp;Y'&amp;Z'\\end{vmatrix}=0$$上式可改写为：\n\n$$!\\begin{bmatrix}B_{X}&amp;B_{Y}&amp;B_{Z}\\end{bmatrix}\\begin{bmatrix}0&amp;-Z&amp;Y\\\\Z&amp;0&amp;-X\\\\-Y&amp;X&amp;0\\end{bmatrix}\\begin{bmatrix}X'\\\\Y'\\\\Z'\\end{bmatrix}=0$$\n\n光线是否成对相交与摄影测量坐标系的选择无关，但可以<font color=\"#FF0000\">选择适当的像辅系</font>，改变共面条件便于实际应用。\n\n（1）<font color=\"#FF0000\">选择左侧像空系</font>——连续像对系统。此时R1=E，即左系的旋转矩阵为0，像平面的z坐标均为-f；或为右片的旋转矩阵。则，公式未改变。\n\n$$!\\begin{vmatrix}B_{X}&amp;B_{Y}&amp;B_{Z}\\\\X&amp;Y&amp;Z\\\\X'&amp;Y'&amp;Z'\\end{vmatrix}=0$$\n\n（2）选择基线坐标系——单独像对系统。此时，$$B_{Y}=B_{Z}=0$$，即需要求取两个像片对基线坐标系的旋转。\n\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\">[](http://sns.juziyue.com/webinvite.php?u=94887)&nbsp;今天你[菊子曰](http://sns.juziyue.com/webinvite.php?u=94887)了么？</div>","slug":"后方交会检校(5)--多片后方交会 相对绝对定向","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7qp006nuco4qbrbd6gn","content":"<p><a href=\"#多片交会\">多片检校方程</a>&nbsp;<a href=\"#相对定向完成标志\">相对定向完成标志</a>&nbsp;&nbsp;<a href=\"#两种方式\">相对定向解答的两种方式</a>&nbsp;<a href=\"#图解\">图解连续像片和单独像对</a></p>\n<p>单片检校主要目的是精确测量相机的内方位元素和检校相机镜头畸变。由于只使用一幅影像进行参数的解算，使用了较少的几何约束条件和观测值，最容易产生内方位元素x0 y0 与外方位元素Xs Ys的不定解或强相关，使检校结果稳定性和可靠性受到影响。多片后方交会则可以更精确的解算这些参数，尤其是<font color=\"#FF0000\">主点位置的精度</font>问题。多片空间后方交会与单片空间后方交会的根本区别是：在不同的位置拍摄多张照片，由于各像片在同一主距条件下拍摄，因而解算所得的各相片的<font color=\"#FF0000\">外方位元素不同</font>，解算的<font color=\"#FF0000\">内方位元素和畸变参数被认为相同</font>。</p>\n<p>这样，就可以用下式方程表达<a name=\"多片交会\">多片交会</a>：</p>\n<p>$$!\\begin{bmatrix}A<em>{I}&amp;0&amp;\\cdot&amp;\\cdot&amp;\\cdot&amp;0&amp;B</em>{I}&amp;C<em>{I}\\0&amp;A</em>{II}&amp;.&amp;.&amp;.&amp;0&amp;B<em>{II}&amp;C</em>{II}\\.&amp;.&amp; &amp; &amp; &amp;0&amp;.&amp;.\\.&amp;.&amp; &amp; &amp; &amp;0&amp;.&amp;.\\0&amp;.&amp;.&amp;.&amp;.&amp;A<em>{n}&amp;B</em>{n}&amp;C<em>{n}\\end{bmatrix}</em>{2n\\times (6n+7)}\\begin{bmatrix}X<em>{out</em>{I}}\\X<em>{out</em>{II}}\\.\\.\\.\\X<em>{out</em>{n}}\\X<em>{in}\\X</em>{res}\\end{bmatrix}<em>{(6n+7)\\times1}-\\begin{bmatrix}xy</em>{res 1}\\xy<em>{res 2}\\.\\.\\.\\xy</em>{res n}\\end{bmatrix}_{2\\times1}=0$$</p>\n<p>这一点与图像配准极其相似，用一副影像作为参考影像去配准多幅图像的结果显然没有用周边多幅图像组为参考标准的结果令人信服。由于每张相片的外方位元素不同（一般都是围绕检校场左中右进行拍摄），所以良好的消除了外方位元素和内方位元素的强相关性。</p>\n<p>针对多片，提出了相对定向和绝对定向的概念，绝对定向即利用共线方程检校计算出的外方位元素绝对值，这是以物方坐标系的原点作为参考值；而相对定向则是以被检校出的某一张像片为参考，计算出其余像片在其坐标系的坐标值，即相对关系。相对关系的求取的精度对图像拼接有至关重要的影像。</p>\n<p><a name=\"相对定向完成标志\"><font color=\"#FF0000\">相对定向完成的标志</font></a>：同名光线对对相交。所有点在其承影面上的上下视差为零。即通过矩阵变换改变投影器的相对位置，使光线相交。<font color=\"#FF0000\">&nbsp;&nbsp;&nbsp;</font></p>\n<p><a name=\"两种方式\"><font color=\"#FF0000\">相对定向有两种方式</font></a>：①根据单片分别解算出的不同像片（可以使同相机可以不同）物方坐标系下的外方位元素绝对值，计算相对定向的五个元素，By,Bz,φ2，ω2，k2;或多片解算的某一相机的物方绝对值（必须统一相机，保证内方位元素相同），同样计算相对定向元素。可以作为航拍的连续拍摄的相对方位的确定，也可以作为立体固定的某些相机之间的相对方位的确定②直接根据同名点的像点坐标（6组以上），计算相对定向的旋转矩阵[R|t]，<font color=\"#FF0000\">不需要地面控制点！</font>。</p>\n<p><a name=\"图解\">图解①方式的连续像对和单独像对</a></p>\n<p>上面提到的连续像对，如下图所示，By Bz决定了摄影基线（即摄影中心移动的向量），φ2，ω2，k2决定了右片光束对于左光束的旋转。固定一个光束，旋转和移动第二个，便可以确定两个光束之间的相对方位，第三张相片可以和第二张相片确定相对方位，一次类推，所形成的相对方位元素称为连续像对系统。</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1eyb8jft5rpj20ln0fmgoj.jpg\" alt=\"\"></p>\n<p>而单独相对，即可以取左片摄影中心XZ平面为主核面，摄影基线为X轴的右手空间直角坐标系。由φ1，ω1，k1,φ2，ω2，k2组成。</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93gw1eyb93i6vwcj20lg0d0dii.jpg\" alt=\"\"></p>\n<p>&nbsp;</p>\n<p>相对定向共面条件</p>\n<p>在相对定向中，答解相对元素的重要依据就是共面条件，当光线相交时，易知B（摄影基线，即S1S2）,S1a1,S2a2共面。如图可以看到，解求相对定向元素就是解求两个摄影中心的像方辅助坐标系的转换。共面条件方程形式为：</p>\n<p>$$!\\overrightarrow{S<em>{1}S</em>{2}}\\cdot (\\overrightarrow{S<em>{1}a</em>{1}}\\times \\overrightarrow{S<em>{2}a</em>{2}})=0$$</p>\n<p>共面条件方程无需地面控制点，一个同名点列一个方程。必须有5个以上定向点。</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1eyb9drztouj20lz0ig782.jpg\" alt=\"\"></p>\n<p>如图，设像点a1、a2在大地坐标系坐标分别为(X1,Y1,Z1)、(X2,Y2,Z2).摄站S1、S2在大地坐标系坐标分别为$$(X<em>{S1},Y</em>{S1},Z<em>{S1}),(X</em>{S2},Y<em>{S2},Z</em>{S2})$$,则上式在即可表示为向量形式的行列式。</p>\n<p>$$!\\begin{vmatrix}X<em>{S2}-X</em>{S1}&amp;Y<em>{S2}-Y</em>{S1}&amp;Z<em>{S2}-Z</em>{S1}\\X<em>{1}-X</em>{S1}&amp;Y<em>{1}-Y</em>{S1}&amp;Z<em>{1}-Z</em>{S1}\\X<em>{2}-X</em>{S2}&amp;Y<em>{2}-Y</em>{S2}&amp;Z<em>{2}-Z</em>{S2}\\end{vmatrix}$$</p>\n<p>又令(X,Y,Z)、(Bx,By,Bz)为a1,S2在S1的像辅系S1-XYZ中的坐标，(X’,Y’,Z’)为a2在S2像辅系S2-XYZ中的坐标。由三点共面的方程，</p>\n<p>$$!\\begin{vmatrix}B<em>{X}&amp;B</em>{Y}&amp;B_{Z}\\X&amp;Y&amp;Z\\X’&amp;Y’&amp;Z’\\end{vmatrix}=0$$上式可改写为：</p>\n<p>$$!\\begin{bmatrix}B<em>{X}&amp;B</em>{Y}&amp;B_{Z}\\end{bmatrix}\\begin{bmatrix}0&amp;-Z&amp;Y\\Z&amp;0&amp;-X\\-Y&amp;X&amp;0\\end{bmatrix}\\begin{bmatrix}X’\\Y’\\Z’\\end{bmatrix}=0$$</p>\n<p>光线是否成对相交与摄影测量坐标系的选择无关，但可以<font color=\"#FF0000\">选择适当的像辅系</font>，改变共面条件便于实际应用。</p>\n<p>（1）<font color=\"#FF0000\">选择左侧像空系</font>——连续像对系统。此时R1=E，即左系的旋转矩阵为0，像平面的z坐标均为-f；或为右片的旋转矩阵。则，公式未改变。</p>\n<p>$$!\\begin{vmatrix}B<em>{X}&amp;B</em>{Y}&amp;B_{Z}\\X&amp;Y&amp;Z\\X’&amp;Y’&amp;Z’\\end{vmatrix}=0$$</p>\n<p>（2）选择基线坐标系——单独像对系统。此时，$$B<em>{Y}=B</em>{Z}=0$$，即需要求取两个像片对基线坐标系的旋转。</p>\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\"><a href=\"http://sns.juziyue.com/webinvite.php?u=94887\" target=\"_blank\" rel=\"external\"></a>&nbsp;今天你<a href=\"http://sns.juziyue.com/webinvite.php?u=94887\" target=\"_blank\" rel=\"external\">菊子曰</a>了么？</div>","excerpt":"","more":"<p><a href=\"#多片交会\">多片检校方程</a>&nbsp;<a href=\"#相对定向完成标志\">相对定向完成标志</a>&nbsp;&nbsp;<a href=\"#两种方式\">相对定向解答的两种方式</a>&nbsp;<a href=\"#图解\">图解连续像片和单独像对</a></p>\n<p>单片检校主要目的是精确测量相机的内方位元素和检校相机镜头畸变。由于只使用一幅影像进行参数的解算，使用了较少的几何约束条件和观测值，最容易产生内方位元素x0 y0 与外方位元素Xs Ys的不定解或强相关，使检校结果稳定性和可靠性受到影响。多片后方交会则可以更精确的解算这些参数，尤其是<font color=\"#FF0000\">主点位置的精度</font>问题。多片空间后方交会与单片空间后方交会的根本区别是：在不同的位置拍摄多张照片，由于各像片在同一主距条件下拍摄，因而解算所得的各相片的<font color=\"#FF0000\">外方位元素不同</font>，解算的<font color=\"#FF0000\">内方位元素和畸变参数被认为相同</font>。</p>\n<p>这样，就可以用下式方程表达<a name=\"多片交会\">多片交会</a>：</p>\n<p>$$!\\begin{bmatrix}A<em>{I}&amp;0&amp;\\cdot&amp;\\cdot&amp;\\cdot&amp;0&amp;B</em>{I}&amp;C<em>{I}\\0&amp;A</em>{II}&amp;.&amp;.&amp;.&amp;0&amp;B<em>{II}&amp;C</em>{II}\\.&amp;.&amp; &amp; &amp; &amp;0&amp;.&amp;.\\.&amp;.&amp; &amp; &amp; &amp;0&amp;.&amp;.\\0&amp;.&amp;.&amp;.&amp;.&amp;A<em>{n}&amp;B</em>{n}&amp;C<em>{n}\\end{bmatrix}</em>{2n\\times (6n+7)}\\begin{bmatrix}X<em>{out</em>{I}}\\X<em>{out</em>{II}}\\.\\.\\.\\X<em>{out</em>{n}}\\X<em>{in}\\X</em>{res}\\end{bmatrix}<em>{(6n+7)\\times1}-\\begin{bmatrix}xy</em>{res 1}\\xy<em>{res 2}\\.\\.\\.\\xy</em>{res n}\\end{bmatrix}_{2\\times1}=0$$</p>\n<p>这一点与图像配准极其相似，用一副影像作为参考影像去配准多幅图像的结果显然没有用周边多幅图像组为参考标准的结果令人信服。由于每张相片的外方位元素不同（一般都是围绕检校场左中右进行拍摄），所以良好的消除了外方位元素和内方位元素的强相关性。</p>\n<p>针对多片，提出了相对定向和绝对定向的概念，绝对定向即利用共线方程检校计算出的外方位元素绝对值，这是以物方坐标系的原点作为参考值；而相对定向则是以被检校出的某一张像片为参考，计算出其余像片在其坐标系的坐标值，即相对关系。相对关系的求取的精度对图像拼接有至关重要的影像。</p>\n<p><a name=\"相对定向完成标志\"><font color=\"#FF0000\">相对定向完成的标志</font></a>：同名光线对对相交。所有点在其承影面上的上下视差为零。即通过矩阵变换改变投影器的相对位置，使光线相交。<font color=\"#FF0000\">&nbsp;&nbsp;&nbsp;</font></p>\n<p><a name=\"两种方式\"><font color=\"#FF0000\">相对定向有两种方式</font></a>：①根据单片分别解算出的不同像片（可以使同相机可以不同）物方坐标系下的外方位元素绝对值，计算相对定向的五个元素，By,Bz,φ2，ω2，k2;或多片解算的某一相机的物方绝对值（必须统一相机，保证内方位元素相同），同样计算相对定向元素。可以作为航拍的连续拍摄的相对方位的确定，也可以作为立体固定的某些相机之间的相对方位的确定②直接根据同名点的像点坐标（6组以上），计算相对定向的旋转矩阵[R|t]，<font color=\"#FF0000\">不需要地面控制点！</font>。</p>\n<p><a name=\"图解\">图解①方式的连续像对和单独像对</a></p>\n<p>上面提到的连续像对，如下图所示，By Bz决定了摄影基线（即摄影中心移动的向量），φ2，ω2，k2决定了右片光束对于左光束的旋转。固定一个光束，旋转和移动第二个，便可以确定两个光束之间的相对方位，第三张相片可以和第二张相片确定相对方位，一次类推，所形成的相对方位元素称为连续像对系统。</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1eyb8jft5rpj20ln0fmgoj.jpg\" alt=\"\"></p>\n<p>而单独相对，即可以取左片摄影中心XZ平面为主核面，摄影基线为X轴的右手空间直角坐标系。由φ1，ω1，k1,φ2，ω2，k2组成。</p>\n<p><img src=\"http://ww3.sinaimg.cn/large/68eb7c93gw1eyb93i6vwcj20lg0d0dii.jpg\" alt=\"\"></p>\n<p>&nbsp;</p>\n<p>相对定向共面条件</p>\n<p>在相对定向中，答解相对元素的重要依据就是共面条件，当光线相交时，易知B（摄影基线，即S1S2）,S1a1,S2a2共面。如图可以看到，解求相对定向元素就是解求两个摄影中心的像方辅助坐标系的转换。共面条件方程形式为：</p>\n<p>$$!\\overrightarrow{S<em>{1}S</em>{2}}\\cdot (\\overrightarrow{S<em>{1}a</em>{1}}\\times \\overrightarrow{S<em>{2}a</em>{2}})=0$$</p>\n<p>共面条件方程无需地面控制点，一个同名点列一个方程。必须有5个以上定向点。</p>\n<p><img src=\"http://ww4.sinaimg.cn/large/68eb7c93gw1eyb9drztouj20lz0ig782.jpg\" alt=\"\"></p>\n<p>如图，设像点a1、a2在大地坐标系坐标分别为(X1,Y1,Z1)、(X2,Y2,Z2).摄站S1、S2在大地坐标系坐标分别为$$(X<em>{S1},Y</em>{S1},Z<em>{S1}),(X</em>{S2},Y<em>{S2},Z</em>{S2})$$,则上式在即可表示为向量形式的行列式。</p>\n<p>$$!\\begin{vmatrix}X<em>{S2}-X</em>{S1}&amp;Y<em>{S2}-Y</em>{S1}&amp;Z<em>{S2}-Z</em>{S1}\\X<em>{1}-X</em>{S1}&amp;Y<em>{1}-Y</em>{S1}&amp;Z<em>{1}-Z</em>{S1}\\X<em>{2}-X</em>{S2}&amp;Y<em>{2}-Y</em>{S2}&amp;Z<em>{2}-Z</em>{S2}\\end{vmatrix}$$</p>\n<p>又令(X,Y,Z)、(Bx,By,Bz)为a1,S2在S1的像辅系S1-XYZ中的坐标，(X’,Y’,Z’)为a2在S2像辅系S2-XYZ中的坐标。由三点共面的方程，</p>\n<p>$$!\\begin{vmatrix}B<em>{X}&amp;B</em>{Y}&amp;B_{Z}\\X&amp;Y&amp;Z\\X’&amp;Y’&amp;Z’\\end{vmatrix}=0$$上式可改写为：</p>\n<p>$$!\\begin{bmatrix}B<em>{X}&amp;B</em>{Y}&amp;B_{Z}\\end{bmatrix}\\begin{bmatrix}0&amp;-Z&amp;Y\\Z&amp;0&amp;-X\\-Y&amp;X&amp;0\\end{bmatrix}\\begin{bmatrix}X’\\Y’\\Z’\\end{bmatrix}=0$$</p>\n<p>光线是否成对相交与摄影测量坐标系的选择无关，但可以<font color=\"#FF0000\">选择适当的像辅系</font>，改变共面条件便于实际应用。</p>\n<p>（1）<font color=\"#FF0000\">选择左侧像空系</font>——连续像对系统。此时R1=E，即左系的旋转矩阵为0，像平面的z坐标均为-f；或为右片的旋转矩阵。则，公式未改变。</p>\n<p>$$!\\begin{vmatrix}B<em>{X}&amp;B</em>{Y}&amp;B_{Z}\\X&amp;Y&amp;Z\\X’&amp;Y’&amp;Z’\\end{vmatrix}=0$$</p>\n<p>（2）选择基线坐标系——单独像对系统。此时，$$B<em>{Y}=B</em>{Z}=0$$，即需要求取两个像片对基线坐标系的旋转。</p>\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\"><a href=\"http://sns.juziyue.com/webinvite.php?u=94887\"></a>&nbsp;今天你<a href=\"http://sns.juziyue.com/webinvite.php?u=94887\">菊子曰</a>了么？</div>"},{"title":"后方交会检校(3)--角度、坐标及其应用","id":"787","date":"2015-10-28T11:55:49.000Z","_content":"\n本片涉及前文中叙述到的三个角元素含义及外延，包含与角元素相关的旋转矩阵R并简明介绍几个常用坐标系。\n\n内容提要：\n\n[几个概念](#几个概念：)（视场 像场 视场角）&nbsp;\n\n[几个坐标系](#几个坐标系)\n\n[共线方程的推导](#共线方程的推导)\n\n&nbsp;[坐标旋转即共线方程的应用](#坐标旋转即共线方程的应用)\n\n[坐标旋转](#坐标旋转)\n\n[像片水平与倾斜像点坐标的关系](#像片水平与倾斜像点坐标的关系)\n\n<font size=\"5\">**<a name=\"几个概念：\">几个概念：</a>**</font>&nbsp;\n\n视场：光线通过物镜后，焦面上照度不均匀的光亮圆为镜头的视场。\n\n像场：摄影时，影像相当清晰的一部分视场内的光亮圆。\n\n视场角（filed of view）：由镜头后节点向市场边缘射出的光线所张开的角，用2β表示。常角&lt;75&deg;，宽角75&deg;~100&deg;，特宽角&gt;100&deg;\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/E31B0C36B248ADD81D8147EE808E68085B42914E.jpg)\n\n数码相机的瞬时视场角IFOV与空间分辨率的关系：$$R_{g}=2\\sqrt{2}IFOV$$\n\n<font size=\"5\">**<a name=\"几个坐标系\">几个坐标系：</a>**</font>\n\n<font color=\"#FF0000\">像素坐标系</font>-2D-IAJ以像片左上角为坐标原点，下为y正，右为x正。坐标一般用(u,v)表示。\n\n$$x=J\\Delta -x_{0}$$,$$y=-(I\\Delta -y_{0})$$\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/6E6CFB3A2924474655DD2222F8223CABE46AD6FC.jpg)\n\n这里，值得一提的是，坐标单位一般是像素。而一般以中心为基准的坐标系（像平面坐标系，一般用(x,y)表示的单位是毫米。这两个坐标系之间的转换公式形式可以写为:\n\n$$!\\left\\{\\begin{matrix}u=\\frac{x}{d_{x}}+u_{0}=x*s_{x+u_{0}}\\\\v=\\frac{y}{d_{y}}+v_{0}=y*s_{y}+v_{0}\\end{matrix}\\right.$$\n\n这里，dx dy分别代表每个像素在横轴x和纵轴y的物理尺寸，单位是mm per pixel。而sx和sy分别是二者的导数。或可以用矩阵的形式：\n\n$$!\\begin{pmatrix}u\\\\v\\\\1\\end{pmatrix}=\\begin{pmatrix}s_{x}&amp;0&amp;c_{x}\\\\0&amp;s_{y}&amp;c_{y}\\\\0&amp;0&amp;1\\end{pmatrix}\\begin{pmatrix}x\\\\y\\\\1\\end{pmatrix}$$\n\n<font color=\"#FF0000\">像空间坐标系</font>-3D-Sxyz表示<font color=\"#FF0000\">像点</font>在<font color=\"#FF0000\">像方空间</font>位置的空间直角坐标系。原点即投影中心，xy轴分别平行于像平面xy轴，z轴即主光轴的方向。在该坐标系中，所有像点的z坐标都是-f。几何含义就是，投影中心在投向焦平面的时候，与设计上认为的像点（像平面几何中心）相比，投偏了多少。像平面坐标+内方位元素就可以定位所有穿过像平面到达物放世界的光束的形状；该坐标系的方位就代表了像片的空间方位，像空间坐标系绕原点的旋转就代表了像片绕投影中心的旋转。下图中S为投影中心，O为投影中心，a为任意一个像点，其坐标为(x,y,-f)\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/B91663ACDA13BB74808431E1CBA1F9DEB72AAA10.jpg)\n\n<font color=\"#FF0000\">物方空间坐标系</font>-3D-O-XdYdZd测绘系统选择一定的原点，进行测绘测量的世界真实坐标，描述点的空间位置。摄影测量的成果最终要转到该坐标系中。\n\n地面辅助坐标系-3D-O-XtYtZt 一般称地辅系，<font color=\"#FF0000\">Z轴铅锤，X Y轴与物空系平行</font>。在摄影测量中，<font color=\"#FF0000\">原点都默认设为摄影中心S</font>。因此该坐标系<font color=\"#FF0000\">与物空系不需要进行旋转，只需要平移</font>，即坐标轴加减运算。这是中间成果和数学运算常用的坐标系。下图是地辅系、像空系、像平面坐标系在一起的示意图。而共线方程就是依据这几个坐标系空间转换得到的。原理为三角形相似。\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/13598A8CB4E7FDBD56C5B595E2AD0624D9A2FD14.jpg)\n\n<font color=\"#FF0000\">像素坐标系→像平面坐标系（内方位元素）</font>\n\n<font color=\"#FF0000\">地面辅助坐标系→像平面坐标系（外方位元素）</font>\n\n共线方程的物理含义就是三点一线，两点一系（理想状况下，摄影瞬间像点、投影中心位于同一直线。）如图所示：\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/1AF795ADEC60BCB2F0396B5F841F4844E636A283.jpg)\n\n图中浅蓝色坐标系是<font color=\"#00FFFF\"><u>地辅系</u></font>（这里 地辅系通过投影中心 连接物空系和像空系），a点是像平面上的投影，A点是地面控制点，红色坐标系是<font color=\"#FF0000\"><u>物方空间坐标系</u></font>，黄色坐标是<font color=\"#FFC800\"><u>像空系</u></font>（像空系垂直与像平面），λ即投影比例尺，二维坐标各自成比例，形成了共线方程的最基本形式。也可以用向量的方式来解释。其中Xs &nbsp;Ys&nbsp; Zs是投影中心在物方空间的坐标，$$X_{A}&nbsp; Y_{A}&nbsp; Z_{A}$$是真实世界某控制点的物方坐标。两者相减，即得到相对位置，即地辅系的坐标。该方程是<font color=\"#FF0000\">**建立在地辅系上**</font>的。\n\n**<a name=\"共线方程的推导\">共线方程的推导</a>**\n\n→**点的坐标变换**（一点两系）：目标是建立同一个点在空间坐标系与地面辅助坐标系中坐标值之间的对应关系。坐标点一般的转换关系为：\n\n$$!\\begin{pmatrix}X\\\\Y\\\\Z\\end{pmatrix}=R\\begin{pmatrix}x\\\\y\\\\z\\end{pmatrix}$$\n\n$$!\\begin{pmatrix}x\\\\y\\\\z\\end{pmatrix}=R^{T}\\begin{pmatrix}X\\\\Y\\\\Z\\end{pmatrix}$$\n\n则R称为旋转矩阵。\n\n点a、A位于两个坐标系，分别用两组坐标来表示。S-xyz示意像空系，S-XYZ示意地辅系。\n\n<table width=\"80%\" border=\"0\"> <tbody> <tr> <td width=\"26%\">点\\坐标系</td> <td width=\"26%\">S-xyz</td> <td width=\"26%\">S-XYZ</td> </tr> <tr> <td width=\"26%\">a</td> <td width=\"26%\">x,y,-f</td> <td width=\"26%\">Xa，Ya，Za</td> </tr> <tr> <td width=\"26%\">A</td> <td width=\"26%\">xA,yA,zA</td> <td width=\"26%\">X,Y,Z</td> </tr> </tbody> </table>\n\n由于旋转矩阵相同，两个点可表示为：\n\n$$!\\begin{pmatrix}X\\\\Y\\\\Z\\end{pmatrix}=R\\begin{pmatrix}x_{A}\\\\y_{A}\\\\z_{A}\\end{pmatrix}$$\n\n$$!\\begin{pmatrix}X_{a}\\\\Y_{a}\\\\Z_{a}\\end{pmatrix}=R\\begin{pmatrix}x\\\\y\\\\-f\\end{pmatrix}$$\n\n则，$$!\\begin{pmatrix}x_{A}\\\\y_{A}\\\\z_{A}\\end{pmatrix}=R^{T}\\begin{pmatrix}X\\\\Y\\\\Z\\end{pmatrix}$$\n\n→点的共线关系（两点一系）：目标是建立像点和物方点的坐标关系。易知，两点一线时，可以用一个点的齐次方程表示另一个点。即：\n\n$$!\\left\\{\\begin{matrix}x_{A}=a_{1}X+b_{1}Y+c_{1}Z\\\\y_{A}=a_{2}X+b_{2}Y+c_{2}Z\\\\y_{A}=a_{3}X+b_{3}Y+c_{3}Z\\end{matrix}\\right.$$\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/7238D8A7EF534575B5EE48B9CCA41FF8E4903B6C.jpg)\n\n上图中可建立的方程有，（该方程建立在像空系中）\n\n$$!\\frac{x_{A}}{x}=\\frac{y_{A}}{y}=\\frac{z_{A}}{-f}=\\lambda \\Rightarrow\\left\\{\\begin{matrix}x=-f\\frac{x_{A}}{z_{A}}\\\\y=-f\\frac{y_{A}}{z_{A}}\\end{matrix}\\right.$$\n\n联立坐标转换方程和像空系方程，化简即可得到传说中的共线条件方程。\n\n用<font color=\"#FF0000\">地面点</font>坐标表示<font color=\"#FF0000\">像点</font>坐标的共线方程（地辅系形式）\n\n$$!x=-f\\frac{a_{1}(X_{T}-X_{S})+b_{1}(Y_{T}-Y_{S})+c_{1}(Z_{T}-Z_{S})}{a_{3}(X_{T}-X_{S})+b_{3}(Y_{T}-Y_{S})+c_{3}(Z_{T}-Z_{S})}$$\n\n$$!y=-f\\frac{a_{2}(X_{T}-X_{S})+b_{2}(Y_{T}-Y_{S})+c_{2}(Z_{T}-Z_{S})}{a_{3}(X_{T}-X_{S})+b_{3}(Y_{T}-Y_{S})+c_{3}(Z_{T}-Z_{S})}$$\n\n或（物空系形式）\n\n$$!x=-f\\frac{a_{1}(X-X_{S})+b_{1}(Y-Y_{S})+c_{1}(Z-Z_{S})}{a_{3}(X-X_{S})+b_{3}(Y-Y_{S})+c_{3}(Z-Z_{S})}$$\n\n$$!y=-f\\frac{a_{2}(X-X_{S})+b_{2}(Y-Y_{S})+c_{2}(Z-Z_{S})}{a_{3}(X-X_{S})+b_{3}(Y-Y_{S})+c_{3}(Z-Z_{S})}$$\n\n同理，利用蓝图中在地辅系的共线方程，可以建立用<font color=\"#FF0000\">像点</font>坐标表达<font color=\"#FF0000\">地面坐标</font>的方程（物空系形式）\n\n$$!X=X_{s}+(Z-Z_{s})\\frac{a_{1}x+a_{2}y-a_{3}f}{c_{1}x+c_{2}y-c_{3}f}$$\n\n$$!Y=Y_{s}+(Z-Z_{s})\\frac{b_{1}x+b_{2}y-b_{3}f}{c_{1}x+c_{2}y-c_{3}f}$$\n\n上式也成为了前方交会解算的基本方程。\n\n* * *\n\n**<a name=\"坐标旋转即共线方程的应用\">坐标旋转即共线方程的应用</a>**\n\n①**求像点坐标**\n\n*   已知Xs Ys Zs ai bi ci f(物方真值 旋转矩阵)\n*   求x y（像平面坐标）\n\n依赖方程：\n\n$$!x=-f\\frac{a_{1}(X-X_{S})+b_{1}(Y-Y_{S})+c_{1}(Z-Z_{S})}{a_{3}(X-X_{S})+b_{3}(Y-Y_{S})+c_{3}(Z-Z_{S})}$$\n\n$$!y=-f\\frac{a_{2}(X-X_{S})+b_{2}(Y-Y_{S})+c_{2}(Z-Z_{S})}{a_{3}(X-X_{S})+b_{3}(Y-Y_{S})+c_{3}(Z-Z_{S})}$$\n\n②**答解外方位元素**(后方交会基本原理)\n\n*   已知$$x_{i}^{'} y_{i}^{'} X_{i} Y_{i} Z_{i} x_{0} y_{0} f$$（像坐标观测值 物方观测值 内方位元素）\n*   求Xs Ys Zs ai bi ci（外方位元素）\n\n依赖方程：\n\n$$!x^{'}-x_{0}=-f\\frac{a_{1}(X-X_{S})+b_{1}(Y-Y_{S})+c_{1}(Z-Z_{S})}{a_{3}(X-X_{S})+b_{3}(Y-Y_{S})+c_{3}(Z-Z_{S})}$$\n\n$$!y^{'}-y_{0}=-f\\frac{a_{2}(X-X_{S})+b_{2}(Y-Y_{S})+c_{2}(Z-Z_{S})}{a_{3}(X-X_{S})+b_{3}(Y-Y_{S})+c_{3}(Z-Z_{S})}$$\n\n③**求地面点坐标**\n\n*   已知x，y，Xs，Ys，Zs，ai，bi，ci，f(外方位元素，像点坐标观测值，焦距)\n*   求X，Y，Z（求未知物方点坐标,这里，大部分都知道DEM，即(X,Y)坐标下的Z高程的信息）\n\n依赖方程(单片定位)：\n\n$$!\\frac{X-X_{S}}{Z-Z_{S}}=\\frac{a_{1}x+a_{2}y-a_{3}f}{c_{1}x+c_{2}y-c_{3}f}$$\n\n$$!\\frac{Y-Y_{S}}{Z-Z_{S}}=\\frac{b_{1}x+b_{2}y-b_{3}f}{c_{1}x+c_{2}y-c_{3}f}$$\n\n依赖方程（立体像对定位）--4个方程解算3个未知数。(前方交会后方交会同时进行)\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/5F3074FF98FA07ED1F357962C68FF593E047311B.jpg)\n\n$$!\\frac{X-X_{S}}{Z-Z_{S}}=\\frac{a_{1}x+a_{2}y-a_{3}f}{c_{1}x+c_{2}y-c_{3}f}$$\n\n$$!\\frac{Y-Y_{S}}{Z-Z_{S}}=\\frac{b_{1}x+b_{2}y-b_{3}f}{c_{1}x+c_{2}y-c_{3}f}$$\n\n$$!\\frac{X-X_{S}^{'}}{Z-Z_{S}^{'}}=\\frac{a_{1}^{'}x^{'}+a_{2}^{'}y^{'}-a_{3}^{'}f}{c_{1}^{'}x^{'}+c_{2}^{'}y^{'}-c_{3}^{'}f}$$\n\n$$!\\frac{Y-Y_{S}^{'}}{Z-Z_{S}^{'}}=\\frac{b_{1}^{'}x^{'}+b_{2}^{'}y^{'}-b_{3}^{'}f}{c_{1}^{'}x^{'}+c_{2}^{'}y^{'}-c_{3}^{'}f}$$\n\n* * *\n\n<a name=\"坐标旋转\">坐标旋转</a>\n\n从物方空间坐标系到像空间坐标系的转换其实就是一个<font color=\"#FF0000\">平移</font>（平移到地辅系）再<font color=\"#FF0000\">旋转</font>的过程，这就是常见的[R|t]。旋转真正的含义就是对3个坐标轴作二维角度上的旋转，3个旋转合成一个旋转矩阵R。坐标轴旋转θ角度，等同于目标点绕坐标原点反方向旋转同样的角度θ。选择的旋转3个坐标系的方式有很多，常用的就是以Y轴为主轴的φ，ω,k的系统。\n\n**航向倾角φ**（pitching）：z轴在<font color=\"#FF0000\">XZ坐标面内的投影</font>（即过z轴所做的XZ面的垂面与XZ面的交线）<font color=\"#FF0000\">与Z轴的夹角</font>，叫做航向倾角。从Z轴算起，由Y轴的负方向逆时针为正。如图为正。\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/98B5D21FDF0802661E47A2C3089CF683E856F014.jpg)\n\n**旁向倾角ω**（roll）：z轴与XZ坐标面之间的夹角，即z轴与它在XZ面上投影之间的夹角，叫做旁向倾角。从z轴的投影算起，由X轴的正方向看逆时针为正。如图为正。\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/5A4A8734E57C7C288466AFAF21FE3D1DA7F17C1B.jpg)\n\n**像片旋角k**（yaw）：Y轴在xy坐标系面上的投影与y轴的夹角，叫做旋角。从投影算起，由z轴正方向看逆时针为正。如图k为正。\n\n*   二维平面的坐标旋转\n\n如图所示，旋转是可逆变化，两套坐标之间可以用矩阵和逆矩阵进行转换。\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/9C02C1C63C5D098E97E8A04FBBDFB60F02221B34.jpg)\n\n$$!\\begin{bmatrix}x^{'}\\\\y^{'}\\end{bmatrix}=A\\begin{bmatrix}x\\\\y\\end{bmatrix},\\begin{bmatrix}x\\\\y\\end{bmatrix}=A^{-1}\\begin{bmatrix}x^{'}\\\\y^{'}\\end{bmatrix}$$\n\n$$!A=\\begin{bmatrix}a_{1}&amp;a_{2}\\\\b_{1}&amp;b_{2}\\end{bmatrix}=\\begin{bmatrix}cos \\widehat{x^{'}x}&amp;cos \\widehat{x^{'}y}\\\\cos\\widehat{y^{'}x}&amp;cos \\widehat{y^{'}y}\\end{bmatrix}=\\begin{bmatrix}cos \\kappa&amp;sin \\kappa\\\\-sin \\kappa&amp;cos\\kappa\\end{bmatrix}$$\n\n式中\n\na1是x'轴与x轴夹角的余弦；a1=cos k\n\nb1是x'轴与y轴夹角的余弦：b1=cos(90&deg;-k)=sin k\n\na2是y'轴与x轴夹角的余弦：a2=cos(90&deg;+k)=-sin k\n\nb2是y'轴与y轴夹角的余弦：b2=cos k\n\n*   三维空间的坐标旋转\n\n从像空间直角坐标系到像空间辅助坐标系之间的转换可以通过<font color=\"#FF0000\">三次二维坐标转换完成</font>。\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/A203A33F40A9904D7EA2D966CB486C277511405E.jpg)\n\n$$!\\begin{bmatrix}X\\\\Y\\\\Z\\end{bmatrix}=R\\begin{bmatrix}x\\\\y\\\\-f\\end{bmatrix}$$\n\n$$!R=\\begin{bmatrix}a_{1}&amp;a_{2}&amp;a_{3}\\\\b_{1}&amp;b_{2}&amp;b_{3}\\\\c_{1}&amp;c_{2}&amp;c_{3}\\end{bmatrix}=\\begin{bmatrix}cos\\widehat{Xx}&amp;cos\\widehat{Xy}&amp;cos\\widehat{Xz}\\\\cos\\widehat{Yx}&amp;cos\\widehat{Yy}&amp;cos\\widehat{Yz}\\\\cos\\widehat{Zx}&amp;cos\\widehat{Zy}&amp;cos\\widehat{Zz}\\end{bmatrix}$$\n\n①S-XYZ<font color=\"#FF0000\">绕Y轴旋转φ</font>到S-XφYφZφ，在XSZ平面内，以S点位圆心旋转XSZ至XφSZφ\n\n$$!\\begin{bmatrix}X\\\\Y\\\\Z\\end{bmatrix}=R_{\\varphi}\\begin{bmatrix}X_{\\varphi }\\\\Y_{\\varphi }\\\\Z_{\\varphi }\\end{bmatrix}=\\begin{bmatrix}cos\\varphi&amp;0&amp;-sin\\varphi\\\\0&amp;1&amp;0\\\\sin\\varphi&amp;0&amp;cos\\varphi\\end{bmatrix}\\begin{bmatrix}X_{\\varphi }\\\\Y_{\\varphi }\\\\Z_{\\varphi }\\end{bmatrix}$$\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/6F2D6EC82C1793253C32825B3180B3F84A68D11B.jpg)\n\n该次变换中，由于是绕Y轴旋转的，因此Y坐标值没有改变，相当于在二维XSZ平面做了旋转，下同。\n\n②S-XφYφZφ绕Xφ旋转ω角到S-XφωYφωZφω，在YφSZφ平面内，以S点为圆心旋转YφSZφ到YφωSZφω。这次变化中，x轴坐标值没有改变。\n\n$$!\\begin{bmatrix}X_{\\varphi}\\\\Y_{\\varphi}\\\\Z_{\\varphi}\\end{bmatrix}=R_{\\omega}\\begin{bmatrix}X_{\\varphi\\omega}\\\\Y_{\\varphi \\omega}\\\\Z_{\\varphi\\omega}\\end{bmatrix}=\\begin{bmatrix}1&amp;0&amp;0\\\\0&amp;cos \\omega&amp;-sin \\omega\\\\0&amp;sin \\omega&amp;cos \\omega \\end{bmatrix}\\begin{bmatrix}X_{\\varphi\\omega}\\\\Y_{\\varphi \\omega}\\\\Z_{\\varphi\\omega}\\end{bmatrix}$$\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/3669611136A21AC23885E7932C6D17D84AEC1C27.jpg)\n\n③S-XφωYφωZφω绕Zφω轴旋转k角度到S-xyz，在XφSYω平面内，以S点为圆心转到XφωSYφω至xSy。\n\n$$!\\begin{bmatrix}X_{\\varphi\\omega}\\\\Y_{\\varphi\\omega}\\\\Z_{\\varphi\\omega}\\end{bmatrix}=R_{\\kappa}\\begin{bmatrix}x\\\\y\\\\-f\\end{bmatrix}=\\begin{bmatrix}cos \\kappa&amp;-sin \\kappa&amp;0\\\\sin \\kappa&amp;cos \\kappa&amp;0\\\\0&amp;0&amp;1\\end{bmatrix}\\begin{bmatrix}x\\\\y\\\\-f\\end{bmatrix}$$\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/3C453D9DA7CF479D4624D8465171F8FAF1F9E701.jpg)\n\n联立之前三个旋转矩阵即可得到三维下的旋转矩阵R\n\n$$!\\begin{bmatrix}X\\\\Y\\\\Z\\end{bmatrix}=R_{\\varphi}R_{\\omega}R_{\\kappa}\\begin{bmatrix}x\\\\y\\\\-f\\end{bmatrix}=\\begin{bmatrix}cos\\varphi&amp;0&amp;-sin\\varphi\\\\0&amp;1&amp;0\\\\sin\\varphi&amp;0&amp;cos\\varphi\\end{bmatrix}\\begin{bmatrix}1&amp;0&amp;0\\\\0&amp;cos \\omega&amp;-sin \\omega\\\\0&amp;sin \\omega&amp;cos \\omega \\end{bmatrix}\\begin{bmatrix}cos \\kappa&amp;-sin \\kappa&amp;0\\\\sin \\kappa&amp;cos \\kappa&amp;0\\\\0&amp;0&amp;1\\end{bmatrix}\\begin{bmatrix}x\\\\y\\\\-f\\end{bmatrix}=\\begin{bmatrix}a_{1}&amp;a_{2}&amp;a_{3}\\\\b_{1}&amp;b_{2}&amp;b_{3}\\\\c_{1}&amp;c_{2}&amp;c_{3} \\end{bmatrix}\\begin{bmatrix}x\\\\y\\\\-f\\end{bmatrix}=R\\begin{bmatrix}x\\\\y\\\\-f\\end{bmatrix}$$\n\n旋转矩阵R因此由外方位元素φ，ω，k确定。其中a1,a2,a3,b1,b2,b3,c1,c2,c3是9个方向的<font color=\"#FF0000\">方向余弦</font>。\n\n$$!a_{1}=cos\\varphi cos\\kappa-sin\\varphi sin\\omega sin\\kappa$$\n\n$$!a_{2}=-cos\\varphi sin\\kappa -sin\\varphi sin\\omega cos\\kappa$$\n\n$$!a_{3}=-sin\\varphi cos\\omega$$\n\n$$!b_{1}=cos\\omega sin\\kappa$$\n\n$$!b_{2}=cos\\omega cos\\kappa$$\n\n$$!b_{3}=-sin\\omega$$\n\n$$!c_{1}=sin\\varphi cos\\kappa+cos\\varphi sin\\omega sin\\kappa $$\n\n$$!c_{2}=-sin\\varphi sin\\kappa +cos\\varphi sin\\omega cos\\kappa $$\n\n$$!c_{3}=cos\\varphi cos\\omega $$\n\n通过解算可知\n\n$$!R\\cdot R^{T}=\\begin{bmatrix}a_{1}&amp;a_{2}&amp;a_{3}\\\\b_{1}&amp;b_{2}&amp;b_{3}\\\\c_{1}&amp;c_{2}&amp;c_{3} \\end{bmatrix}\\cdot \\begin{bmatrix}a_{1}&amp;b_{1}&amp;c_{1}\\\\a_{2}&amp;b_{2}&amp;c_{2}\\\\a_{3}&amp;b_{3}&amp;c_{3}\\end{bmatrix}=\\begin{bmatrix}1&amp;0&amp;0\\\\0&amp;1&amp;0\\\\0&amp;0&amp;1\\end{bmatrix}$$\n\n$$!R^{T}\\cdot R =\\begin{bmatrix}a_{1}&amp;b_{1}&amp;c_{1}\\\\a_{2}&amp;b_{2}&amp;c_{2}\\\\a_{3}&amp;b_{3}&amp;c_{3}\\end{bmatrix}\\cdot \\begin{bmatrix}a_{1}&amp;a_{2}&amp;a_{3}\\\\b_{1}&amp;b_{2}&amp;b_{3}\\\\c_{1}&amp;c_{2}&amp;c_{3} \\end{bmatrix}=\\begin{bmatrix}1&amp;0&amp;0\\\\0&amp;1&amp;0\\\\0&amp;0&amp;1\\end{bmatrix}$$\n\n很明显，意味着R与$$R^{T}$$互为逆矩阵。这也验证了R矩阵是两个坐标系之间相互转换的矩阵。由$$RR^{T}=I$$可得：\n\n（1）同行（列）列的各元素自乘之和为1\n\n（2）任意两行（列）的对应元素相乘之和为0（正交）\n\n（3）旋转矩阵行列式为|R|=1\n\n（4）每行元素等于其代数余子式\n\n（5）每个元素为变换前后坐标轴夹角的余弦值\n 易知\n\n$$!\\varphi =-arctan(\\frac{a_{3}}{c_{3}}),\\omega =-arcsin(b_{3}),\\kappa =-arctan(\\frac{b_{1}}{b_{2}})$$\n\n$$!a_{1}^{2}+a_{2}^{2}+a_{3}^{2}=1,b_{1}^{2}+b_{2}^{2}+b_{3}^{2}=1,c_{1}^{2}+c_{2}^{2}+c_{3}^{2}=1$$\n\n$$!a_{1}b_{1}+a_{2}b_{2}+a_{3}b_{3}=0,a_{1}c_{1}+a_{2}c_{2}+a_{3}c_{3}=0,b_{1}c_{1}+b_{2}c_{2}+b_{3}c_{3}=0$$\n\n$$!a_{1}^{2}+b_{1}^{2}+c_{1}^{2}=1,a_{2}^{2}+b_{2}^{2}+c_{2}^{2}=1,a_{3}^{2}+b_{3}^{2}+c_{3}^{2}=1$$\n\n$$!a_{1}a_{2}+b_{1}b_{2}+c_{1}c_{2}=0,a_{1}a_{3}+b_{1}b_{3}+c_{1}c_{3}=0,a_{2}a_{3}+b_{2}b_{3}+c_{2}c_{3}=0$$\n\n<font size=\"+0\">**<a name=\"像片水平与倾斜像点坐标的关系\">像片水平与倾斜像点坐标的关系</a>**</font>。（这里，以摄影中心<font color=\"#FF0000\">S点为像片旋转中心</font>，因此外方位元素中，<font color=\"#FF0000\">主距依旧是f</font>，<font color=\"#FF0000\">线元素没有改变</font>）\n\n已知：外方位元素Xs Ys Zs φ ω k(即九个方向余弦)\n\n<font color=\"#FF0000\">对于某高程</font>，摄影中心在该高程Z方向的投影N坐标为(Xs,Ys,Zs-$$H_{N}$$)--<font color=\"#FF0000\">物方坐标系</font>\n\n<font color=\"#FF0000\">对于某高程</font>，摄影中心在该高程的垂线与像平面的交点n坐标为$$(-f\\frac{c_{1}}{c_{3}},-f\\frac{c_{2}}{c_{3}})$$--<font color=\"#FF0000\">像方坐标</font>，可将上点带入共线条件方程后方交会求得↓↓↓\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/A1BBA5EFFED4F68C01CF47FBC61FC4FA7087739E.jpg)\n\n又根据共线方程前方交会公式，在水平图像的平面上，物方任意点A(X,Y,Z)-（物方坐标）在像平面的成像点a为$$(x^{0},y^{0})$$-（像平面坐标）或$$(x^{0},y^{0},-f)$$像空间坐标系。↓↓↓\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/3C7C83AD827FB7A7BD4108090804ED13131E82D7.jpg)\n\n值得注意的是，主光轴正好是垂直于大地水平面，所以，地辅系与像空系只需要在XSY平面上旋转即可。\n\n在倾斜形态中，由像点表示物方点坐标点的公式为：\n\n$$!\\frac{X-X_{S}}{Z-Z_{S}}=\\frac{a_{1}x+a_{2}y-a_{3}f}{c_{1}x+c_{2}y-c_{3}f}$$\n\n$$!\\frac{Y-Y_{S}}{Z-Z_{S}}=\\frac{b_{1}x+b_{2}y-b_{3}f}{c_{1}x+c_{2}y-c_{3}f}$$\n\n在垂直形态中，三个角元素严格为0，因次带入之前的矩阵公式得到：\n\na1=1 a2=0 a3=0 b1=0 b2=1 b3=0 c1=0 c2=0 c3=1\n\n$$!\\frac{X-X_{S}}{Z-Z_{S}}=\\frac{x^{0}}{-f}$$\n\n$$!\\frac{Y-Y_{S}}{Z-Z_{S}}=\\frac{y^{0}}{-f}$$\n\n其中$$x^{0},y^{0}$$分别表示水平状态的像点坐标。\n\n上两式的外方位角元素不同，而线元素是相同的。因此联立可得<font color=\"#FF0000\">水平纠正的基本公式</font>：\n\n$$!\\left\\{\\begin{matrix}x^{0}=-f\\frac{a_{1}x+a_{2}y-a_{3}f}{c_{1}x+c_{2}y-c_{3}f}\\\\y^{0}=-f\\frac{b_{1}x+b_{2}y-b_{3}f}{c_{1}x+c_{2}y-c_{3}f}\\end{matrix}\\right.$$\n\n&nbsp;\n\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\">[](http://sns.juziyue.com/webinvite.php?u=94887)&nbsp;今天你[菊子曰](http://sns.juziyue.com/webinvite.php?u=94887)了么？</div>","source":"_posts/后方交会检校(3)--角度、坐标及其应用.md","raw":"---\ntitle: 后方交会检校(3)--角度、坐标及其应用\ncategories:\n  - 什么都学一下\n  - 学习log\ntags:\n  - 后方交会\n  - 检校\nid: 787\ndate: 2015-10-28 19:55:49\n---\n\n本片涉及前文中叙述到的三个角元素含义及外延，包含与角元素相关的旋转矩阵R并简明介绍几个常用坐标系。\n\n内容提要：\n\n[几个概念](#几个概念：)（视场 像场 视场角）&nbsp;\n\n[几个坐标系](#几个坐标系)\n\n[共线方程的推导](#共线方程的推导)\n\n&nbsp;[坐标旋转即共线方程的应用](#坐标旋转即共线方程的应用)\n\n[坐标旋转](#坐标旋转)\n\n[像片水平与倾斜像点坐标的关系](#像片水平与倾斜像点坐标的关系)\n\n<font size=\"5\">**<a name=\"几个概念：\">几个概念：</a>**</font>&nbsp;\n\n视场：光线通过物镜后，焦面上照度不均匀的光亮圆为镜头的视场。\n\n像场：摄影时，影像相当清晰的一部分视场内的光亮圆。\n\n视场角（filed of view）：由镜头后节点向市场边缘射出的光线所张开的角，用2β表示。常角&lt;75&deg;，宽角75&deg;~100&deg;，特宽角&gt;100&deg;\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/E31B0C36B248ADD81D8147EE808E68085B42914E.jpg)\n\n数码相机的瞬时视场角IFOV与空间分辨率的关系：$$R_{g}=2\\sqrt{2}IFOV$$\n\n<font size=\"5\">**<a name=\"几个坐标系\">几个坐标系：</a>**</font>\n\n<font color=\"#FF0000\">像素坐标系</font>-2D-IAJ以像片左上角为坐标原点，下为y正，右为x正。坐标一般用(u,v)表示。\n\n$$x=J\\Delta -x_{0}$$,$$y=-(I\\Delta -y_{0})$$\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/6E6CFB3A2924474655DD2222F8223CABE46AD6FC.jpg)\n\n这里，值得一提的是，坐标单位一般是像素。而一般以中心为基准的坐标系（像平面坐标系，一般用(x,y)表示的单位是毫米。这两个坐标系之间的转换公式形式可以写为:\n\n$$!\\left\\{\\begin{matrix}u=\\frac{x}{d_{x}}+u_{0}=x*s_{x+u_{0}}\\\\v=\\frac{y}{d_{y}}+v_{0}=y*s_{y}+v_{0}\\end{matrix}\\right.$$\n\n这里，dx dy分别代表每个像素在横轴x和纵轴y的物理尺寸，单位是mm per pixel。而sx和sy分别是二者的导数。或可以用矩阵的形式：\n\n$$!\\begin{pmatrix}u\\\\v\\\\1\\end{pmatrix}=\\begin{pmatrix}s_{x}&amp;0&amp;c_{x}\\\\0&amp;s_{y}&amp;c_{y}\\\\0&amp;0&amp;1\\end{pmatrix}\\begin{pmatrix}x\\\\y\\\\1\\end{pmatrix}$$\n\n<font color=\"#FF0000\">像空间坐标系</font>-3D-Sxyz表示<font color=\"#FF0000\">像点</font>在<font color=\"#FF0000\">像方空间</font>位置的空间直角坐标系。原点即投影中心，xy轴分别平行于像平面xy轴，z轴即主光轴的方向。在该坐标系中，所有像点的z坐标都是-f。几何含义就是，投影中心在投向焦平面的时候，与设计上认为的像点（像平面几何中心）相比，投偏了多少。像平面坐标+内方位元素就可以定位所有穿过像平面到达物放世界的光束的形状；该坐标系的方位就代表了像片的空间方位，像空间坐标系绕原点的旋转就代表了像片绕投影中心的旋转。下图中S为投影中心，O为投影中心，a为任意一个像点，其坐标为(x,y,-f)\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/B91663ACDA13BB74808431E1CBA1F9DEB72AAA10.jpg)\n\n<font color=\"#FF0000\">物方空间坐标系</font>-3D-O-XdYdZd测绘系统选择一定的原点，进行测绘测量的世界真实坐标，描述点的空间位置。摄影测量的成果最终要转到该坐标系中。\n\n地面辅助坐标系-3D-O-XtYtZt 一般称地辅系，<font color=\"#FF0000\">Z轴铅锤，X Y轴与物空系平行</font>。在摄影测量中，<font color=\"#FF0000\">原点都默认设为摄影中心S</font>。因此该坐标系<font color=\"#FF0000\">与物空系不需要进行旋转，只需要平移</font>，即坐标轴加减运算。这是中间成果和数学运算常用的坐标系。下图是地辅系、像空系、像平面坐标系在一起的示意图。而共线方程就是依据这几个坐标系空间转换得到的。原理为三角形相似。\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/13598A8CB4E7FDBD56C5B595E2AD0624D9A2FD14.jpg)\n\n<font color=\"#FF0000\">像素坐标系→像平面坐标系（内方位元素）</font>\n\n<font color=\"#FF0000\">地面辅助坐标系→像平面坐标系（外方位元素）</font>\n\n共线方程的物理含义就是三点一线，两点一系（理想状况下，摄影瞬间像点、投影中心位于同一直线。）如图所示：\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/1AF795ADEC60BCB2F0396B5F841F4844E636A283.jpg)\n\n图中浅蓝色坐标系是<font color=\"#00FFFF\"><u>地辅系</u></font>（这里 地辅系通过投影中心 连接物空系和像空系），a点是像平面上的投影，A点是地面控制点，红色坐标系是<font color=\"#FF0000\"><u>物方空间坐标系</u></font>，黄色坐标是<font color=\"#FFC800\"><u>像空系</u></font>（像空系垂直与像平面），λ即投影比例尺，二维坐标各自成比例，形成了共线方程的最基本形式。也可以用向量的方式来解释。其中Xs &nbsp;Ys&nbsp; Zs是投影中心在物方空间的坐标，$$X_{A}&nbsp; Y_{A}&nbsp; Z_{A}$$是真实世界某控制点的物方坐标。两者相减，即得到相对位置，即地辅系的坐标。该方程是<font color=\"#FF0000\">**建立在地辅系上**</font>的。\n\n**<a name=\"共线方程的推导\">共线方程的推导</a>**\n\n→**点的坐标变换**（一点两系）：目标是建立同一个点在空间坐标系与地面辅助坐标系中坐标值之间的对应关系。坐标点一般的转换关系为：\n\n$$!\\begin{pmatrix}X\\\\Y\\\\Z\\end{pmatrix}=R\\begin{pmatrix}x\\\\y\\\\z\\end{pmatrix}$$\n\n$$!\\begin{pmatrix}x\\\\y\\\\z\\end{pmatrix}=R^{T}\\begin{pmatrix}X\\\\Y\\\\Z\\end{pmatrix}$$\n\n则R称为旋转矩阵。\n\n点a、A位于两个坐标系，分别用两组坐标来表示。S-xyz示意像空系，S-XYZ示意地辅系。\n\n<table width=\"80%\" border=\"0\"> <tbody> <tr> <td width=\"26%\">点\\坐标系</td> <td width=\"26%\">S-xyz</td> <td width=\"26%\">S-XYZ</td> </tr> <tr> <td width=\"26%\">a</td> <td width=\"26%\">x,y,-f</td> <td width=\"26%\">Xa，Ya，Za</td> </tr> <tr> <td width=\"26%\">A</td> <td width=\"26%\">xA,yA,zA</td> <td width=\"26%\">X,Y,Z</td> </tr> </tbody> </table>\n\n由于旋转矩阵相同，两个点可表示为：\n\n$$!\\begin{pmatrix}X\\\\Y\\\\Z\\end{pmatrix}=R\\begin{pmatrix}x_{A}\\\\y_{A}\\\\z_{A}\\end{pmatrix}$$\n\n$$!\\begin{pmatrix}X_{a}\\\\Y_{a}\\\\Z_{a}\\end{pmatrix}=R\\begin{pmatrix}x\\\\y\\\\-f\\end{pmatrix}$$\n\n则，$$!\\begin{pmatrix}x_{A}\\\\y_{A}\\\\z_{A}\\end{pmatrix}=R^{T}\\begin{pmatrix}X\\\\Y\\\\Z\\end{pmatrix}$$\n\n→点的共线关系（两点一系）：目标是建立像点和物方点的坐标关系。易知，两点一线时，可以用一个点的齐次方程表示另一个点。即：\n\n$$!\\left\\{\\begin{matrix}x_{A}=a_{1}X+b_{1}Y+c_{1}Z\\\\y_{A}=a_{2}X+b_{2}Y+c_{2}Z\\\\y_{A}=a_{3}X+b_{3}Y+c_{3}Z\\end{matrix}\\right.$$\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/7238D8A7EF534575B5EE48B9CCA41FF8E4903B6C.jpg)\n\n上图中可建立的方程有，（该方程建立在像空系中）\n\n$$!\\frac{x_{A}}{x}=\\frac{y_{A}}{y}=\\frac{z_{A}}{-f}=\\lambda \\Rightarrow\\left\\{\\begin{matrix}x=-f\\frac{x_{A}}{z_{A}}\\\\y=-f\\frac{y_{A}}{z_{A}}\\end{matrix}\\right.$$\n\n联立坐标转换方程和像空系方程，化简即可得到传说中的共线条件方程。\n\n用<font color=\"#FF0000\">地面点</font>坐标表示<font color=\"#FF0000\">像点</font>坐标的共线方程（地辅系形式）\n\n$$!x=-f\\frac{a_{1}(X_{T}-X_{S})+b_{1}(Y_{T}-Y_{S})+c_{1}(Z_{T}-Z_{S})}{a_{3}(X_{T}-X_{S})+b_{3}(Y_{T}-Y_{S})+c_{3}(Z_{T}-Z_{S})}$$\n\n$$!y=-f\\frac{a_{2}(X_{T}-X_{S})+b_{2}(Y_{T}-Y_{S})+c_{2}(Z_{T}-Z_{S})}{a_{3}(X_{T}-X_{S})+b_{3}(Y_{T}-Y_{S})+c_{3}(Z_{T}-Z_{S})}$$\n\n或（物空系形式）\n\n$$!x=-f\\frac{a_{1}(X-X_{S})+b_{1}(Y-Y_{S})+c_{1}(Z-Z_{S})}{a_{3}(X-X_{S})+b_{3}(Y-Y_{S})+c_{3}(Z-Z_{S})}$$\n\n$$!y=-f\\frac{a_{2}(X-X_{S})+b_{2}(Y-Y_{S})+c_{2}(Z-Z_{S})}{a_{3}(X-X_{S})+b_{3}(Y-Y_{S})+c_{3}(Z-Z_{S})}$$\n\n同理，利用蓝图中在地辅系的共线方程，可以建立用<font color=\"#FF0000\">像点</font>坐标表达<font color=\"#FF0000\">地面坐标</font>的方程（物空系形式）\n\n$$!X=X_{s}+(Z-Z_{s})\\frac{a_{1}x+a_{2}y-a_{3}f}{c_{1}x+c_{2}y-c_{3}f}$$\n\n$$!Y=Y_{s}+(Z-Z_{s})\\frac{b_{1}x+b_{2}y-b_{3}f}{c_{1}x+c_{2}y-c_{3}f}$$\n\n上式也成为了前方交会解算的基本方程。\n\n* * *\n\n**<a name=\"坐标旋转即共线方程的应用\">坐标旋转即共线方程的应用</a>**\n\n①**求像点坐标**\n\n*   已知Xs Ys Zs ai bi ci f(物方真值 旋转矩阵)\n*   求x y（像平面坐标）\n\n依赖方程：\n\n$$!x=-f\\frac{a_{1}(X-X_{S})+b_{1}(Y-Y_{S})+c_{1}(Z-Z_{S})}{a_{3}(X-X_{S})+b_{3}(Y-Y_{S})+c_{3}(Z-Z_{S})}$$\n\n$$!y=-f\\frac{a_{2}(X-X_{S})+b_{2}(Y-Y_{S})+c_{2}(Z-Z_{S})}{a_{3}(X-X_{S})+b_{3}(Y-Y_{S})+c_{3}(Z-Z_{S})}$$\n\n②**答解外方位元素**(后方交会基本原理)\n\n*   已知$$x_{i}^{'} y_{i}^{'} X_{i} Y_{i} Z_{i} x_{0} y_{0} f$$（像坐标观测值 物方观测值 内方位元素）\n*   求Xs Ys Zs ai bi ci（外方位元素）\n\n依赖方程：\n\n$$!x^{'}-x_{0}=-f\\frac{a_{1}(X-X_{S})+b_{1}(Y-Y_{S})+c_{1}(Z-Z_{S})}{a_{3}(X-X_{S})+b_{3}(Y-Y_{S})+c_{3}(Z-Z_{S})}$$\n\n$$!y^{'}-y_{0}=-f\\frac{a_{2}(X-X_{S})+b_{2}(Y-Y_{S})+c_{2}(Z-Z_{S})}{a_{3}(X-X_{S})+b_{3}(Y-Y_{S})+c_{3}(Z-Z_{S})}$$\n\n③**求地面点坐标**\n\n*   已知x，y，Xs，Ys，Zs，ai，bi，ci，f(外方位元素，像点坐标观测值，焦距)\n*   求X，Y，Z（求未知物方点坐标,这里，大部分都知道DEM，即(X,Y)坐标下的Z高程的信息）\n\n依赖方程(单片定位)：\n\n$$!\\frac{X-X_{S}}{Z-Z_{S}}=\\frac{a_{1}x+a_{2}y-a_{3}f}{c_{1}x+c_{2}y-c_{3}f}$$\n\n$$!\\frac{Y-Y_{S}}{Z-Z_{S}}=\\frac{b_{1}x+b_{2}y-b_{3}f}{c_{1}x+c_{2}y-c_{3}f}$$\n\n依赖方程（立体像对定位）--4个方程解算3个未知数。(前方交会后方交会同时进行)\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/5F3074FF98FA07ED1F357962C68FF593E047311B.jpg)\n\n$$!\\frac{X-X_{S}}{Z-Z_{S}}=\\frac{a_{1}x+a_{2}y-a_{3}f}{c_{1}x+c_{2}y-c_{3}f}$$\n\n$$!\\frac{Y-Y_{S}}{Z-Z_{S}}=\\frac{b_{1}x+b_{2}y-b_{3}f}{c_{1}x+c_{2}y-c_{3}f}$$\n\n$$!\\frac{X-X_{S}^{'}}{Z-Z_{S}^{'}}=\\frac{a_{1}^{'}x^{'}+a_{2}^{'}y^{'}-a_{3}^{'}f}{c_{1}^{'}x^{'}+c_{2}^{'}y^{'}-c_{3}^{'}f}$$\n\n$$!\\frac{Y-Y_{S}^{'}}{Z-Z_{S}^{'}}=\\frac{b_{1}^{'}x^{'}+b_{2}^{'}y^{'}-b_{3}^{'}f}{c_{1}^{'}x^{'}+c_{2}^{'}y^{'}-c_{3}^{'}f}$$\n\n* * *\n\n<a name=\"坐标旋转\">坐标旋转</a>\n\n从物方空间坐标系到像空间坐标系的转换其实就是一个<font color=\"#FF0000\">平移</font>（平移到地辅系）再<font color=\"#FF0000\">旋转</font>的过程，这就是常见的[R|t]。旋转真正的含义就是对3个坐标轴作二维角度上的旋转，3个旋转合成一个旋转矩阵R。坐标轴旋转θ角度，等同于目标点绕坐标原点反方向旋转同样的角度θ。选择的旋转3个坐标系的方式有很多，常用的就是以Y轴为主轴的φ，ω,k的系统。\n\n**航向倾角φ**（pitching）：z轴在<font color=\"#FF0000\">XZ坐标面内的投影</font>（即过z轴所做的XZ面的垂面与XZ面的交线）<font color=\"#FF0000\">与Z轴的夹角</font>，叫做航向倾角。从Z轴算起，由Y轴的负方向逆时针为正。如图为正。\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/98B5D21FDF0802661E47A2C3089CF683E856F014.jpg)\n\n**旁向倾角ω**（roll）：z轴与XZ坐标面之间的夹角，即z轴与它在XZ面上投影之间的夹角，叫做旁向倾角。从z轴的投影算起，由X轴的正方向看逆时针为正。如图为正。\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/5A4A8734E57C7C288466AFAF21FE3D1DA7F17C1B.jpg)\n\n**像片旋角k**（yaw）：Y轴在xy坐标系面上的投影与y轴的夹角，叫做旋角。从投影算起，由z轴正方向看逆时针为正。如图k为正。\n\n*   二维平面的坐标旋转\n\n如图所示，旋转是可逆变化，两套坐标之间可以用矩阵和逆矩阵进行转换。\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/9C02C1C63C5D098E97E8A04FBBDFB60F02221B34.jpg)\n\n$$!\\begin{bmatrix}x^{'}\\\\y^{'}\\end{bmatrix}=A\\begin{bmatrix}x\\\\y\\end{bmatrix},\\begin{bmatrix}x\\\\y\\end{bmatrix}=A^{-1}\\begin{bmatrix}x^{'}\\\\y^{'}\\end{bmatrix}$$\n\n$$!A=\\begin{bmatrix}a_{1}&amp;a_{2}\\\\b_{1}&amp;b_{2}\\end{bmatrix}=\\begin{bmatrix}cos \\widehat{x^{'}x}&amp;cos \\widehat{x^{'}y}\\\\cos\\widehat{y^{'}x}&amp;cos \\widehat{y^{'}y}\\end{bmatrix}=\\begin{bmatrix}cos \\kappa&amp;sin \\kappa\\\\-sin \\kappa&amp;cos\\kappa\\end{bmatrix}$$\n\n式中\n\na1是x'轴与x轴夹角的余弦；a1=cos k\n\nb1是x'轴与y轴夹角的余弦：b1=cos(90&deg;-k)=sin k\n\na2是y'轴与x轴夹角的余弦：a2=cos(90&deg;+k)=-sin k\n\nb2是y'轴与y轴夹角的余弦：b2=cos k\n\n*   三维空间的坐标旋转\n\n从像空间直角坐标系到像空间辅助坐标系之间的转换可以通过<font color=\"#FF0000\">三次二维坐标转换完成</font>。\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/A203A33F40A9904D7EA2D966CB486C277511405E.jpg)\n\n$$!\\begin{bmatrix}X\\\\Y\\\\Z\\end{bmatrix}=R\\begin{bmatrix}x\\\\y\\\\-f\\end{bmatrix}$$\n\n$$!R=\\begin{bmatrix}a_{1}&amp;a_{2}&amp;a_{3}\\\\b_{1}&amp;b_{2}&amp;b_{3}\\\\c_{1}&amp;c_{2}&amp;c_{3}\\end{bmatrix}=\\begin{bmatrix}cos\\widehat{Xx}&amp;cos\\widehat{Xy}&amp;cos\\widehat{Xz}\\\\cos\\widehat{Yx}&amp;cos\\widehat{Yy}&amp;cos\\widehat{Yz}\\\\cos\\widehat{Zx}&amp;cos\\widehat{Zy}&amp;cos\\widehat{Zz}\\end{bmatrix}$$\n\n①S-XYZ<font color=\"#FF0000\">绕Y轴旋转φ</font>到S-XφYφZφ，在XSZ平面内，以S点位圆心旋转XSZ至XφSZφ\n\n$$!\\begin{bmatrix}X\\\\Y\\\\Z\\end{bmatrix}=R_{\\varphi}\\begin{bmatrix}X_{\\varphi }\\\\Y_{\\varphi }\\\\Z_{\\varphi }\\end{bmatrix}=\\begin{bmatrix}cos\\varphi&amp;0&amp;-sin\\varphi\\\\0&amp;1&amp;0\\\\sin\\varphi&amp;0&amp;cos\\varphi\\end{bmatrix}\\begin{bmatrix}X_{\\varphi }\\\\Y_{\\varphi }\\\\Z_{\\varphi }\\end{bmatrix}$$\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/6F2D6EC82C1793253C32825B3180B3F84A68D11B.jpg)\n\n该次变换中，由于是绕Y轴旋转的，因此Y坐标值没有改变，相当于在二维XSZ平面做了旋转，下同。\n\n②S-XφYφZφ绕Xφ旋转ω角到S-XφωYφωZφω，在YφSZφ平面内，以S点为圆心旋转YφSZφ到YφωSZφω。这次变化中，x轴坐标值没有改变。\n\n$$!\\begin{bmatrix}X_{\\varphi}\\\\Y_{\\varphi}\\\\Z_{\\varphi}\\end{bmatrix}=R_{\\omega}\\begin{bmatrix}X_{\\varphi\\omega}\\\\Y_{\\varphi \\omega}\\\\Z_{\\varphi\\omega}\\end{bmatrix}=\\begin{bmatrix}1&amp;0&amp;0\\\\0&amp;cos \\omega&amp;-sin \\omega\\\\0&amp;sin \\omega&amp;cos \\omega \\end{bmatrix}\\begin{bmatrix}X_{\\varphi\\omega}\\\\Y_{\\varphi \\omega}\\\\Z_{\\varphi\\omega}\\end{bmatrix}$$\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/3669611136A21AC23885E7932C6D17D84AEC1C27.jpg)\n\n③S-XφωYφωZφω绕Zφω轴旋转k角度到S-xyz，在XφSYω平面内，以S点为圆心转到XφωSYφω至xSy。\n\n$$!\\begin{bmatrix}X_{\\varphi\\omega}\\\\Y_{\\varphi\\omega}\\\\Z_{\\varphi\\omega}\\end{bmatrix}=R_{\\kappa}\\begin{bmatrix}x\\\\y\\\\-f\\end{bmatrix}=\\begin{bmatrix}cos \\kappa&amp;-sin \\kappa&amp;0\\\\sin \\kappa&amp;cos \\kappa&amp;0\\\\0&amp;0&amp;1\\end{bmatrix}\\begin{bmatrix}x\\\\y\\\\-f\\end{bmatrix}$$\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/3C453D9DA7CF479D4624D8465171F8FAF1F9E701.jpg)\n\n联立之前三个旋转矩阵即可得到三维下的旋转矩阵R\n\n$$!\\begin{bmatrix}X\\\\Y\\\\Z\\end{bmatrix}=R_{\\varphi}R_{\\omega}R_{\\kappa}\\begin{bmatrix}x\\\\y\\\\-f\\end{bmatrix}=\\begin{bmatrix}cos\\varphi&amp;0&amp;-sin\\varphi\\\\0&amp;1&amp;0\\\\sin\\varphi&amp;0&amp;cos\\varphi\\end{bmatrix}\\begin{bmatrix}1&amp;0&amp;0\\\\0&amp;cos \\omega&amp;-sin \\omega\\\\0&amp;sin \\omega&amp;cos \\omega \\end{bmatrix}\\begin{bmatrix}cos \\kappa&amp;-sin \\kappa&amp;0\\\\sin \\kappa&amp;cos \\kappa&amp;0\\\\0&amp;0&amp;1\\end{bmatrix}\\begin{bmatrix}x\\\\y\\\\-f\\end{bmatrix}=\\begin{bmatrix}a_{1}&amp;a_{2}&amp;a_{3}\\\\b_{1}&amp;b_{2}&amp;b_{3}\\\\c_{1}&amp;c_{2}&amp;c_{3} \\end{bmatrix}\\begin{bmatrix}x\\\\y\\\\-f\\end{bmatrix}=R\\begin{bmatrix}x\\\\y\\\\-f\\end{bmatrix}$$\n\n旋转矩阵R因此由外方位元素φ，ω，k确定。其中a1,a2,a3,b1,b2,b3,c1,c2,c3是9个方向的<font color=\"#FF0000\">方向余弦</font>。\n\n$$!a_{1}=cos\\varphi cos\\kappa-sin\\varphi sin\\omega sin\\kappa$$\n\n$$!a_{2}=-cos\\varphi sin\\kappa -sin\\varphi sin\\omega cos\\kappa$$\n\n$$!a_{3}=-sin\\varphi cos\\omega$$\n\n$$!b_{1}=cos\\omega sin\\kappa$$\n\n$$!b_{2}=cos\\omega cos\\kappa$$\n\n$$!b_{3}=-sin\\omega$$\n\n$$!c_{1}=sin\\varphi cos\\kappa+cos\\varphi sin\\omega sin\\kappa $$\n\n$$!c_{2}=-sin\\varphi sin\\kappa +cos\\varphi sin\\omega cos\\kappa $$\n\n$$!c_{3}=cos\\varphi cos\\omega $$\n\n通过解算可知\n\n$$!R\\cdot R^{T}=\\begin{bmatrix}a_{1}&amp;a_{2}&amp;a_{3}\\\\b_{1}&amp;b_{2}&amp;b_{3}\\\\c_{1}&amp;c_{2}&amp;c_{3} \\end{bmatrix}\\cdot \\begin{bmatrix}a_{1}&amp;b_{1}&amp;c_{1}\\\\a_{2}&amp;b_{2}&amp;c_{2}\\\\a_{3}&amp;b_{3}&amp;c_{3}\\end{bmatrix}=\\begin{bmatrix}1&amp;0&amp;0\\\\0&amp;1&amp;0\\\\0&amp;0&amp;1\\end{bmatrix}$$\n\n$$!R^{T}\\cdot R =\\begin{bmatrix}a_{1}&amp;b_{1}&amp;c_{1}\\\\a_{2}&amp;b_{2}&amp;c_{2}\\\\a_{3}&amp;b_{3}&amp;c_{3}\\end{bmatrix}\\cdot \\begin{bmatrix}a_{1}&amp;a_{2}&amp;a_{3}\\\\b_{1}&amp;b_{2}&amp;b_{3}\\\\c_{1}&amp;c_{2}&amp;c_{3} \\end{bmatrix}=\\begin{bmatrix}1&amp;0&amp;0\\\\0&amp;1&amp;0\\\\0&amp;0&amp;1\\end{bmatrix}$$\n\n很明显，意味着R与$$R^{T}$$互为逆矩阵。这也验证了R矩阵是两个坐标系之间相互转换的矩阵。由$$RR^{T}=I$$可得：\n\n（1）同行（列）列的各元素自乘之和为1\n\n（2）任意两行（列）的对应元素相乘之和为0（正交）\n\n（3）旋转矩阵行列式为|R|=1\n\n（4）每行元素等于其代数余子式\n\n（5）每个元素为变换前后坐标轴夹角的余弦值\n 易知\n\n$$!\\varphi =-arctan(\\frac{a_{3}}{c_{3}}),\\omega =-arcsin(b_{3}),\\kappa =-arctan(\\frac{b_{1}}{b_{2}})$$\n\n$$!a_{1}^{2}+a_{2}^{2}+a_{3}^{2}=1,b_{1}^{2}+b_{2}^{2}+b_{3}^{2}=1,c_{1}^{2}+c_{2}^{2}+c_{3}^{2}=1$$\n\n$$!a_{1}b_{1}+a_{2}b_{2}+a_{3}b_{3}=0,a_{1}c_{1}+a_{2}c_{2}+a_{3}c_{3}=0,b_{1}c_{1}+b_{2}c_{2}+b_{3}c_{3}=0$$\n\n$$!a_{1}^{2}+b_{1}^{2}+c_{1}^{2}=1,a_{2}^{2}+b_{2}^{2}+c_{2}^{2}=1,a_{3}^{2}+b_{3}^{2}+c_{3}^{2}=1$$\n\n$$!a_{1}a_{2}+b_{1}b_{2}+c_{1}c_{2}=0,a_{1}a_{3}+b_{1}b_{3}+c_{1}c_{3}=0,a_{2}a_{3}+b_{2}b_{3}+c_{2}c_{3}=0$$\n\n<font size=\"+0\">**<a name=\"像片水平与倾斜像点坐标的关系\">像片水平与倾斜像点坐标的关系</a>**</font>。（这里，以摄影中心<font color=\"#FF0000\">S点为像片旋转中心</font>，因此外方位元素中，<font color=\"#FF0000\">主距依旧是f</font>，<font color=\"#FF0000\">线元素没有改变</font>）\n\n已知：外方位元素Xs Ys Zs φ ω k(即九个方向余弦)\n\n<font color=\"#FF0000\">对于某高程</font>，摄影中心在该高程Z方向的投影N坐标为(Xs,Ys,Zs-$$H_{N}$$)--<font color=\"#FF0000\">物方坐标系</font>\n\n<font color=\"#FF0000\">对于某高程</font>，摄影中心在该高程的垂线与像平面的交点n坐标为$$(-f\\frac{c_{1}}{c_{3}},-f\\frac{c_{2}}{c_{3}})$$--<font color=\"#FF0000\">像方坐标</font>，可将上点带入共线条件方程后方交会求得↓↓↓\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/A1BBA5EFFED4F68C01CF47FBC61FC4FA7087739E.jpg)\n\n又根据共线方程前方交会公式，在水平图像的平面上，物方任意点A(X,Y,Z)-（物方坐标）在像平面的成像点a为$$(x^{0},y^{0})$$-（像平面坐标）或$$(x^{0},y^{0},-f)$$像空间坐标系。↓↓↓\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/3C7C83AD827FB7A7BD4108090804ED13131E82D7.jpg)\n\n值得注意的是，主光轴正好是垂直于大地水平面，所以，地辅系与像空系只需要在XSY平面上旋转即可。\n\n在倾斜形态中，由像点表示物方点坐标点的公式为：\n\n$$!\\frac{X-X_{S}}{Z-Z_{S}}=\\frac{a_{1}x+a_{2}y-a_{3}f}{c_{1}x+c_{2}y-c_{3}f}$$\n\n$$!\\frac{Y-Y_{S}}{Z-Z_{S}}=\\frac{b_{1}x+b_{2}y-b_{3}f}{c_{1}x+c_{2}y-c_{3}f}$$\n\n在垂直形态中，三个角元素严格为0，因次带入之前的矩阵公式得到：\n\na1=1 a2=0 a3=0 b1=0 b2=1 b3=0 c1=0 c2=0 c3=1\n\n$$!\\frac{X-X_{S}}{Z-Z_{S}}=\\frac{x^{0}}{-f}$$\n\n$$!\\frac{Y-Y_{S}}{Z-Z_{S}}=\\frac{y^{0}}{-f}$$\n\n其中$$x^{0},y^{0}$$分别表示水平状态的像点坐标。\n\n上两式的外方位角元素不同，而线元素是相同的。因此联立可得<font color=\"#FF0000\">水平纠正的基本公式</font>：\n\n$$!\\left\\{\\begin{matrix}x^{0}=-f\\frac{a_{1}x+a_{2}y-a_{3}f}{c_{1}x+c_{2}y-c_{3}f}\\\\y^{0}=-f\\frac{b_{1}x+b_{2}y-b_{3}f}{c_{1}x+c_{2}y-c_{3}f}\\end{matrix}\\right.$$\n\n&nbsp;\n\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\">[](http://sns.juziyue.com/webinvite.php?u=94887)&nbsp;今天你[菊子曰](http://sns.juziyue.com/webinvite.php?u=94887)了么？</div>","slug":"后方交会检校(3)--角度、坐标及其应用","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7qr006ruco4wuqzllur","content":"<p>本片涉及前文中叙述到的三个角元素含义及外延，包含与角元素相关的旋转矩阵R并简明介绍几个常用坐标系。</p>\n<p>内容提要：</p>\n<p><a href=\"#几个概念：\">几个概念</a>（视场 像场 视场角）&nbsp;</p>\n<p><a href=\"#几个坐标系\">几个坐标系</a></p>\n<p><a href=\"#共线方程的推导\">共线方程的推导</a></p>\n<p>&nbsp;<a href=\"#坐标旋转即共线方程的应用\">坐标旋转即共线方程的应用</a></p>\n<p><a href=\"#坐标旋转\">坐标旋转</a></p>\n<p><a href=\"#像片水平与倾斜像点坐标的关系\">像片水平与倾斜像点坐标的关系</a></p>\n<font size=\"5\"><strong><a name=\"几个概念：\">几个概念：</a></strong></font>&nbsp;<br><br>视场：光线通过物镜后，焦面上照度不均匀的光亮圆为镜头的视场。<br><br>像场：摄影时，影像相当清晰的一部分视场内的光亮圆。<br><br>视场角（filed of view）：由镜头后节点向市场边缘射出的光线所张开的角，用2β表示。常角&lt;75&deg;，宽角75&deg;~100&deg;，特宽角&gt;100&deg;<br><br><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/E31B0C36B248ADD81D8147EE808E68085B42914E.jpg\" alt=\"\"><br><br>数码相机的瞬时视场角IFOV与空间分辨率的关系：$$R_{g}=2\\sqrt{2}IFOV$$<br><br><font size=\"5\"><strong><a name=\"几个坐标系\">几个坐标系：</a></strong></font>\n\n<font color=\"#FF0000\">像素坐标系</font>-2D-IAJ以像片左上角为坐标原点，下为y正，右为x正。坐标一般用(u,v)表示。<br><br>$$x=J\\Delta -x<em>{0}$$,$$y=-(I\\Delta -y</em>{0})$$<br><br><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/6E6CFB3A2924474655DD2222F8223CABE46AD6FC.jpg\" alt=\"\"><br><br>这里，值得一提的是，坐标单位一般是像素。而一般以中心为基准的坐标系（像平面坐标系，一般用(x,y)表示的单位是毫米。这两个坐标系之间的转换公式形式可以写为:<br><br>$$!\\left{\\begin{matrix}u=\\frac{x}{d<em>{x}}+u</em>{0}=x<em>s<em>{x+u</em>{0}}\\v=\\frac{y}{d<em>{y}}+v</em>{0}=y</em>s<em>{y}+v</em>{0}\\end{matrix}\\right.$$<br><br>这里，dx dy分别代表每个像素在横轴x和纵轴y的物理尺寸，单位是mm per pixel。而sx和sy分别是二者的导数。或可以用矩阵的形式：<br><br>$$!\\begin{pmatrix}u\\v\\1\\end{pmatrix}=\\begin{pmatrix}s<em>{x}&amp;0&amp;c</em>{x}\\0&amp;s<em>{y}&amp;c</em>{y}\\0&amp;0&amp;1\\end{pmatrix}\\begin{pmatrix}x\\y\\1\\end{pmatrix}$$<br><br><font color=\"#FF0000\">像空间坐标系</font>-3D-Sxyz表示<font color=\"#FF0000\">像点</font>在<font color=\"#FF0000\">像方空间</font>位置的空间直角坐标系。原点即投影中心，xy轴分别平行于像平面xy轴，z轴即主光轴的方向。在该坐标系中，所有像点的z坐标都是-f。几何含义就是，投影中心在投向焦平面的时候，与设计上认为的像点（像平面几何中心）相比，投偏了多少。像平面坐标+内方位元素就可以定位所有穿过像平面到达物放世界的光束的形状；该坐标系的方位就代表了像片的空间方位，像空间坐标系绕原点的旋转就代表了像片绕投影中心的旋转。下图中S为投影中心，O为投影中心，a为任意一个像点，其坐标为(x,y,-f)<br><br><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/B91663ACDA13BB74808431E1CBA1F9DEB72AAA10.jpg\" alt=\"\"><br><br><font color=\"#FF0000\">物方空间坐标系</font>-3D-O-XdYdZd测绘系统选择一定的原点，进行测绘测量的世界真实坐标，描述点的空间位置。摄影测量的成果最终要转到该坐标系中。<br><br>地面辅助坐标系-3D-O-XtYtZt 一般称地辅系，<font color=\"#FF0000\">Z轴铅锤，X Y轴与物空系平行</font>。在摄影测量中，<font color=\"#FF0000\">原点都默认设为摄影中心S</font>。因此该坐标系<font color=\"#FF0000\">与物空系不需要进行旋转，只需要平移</font>，即坐标轴加减运算。这是中间成果和数学运算常用的坐标系。下图是地辅系、像空系、像平面坐标系在一起的示意图。而共线方程就是依据这几个坐标系空间转换得到的。原理为三角形相似。<br><br><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/13598A8CB4E7FDBD56C5B595E2AD0624D9A2FD14.jpg\" alt=\"\"><br><br><font color=\"#FF0000\">像素坐标系→像平面坐标系（内方位元素）</font>\n\n<font color=\"#FF0000\">地面辅助坐标系→像平面坐标系（外方位元素）</font>\n\n<p>共线方程的物理含义就是三点一线，两点一系（理想状况下，摄影瞬间像点、投影中心位于同一直线。）如图所示：</p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/1AF795ADEC60BCB2F0396B5F841F4844E636A283.jpg\" alt=\"\"></p>\n<p>图中浅蓝色坐标系是<font color=\"#00FFFF\"><u>地辅系</u></font>（这里 地辅系通过投影中心 连接物空系和像空系），a点是像平面上的投影，A点是地面控制点，红色坐标系是<font color=\"#FF0000\"><u>物方空间坐标系</u></font>，黄色坐标是<font color=\"#FFC800\"><u>像空系</u></font>（像空系垂直与像平面），λ即投影比例尺，二维坐标各自成比例，形成了共线方程的最基本形式。也可以用向量的方式来解释。其中Xs &nbsp;Ys&nbsp; Zs是投影中心在物方空间的坐标，$$X<em>{A}&nbsp; Y</em>{A}&nbsp; Z_{A}$$是真实世界某控制点的物方坐标。两者相减，即得到相对位置，即地辅系的坐标。该方程是<font color=\"#FF0000\"><strong>建立在地辅系上</strong></font>的。</p>\n<p><strong><a name=\"共线方程的推导\">共线方程的推导</a></strong></p>\n<p>→<strong>点的坐标变换</strong>（一点两系）：目标是建立同一个点在空间坐标系与地面辅助坐标系中坐标值之间的对应关系。坐标点一般的转换关系为：</p>\n<p>$$!\\begin{pmatrix}X\\Y\\Z\\end{pmatrix}=R\\begin{pmatrix}x\\y\\z\\end{pmatrix}$$</p>\n<p>$$!\\begin{pmatrix}x\\y\\z\\end{pmatrix}=R^{T}\\begin{pmatrix}X\\Y\\Z\\end{pmatrix}$$</p>\n<p>则R称为旋转矩阵。</p>\n<p>点a、A位于两个坐标系，分别用两组坐标来表示。S-xyz示意像空系，S-XYZ示意地辅系。</p>\n<table width=\"80%\" border=\"0\"> <tbody> <tr> <td width=\"26%\">点\\坐标系</td> <td width=\"26%\">S-xyz</td> <td width=\"26%\">S-XYZ</td> </tr> <tr> <td width=\"26%\">a</td> <td width=\"26%\">x,y,-f</td> <td width=\"26%\">Xa，Ya，Za</td> </tr> <tr> <td width=\"26%\">A</td> <td width=\"26%\">xA,yA,zA</td> <td width=\"26%\">X,Y,Z</td> </tr> </tbody> </table>\n\n<p>由于旋转矩阵相同，两个点可表示为：</p>\n<p>$$!\\begin{pmatrix}X\\Y\\Z\\end{pmatrix}=R\\begin{pmatrix}x<em>{A}\\y</em>{A}\\z_{A}\\end{pmatrix}$$</p>\n<p>$$!\\begin{pmatrix}X<em>{a}\\Y</em>{a}\\Z_{a}\\end{pmatrix}=R\\begin{pmatrix}x\\y\\-f\\end{pmatrix}$$</p>\n<p>则，$$!\\begin{pmatrix}x<em>{A}\\y</em>{A}\\z_{A}\\end{pmatrix}=R^{T}\\begin{pmatrix}X\\Y\\Z\\end{pmatrix}$$</p>\n<p>→点的共线关系（两点一系）：目标是建立像点和物方点的坐标关系。易知，两点一线时，可以用一个点的齐次方程表示另一个点。即：</p>\n<p>$$!\\left{\\begin{matrix}x<em>{A}=a</em>{1}X+b<em>{1}Y+c</em>{1}Z\\y<em>{A}=a</em>{2}X+b<em>{2}Y+c</em>{2}Z\\y<em>{A}=a</em>{3}X+b<em>{3}Y+c</em>{3}Z\\end{matrix}\\right.$$</p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/7238D8A7EF534575B5EE48B9CCA41FF8E4903B6C.jpg\" alt=\"\"></p>\n<p>上图中可建立的方程有，（该方程建立在像空系中）</p>\n<p>$$!\\frac{x<em>{A}}{x}=\\frac{y</em>{A}}{y}=\\frac{z<em>{A}}{-f}=\\lambda \\Rightarrow\\left{\\begin{matrix}x=-f\\frac{x</em>{A}}{z<em>{A}}\\y=-f\\frac{y</em>{A}}{z_{A}}\\end{matrix}\\right.$$</p>\n<p>联立坐标转换方程和像空系方程，化简即可得到传说中的共线条件方程。</p>\n<p>用<font color=\"#FF0000\">地面点</font>坐标表示<font color=\"#FF0000\">像点</font>坐标的共线方程（地辅系形式）</p>\n<p>$$!x=-f\\frac{a<em>{1}(X</em>{T}-X<em>{S})+b</em>{1}(Y<em>{T}-Y</em>{S})+c<em>{1}(Z</em>{T}-Z<em>{S})}{a</em>{3}(X<em>{T}-X</em>{S})+b<em>{3}(Y</em>{T}-Y<em>{S})+c</em>{3}(Z<em>{T}-Z</em>{S})}$$</p>\n<p>$$!y=-f\\frac{a<em>{2}(X</em>{T}-X<em>{S})+b</em>{2}(Y<em>{T}-Y</em>{S})+c<em>{2}(Z</em>{T}-Z<em>{S})}{a</em>{3}(X<em>{T}-X</em>{S})+b<em>{3}(Y</em>{T}-Y<em>{S})+c</em>{3}(Z<em>{T}-Z</em>{S})}$$</p>\n<p>或（物空系形式）</p>\n<p>$$!x=-f\\frac{a<em>{1}(X-X</em>{S})+b<em>{1}(Y-Y</em>{S})+c<em>{1}(Z-Z</em>{S})}{a<em>{3}(X-X</em>{S})+b<em>{3}(Y-Y</em>{S})+c<em>{3}(Z-Z</em>{S})}$$</p>\n<p>$$!y=-f\\frac{a<em>{2}(X-X</em>{S})+b<em>{2}(Y-Y</em>{S})+c<em>{2}(Z-Z</em>{S})}{a<em>{3}(X-X</em>{S})+b<em>{3}(Y-Y</em>{S})+c<em>{3}(Z-Z</em>{S})}$$</p>\n<p>同理，利用蓝图中在地辅系的共线方程，可以建立用<font color=\"#FF0000\">像点</font>坐标表达<font color=\"#FF0000\">地面坐标</font>的方程（物空系形式）</p>\n<p>$$!X=X<em>{s}+(Z-Z</em>{s})\\frac{a<em>{1}x+a</em>{2}y-a<em>{3}f}{c</em>{1}x+c<em>{2}y-c</em>{3}f}$$</p>\n<p>$$!Y=Y<em>{s}+(Z-Z</em>{s})\\frac{b<em>{1}x+b</em>{2}y-b<em>{3}f}{c</em>{1}x+c<em>{2}y-c</em>{3}f}$$</p>\n<p>上式也成为了前方交会解算的基本方程。</p>\n<hr>\n<p><strong><a name=\"坐标旋转即共线方程的应用\">坐标旋转即共线方程的应用</a></strong></p>\n<p>①<strong>求像点坐标</strong></p>\n<ul>\n<li>已知Xs Ys Zs ai bi ci f(物方真值 旋转矩阵)</li>\n<li>求x y（像平面坐标）</li>\n</ul>\n<p>依赖方程：</p>\n<p>$$!x=-f\\frac{a<em>{1}(X-X</em>{S})+b<em>{1}(Y-Y</em>{S})+c<em>{1}(Z-Z</em>{S})}{a<em>{3}(X-X</em>{S})+b<em>{3}(Y-Y</em>{S})+c<em>{3}(Z-Z</em>{S})}$$</p>\n<p>$$!y=-f\\frac{a<em>{2}(X-X</em>{S})+b<em>{2}(Y-Y</em>{S})+c<em>{2}(Z-Z</em>{S})}{a<em>{3}(X-X</em>{S})+b<em>{3}(Y-Y</em>{S})+c<em>{3}(Z-Z</em>{S})}$$</p>\n<p>②<strong>答解外方位元素</strong>(后方交会基本原理)</p>\n<ul>\n<li>已知$$x<em>{i}^{‘} y</em>{i}^{‘} X<em>{i} Y</em>{i} Z<em>{i} x</em>{0} y_{0} f$$（像坐标观测值 物方观测值 内方位元素）</li>\n<li>求Xs Ys Zs ai bi ci（外方位元素）</li>\n</ul>\n<p>依赖方程：</p>\n<p>$$!x^{‘}-x<em>{0}=-f\\frac{a</em>{1}(X-X<em>{S})+b</em>{1}(Y-Y<em>{S})+c</em>{1}(Z-Z<em>{S})}{a</em>{3}(X-X<em>{S})+b</em>{3}(Y-Y<em>{S})+c</em>{3}(Z-Z_{S})}$$</p>\n<p>$$!y^{‘}-y<em>{0}=-f\\frac{a</em>{2}(X-X<em>{S})+b</em>{2}(Y-Y<em>{S})+c</em>{2}(Z-Z<em>{S})}{a</em>{3}(X-X<em>{S})+b</em>{3}(Y-Y<em>{S})+c</em>{3}(Z-Z_{S})}$$</p>\n<p>③<strong>求地面点坐标</strong></p>\n<ul>\n<li>已知x，y，Xs，Ys，Zs，ai，bi，ci，f(外方位元素，像点坐标观测值，焦距)</li>\n<li>求X，Y，Z（求未知物方点坐标,这里，大部分都知道DEM，即(X,Y)坐标下的Z高程的信息）</li>\n</ul>\n<p>依赖方程(单片定位)：</p>\n<p>$$!\\frac{X-X<em>{S}}{Z-Z</em>{S}}=\\frac{a<em>{1}x+a</em>{2}y-a<em>{3}f}{c</em>{1}x+c<em>{2}y-c</em>{3}f}$$</p>\n<p>$$!\\frac{Y-Y<em>{S}}{Z-Z</em>{S}}=\\frac{b<em>{1}x+b</em>{2}y-b<em>{3}f}{c</em>{1}x+c<em>{2}y-c</em>{3}f}$$</p>\n<p>依赖方程（立体像对定位）–4个方程解算3个未知数。(前方交会后方交会同时进行)</p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/5F3074FF98FA07ED1F357962C68FF593E047311B.jpg\" alt=\"\"></p>\n<p>$$!\\frac{X-X<em>{S}}{Z-Z</em>{S}}=\\frac{a<em>{1}x+a</em>{2}y-a<em>{3}f}{c</em>{1}x+c<em>{2}y-c</em>{3}f}$$</p>\n<p>$$!\\frac{Y-Y<em>{S}}{Z-Z</em>{S}}=\\frac{b<em>{1}x+b</em>{2}y-b<em>{3}f}{c</em>{1}x+c<em>{2}y-c</em>{3}f}$$</p>\n<p>$$!\\frac{X-X<em>{S}^{‘}}{Z-Z</em>{S}^{‘}}=\\frac{a<em>{1}^{‘}x^{‘}+a</em>{2}^{‘}y^{‘}-a<em>{3}^{‘}f}{c</em>{1}^{‘}x^{‘}+c<em>{2}^{‘}y^{‘}-c</em>{3}^{‘}f}$$</p>\n<p>$$!\\frac{Y-Y<em>{S}^{‘}}{Z-Z</em>{S}^{‘}}=\\frac{b<em>{1}^{‘}x^{‘}+b</em>{2}^{‘}y^{‘}-b<em>{3}^{‘}f}{c</em>{1}^{‘}x^{‘}+c<em>{2}^{‘}y^{‘}-c</em>{3}^{‘}f}$$</p>\n<hr>\n<p><a name=\"坐标旋转\">坐标旋转</a></p>\n<p>从物方空间坐标系到像空间坐标系的转换其实就是一个<font color=\"#FF0000\">平移</font>（平移到地辅系）再<font color=\"#FF0000\">旋转</font>的过程，这就是常见的[R|t]。旋转真正的含义就是对3个坐标轴作二维角度上的旋转，3个旋转合成一个旋转矩阵R。坐标轴旋转θ角度，等同于目标点绕坐标原点反方向旋转同样的角度θ。选择的旋转3个坐标系的方式有很多，常用的就是以Y轴为主轴的φ，ω,k的系统。</p>\n<p><strong>航向倾角φ</strong>（pitching）：z轴在<font color=\"#FF0000\">XZ坐标面内的投影</font>（即过z轴所做的XZ面的垂面与XZ面的交线）<font color=\"#FF0000\">与Z轴的夹角</font>，叫做航向倾角。从Z轴算起，由Y轴的负方向逆时针为正。如图为正。</p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/98B5D21FDF0802661E47A2C3089CF683E856F014.jpg\" alt=\"\"></p>\n<p><strong>旁向倾角ω</strong>（roll）：z轴与XZ坐标面之间的夹角，即z轴与它在XZ面上投影之间的夹角，叫做旁向倾角。从z轴的投影算起，由X轴的正方向看逆时针为正。如图为正。</p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/5A4A8734E57C7C288466AFAF21FE3D1DA7F17C1B.jpg\" alt=\"\"></p>\n<p><strong>像片旋角k</strong>（yaw）：Y轴在xy坐标系面上的投影与y轴的夹角，叫做旋角。从投影算起，由z轴正方向看逆时针为正。如图k为正。</p>\n<ul>\n<li>二维平面的坐标旋转</li>\n</ul>\n<p>如图所示，旋转是可逆变化，两套坐标之间可以用矩阵和逆矩阵进行转换。</p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/9C02C1C63C5D098E97E8A04FBBDFB60F02221B34.jpg\" alt=\"\"></p>\n<p>$$!\\begin{bmatrix}x^{‘}\\y^{‘}\\end{bmatrix}=A\\begin{bmatrix}x\\y\\end{bmatrix},\\begin{bmatrix}x\\y\\end{bmatrix}=A^{-1}\\begin{bmatrix}x^{‘}\\y^{‘}\\end{bmatrix}$$</p>\n<p>$$!A=\\begin{bmatrix}a<em>{1}&amp;a</em>{2}\\b<em>{1}&amp;b</em>{2}\\end{bmatrix}=\\begin{bmatrix}cos \\widehat{x^{‘}x}&amp;cos \\widehat{x^{‘}y}\\cos\\widehat{y^{‘}x}&amp;cos \\widehat{y^{‘}y}\\end{bmatrix}=\\begin{bmatrix}cos \\kappa&amp;sin \\kappa\\-sin \\kappa&amp;cos\\kappa\\end{bmatrix}$$</p>\n<p>式中</p>\n<p>a1是x’轴与x轴夹角的余弦；a1=cos k</p>\n<p>b1是x’轴与y轴夹角的余弦：b1=cos(90&deg;-k)=sin k</p>\n<p>a2是y’轴与x轴夹角的余弦：a2=cos(90&deg;+k)=-sin k</p>\n<p>b2是y’轴与y轴夹角的余弦：b2=cos k</p>\n<ul>\n<li>三维空间的坐标旋转</li>\n</ul>\n<p>从像空间直角坐标系到像空间辅助坐标系之间的转换可以通过<font color=\"#FF0000\">三次二维坐标转换完成</font>。</p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/A203A33F40A9904D7EA2D966CB486C277511405E.jpg\" alt=\"\"></p>\n<p>$$!\\begin{bmatrix}X\\Y\\Z\\end{bmatrix}=R\\begin{bmatrix}x\\y\\-f\\end{bmatrix}$$</p>\n<p>$$!R=\\begin{bmatrix}a<em>{1}&amp;a</em>{2}&amp;a<em>{3}\\b</em>{1}&amp;b<em>{2}&amp;b</em>{3}\\c<em>{1}&amp;c</em>{2}&amp;c_{3}\\end{bmatrix}=\\begin{bmatrix}cos\\widehat{Xx}&amp;cos\\widehat{Xy}&amp;cos\\widehat{Xz}\\cos\\widehat{Yx}&amp;cos\\widehat{Yy}&amp;cos\\widehat{Yz}\\cos\\widehat{Zx}&amp;cos\\widehat{Zy}&amp;cos\\widehat{Zz}\\end{bmatrix}$$</p>\n<p>①S-XYZ<font color=\"#FF0000\">绕Y轴旋转φ</font>到S-XφYφZφ，在XSZ平面内，以S点位圆心旋转XSZ至XφSZφ</p>\n<p>$$!\\begin{bmatrix}X\\Y\\Z\\end{bmatrix}=R<em>{\\varphi}\\begin{bmatrix}X</em>{\\varphi }\\Y<em>{\\varphi }\\Z</em>{\\varphi }\\end{bmatrix}=\\begin{bmatrix}cos\\varphi&amp;0&amp;-sin\\varphi\\0&amp;1&amp;0\\sin\\varphi&amp;0&amp;cos\\varphi\\end{bmatrix}\\begin{bmatrix}X<em>{\\varphi }\\Y</em>{\\varphi }\\Z_{\\varphi }\\end{bmatrix}$$</p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/6F2D6EC82C1793253C32825B3180B3F84A68D11B.jpg\" alt=\"\"></p>\n<p>该次变换中，由于是绕Y轴旋转的，因此Y坐标值没有改变，相当于在二维XSZ平面做了旋转，下同。</p>\n<p>②S-XφYφZφ绕Xφ旋转ω角到S-XφωYφωZφω，在YφSZφ平面内，以S点为圆心旋转YφSZφ到YφωSZφω。这次变化中，x轴坐标值没有改变。</p>\n<p>$$!\\begin{bmatrix}X<em>{\\varphi}\\Y</em>{\\varphi}\\Z<em>{\\varphi}\\end{bmatrix}=R</em>{\\omega}\\begin{bmatrix}X<em>{\\varphi\\omega}\\Y</em>{\\varphi \\omega}\\Z<em>{\\varphi\\omega}\\end{bmatrix}=\\begin{bmatrix}1&amp;0&amp;0\\0&amp;cos \\omega&amp;-sin \\omega\\0&amp;sin \\omega&amp;cos \\omega \\end{bmatrix}\\begin{bmatrix}X</em>{\\varphi\\omega}\\Y<em>{\\varphi \\omega}\\Z</em>{\\varphi\\omega}\\end{bmatrix}$$</p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/3669611136A21AC23885E7932C6D17D84AEC1C27.jpg\" alt=\"\"></p>\n<p>③S-XφωYφωZφω绕Zφω轴旋转k角度到S-xyz，在XφSYω平面内，以S点为圆心转到XφωSYφω至xSy。</p>\n<p>$$!\\begin{bmatrix}X<em>{\\varphi\\omega}\\Y</em>{\\varphi\\omega}\\Z<em>{\\varphi\\omega}\\end{bmatrix}=R</em>{\\kappa}\\begin{bmatrix}x\\y\\-f\\end{bmatrix}=\\begin{bmatrix}cos \\kappa&amp;-sin \\kappa&amp;0\\sin \\kappa&amp;cos \\kappa&amp;0\\0&amp;0&amp;1\\end{bmatrix}\\begin{bmatrix}x\\y\\-f\\end{bmatrix}$$</p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/3C453D9DA7CF479D4624D8465171F8FAF1F9E701.jpg\" alt=\"\"></p>\n<p>联立之前三个旋转矩阵即可得到三维下的旋转矩阵R</p>\n<p>$$!\\begin{bmatrix}X\\Y\\Z\\end{bmatrix}=R<em>{\\varphi}R</em>{\\omega}R<em>{\\kappa}\\begin{bmatrix}x\\y\\-f\\end{bmatrix}=\\begin{bmatrix}cos\\varphi&amp;0&amp;-sin\\varphi\\0&amp;1&amp;0\\sin\\varphi&amp;0&amp;cos\\varphi\\end{bmatrix}\\begin{bmatrix}1&amp;0&amp;0\\0&amp;cos \\omega&amp;-sin \\omega\\0&amp;sin \\omega&amp;cos \\omega \\end{bmatrix}\\begin{bmatrix}cos \\kappa&amp;-sin \\kappa&amp;0\\sin \\kappa&amp;cos \\kappa&amp;0\\0&amp;0&amp;1\\end{bmatrix}\\begin{bmatrix}x\\y\\-f\\end{bmatrix}=\\begin{bmatrix}a</em>{1}&amp;a<em>{2}&amp;a</em>{3}\\b<em>{1}&amp;b</em>{2}&amp;b<em>{3}\\c</em>{1}&amp;c<em>{2}&amp;c</em>{3} \\end{bmatrix}\\begin{bmatrix}x\\y\\-f\\end{bmatrix}=R\\begin{bmatrix}x\\y\\-f\\end{bmatrix}$$</p>\n<p>旋转矩阵R因此由外方位元素φ，ω，k确定。其中a1,a2,a3,b1,b2,b3,c1,c2,c3是9个方向的<font color=\"#FF0000\">方向余弦</font>。</p>\n<p>$$!a_{1}=cos\\varphi cos\\kappa-sin\\varphi sin\\omega sin\\kappa$$</p>\n<p>$$!a_{2}=-cos\\varphi sin\\kappa -sin\\varphi sin\\omega cos\\kappa$$</p>\n<p>$$!a_{3}=-sin\\varphi cos\\omega$$</p>\n<p>$$!b_{1}=cos\\omega sin\\kappa$$</p>\n<p>$$!b_{2}=cos\\omega cos\\kappa$$</p>\n<p>$$!b_{3}=-sin\\omega$$</p>\n<p>$$!c_{1}=sin\\varphi cos\\kappa+cos\\varphi sin\\omega sin\\kappa $$</p>\n<p>$$!c_{2}=-sin\\varphi sin\\kappa +cos\\varphi sin\\omega cos\\kappa $$</p>\n<p>$$!c_{3}=cos\\varphi cos\\omega $$</p>\n<p>通过解算可知</p>\n<p>$$!R\\cdot R^{T}=\\begin{bmatrix}a<em>{1}&amp;a</em>{2}&amp;a<em>{3}\\b</em>{1}&amp;b<em>{2}&amp;b</em>{3}\\c<em>{1}&amp;c</em>{2}&amp;c<em>{3} \\end{bmatrix}\\cdot \\begin{bmatrix}a</em>{1}&amp;b<em>{1}&amp;c</em>{1}\\a<em>{2}&amp;b</em>{2}&amp;c<em>{2}\\a</em>{3}&amp;b<em>{3}&amp;c</em>{3}\\end{bmatrix}=\\begin{bmatrix}1&amp;0&amp;0\\0&amp;1&amp;0\\0&amp;0&amp;1\\end{bmatrix}$$</p>\n<p>$$!R^{T}\\cdot R =\\begin{bmatrix}a<em>{1}&amp;b</em>{1}&amp;c<em>{1}\\a</em>{2}&amp;b<em>{2}&amp;c</em>{2}\\a<em>{3}&amp;b</em>{3}&amp;c<em>{3}\\end{bmatrix}\\cdot \\begin{bmatrix}a</em>{1}&amp;a<em>{2}&amp;a</em>{3}\\b<em>{1}&amp;b</em>{2}&amp;b<em>{3}\\c</em>{1}&amp;c<em>{2}&amp;c</em>{3} \\end{bmatrix}=\\begin{bmatrix}1&amp;0&amp;0\\0&amp;1&amp;0\\0&amp;0&amp;1\\end{bmatrix}$$</p>\n<p>很明显，意味着R与$$R^{T}$$互为逆矩阵。这也验证了R矩阵是两个坐标系之间相互转换的矩阵。由$$RR^{T}=I$$可得：</p>\n<p>（1）同行（列）列的各元素自乘之和为1</p>\n<p>（2）任意两行（列）的对应元素相乘之和为0（正交）</p>\n<p>（3）旋转矩阵行列式为|R|=1</p>\n<p>（4）每行元素等于其代数余子式</p>\n<p>（5）每个元素为变换前后坐标轴夹角的余弦值<br> 易知</p>\n<p>$$!\\varphi =-arctan(\\frac{a<em>{3}}{c</em>{3}}),\\omega =-arcsin(b<em>{3}),\\kappa =-arctan(\\frac{b</em>{1}}{b_{2}})$$</p>\n<p>$$!a<em>{1}^{2}+a</em>{2}^{2}+a<em>{3}^{2}=1,b</em>{1}^{2}+b<em>{2}^{2}+b</em>{3}^{2}=1,c<em>{1}^{2}+c</em>{2}^{2}+c_{3}^{2}=1$$</p>\n<p>$$!a<em>{1}b</em>{1}+a<em>{2}b</em>{2}+a<em>{3}b</em>{3}=0,a<em>{1}c</em>{1}+a<em>{2}c</em>{2}+a<em>{3}c</em>{3}=0,b<em>{1}c</em>{1}+b<em>{2}c</em>{2}+b<em>{3}c</em>{3}=0$$</p>\n<p>$$!a<em>{1}^{2}+b</em>{1}^{2}+c<em>{1}^{2}=1,a</em>{2}^{2}+b<em>{2}^{2}+c</em>{2}^{2}=1,a<em>{3}^{2}+b</em>{3}^{2}+c_{3}^{2}=1$$</p>\n<p>$$!a<em>{1}a</em>{2}+b<em>{1}b</em>{2}+c<em>{1}c</em>{2}=0,a<em>{1}a</em>{3}+b<em>{1}b</em>{3}+c<em>{1}c</em>{3}=0,a<em>{2}a</em>{3}+b<em>{2}b</em>{3}+c<em>{2}c</em>{3}=0$$</p>\n<font size=\"+0\"><strong><a name=\"像片水平与倾斜像点坐标的关系\">像片水平与倾斜像点坐标的关系</a></strong></font>。（这里，以摄影中心<font color=\"#FF0000\">S点为像片旋转中心</font>，因此外方位元素中，<font color=\"#FF0000\">主距依旧是f</font>，<font color=\"#FF0000\">线元素没有改变</font>）<br><br>已知：外方位元素Xs Ys Zs φ ω k(即九个方向余弦)<br><br><font color=\"#FF0000\">对于某高程</font>，摄影中心在该高程Z方向的投影N坐标为(Xs,Ys,Zs-$$H_{N}$$)–<font color=\"#FF0000\">物方坐标系</font>\n\n<p><font color=\"#FF0000\">对于某高程</font>，摄影中心在该高程的垂线与像平面的交点n坐标为$$(-f\\frac{c<em>{1}}{c</em>{3}},-f\\frac{c<em>{2}}{c</em>{3}})$$–<font color=\"#FF0000\">像方坐标</font>，可将上点带入共线条件方程后方交会求得↓↓↓</p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/A1BBA5EFFED4F68C01CF47FBC61FC4FA7087739E.jpg\" alt=\"\"></p>\n<p>又根据共线方程前方交会公式，在水平图像的平面上，物方任意点A(X,Y,Z)-（物方坐标）在像平面的成像点a为$$(x^{0},y^{0})$$-（像平面坐标）或$$(x^{0},y^{0},-f)$$像空间坐标系。↓↓↓</p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/3C7C83AD827FB7A7BD4108090804ED13131E82D7.jpg\" alt=\"\"></p>\n<p>值得注意的是，主光轴正好是垂直于大地水平面，所以，地辅系与像空系只需要在XSY平面上旋转即可。</p>\n<p>在倾斜形态中，由像点表示物方点坐标点的公式为：</p>\n<p>$$!\\frac{X-X<em>{S}}{Z-Z</em>{S}}=\\frac{a<em>{1}x+a</em>{2}y-a<em>{3}f}{c</em>{1}x+c<em>{2}y-c</em>{3}f}$$</p>\n<p>$$!\\frac{Y-Y<em>{S}}{Z-Z</em>{S}}=\\frac{b<em>{1}x+b</em>{2}y-b<em>{3}f}{c</em>{1}x+c<em>{2}y-c</em>{3}f}$$</p>\n<p>在垂直形态中，三个角元素严格为0，因次带入之前的矩阵公式得到：</p>\n<p>a1=1 a2=0 a3=0 b1=0 b2=1 b3=0 c1=0 c2=0 c3=1</p>\n<p>$$!\\frac{X-X<em>{S}}{Z-Z</em>{S}}=\\frac{x^{0}}{-f}$$</p>\n<p>$$!\\frac{Y-Y<em>{S}}{Z-Z</em>{S}}=\\frac{y^{0}}{-f}$$</p>\n<p>其中$$x^{0},y^{0}$$分别表示水平状态的像点坐标。</p>\n<p>上两式的外方位角元素不同，而线元素是相同的。因此联立可得<font color=\"#FF0000\">水平纠正的基本公式</font>：</p>\n<p>$$!\\left{\\begin{matrix}x^{0}=-f\\frac{a<em>{1}x+a</em>{2}y-a<em>{3}f}{c</em>{1}x+c<em>{2}y-c</em>{3}f}\\y^{0}=-f\\frac{b<em>{1}x+b</em>{2}y-b<em>{3}f}{c</em>{1}x+c<em>{2}y-c</em>{3}f}\\end{matrix}\\right.$$</p>\n<p>&nbsp;</p>\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\"><a href=\"http://sns.juziyue.com/webinvite.php?u=94887\" target=\"_blank\" rel=\"external\"></a>&nbsp;今天你<a href=\"http://sns.juziyue.com/webinvite.php?u=94887\" target=\"_blank\" rel=\"external\">菊子曰</a>了么？</div>","excerpt":"","more":"<p>本片涉及前文中叙述到的三个角元素含义及外延，包含与角元素相关的旋转矩阵R并简明介绍几个常用坐标系。</p>\n<p>内容提要：</p>\n<p><a href=\"#几个概念：\">几个概念</a>（视场 像场 视场角）&nbsp;</p>\n<p><a href=\"#几个坐标系\">几个坐标系</a></p>\n<p><a href=\"#共线方程的推导\">共线方程的推导</a></p>\n<p>&nbsp;<a href=\"#坐标旋转即共线方程的应用\">坐标旋转即共线方程的应用</a></p>\n<p><a href=\"#坐标旋转\">坐标旋转</a></p>\n<p><a href=\"#像片水平与倾斜像点坐标的关系\">像片水平与倾斜像点坐标的关系</a></p>\n<font size=\"5\"><strong><a name=\"几个概念：\">几个概念：</a></strong></font>&nbsp;<br><br>视场：光线通过物镜后，焦面上照度不均匀的光亮圆为镜头的视场。<br><br>像场：摄影时，影像相当清晰的一部分视场内的光亮圆。<br><br>视场角（filed of view）：由镜头后节点向市场边缘射出的光线所张开的角，用2β表示。常角&lt;75&deg;，宽角75&deg;~100&deg;，特宽角&gt;100&deg;<br><br><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/E31B0C36B248ADD81D8147EE808E68085B42914E.jpg\" alt=\"\"><br><br>数码相机的瞬时视场角IFOV与空间分辨率的关系：$$R_{g}=2\\sqrt{2}IFOV$$<br><br><font size=\"5\"><strong><a name=\"几个坐标系\">几个坐标系：</a></strong></font>\n\n<font color=\"#FF0000\">像素坐标系</font>-2D-IAJ以像片左上角为坐标原点，下为y正，右为x正。坐标一般用(u,v)表示。<br><br>$$x=J\\Delta -x<em>{0}$$,$$y=-(I\\Delta -y</em>{0})$$<br><br><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/6E6CFB3A2924474655DD2222F8223CABE46AD6FC.jpg\" alt=\"\"><br><br>这里，值得一提的是，坐标单位一般是像素。而一般以中心为基准的坐标系（像平面坐标系，一般用(x,y)表示的单位是毫米。这两个坐标系之间的转换公式形式可以写为:<br><br>$$!\\left{\\begin{matrix}u=\\frac{x}{d<em>{x}}+u</em>{0}=x<em>s<em>{x+u</em>{0}}\\v=\\frac{y}{d<em>{y}}+v</em>{0}=y</em>s<em>{y}+v</em>{0}\\end{matrix}\\right.$$<br><br>这里，dx dy分别代表每个像素在横轴x和纵轴y的物理尺寸，单位是mm per pixel。而sx和sy分别是二者的导数。或可以用矩阵的形式：<br><br>$$!\\begin{pmatrix}u\\v\\1\\end{pmatrix}=\\begin{pmatrix}s<em>{x}&amp;0&amp;c</em>{x}\\0&amp;s<em>{y}&amp;c</em>{y}\\0&amp;0&amp;1\\end{pmatrix}\\begin{pmatrix}x\\y\\1\\end{pmatrix}$$<br><br><font color=\"#FF0000\">像空间坐标系</font>-3D-Sxyz表示<font color=\"#FF0000\">像点</font>在<font color=\"#FF0000\">像方空间</font>位置的空间直角坐标系。原点即投影中心，xy轴分别平行于像平面xy轴，z轴即主光轴的方向。在该坐标系中，所有像点的z坐标都是-f。几何含义就是，投影中心在投向焦平面的时候，与设计上认为的像点（像平面几何中心）相比，投偏了多少。像平面坐标+内方位元素就可以定位所有穿过像平面到达物放世界的光束的形状；该坐标系的方位就代表了像片的空间方位，像空间坐标系绕原点的旋转就代表了像片绕投影中心的旋转。下图中S为投影中心，O为投影中心，a为任意一个像点，其坐标为(x,y,-f)<br><br><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/B91663ACDA13BB74808431E1CBA1F9DEB72AAA10.jpg\" alt=\"\"><br><br><font color=\"#FF0000\">物方空间坐标系</font>-3D-O-XdYdZd测绘系统选择一定的原点，进行测绘测量的世界真实坐标，描述点的空间位置。摄影测量的成果最终要转到该坐标系中。<br><br>地面辅助坐标系-3D-O-XtYtZt 一般称地辅系，<font color=\"#FF0000\">Z轴铅锤，X Y轴与物空系平行</font>。在摄影测量中，<font color=\"#FF0000\">原点都默认设为摄影中心S</font>。因此该坐标系<font color=\"#FF0000\">与物空系不需要进行旋转，只需要平移</font>，即坐标轴加减运算。这是中间成果和数学运算常用的坐标系。下图是地辅系、像空系、像平面坐标系在一起的示意图。而共线方程就是依据这几个坐标系空间转换得到的。原理为三角形相似。<br><br><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/13598A8CB4E7FDBD56C5B595E2AD0624D9A2FD14.jpg\" alt=\"\"><br><br><font color=\"#FF0000\">像素坐标系→像平面坐标系（内方位元素）</font>\n\n<font color=\"#FF0000\">地面辅助坐标系→像平面坐标系（外方位元素）</font>\n\n<p>共线方程的物理含义就是三点一线，两点一系（理想状况下，摄影瞬间像点、投影中心位于同一直线。）如图所示：</p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/1AF795ADEC60BCB2F0396B5F841F4844E636A283.jpg\" alt=\"\"></p>\n<p>图中浅蓝色坐标系是<font color=\"#00FFFF\"><u>地辅系</u></font>（这里 地辅系通过投影中心 连接物空系和像空系），a点是像平面上的投影，A点是地面控制点，红色坐标系是<font color=\"#FF0000\"><u>物方空间坐标系</u></font>，黄色坐标是<font color=\"#FFC800\"><u>像空系</u></font>（像空系垂直与像平面），λ即投影比例尺，二维坐标各自成比例，形成了共线方程的最基本形式。也可以用向量的方式来解释。其中Xs &nbsp;Ys&nbsp; Zs是投影中心在物方空间的坐标，$$X<em>{A}&nbsp; Y</em>{A}&nbsp; Z_{A}$$是真实世界某控制点的物方坐标。两者相减，即得到相对位置，即地辅系的坐标。该方程是<font color=\"#FF0000\"><strong>建立在地辅系上</strong></font>的。</p>\n<p><strong><a name=\"共线方程的推导\">共线方程的推导</a></strong></p>\n<p>→<strong>点的坐标变换</strong>（一点两系）：目标是建立同一个点在空间坐标系与地面辅助坐标系中坐标值之间的对应关系。坐标点一般的转换关系为：</p>\n<p>$$!\\begin{pmatrix}X\\Y\\Z\\end{pmatrix}=R\\begin{pmatrix}x\\y\\z\\end{pmatrix}$$</p>\n<p>$$!\\begin{pmatrix}x\\y\\z\\end{pmatrix}=R^{T}\\begin{pmatrix}X\\Y\\Z\\end{pmatrix}$$</p>\n<p>则R称为旋转矩阵。</p>\n<p>点a、A位于两个坐标系，分别用两组坐标来表示。S-xyz示意像空系，S-XYZ示意地辅系。</p>\n<table width=\"80%\" border=\"0\"> <tbody> <tr> <td width=\"26%\">点\\坐标系</td> <td width=\"26%\">S-xyz</td> <td width=\"26%\">S-XYZ</td> </tr> <tr> <td width=\"26%\">a</td> <td width=\"26%\">x,y,-f</td> <td width=\"26%\">Xa，Ya，Za</td> </tr> <tr> <td width=\"26%\">A</td> <td width=\"26%\">xA,yA,zA</td> <td width=\"26%\">X,Y,Z</td> </tr> </tbody> </table>\n\n<p>由于旋转矩阵相同，两个点可表示为：</p>\n<p>$$!\\begin{pmatrix}X\\Y\\Z\\end{pmatrix}=R\\begin{pmatrix}x<em>{A}\\y</em>{A}\\z_{A}\\end{pmatrix}$$</p>\n<p>$$!\\begin{pmatrix}X<em>{a}\\Y</em>{a}\\Z_{a}\\end{pmatrix}=R\\begin{pmatrix}x\\y\\-f\\end{pmatrix}$$</p>\n<p>则，$$!\\begin{pmatrix}x<em>{A}\\y</em>{A}\\z_{A}\\end{pmatrix}=R^{T}\\begin{pmatrix}X\\Y\\Z\\end{pmatrix}$$</p>\n<p>→点的共线关系（两点一系）：目标是建立像点和物方点的坐标关系。易知，两点一线时，可以用一个点的齐次方程表示另一个点。即：</p>\n<p>$$!\\left{\\begin{matrix}x<em>{A}=a</em>{1}X+b<em>{1}Y+c</em>{1}Z\\y<em>{A}=a</em>{2}X+b<em>{2}Y+c</em>{2}Z\\y<em>{A}=a</em>{3}X+b<em>{3}Y+c</em>{3}Z\\end{matrix}\\right.$$</p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/7238D8A7EF534575B5EE48B9CCA41FF8E4903B6C.jpg\" alt=\"\"></p>\n<p>上图中可建立的方程有，（该方程建立在像空系中）</p>\n<p>$$!\\frac{x<em>{A}}{x}=\\frac{y</em>{A}}{y}=\\frac{z<em>{A}}{-f}=\\lambda \\Rightarrow\\left{\\begin{matrix}x=-f\\frac{x</em>{A}}{z<em>{A}}\\y=-f\\frac{y</em>{A}}{z_{A}}\\end{matrix}\\right.$$</p>\n<p>联立坐标转换方程和像空系方程，化简即可得到传说中的共线条件方程。</p>\n<p>用<font color=\"#FF0000\">地面点</font>坐标表示<font color=\"#FF0000\">像点</font>坐标的共线方程（地辅系形式）</p>\n<p>$$!x=-f\\frac{a<em>{1}(X</em>{T}-X<em>{S})+b</em>{1}(Y<em>{T}-Y</em>{S})+c<em>{1}(Z</em>{T}-Z<em>{S})}{a</em>{3}(X<em>{T}-X</em>{S})+b<em>{3}(Y</em>{T}-Y<em>{S})+c</em>{3}(Z<em>{T}-Z</em>{S})}$$</p>\n<p>$$!y=-f\\frac{a<em>{2}(X</em>{T}-X<em>{S})+b</em>{2}(Y<em>{T}-Y</em>{S})+c<em>{2}(Z</em>{T}-Z<em>{S})}{a</em>{3}(X<em>{T}-X</em>{S})+b<em>{3}(Y</em>{T}-Y<em>{S})+c</em>{3}(Z<em>{T}-Z</em>{S})}$$</p>\n<p>或（物空系形式）</p>\n<p>$$!x=-f\\frac{a<em>{1}(X-X</em>{S})+b<em>{1}(Y-Y</em>{S})+c<em>{1}(Z-Z</em>{S})}{a<em>{3}(X-X</em>{S})+b<em>{3}(Y-Y</em>{S})+c<em>{3}(Z-Z</em>{S})}$$</p>\n<p>$$!y=-f\\frac{a<em>{2}(X-X</em>{S})+b<em>{2}(Y-Y</em>{S})+c<em>{2}(Z-Z</em>{S})}{a<em>{3}(X-X</em>{S})+b<em>{3}(Y-Y</em>{S})+c<em>{3}(Z-Z</em>{S})}$$</p>\n<p>同理，利用蓝图中在地辅系的共线方程，可以建立用<font color=\"#FF0000\">像点</font>坐标表达<font color=\"#FF0000\">地面坐标</font>的方程（物空系形式）</p>\n<p>$$!X=X<em>{s}+(Z-Z</em>{s})\\frac{a<em>{1}x+a</em>{2}y-a<em>{3}f}{c</em>{1}x+c<em>{2}y-c</em>{3}f}$$</p>\n<p>$$!Y=Y<em>{s}+(Z-Z</em>{s})\\frac{b<em>{1}x+b</em>{2}y-b<em>{3}f}{c</em>{1}x+c<em>{2}y-c</em>{3}f}$$</p>\n<p>上式也成为了前方交会解算的基本方程。</p>\n<hr>\n<p><strong><a name=\"坐标旋转即共线方程的应用\">坐标旋转即共线方程的应用</a></strong></p>\n<p>①<strong>求像点坐标</strong></p>\n<ul>\n<li>已知Xs Ys Zs ai bi ci f(物方真值 旋转矩阵)</li>\n<li>求x y（像平面坐标）</li>\n</ul>\n<p>依赖方程：</p>\n<p>$$!x=-f\\frac{a<em>{1}(X-X</em>{S})+b<em>{1}(Y-Y</em>{S})+c<em>{1}(Z-Z</em>{S})}{a<em>{3}(X-X</em>{S})+b<em>{3}(Y-Y</em>{S})+c<em>{3}(Z-Z</em>{S})}$$</p>\n<p>$$!y=-f\\frac{a<em>{2}(X-X</em>{S})+b<em>{2}(Y-Y</em>{S})+c<em>{2}(Z-Z</em>{S})}{a<em>{3}(X-X</em>{S})+b<em>{3}(Y-Y</em>{S})+c<em>{3}(Z-Z</em>{S})}$$</p>\n<p>②<strong>答解外方位元素</strong>(后方交会基本原理)</p>\n<ul>\n<li>已知$$x<em>{i}^{‘} y</em>{i}^{‘} X<em>{i} Y</em>{i} Z<em>{i} x</em>{0} y_{0} f$$（像坐标观测值 物方观测值 内方位元素）</li>\n<li>求Xs Ys Zs ai bi ci（外方位元素）</li>\n</ul>\n<p>依赖方程：</p>\n<p>$$!x^{‘}-x<em>{0}=-f\\frac{a</em>{1}(X-X<em>{S})+b</em>{1}(Y-Y<em>{S})+c</em>{1}(Z-Z<em>{S})}{a</em>{3}(X-X<em>{S})+b</em>{3}(Y-Y<em>{S})+c</em>{3}(Z-Z_{S})}$$</p>\n<p>$$!y^{‘}-y<em>{0}=-f\\frac{a</em>{2}(X-X<em>{S})+b</em>{2}(Y-Y<em>{S})+c</em>{2}(Z-Z<em>{S})}{a</em>{3}(X-X<em>{S})+b</em>{3}(Y-Y<em>{S})+c</em>{3}(Z-Z_{S})}$$</p>\n<p>③<strong>求地面点坐标</strong></p>\n<ul>\n<li>已知x，y，Xs，Ys，Zs，ai，bi，ci，f(外方位元素，像点坐标观测值，焦距)</li>\n<li>求X，Y，Z（求未知物方点坐标,这里，大部分都知道DEM，即(X,Y)坐标下的Z高程的信息）</li>\n</ul>\n<p>依赖方程(单片定位)：</p>\n<p>$$!\\frac{X-X<em>{S}}{Z-Z</em>{S}}=\\frac{a<em>{1}x+a</em>{2}y-a<em>{3}f}{c</em>{1}x+c<em>{2}y-c</em>{3}f}$$</p>\n<p>$$!\\frac{Y-Y<em>{S}}{Z-Z</em>{S}}=\\frac{b<em>{1}x+b</em>{2}y-b<em>{3}f}{c</em>{1}x+c<em>{2}y-c</em>{3}f}$$</p>\n<p>依赖方程（立体像对定位）–4个方程解算3个未知数。(前方交会后方交会同时进行)</p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/5F3074FF98FA07ED1F357962C68FF593E047311B.jpg\" alt=\"\"></p>\n<p>$$!\\frac{X-X<em>{S}}{Z-Z</em>{S}}=\\frac{a<em>{1}x+a</em>{2}y-a<em>{3}f}{c</em>{1}x+c<em>{2}y-c</em>{3}f}$$</p>\n<p>$$!\\frac{Y-Y<em>{S}}{Z-Z</em>{S}}=\\frac{b<em>{1}x+b</em>{2}y-b<em>{3}f}{c</em>{1}x+c<em>{2}y-c</em>{3}f}$$</p>\n<p>$$!\\frac{X-X<em>{S}^{‘}}{Z-Z</em>{S}^{‘}}=\\frac{a<em>{1}^{‘}x^{‘}+a</em>{2}^{‘}y^{‘}-a<em>{3}^{‘}f}{c</em>{1}^{‘}x^{‘}+c<em>{2}^{‘}y^{‘}-c</em>{3}^{‘}f}$$</p>\n<p>$$!\\frac{Y-Y<em>{S}^{‘}}{Z-Z</em>{S}^{‘}}=\\frac{b<em>{1}^{‘}x^{‘}+b</em>{2}^{‘}y^{‘}-b<em>{3}^{‘}f}{c</em>{1}^{‘}x^{‘}+c<em>{2}^{‘}y^{‘}-c</em>{3}^{‘}f}$$</p>\n<hr>\n<p><a name=\"坐标旋转\">坐标旋转</a></p>\n<p>从物方空间坐标系到像空间坐标系的转换其实就是一个<font color=\"#FF0000\">平移</font>（平移到地辅系）再<font color=\"#FF0000\">旋转</font>的过程，这就是常见的[R|t]。旋转真正的含义就是对3个坐标轴作二维角度上的旋转，3个旋转合成一个旋转矩阵R。坐标轴旋转θ角度，等同于目标点绕坐标原点反方向旋转同样的角度θ。选择的旋转3个坐标系的方式有很多，常用的就是以Y轴为主轴的φ，ω,k的系统。</p>\n<p><strong>航向倾角φ</strong>（pitching）：z轴在<font color=\"#FF0000\">XZ坐标面内的投影</font>（即过z轴所做的XZ面的垂面与XZ面的交线）<font color=\"#FF0000\">与Z轴的夹角</font>，叫做航向倾角。从Z轴算起，由Y轴的负方向逆时针为正。如图为正。</p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/98B5D21FDF0802661E47A2C3089CF683E856F014.jpg\" alt=\"\"></p>\n<p><strong>旁向倾角ω</strong>（roll）：z轴与XZ坐标面之间的夹角，即z轴与它在XZ面上投影之间的夹角，叫做旁向倾角。从z轴的投影算起，由X轴的正方向看逆时针为正。如图为正。</p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/5A4A8734E57C7C288466AFAF21FE3D1DA7F17C1B.jpg\" alt=\"\"></p>\n<p><strong>像片旋角k</strong>（yaw）：Y轴在xy坐标系面上的投影与y轴的夹角，叫做旋角。从投影算起，由z轴正方向看逆时针为正。如图k为正。</p>\n<ul>\n<li>二维平面的坐标旋转</li>\n</ul>\n<p>如图所示，旋转是可逆变化，两套坐标之间可以用矩阵和逆矩阵进行转换。</p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/9C02C1C63C5D098E97E8A04FBBDFB60F02221B34.jpg\" alt=\"\"></p>\n<p>$$!\\begin{bmatrix}x^{‘}\\y^{‘}\\end{bmatrix}=A\\begin{bmatrix}x\\y\\end{bmatrix},\\begin{bmatrix}x\\y\\end{bmatrix}=A^{-1}\\begin{bmatrix}x^{‘}\\y^{‘}\\end{bmatrix}$$</p>\n<p>$$!A=\\begin{bmatrix}a<em>{1}&amp;a</em>{2}\\b<em>{1}&amp;b</em>{2}\\end{bmatrix}=\\begin{bmatrix}cos \\widehat{x^{‘}x}&amp;cos \\widehat{x^{‘}y}\\cos\\widehat{y^{‘}x}&amp;cos \\widehat{y^{‘}y}\\end{bmatrix}=\\begin{bmatrix}cos \\kappa&amp;sin \\kappa\\-sin \\kappa&amp;cos\\kappa\\end{bmatrix}$$</p>\n<p>式中</p>\n<p>a1是x’轴与x轴夹角的余弦；a1=cos k</p>\n<p>b1是x’轴与y轴夹角的余弦：b1=cos(90&deg;-k)=sin k</p>\n<p>a2是y’轴与x轴夹角的余弦：a2=cos(90&deg;+k)=-sin k</p>\n<p>b2是y’轴与y轴夹角的余弦：b2=cos k</p>\n<ul>\n<li>三维空间的坐标旋转</li>\n</ul>\n<p>从像空间直角坐标系到像空间辅助坐标系之间的转换可以通过<font color=\"#FF0000\">三次二维坐标转换完成</font>。</p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/A203A33F40A9904D7EA2D966CB486C277511405E.jpg\" alt=\"\"></p>\n<p>$$!\\begin{bmatrix}X\\Y\\Z\\end{bmatrix}=R\\begin{bmatrix}x\\y\\-f\\end{bmatrix}$$</p>\n<p>$$!R=\\begin{bmatrix}a<em>{1}&amp;a</em>{2}&amp;a<em>{3}\\b</em>{1}&amp;b<em>{2}&amp;b</em>{3}\\c<em>{1}&amp;c</em>{2}&amp;c_{3}\\end{bmatrix}=\\begin{bmatrix}cos\\widehat{Xx}&amp;cos\\widehat{Xy}&amp;cos\\widehat{Xz}\\cos\\widehat{Yx}&amp;cos\\widehat{Yy}&amp;cos\\widehat{Yz}\\cos\\widehat{Zx}&amp;cos\\widehat{Zy}&amp;cos\\widehat{Zz}\\end{bmatrix}$$</p>\n<p>①S-XYZ<font color=\"#FF0000\">绕Y轴旋转φ</font>到S-XφYφZφ，在XSZ平面内，以S点位圆心旋转XSZ至XφSZφ</p>\n<p>$$!\\begin{bmatrix}X\\Y\\Z\\end{bmatrix}=R<em>{\\varphi}\\begin{bmatrix}X</em>{\\varphi }\\Y<em>{\\varphi }\\Z</em>{\\varphi }\\end{bmatrix}=\\begin{bmatrix}cos\\varphi&amp;0&amp;-sin\\varphi\\0&amp;1&amp;0\\sin\\varphi&amp;0&amp;cos\\varphi\\end{bmatrix}\\begin{bmatrix}X<em>{\\varphi }\\Y</em>{\\varphi }\\Z_{\\varphi }\\end{bmatrix}$$</p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/6F2D6EC82C1793253C32825B3180B3F84A68D11B.jpg\" alt=\"\"></p>\n<p>该次变换中，由于是绕Y轴旋转的，因此Y坐标值没有改变，相当于在二维XSZ平面做了旋转，下同。</p>\n<p>②S-XφYφZφ绕Xφ旋转ω角到S-XφωYφωZφω，在YφSZφ平面内，以S点为圆心旋转YφSZφ到YφωSZφω。这次变化中，x轴坐标值没有改变。</p>\n<p>$$!\\begin{bmatrix}X<em>{\\varphi}\\Y</em>{\\varphi}\\Z<em>{\\varphi}\\end{bmatrix}=R</em>{\\omega}\\begin{bmatrix}X<em>{\\varphi\\omega}\\Y</em>{\\varphi \\omega}\\Z<em>{\\varphi\\omega}\\end{bmatrix}=\\begin{bmatrix}1&amp;0&amp;0\\0&amp;cos \\omega&amp;-sin \\omega\\0&amp;sin \\omega&amp;cos \\omega \\end{bmatrix}\\begin{bmatrix}X</em>{\\varphi\\omega}\\Y<em>{\\varphi \\omega}\\Z</em>{\\varphi\\omega}\\end{bmatrix}$$</p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/3669611136A21AC23885E7932C6D17D84AEC1C27.jpg\" alt=\"\"></p>\n<p>③S-XφωYφωZφω绕Zφω轴旋转k角度到S-xyz，在XφSYω平面内，以S点为圆心转到XφωSYφω至xSy。</p>\n<p>$$!\\begin{bmatrix}X<em>{\\varphi\\omega}\\Y</em>{\\varphi\\omega}\\Z<em>{\\varphi\\omega}\\end{bmatrix}=R</em>{\\kappa}\\begin{bmatrix}x\\y\\-f\\end{bmatrix}=\\begin{bmatrix}cos \\kappa&amp;-sin \\kappa&amp;0\\sin \\kappa&amp;cos \\kappa&amp;0\\0&amp;0&amp;1\\end{bmatrix}\\begin{bmatrix}x\\y\\-f\\end{bmatrix}$$</p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/3C453D9DA7CF479D4624D8465171F8FAF1F9E701.jpg\" alt=\"\"></p>\n<p>联立之前三个旋转矩阵即可得到三维下的旋转矩阵R</p>\n<p>$$!\\begin{bmatrix}X\\Y\\Z\\end{bmatrix}=R<em>{\\varphi}R</em>{\\omega}R<em>{\\kappa}\\begin{bmatrix}x\\y\\-f\\end{bmatrix}=\\begin{bmatrix}cos\\varphi&amp;0&amp;-sin\\varphi\\0&amp;1&amp;0\\sin\\varphi&amp;0&amp;cos\\varphi\\end{bmatrix}\\begin{bmatrix}1&amp;0&amp;0\\0&amp;cos \\omega&amp;-sin \\omega\\0&amp;sin \\omega&amp;cos \\omega \\end{bmatrix}\\begin{bmatrix}cos \\kappa&amp;-sin \\kappa&amp;0\\sin \\kappa&amp;cos \\kappa&amp;0\\0&amp;0&amp;1\\end{bmatrix}\\begin{bmatrix}x\\y\\-f\\end{bmatrix}=\\begin{bmatrix}a</em>{1}&amp;a<em>{2}&amp;a</em>{3}\\b<em>{1}&amp;b</em>{2}&amp;b<em>{3}\\c</em>{1}&amp;c<em>{2}&amp;c</em>{3} \\end{bmatrix}\\begin{bmatrix}x\\y\\-f\\end{bmatrix}=R\\begin{bmatrix}x\\y\\-f\\end{bmatrix}$$</p>\n<p>旋转矩阵R因此由外方位元素φ，ω，k确定。其中a1,a2,a3,b1,b2,b3,c1,c2,c3是9个方向的<font color=\"#FF0000\">方向余弦</font>。</p>\n<p>$$!a_{1}=cos\\varphi cos\\kappa-sin\\varphi sin\\omega sin\\kappa$$</p>\n<p>$$!a_{2}=-cos\\varphi sin\\kappa -sin\\varphi sin\\omega cos\\kappa$$</p>\n<p>$$!a_{3}=-sin\\varphi cos\\omega$$</p>\n<p>$$!b_{1}=cos\\omega sin\\kappa$$</p>\n<p>$$!b_{2}=cos\\omega cos\\kappa$$</p>\n<p>$$!b_{3}=-sin\\omega$$</p>\n<p>$$!c_{1}=sin\\varphi cos\\kappa+cos\\varphi sin\\omega sin\\kappa $$</p>\n<p>$$!c_{2}=-sin\\varphi sin\\kappa +cos\\varphi sin\\omega cos\\kappa $$</p>\n<p>$$!c_{3}=cos\\varphi cos\\omega $$</p>\n<p>通过解算可知</p>\n<p>$$!R\\cdot R^{T}=\\begin{bmatrix}a<em>{1}&amp;a</em>{2}&amp;a<em>{3}\\b</em>{1}&amp;b<em>{2}&amp;b</em>{3}\\c<em>{1}&amp;c</em>{2}&amp;c<em>{3} \\end{bmatrix}\\cdot \\begin{bmatrix}a</em>{1}&amp;b<em>{1}&amp;c</em>{1}\\a<em>{2}&amp;b</em>{2}&amp;c<em>{2}\\a</em>{3}&amp;b<em>{3}&amp;c</em>{3}\\end{bmatrix}=\\begin{bmatrix}1&amp;0&amp;0\\0&amp;1&amp;0\\0&amp;0&amp;1\\end{bmatrix}$$</p>\n<p>$$!R^{T}\\cdot R =\\begin{bmatrix}a<em>{1}&amp;b</em>{1}&amp;c<em>{1}\\a</em>{2}&amp;b<em>{2}&amp;c</em>{2}\\a<em>{3}&amp;b</em>{3}&amp;c<em>{3}\\end{bmatrix}\\cdot \\begin{bmatrix}a</em>{1}&amp;a<em>{2}&amp;a</em>{3}\\b<em>{1}&amp;b</em>{2}&amp;b<em>{3}\\c</em>{1}&amp;c<em>{2}&amp;c</em>{3} \\end{bmatrix}=\\begin{bmatrix}1&amp;0&amp;0\\0&amp;1&amp;0\\0&amp;0&amp;1\\end{bmatrix}$$</p>\n<p>很明显，意味着R与$$R^{T}$$互为逆矩阵。这也验证了R矩阵是两个坐标系之间相互转换的矩阵。由$$RR^{T}=I$$可得：</p>\n<p>（1）同行（列）列的各元素自乘之和为1</p>\n<p>（2）任意两行（列）的对应元素相乘之和为0（正交）</p>\n<p>（3）旋转矩阵行列式为|R|=1</p>\n<p>（4）每行元素等于其代数余子式</p>\n<p>（5）每个元素为变换前后坐标轴夹角的余弦值<br> 易知</p>\n<p>$$!\\varphi =-arctan(\\frac{a<em>{3}}{c</em>{3}}),\\omega =-arcsin(b<em>{3}),\\kappa =-arctan(\\frac{b</em>{1}}{b_{2}})$$</p>\n<p>$$!a<em>{1}^{2}+a</em>{2}^{2}+a<em>{3}^{2}=1,b</em>{1}^{2}+b<em>{2}^{2}+b</em>{3}^{2}=1,c<em>{1}^{2}+c</em>{2}^{2}+c_{3}^{2}=1$$</p>\n<p>$$!a<em>{1}b</em>{1}+a<em>{2}b</em>{2}+a<em>{3}b</em>{3}=0,a<em>{1}c</em>{1}+a<em>{2}c</em>{2}+a<em>{3}c</em>{3}=0,b<em>{1}c</em>{1}+b<em>{2}c</em>{2}+b<em>{3}c</em>{3}=0$$</p>\n<p>$$!a<em>{1}^{2}+b</em>{1}^{2}+c<em>{1}^{2}=1,a</em>{2}^{2}+b<em>{2}^{2}+c</em>{2}^{2}=1,a<em>{3}^{2}+b</em>{3}^{2}+c_{3}^{2}=1$$</p>\n<p>$$!a<em>{1}a</em>{2}+b<em>{1}b</em>{2}+c<em>{1}c</em>{2}=0,a<em>{1}a</em>{3}+b<em>{1}b</em>{3}+c<em>{1}c</em>{3}=0,a<em>{2}a</em>{3}+b<em>{2}b</em>{3}+c<em>{2}c</em>{3}=0$$</p>\n<font size=\"+0\"><strong><a name=\"像片水平与倾斜像点坐标的关系\">像片水平与倾斜像点坐标的关系</a></strong></font>。（这里，以摄影中心<font color=\"#FF0000\">S点为像片旋转中心</font>，因此外方位元素中，<font color=\"#FF0000\">主距依旧是f</font>，<font color=\"#FF0000\">线元素没有改变</font>）<br><br>已知：外方位元素Xs Ys Zs φ ω k(即九个方向余弦)<br><br><font color=\"#FF0000\">对于某高程</font>，摄影中心在该高程Z方向的投影N坐标为(Xs,Ys,Zs-$$H_{N}$$)–<font color=\"#FF0000\">物方坐标系</font>\n\n<p><font color=\"#FF0000\">对于某高程</font>，摄影中心在该高程的垂线与像平面的交点n坐标为$$(-f\\frac{c<em>{1}}{c</em>{3}},-f\\frac{c<em>{2}}{c</em>{3}})$$–<font color=\"#FF0000\">像方坐标</font>，可将上点带入共线条件方程后方交会求得↓↓↓</p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/A1BBA5EFFED4F68C01CF47FBC61FC4FA7087739E.jpg\" alt=\"\"></p>\n<p>又根据共线方程前方交会公式，在水平图像的平面上，物方任意点A(X,Y,Z)-（物方坐标）在像平面的成像点a为$$(x^{0},y^{0})$$-（像平面坐标）或$$(x^{0},y^{0},-f)$$像空间坐标系。↓↓↓</p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/3C7C83AD827FB7A7BD4108090804ED13131E82D7.jpg\" alt=\"\"></p>\n<p>值得注意的是，主光轴正好是垂直于大地水平面，所以，地辅系与像空系只需要在XSY平面上旋转即可。</p>\n<p>在倾斜形态中，由像点表示物方点坐标点的公式为：</p>\n<p>$$!\\frac{X-X<em>{S}}{Z-Z</em>{S}}=\\frac{a<em>{1}x+a</em>{2}y-a<em>{3}f}{c</em>{1}x+c<em>{2}y-c</em>{3}f}$$</p>\n<p>$$!\\frac{Y-Y<em>{S}}{Z-Z</em>{S}}=\\frac{b<em>{1}x+b</em>{2}y-b<em>{3}f}{c</em>{1}x+c<em>{2}y-c</em>{3}f}$$</p>\n<p>在垂直形态中，三个角元素严格为0，因次带入之前的矩阵公式得到：</p>\n<p>a1=1 a2=0 a3=0 b1=0 b2=1 b3=0 c1=0 c2=0 c3=1</p>\n<p>$$!\\frac{X-X<em>{S}}{Z-Z</em>{S}}=\\frac{x^{0}}{-f}$$</p>\n<p>$$!\\frac{Y-Y<em>{S}}{Z-Z</em>{S}}=\\frac{y^{0}}{-f}$$</p>\n<p>其中$$x^{0},y^{0}$$分别表示水平状态的像点坐标。</p>\n<p>上两式的外方位角元素不同，而线元素是相同的。因此联立可得<font color=\"#FF0000\">水平纠正的基本公式</font>：</p>\n<p>$$!\\left{\\begin{matrix}x^{0}=-f\\frac{a<em>{1}x+a</em>{2}y-a<em>{3}f}{c</em>{1}x+c<em>{2}y-c</em>{3}f}\\y^{0}=-f\\frac{b<em>{1}x+b</em>{2}y-b<em>{3}f}{c</em>{1}x+c<em>{2}y-c</em>{3}f}\\end{matrix}\\right.$$</p>\n<p>&nbsp;</p>\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\"><a href=\"http://sns.juziyue.com/webinvite.php?u=94887\"></a>&nbsp;今天你<a href=\"http://sns.juziyue.com/webinvite.php?u=94887\">菊子曰</a>了么？</div>"},{"title":"后方交会检校(4)--畸变差矫正","id":"790","date":"2015-10-28T13:19:08.000Z","_content":"\n为毛要做畸变差矫正?\n\n单片检校主要目的是精确测量相机的内方位元素和检校相机镜头畸变。而多片后方交会则可以更精确的解算这些参数，还可以同时在平差中解求各个物方测量点的精确估值，也可以利用这些大容量的信息进行基于空间位置的组合镜头多片拼接和航带拼接。本篇主要介绍多片后方交会的应用。\n\n 航摄中常用的三种用于加密控制点的方法有<span style=\"COLOR: #ff0000\">航带法、独立模型法、光束法</span>。其中航带法精度较低，不能用于高精度的测量。独立模型法较前者精度略高，光束法则是精度最高同时计算量最大的模型，适用于高精度航摄。\n 但粗差同样对于精度的影响极大，自检较光束则是最广泛应用的做法。其基本思想是选用一个由若干个参数组成的系统误差模型，将这些附加参数作为未知数与区域网的其他参数一起解求，从而达到在平差过程中自动消除系统误差的目的。其缺点是①<span style=\"COLOR: #ff0000\">附加参数人为选择</span>，选择不当会导致迭代结果不收敛恶化计算结果。②附加参数与区域网参数一起解求，会使<span style=\"COLOR: #ff0000\">计算量明显上升</span>。\n\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\">[](http://sns.juziyue.com/webinvite.php?u=94887)&nbsp;今天你[菊子曰](http://sns.juziyue.com/webinvite.php?u=94887)了么？</div>","source":"_posts/后方交会检校(4)--畸变差矫正.md","raw":"---\ntitle: 后方交会检校(4)--畸变差矫正\ncategories:\n  - 什么都学一下\n  - 学习log\ntags:\n  - 后方交会\n  - 检校\nid: 790\ndate: 2015-10-28 21:19:08\n---\n\n为毛要做畸变差矫正?\n\n单片检校主要目的是精确测量相机的内方位元素和检校相机镜头畸变。而多片后方交会则可以更精确的解算这些参数，还可以同时在平差中解求各个物方测量点的精确估值，也可以利用这些大容量的信息进行基于空间位置的组合镜头多片拼接和航带拼接。本篇主要介绍多片后方交会的应用。\n\n 航摄中常用的三种用于加密控制点的方法有<span style=\"COLOR: #ff0000\">航带法、独立模型法、光束法</span>。其中航带法精度较低，不能用于高精度的测量。独立模型法较前者精度略高，光束法则是精度最高同时计算量最大的模型，适用于高精度航摄。\n 但粗差同样对于精度的影响极大，自检较光束则是最广泛应用的做法。其基本思想是选用一个由若干个参数组成的系统误差模型，将这些附加参数作为未知数与区域网的其他参数一起解求，从而达到在平差过程中自动消除系统误差的目的。其缺点是①<span style=\"COLOR: #ff0000\">附加参数人为选择</span>，选择不当会导致迭代结果不收敛恶化计算结果。②附加参数与区域网参数一起解求，会使<span style=\"COLOR: #ff0000\">计算量明显上升</span>。\n\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\">[](http://sns.juziyue.com/webinvite.php?u=94887)&nbsp;今天你[菊子曰](http://sns.juziyue.com/webinvite.php?u=94887)了么？</div>","slug":"后方交会检校(4)--畸变差矫正","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7qt006vuco480j17kqy","content":"<p>为毛要做畸变差矫正?</p>\n<p>单片检校主要目的是精确测量相机的内方位元素和检校相机镜头畸变。而多片后方交会则可以更精确的解算这些参数，还可以同时在平差中解求各个物方测量点的精确估值，也可以利用这些大容量的信息进行基于空间位置的组合镜头多片拼接和航带拼接。本篇主要介绍多片后方交会的应用。</p>\n<p> 航摄中常用的三种用于加密控制点的方法有<span style=\"COLOR: #ff0000\">航带法、独立模型法、光束法</span>。其中航带法精度较低，不能用于高精度的测量。独立模型法较前者精度略高，光束法则是精度最高同时计算量最大的模型，适用于高精度航摄。<br> 但粗差同样对于精度的影响极大，自检较光束则是最广泛应用的做法。其基本思想是选用一个由若干个参数组成的系统误差模型，将这些附加参数作为未知数与区域网的其他参数一起解求，从而达到在平差过程中自动消除系统误差的目的。其缺点是①<span style=\"COLOR: #ff0000\">附加参数人为选择</span>，选择不当会导致迭代结果不收敛恶化计算结果。②附加参数与区域网参数一起解求，会使<span style=\"COLOR: #ff0000\">计算量明显上升</span>。</p>\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\"><a href=\"http://sns.juziyue.com/webinvite.php?u=94887\" target=\"_blank\" rel=\"external\"></a>&nbsp;今天你<a href=\"http://sns.juziyue.com/webinvite.php?u=94887\" target=\"_blank\" rel=\"external\">菊子曰</a>了么？</div>","excerpt":"","more":"<p>为毛要做畸变差矫正?</p>\n<p>单片检校主要目的是精确测量相机的内方位元素和检校相机镜头畸变。而多片后方交会则可以更精确的解算这些参数，还可以同时在平差中解求各个物方测量点的精确估值，也可以利用这些大容量的信息进行基于空间位置的组合镜头多片拼接和航带拼接。本篇主要介绍多片后方交会的应用。</p>\n<p> 航摄中常用的三种用于加密控制点的方法有<span style=\"COLOR: #ff0000\">航带法、独立模型法、光束法</span>。其中航带法精度较低，不能用于高精度的测量。独立模型法较前者精度略高，光束法则是精度最高同时计算量最大的模型，适用于高精度航摄。<br> 但粗差同样对于精度的影响极大，自检较光束则是最广泛应用的做法。其基本思想是选用一个由若干个参数组成的系统误差模型，将这些附加参数作为未知数与区域网的其他参数一起解求，从而达到在平差过程中自动消除系统误差的目的。其缺点是①<span style=\"COLOR: #ff0000\">附加参数人为选择</span>，选择不当会导致迭代结果不收敛恶化计算结果。②附加参数与区域网参数一起解求，会使<span style=\"COLOR: #ff0000\">计算量明显上升</span>。</p>\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\"><a href=\"http://sns.juziyue.com/webinvite.php?u=94887\"></a>&nbsp;今天你<a href=\"http://sns.juziyue.com/webinvite.php?u=94887\">菊子曰</a>了么？</div>"},{"title":"后方交会检校(6)--后方交会的补充及DLT和角锥体法","id":"813","date":"2015-11-04T07:29:32.000Z","_content":"\n除了后方交会之外，常用的进行内外参数检校的方法还有DLT和角锥体法。\n\n写在前面：DLT可在<font color=\"#FF0000\">未提供初值</font>的情况下推导内外方位元素，同时<font color=\"#FF0000\">不需要迭代</font>，但精度相比后方交会较低；<font color=\"#FF0000\">DLT与后方交会等价</font>。\n\n**<font color=\"#FF0000\" size=\"5\">内容提要</font>**\n\n[DLT基本原理与公式](#DLT基本原理与公式)&nbsp; [L的基本形式](#其中)&nbsp;&nbsp;[用Li表示内外参数](#根据求得的li计算各参数)&nbsp;\n\n[非正交与比例尺不一致因素](#非正交与比例尺不一致因素)&nbsp; [DLT的真正一般形式](#DLT的真正一般形式)&nbsp; [包含2项因素的Li表达内外参数](#包含2项因素的Li表达内外参数)&nbsp;\n\n[包含畸变参数校正的DLT](#包含畸变参数校正的DLT)\n\n<a name=\"DLT基本原理与公式\">DLT基本原理与公式</a>\n\n基本原理：将物方点坐标（X,Y,Z）和(x,y)看做是空间中的某种线性变换，可以互为函数。一般地，将x,y用X,Y,Z表示。\n\n基本公式：\n\n$$!\\left\\{\\begin{matrix}x+\\frac{L_{1}X+L_{2}Y+L_{3}Z+L_{4}}{L_{9}X+L_{10}Y+L_{11}Z+1}=0\\\\y+\\frac{L_{5}X+L_{6}Y+L_{7}Z+L_{8}}{L_{9}X+L_{10}Y+L_{11}Z+1}=0\\end{matrix}\\right.$$\n\nDLT误差方程：\n\n<font color=\"#FF0000\">$$!\\begin{pmatrix}v_{x}\\\\v_{y}\\end{pmatrix}=\\begin{pmatrix}X&amp;Y&amp;Z&amp;1&amp;0&amp;0&amp;0&amp;0&amp;xX&amp;xY&amp;xZ\\\\0&amp;0&amp;0&amp;0&amp;X&amp;Y&amp;Z&amp;1&amp;yX&amp;yY&amp;yZ\\end{pmatrix}\\begin{pmatrix}L_{1}\\\\L_{2}\\\\L_{3}\\\\L_{4}\\\\L_{5}\\\\L_{6}\\\\L_{7}\\\\L_{8}\\\\L_{9}\\\\L_{10}\\\\L_{11}\\end{pmatrix}+\\begin{pmatrix}l_{x}\\\\l_{y}\\end{pmatrix}$$</font>\n\n与后方交会一样，若有n个控制点，则A矩阵有2n行。还是利用求改正数的公式求取。\n\nDLT推导过程如下：\n\n根据共线方程的后方交会形式：\n\n$$!x-x_{0}+f_{x}\\frac{a_{1}(X-X_{s})+b_{1}(Y-Y_{s})+c_{1}(Z-Z_{s})}{a_{3}(X-X_{s})+b_{3}(Y-Y_{s})+c_{3}(Z-Z_{s})}=0$$\n\n$$!y-y_{0}+f_{y}\\frac{a_{2}(X-X_{s})+b_{2}(Y-Y_{s})+c_{2}(Z-Z_{s})}{a_{3}(X-X_{s})+b_{3}(Y-Y_{s})+c_{3}(Z-Z_{s})}=0$$\n\n这里，f分为fx和fy，即主距在像空系中这两个分量的投影。因为有的单个ccd xy方向上的大小不一致，即不是正方形。\n\n将X，Y，Z和Xs，Ys，Zs分离，将之看作是摄影中心的变换坐标。\n\n<font color=\"#FF0000\">$$!\\left\\{\\begin{matrix}r_{1}=-(a_{1}X_{s}+b_{1}Y_{s}+c_{1}Z_{s})\\\\r_{2}=-(a_{2}X_{s}+b_{2}Y_{s}+c_{2}Z_{s})\\\\r_{3}=-(a_{3}X_{s}+b_{3}Y_{s}+c_{3}Z_{s})\\end{matrix}\\right.$$</font>\n\n化简可得\n\n$$!x-x_{0}+f_{x}\\frac{a_{1}X+b_{1}Y+c_{1}Z+r_{1}}{a_{3}X+b_{3}Y+c_{3}Z+r_{3}}=0$$\n\n$$!y-y_{0}+f_{y}\\frac{a_{2}X+b_{2}Y+c_{2}Z+r_{1}}{a_{3}X+b_{3}Y+c_{3}Z+r_{3}}=0$$\n\n将x0，y0通分。\n\n$$!x+\\frac{(a_{1}f_{x}-a_{3}x_{0})X+(b_{1}f_{x}-b_{3}x_{0})Y+(c_{1}f_{x}-c_{3}x_{0})Z+(r_{1}f_{x}-r_{3}x_{0})}{a_{3}X+b_{3}Y+c_{3}Z+r_{3}}=0$$\n\n$$!y+\\frac{(a_{2}f_{y}-a_{3}y_{0})X+(b_{2}f_{y}-b_{3}y_{0})Y+(c_{2}f_{y}-c_{3}y_{0})Z+(r_{2}f_{y}-r_{3}y_{0})}{a_{3}X+b_{3}Y+c_{3}Z+r_{3}}=0$$\n\n将X、Y、Z的系数简化为L，即\n\n$$!x+\\frac{L_{1}X+L_{2}Y+L_{3}Z+L_{4}}{L_{9}X+L_{10}Y+L_{11}Z+1}=0$$\n\n$$!y+\\frac{L_{5}X+L_{6}Y+L_{7}Z+L_{8}}{L_{9}X+L_{10}Y+L_{11}Z+1}=0$$\n\n<a name=\"其中\">其中，L为：</a>\n\n<font color=\"#FF0000\">$$!L=\\begin{bmatrix}L_{1}&amp;L_{2}&amp;L_{3}&amp;L_{4}\\\\L_{5}&amp;L_{6}&amp;L_{7}&amp;L_{8}\\\\L_{9}&amp;L_{10}&amp;L_{11}&amp;L_{12}\\end{bmatrix}$$</font>\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/151C86750F1FFF17ECE621971610488CBAE13A81.jpg)\n\n该公式表示像点测量坐标与物方点坐标直接的变化，无需内方位元素。从另一个角度看，L矩阵其实是二维坐标通过三次矩阵变换得到的三维坐标，即：\n\n$$!L=\\frac{1}{r_{3}}\\begin{bmatrix}f_{x}&amp;0&amp;-x_{0}\\\\0&amp;f_{y}&amp;-y_{0}\\\\0&amp;0&amp;1\\end{bmatrix}\\begin{bmatrix}a_{1}&amp;b_{1}&amp;c_{1}\\\\a_{2}&amp;b_{2}&amp;c_{2}\\\\a_{3}&amp;b_{3}&amp;c_{3}\\end{bmatrix}\\begin{bmatrix}1&amp;0&amp;0&amp;X_{s}\\\\0&amp;1&amp;0&amp;Y_{s}\\\\0&amp;0&amp;1&amp;Z_{s}\\end{bmatrix}=\\frac{1}{r_{3}}\\begin{bmatrix}f_{x}&amp;0&amp;-x_{0}\\\\0&amp;f_{y}&amp;-y_{0}\\\\0&amp;0&amp;1\\end{bmatrix}\\begin{bmatrix}R&amp;t\\\\0^{T}&amp;1\\end{bmatrix}$$\n\n第一个矩阵由内方位元素组成，是辅助坐标和像平面坐标的平移和比例关系；第二个矩阵是外方位元素的角元素，表达物方系和地辅系的坐标旋转关系；第三个矩阵是外方位线元素，表达物方坐标和地辅系坐标的原点平移关系。\n\n由于计算机视觉中使用齐次坐标，即如下形式\n\n$$!\\begin{pmatrix}x\\\\y\\\\1\\end{pmatrix}=L\\begin{pmatrix}X\\\\Y\\\\Z\\\\1\\end{pmatrix}=\\begin{bmatrix}L_{1}&amp;L_{2}&amp;L_{3}&amp;L_{4}\\\\L_{5}&amp;L_{6}&amp;L_{7}&amp;L_{8}\\\\L_{9}&amp;L_{10}&amp;L_{11}&amp;L_{12}\\end{bmatrix}\\begin{pmatrix}X\\\\Y\\\\Z\\\\1\\end{pmatrix}$$因此形成了上红色式子。\n\n<a name=\"根据求得的li计算各参数\">根据求得的li计算各参数</a>\n\n重要参数的求解：\n\n$$!r_{3}=\\frac{1}{(L_{9}^{2}+L_{10}^{2}+L_{11}^{2})^{1/2}}$$\n\n(1)内方位元素\n\n$$!x_{0}=-(L_{1}L_{9}+L_{2}L_{10}+L_{3}L_{11})/(L_{9}^{2}+_{10}^{2}+L_{11}^{2})$$\n\n$$!y_{0}=-(L_{5}L_{9}+L_{6}L_{10}+L_{7}L_{11})/(L_{9}^{2}+_{10}^{2}+L_{11}^{2})$$\n\n$$!f_{x}^{2}=-x_{0}^{2}+(L_{1}^{2}+L_{2}^{2}+L_{3}^{2})/(L_{9}^{2}+_{10}^{2}+L_{11}^{2})$$\n\n$$!f_{y}^{2}=-y_{0}^{2}+(L_{4}^{2}+L_{5}^{2}+L_{6}^{2})/(L_{9}^{2}+_{10}^{2}+L_{11}^{2})$$\n\n$$!f=\\frac{1}{2}(f_{x}+f_{y})$$\n\n(2)外方位角元素\n\n$$!\\begin{bmatrix}a_{1}&amp;b_{1}&amp;c_{1}\\end{bmatrix}=\\frac{1}{f_{x}}\\begin{bmatrix}\\frac{L_{1}}{(L_{9}^{2}+L_{10}^{2}+L_{11}^{2})^{1/2}}+a_{3}x_{0}\\frac{L_{2}}{(L_{9}^{2}+L_{10}^{2}+L_{11}^{2})^{1/2}}+b_{3}x_{0}\\frac{L_{3}}{(L_{9}^{2}+L_{10}^{2}+L_{11}^{2})^{1/2}}+c_{3}x_{0}\\end{bmatrix}$$\n\n$$!\\begin{bmatrix}a_{2}&amp;b_{2}&amp;c_{2}\\end{bmatrix}=\\frac{1}{f_{y}}\\begin{bmatrix}\\frac{L_{5}}{(L_{9}^{2}+L_{10}^{2}+L_{11}^{2})^{1/2}}+a_{3}y_{0}\\frac{L_{6}}{(L_{9}^{2}+L_{10}^{2}+L_{11}^{2})^{1/2}}+b_{3}y_{0}\\frac{L_{7}}{(L_{9}^{2}+L_{10}^{2}+L_{11}^{2})^{1/2}}+c_{3}y_{0}\\end{bmatrix}$$\n\n$$!\\begin{bmatrix}a_{3}&amp;b_{3}&amp;c_{3}\\end{bmatrix}=\\frac{1}{(L_{9}^{2}+L_{10^{2}}+L_{11}^{2})^{1/2}}\\begin{bmatrix}L_{9}&amp;L_{10}&amp;L_{11}\\end{bmatrix}$$\n\n可以注意到的是，DLT解求内外方位元素是有次序的，因为外方位元素解求的公式中包含有所有的内方位元素。\n\n$$!\\left\\{\\begin{matrix}\\varphi =arctan(\\frac{a_{3}}{c_{3}})=arctan(\\frac{l_{9}}{l_{11}})\\\\\\omega =arcsin(-b_{3})=arcsin(-\\frac{l_{10}}{l_{9}^2+l_{10}^{2}+l_{11}^{2}})\\\\\\kappa =arctan(\\frac{b_{1}}{b_{2}})=arctan(\\frac{f_{y}[x_{0}\\frac{L_{2}}{(L_{9}^{2}+L_{10}^{2}+L_{11}^{2})^{1/2}}+b_{3}]}{f_{x}[y_{0}\\frac{L_{6}}{(L_{9}^{2}+L_{10}^{2}+L_{11}^{2})^{1/2}}+b_{3}]})\\end{matrix}\\right.$$\n\n(3)外方位线元素\n 则需要根据如下方程解出\n\n$$!a_{3}X_{s}+b_{3}Y_{s}+c_{3}Z_{s}+r_{3}$$\n\n$$!\\frac{a_{1}f_{x}-a_{3}x_{0}}{r_{3}}X_{s}+\\frac{b_{1}f_{x}-b_{3}x_{0}}{r_{3}}Y_{s}+\\frac{c_{1}f_{x}-c_{3}x_{0}}{r_{3}}+L_{4}=0$$\n\n$$!\\frac{a_{2}f_{y}-a_{3}y_{0}}{r_{3}}X_{s}+\\frac{b_{2}f_{y}-b_{3}y_{0}}{r_{3}}Y_{s}+\\frac{c_{2}f_{y}-c_{3}y_{0}}{r_{3}}+L_{8}=0$$\n\n&nbsp;\n\nDLT实质上与共线方程等价，Li之间的相关性，因为2个条件=11个参数-必要观测个数\n\n* * *\n\n以上是只解求内外方位元素的时候，Li与各参数的关系，如果加上光学畸变、非正交比例、比例尺不一致等误差，光学畸变在前文中提到。\n\nx轴方向上比例系数为1，y轴方向比例系数为(1+ds).则\n\nx轴方向上的主距为fx，y轴方向上的主距为fy=fx/(1+ds).\n\n对数字相机，比例尺不一致可认为是襄垣x、y方向长度不等引起的；而不正交性误差可认为是像元x、y方向排列不垂直引起的。\n\n<a name=\"非正交与比例尺不一致因素\">如图展现了以上两种误差的原因。</a>\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/C99CDEAA218715286FA9FE07A8E69B343C345FAA.jpg)\n\n以下表述中，小括号代表坐标系，中括号代表坐标值。\n\n$$!(\\overline{x},\\overline{y})[on_{2},on_{1}]$$——以像主点为原点（像平面坐标系的原点），不包含线性误差的<font color=\"#FF0000\">某像点p的坐标</font>\n\n$$!(x,y)[om_{2},0m_{1}]$$——以像主点为原点，不包含正交性dβ误差的像点p坐标。\n\n$$!(x,y)[om_{2},om_{1}^{'}]$$——以像主点为原点，不包括正交性dβ误差及比例尺不一致误差ds的像点坐标p\n\n则从图中可知，$$!\\delta x=on_{2}-om_{2}=m_{2}p\\cdot sin d\\beta=om_{1}\\cdot sin d\\beta=(1+ds)(y-y_{0})sind\\beta\\approx (y-y_{0})sind\\beta$$\n\n$$!\\delta y=on_{1}-om_{1}^{'}=om_{1}\\cdot cosd\\beta -om_{1}^{'}=(1+ds)(y-y_{0})\\cdot cosd\\beta-(y-y_{0})=[(1+ds)\\cdot cosd\\beta -1](y-y_{0})\\approx (y-y_{0})\\cdot ds$$\n\n将上式2值带入线性方程<font color=\"#FF0000\">有线性误差的形式</font>：式中有11个独立参数，3个内方位x0,yo,fx6个外方位Xs，Ys，Zs，φ，ω，k，比例尺不一致系数ds，xy轴不正交系数dβ。\n\n$$!\\left\\{\\begin{matrix}x-x_{0}+(1+ds)(y-y_{0})\\cdot sind\\beta +f_{x}\\frac{a_{1}(X-X_{s}+b_{1}(Y-Y_{s})+c_{1}(Z-Z_{s})}{a_{3}(X-X_{s})+b_{3}(Y-Y_{s})+c_{3}(Z-Z_{s})}=0\\\\y-y_{0}+[(1+ds)\\cdot cosd\\beta-1] (y-y_{0})+f_{x}\\frac{a_{1}(X-X_{s}+b_{1}(Y-Y_{s})+c_{1}(Z-Z_{s})}{a_{3}(X-X_{s})+b_{3}(Y-Y_{s})+c_{3}(Z-Z_{s})}=0\\end{matrix}\\right.$$\n\n通过一系列的化简，如前面介绍不带线性误差一样，提取出r1，r2，r3，<a name=\"DLT的真正一般形式\">得到：</a>\n\n$$!x+\\frac{\\frac{1}{r_{3}}(a_{1}f_{x}-a_{2}f_{x}tand\\beta -a_{3}x_{0})}{\\frac{a_{3}}{r_{3}}X+\\frac{b_{3}}{r_{3}}Y+\\frac{c_{3}}{r_{3}}Z+1}\\cdot X+\\frac{\\frac{1}{r_{3}}(b_{1}f_{x}-b_{2}f_{x}tand\\beta -b_{3}x_{0})}{\\frac{a_{3}}{r_{3}}X+\\frac{b_{3}}{r_{3}}Y+\\frac{c_{3}}{r_{3}}Z+1}\\cdot Y+\\frac{\\frac{1}{r_{3}}(c_{1}f_{x}-c_{2}f_{x}tand\\beta -c_{3}x_{0})}{\\frac{a_{3}}{r_{3}}X+\\frac{b_{3}}{r_{3}}Y+\\frac{c_{3}}{r_{3}}Z+1}\\cdot Z+\\frac{\\frac{1}{r_{3}}(r_{1}f_{x}-r_{2}f_{x}tand\\beta -r_{3}x_{0})}{\\frac{a_{3}}{r_{3}}X+\\frac{b_{3}}{r_{3}}Y+\\frac{c_{3}}{r_{3}}Z+1}=0$$\n\n$$!y+\\frac{\\frac{1}{r_{3}}[\\frac{a_{2}f_{x}}{(1+ds)cosd\\beta }-a_{3}\\cdot y_{0}]}{\\frac{a_{3}}{r_{3}}X+\\frac{b_{3}}{r_{3}}Y+\\frac{c_{3}}{r_{3}}Z+1}\\cdot X+\\frac{\\frac{1}{r_{3}}[\\frac{b_{2}f_{x}}{(1+ds)cosd\\beta }-b_{3}\\cdot y_{0}]}{\\frac{a_{3}}{r_{3}}X+\\frac{b_{3}}{r_{3}}Y+\\frac{c_{3}}{r_{3}}Z+1}\\cdot Y+\\frac{\\frac{1}{r_{3}}[\\frac{c_{2}f}{(1+ds)cosd\\beta }-c_{3}\\cdot y_{0}]}{\\frac{a_{3}}{r_{3}}X+\\frac{b_{3}}{r_{3}}Y+\\frac{c_{3}}{r_{3}}Z+1}\\cdot Z+\\frac{\\frac{1}{r_{3}}[\\frac{r_{2}f_{x}}{(1+ds)cosd\\beta }-r_{3}\\cdot y_{0}]}{\\frac{a_{3}}{r_{3}}X+\\frac{b_{3}}{r_{3}}Y+\\frac{c_{3}}{r_{3}}Z+1}=0$$\n\n则上式即可化为基本式：\n\n$$!x+\\frac{l_{1}X+l_{2}Y+l_{3}Z+l_{4}}{l_{9}X+l_{10}Y+l_{11}Z+1}=0$$\n\n$$!y+\\frac{l_{5}X+l_{6}Y+l_{7}Z+l_{8}}{l_{9}X+l_{10}Y+l_{11}Z+1}=0$$\n\n其中，l4、l8可化简：\n\n$$!l_{8}=\\frac{1}{r_{3}}[\\frac{r_{2}f_{x}}{(1+ds)\\cdot d\\beta}-r_{3}\\cdot y_{0}]=\\frac{1}{r_{3}}[\\frac{-(a_{2}Xs+b_{2}Y_{s}+c_{2}Z_{s})f_{x}}{(1+ds)\\cdot cosd\\beta }+(a_{3}X_{s}+b_{3}Y_{s}+c_{3}Z_{s})\\cdot y_{0}]=-\\frac{1}{r_{3}}[(\\frac{a_{2}f_{x}}{(1+ds)\\cdot cosd\\beta }-a_{3}y_{0})X_{s}+(\\frac{b_{2}f_{x}}{(1+ds)\\cdot cosd\\beta }-b_{3}y_{0})Y_{s}+(\\frac{c_{2}f_{x}}{(1+ds)\\cdot cosd\\beta }-c_{3}y_{0})Z_{s}]=-(l_{5}X_{s}+l_{6}Y_{s}+l_{7}Z_{s})$$\n\n$$!l_{4}=\\frac{1}{r_{3}}(r_{1}f_{x}-r_{2}f_{x}tand\\beta -r_{3}x_{0})=-(l_{1}X_{s}+l_{2}Y_{s}+l_{3}Z_{s})$$\n\n由于未知数是11个，因此最少需要布置6个控制点。\n\n值得一提的是，像主点的求解公式与没有畸变参与<a name=\"包含2项因素的Li表达内外参数\">相同</a>，\n\n$$!x_{0}=-(L_{1}L_{9}+L_{2}L_{10}+L_{3}L_{11})/(L_{9}^{2}+_{10}^{2}+L_{11}^{2})$$\n\n$$!y_{0}=-(L_{5}L_{9}+L_{6}L_{10}+L_{7}L_{11})/(L_{9}^{2}+_{10}^{2}+L_{11}^{2})$$\n\n最重要的ds和dβ，设：\n\n$$!\\overline{A}=r_{3}^{2}(l_{1}^{2}+l_{2}^{2}+l_{3}^{2})-x_{0}^{2}=\\frac{f_{x}^{2}}{cos^{2}d\\beta }$$\n\n$$!B=r_{3}^{2}(l_{5}^{2}+l_{6}^{2}+l_{7}^{2})-y_{0}^{2}=\\frac{f_{x}^{2}}{(1+ds)^{2}cos^{2}d\\beta }$$\n\n$$!C=r_{3}^{2}(l_{1}l_{5}+l_{2}l_{6}+l_{3}l_{7})-x_{0}y_{0}=\\frac{-f_{x}^{2}sind\\beta }{(1+ds)cos^{2}d\\beta }$$\n\n$$!ds=\\sqrt{\\frac{\\overline{A}}{B}-1}$$\n\n$$!sind\\beta =\\pm \\sqrt{\\frac{C^{2}}{\\overline{A}B}}$$\n\n而主距的公式变为：\n\n$$!f_{x}=\\sqrt{\\overline{A}}cosd\\beta $$\n\n$$!f_{y}=\\frac{f_{x}}{1+ds}$$\n\n外方位角元素：\n\n$$!tan\\varphi =\\frac{a_{3}}{c_{3}}$$\n\n$$!sin\\omega =-b_{3}$$\n\n$$!tan\\kappa =\\frac{b_{1}}{b_{2}}$$\n\n其中，$$a_{3}=r_{3}l_{9},b_{3}=r_{3}l_{10},c_{3}=r_{3}l_{11}$$\n\n而外方位线元素由以下三个式子构成：\n\n$$!l_{1}X_{s}+l_{2}Y_{s}+l_{3}Z_{s}=-l_{4}$$\n\n$$!l_{5}X_{s}+l_{6}Y_{s}+l_{7}Z_{s}=-l_{8}$$\n\n$$!l_{9}X_{s}+l_{10}Y_{s}+l_{11}Z_{s}=\\frac{a_{3}}{r_{3}}X_{s}+\\frac{b_{3}}{r_{3}}Y_{s}+\\frac{c_{3}}{r_{3}}Z_{s}=-\\frac{a_{3}Xs+b_{3}Y_{s}+c_{3}Z_{s}}{a_{3}Xs+b_{3}Y_{s}+c_{3}Z_{s}}=-1$$\n\n到这里，能解求出包含非正交比例和xy不一致比例，但缺乏了对镜头畸变的改正。若将镜头畸变写入DLT方程式，则变为：\n\n$$!x+v_{x}+\\Delta x+\\frac{l_{1}X+l_{2}Y+l_{3}Z+l_{4}}{l_{9}X+l_{10}Y+l_{11}Z+1}=0$$\n\n$$!y+v_{y}+\\Delta y+\\frac{l_{5}X+l_{6}Y+l_{7}Z+l_{8}}{l_{9}X+l_{10}Y+l_{11}Z+1}=0$$\n\n其中，vx vy是残差，△x △y是畸变的改正数，若忽略切向畸变且只去一项径向畸变的参数作为例子，\n\n$$!\\left\\{\\begin{matrix}\\Delta x=(x-x_{0})r^{2}k_{1}\\\\\\Delta y=(y-y_{0})r^{2}k_{1}\\end{matrix}\\right.$$\n\n再令$$A=l_{9}X+l_{10}Y+l_{11}Z+1$$\n\n以li为未知数，列误差方程，则DLT<a name=\"包含畸变参数校正的DLT\">公式可化简为</a>：\n\n$$!v_{x}=-\\frac{1}{A}[Xl_{1}+Yl_{2}+Zl_{3}+l_{4}+xXl_{9}+xYl_{10}+xZl_{11}+A(x-x_{0}^{2})r^{2}k_{1}+x]$$\n\n$$!v_{y}=-\\frac{1}{A}[Xl_{5}+Yl_{6}+Zl_{7}+l_{8}+yXl_{9}+yYl_{10}+yZl_{11}+A(y-y_{0}^{2})r^{2}k_{1}+x]$$\n\n矩阵的形式则可写为（以物方坐标表示像点坐标）：\n\n<font color=\"#FF0000\">$$!\\begin{bmatrix}v_{x}\\\\v_{y}\\end{bmatrix}=\\begin{bmatrix}\\frac{X}{A}&amp;\\frac{Y}{A}&amp;\\frac{Z}{A}&amp;\\frac{1}{A}&amp;0&amp;0&amp;0&amp;0&amp;\\frac{xX}{A}&amp;\\frac{xY}{A}&amp;\\frac{xZ}{A}&amp;(x-x_{0})r^{2}\\\\0&amp;0&amp;0&amp;0&amp;\\frac{X}{A}&amp;\\frac{Y}{A}&amp;\\frac{Z}{A}&amp;\\frac{1}{A}&amp;\\frac{yX}{A}&amp;\\frac{yY}{A}&amp;\\frac{yZ}{A}&amp;(y-y_{0})r^{2}\\end{bmatrix}\\begin{bmatrix}l_{1}\\\\l_{2}\\\\l_{3}\\\\l_{4}\\\\l_{5}\\\\l_{6}\\\\l_{7}\\\\l_{8}\\\\l_{9}\\\\l_{10}\\\\l_{11}\\\\k_{1}\\end{bmatrix}-\\begin{bmatrix}\\frac{x}{A}\\\\\\frac{y}{A}\\end{bmatrix}$$</font>\n\n可简写为:\n\n$$!V=AL+BX-W$$\n\n其中L是11个（二维DLT是可能是8个）li参数，X是单独提出来计算的畸变系数，在后交时通常加载改正数值里，当学要加入更多畸变参数时，需要确定更多的B矩阵中的形式。W一般是x/A,y/A.\n\nA和B的求取也是迭代计算，每次迭代A的值计算是通过控制点求得的。对不同控制点像点坐标列误差方程，A的值也不同。\n\n简单提一下以像方坐标表示物放坐标的DLT公式：\n\n$$!(l_{1}+\\overline{x}l_{9})X+(l_{2}+\\overline{x}l_{10})Y+(l_{3}+\\overline{x}l_{11})Z+(l_{4}+\\overline{x})=0$$\n\n$$!(l_{5}+\\overline{y}l_{9})X+(l_{6}+\\overline{y}l_{10})Y+(l_{7}+\\overline{y}l_{11})Z+(l_{8}+\\overline{y})=0$$\n\n直接线性变换的精度：可提供1/5000摄影距离精度的测量成果。影响DLT解法精度的是：控制点分布数量质量、像点坐标的测量精度、两张相片主光轴的交会角、像片张数、非线性畸变误差的改正数。\n\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\">[](http://sns.juziyue.com/webinvite.php?u=94887)&nbsp;今天你[菊子曰](http://sns.juziyue.com/webinvite.php?u=94887)了么？</div>","source":"_posts/后方交会检校(6)--后方交会的补充及DLT和角锥体法.md","raw":"---\ntitle: 后方交会检校(6)--后方交会的补充及DLT和角锥体法\ncategories:\n  - 什么都学一下\n  - 学习log\ntags:\n  - 检校\nid: 813\ndate: 2015-11-04 15:29:32\n---\n\n除了后方交会之外，常用的进行内外参数检校的方法还有DLT和角锥体法。\n\n写在前面：DLT可在<font color=\"#FF0000\">未提供初值</font>的情况下推导内外方位元素，同时<font color=\"#FF0000\">不需要迭代</font>，但精度相比后方交会较低；<font color=\"#FF0000\">DLT与后方交会等价</font>。\n\n**<font color=\"#FF0000\" size=\"5\">内容提要</font>**\n\n[DLT基本原理与公式](#DLT基本原理与公式)&nbsp; [L的基本形式](#其中)&nbsp;&nbsp;[用Li表示内外参数](#根据求得的li计算各参数)&nbsp;\n\n[非正交与比例尺不一致因素](#非正交与比例尺不一致因素)&nbsp; [DLT的真正一般形式](#DLT的真正一般形式)&nbsp; [包含2项因素的Li表达内外参数](#包含2项因素的Li表达内外参数)&nbsp;\n\n[包含畸变参数校正的DLT](#包含畸变参数校正的DLT)\n\n<a name=\"DLT基本原理与公式\">DLT基本原理与公式</a>\n\n基本原理：将物方点坐标（X,Y,Z）和(x,y)看做是空间中的某种线性变换，可以互为函数。一般地，将x,y用X,Y,Z表示。\n\n基本公式：\n\n$$!\\left\\{\\begin{matrix}x+\\frac{L_{1}X+L_{2}Y+L_{3}Z+L_{4}}{L_{9}X+L_{10}Y+L_{11}Z+1}=0\\\\y+\\frac{L_{5}X+L_{6}Y+L_{7}Z+L_{8}}{L_{9}X+L_{10}Y+L_{11}Z+1}=0\\end{matrix}\\right.$$\n\nDLT误差方程：\n\n<font color=\"#FF0000\">$$!\\begin{pmatrix}v_{x}\\\\v_{y}\\end{pmatrix}=\\begin{pmatrix}X&amp;Y&amp;Z&amp;1&amp;0&amp;0&amp;0&amp;0&amp;xX&amp;xY&amp;xZ\\\\0&amp;0&amp;0&amp;0&amp;X&amp;Y&amp;Z&amp;1&amp;yX&amp;yY&amp;yZ\\end{pmatrix}\\begin{pmatrix}L_{1}\\\\L_{2}\\\\L_{3}\\\\L_{4}\\\\L_{5}\\\\L_{6}\\\\L_{7}\\\\L_{8}\\\\L_{9}\\\\L_{10}\\\\L_{11}\\end{pmatrix}+\\begin{pmatrix}l_{x}\\\\l_{y}\\end{pmatrix}$$</font>\n\n与后方交会一样，若有n个控制点，则A矩阵有2n行。还是利用求改正数的公式求取。\n\nDLT推导过程如下：\n\n根据共线方程的后方交会形式：\n\n$$!x-x_{0}+f_{x}\\frac{a_{1}(X-X_{s})+b_{1}(Y-Y_{s})+c_{1}(Z-Z_{s})}{a_{3}(X-X_{s})+b_{3}(Y-Y_{s})+c_{3}(Z-Z_{s})}=0$$\n\n$$!y-y_{0}+f_{y}\\frac{a_{2}(X-X_{s})+b_{2}(Y-Y_{s})+c_{2}(Z-Z_{s})}{a_{3}(X-X_{s})+b_{3}(Y-Y_{s})+c_{3}(Z-Z_{s})}=0$$\n\n这里，f分为fx和fy，即主距在像空系中这两个分量的投影。因为有的单个ccd xy方向上的大小不一致，即不是正方形。\n\n将X，Y，Z和Xs，Ys，Zs分离，将之看作是摄影中心的变换坐标。\n\n<font color=\"#FF0000\">$$!\\left\\{\\begin{matrix}r_{1}=-(a_{1}X_{s}+b_{1}Y_{s}+c_{1}Z_{s})\\\\r_{2}=-(a_{2}X_{s}+b_{2}Y_{s}+c_{2}Z_{s})\\\\r_{3}=-(a_{3}X_{s}+b_{3}Y_{s}+c_{3}Z_{s})\\end{matrix}\\right.$$</font>\n\n化简可得\n\n$$!x-x_{0}+f_{x}\\frac{a_{1}X+b_{1}Y+c_{1}Z+r_{1}}{a_{3}X+b_{3}Y+c_{3}Z+r_{3}}=0$$\n\n$$!y-y_{0}+f_{y}\\frac{a_{2}X+b_{2}Y+c_{2}Z+r_{1}}{a_{3}X+b_{3}Y+c_{3}Z+r_{3}}=0$$\n\n将x0，y0通分。\n\n$$!x+\\frac{(a_{1}f_{x}-a_{3}x_{0})X+(b_{1}f_{x}-b_{3}x_{0})Y+(c_{1}f_{x}-c_{3}x_{0})Z+(r_{1}f_{x}-r_{3}x_{0})}{a_{3}X+b_{3}Y+c_{3}Z+r_{3}}=0$$\n\n$$!y+\\frac{(a_{2}f_{y}-a_{3}y_{0})X+(b_{2}f_{y}-b_{3}y_{0})Y+(c_{2}f_{y}-c_{3}y_{0})Z+(r_{2}f_{y}-r_{3}y_{0})}{a_{3}X+b_{3}Y+c_{3}Z+r_{3}}=0$$\n\n将X、Y、Z的系数简化为L，即\n\n$$!x+\\frac{L_{1}X+L_{2}Y+L_{3}Z+L_{4}}{L_{9}X+L_{10}Y+L_{11}Z+1}=0$$\n\n$$!y+\\frac{L_{5}X+L_{6}Y+L_{7}Z+L_{8}}{L_{9}X+L_{10}Y+L_{11}Z+1}=0$$\n\n<a name=\"其中\">其中，L为：</a>\n\n<font color=\"#FF0000\">$$!L=\\begin{bmatrix}L_{1}&amp;L_{2}&amp;L_{3}&amp;L_{4}\\\\L_{5}&amp;L_{6}&amp;L_{7}&amp;L_{8}\\\\L_{9}&amp;L_{10}&amp;L_{11}&amp;L_{12}\\end{bmatrix}$$</font>\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/151C86750F1FFF17ECE621971610488CBAE13A81.jpg)\n\n该公式表示像点测量坐标与物方点坐标直接的变化，无需内方位元素。从另一个角度看，L矩阵其实是二维坐标通过三次矩阵变换得到的三维坐标，即：\n\n$$!L=\\frac{1}{r_{3}}\\begin{bmatrix}f_{x}&amp;0&amp;-x_{0}\\\\0&amp;f_{y}&amp;-y_{0}\\\\0&amp;0&amp;1\\end{bmatrix}\\begin{bmatrix}a_{1}&amp;b_{1}&amp;c_{1}\\\\a_{2}&amp;b_{2}&amp;c_{2}\\\\a_{3}&amp;b_{3}&amp;c_{3}\\end{bmatrix}\\begin{bmatrix}1&amp;0&amp;0&amp;X_{s}\\\\0&amp;1&amp;0&amp;Y_{s}\\\\0&amp;0&amp;1&amp;Z_{s}\\end{bmatrix}=\\frac{1}{r_{3}}\\begin{bmatrix}f_{x}&amp;0&amp;-x_{0}\\\\0&amp;f_{y}&amp;-y_{0}\\\\0&amp;0&amp;1\\end{bmatrix}\\begin{bmatrix}R&amp;t\\\\0^{T}&amp;1\\end{bmatrix}$$\n\n第一个矩阵由内方位元素组成，是辅助坐标和像平面坐标的平移和比例关系；第二个矩阵是外方位元素的角元素，表达物方系和地辅系的坐标旋转关系；第三个矩阵是外方位线元素，表达物方坐标和地辅系坐标的原点平移关系。\n\n由于计算机视觉中使用齐次坐标，即如下形式\n\n$$!\\begin{pmatrix}x\\\\y\\\\1\\end{pmatrix}=L\\begin{pmatrix}X\\\\Y\\\\Z\\\\1\\end{pmatrix}=\\begin{bmatrix}L_{1}&amp;L_{2}&amp;L_{3}&amp;L_{4}\\\\L_{5}&amp;L_{6}&amp;L_{7}&amp;L_{8}\\\\L_{9}&amp;L_{10}&amp;L_{11}&amp;L_{12}\\end{bmatrix}\\begin{pmatrix}X\\\\Y\\\\Z\\\\1\\end{pmatrix}$$因此形成了上红色式子。\n\n<a name=\"根据求得的li计算各参数\">根据求得的li计算各参数</a>\n\n重要参数的求解：\n\n$$!r_{3}=\\frac{1}{(L_{9}^{2}+L_{10}^{2}+L_{11}^{2})^{1/2}}$$\n\n(1)内方位元素\n\n$$!x_{0}=-(L_{1}L_{9}+L_{2}L_{10}+L_{3}L_{11})/(L_{9}^{2}+_{10}^{2}+L_{11}^{2})$$\n\n$$!y_{0}=-(L_{5}L_{9}+L_{6}L_{10}+L_{7}L_{11})/(L_{9}^{2}+_{10}^{2}+L_{11}^{2})$$\n\n$$!f_{x}^{2}=-x_{0}^{2}+(L_{1}^{2}+L_{2}^{2}+L_{3}^{2})/(L_{9}^{2}+_{10}^{2}+L_{11}^{2})$$\n\n$$!f_{y}^{2}=-y_{0}^{2}+(L_{4}^{2}+L_{5}^{2}+L_{6}^{2})/(L_{9}^{2}+_{10}^{2}+L_{11}^{2})$$\n\n$$!f=\\frac{1}{2}(f_{x}+f_{y})$$\n\n(2)外方位角元素\n\n$$!\\begin{bmatrix}a_{1}&amp;b_{1}&amp;c_{1}\\end{bmatrix}=\\frac{1}{f_{x}}\\begin{bmatrix}\\frac{L_{1}}{(L_{9}^{2}+L_{10}^{2}+L_{11}^{2})^{1/2}}+a_{3}x_{0}\\frac{L_{2}}{(L_{9}^{2}+L_{10}^{2}+L_{11}^{2})^{1/2}}+b_{3}x_{0}\\frac{L_{3}}{(L_{9}^{2}+L_{10}^{2}+L_{11}^{2})^{1/2}}+c_{3}x_{0}\\end{bmatrix}$$\n\n$$!\\begin{bmatrix}a_{2}&amp;b_{2}&amp;c_{2}\\end{bmatrix}=\\frac{1}{f_{y}}\\begin{bmatrix}\\frac{L_{5}}{(L_{9}^{2}+L_{10}^{2}+L_{11}^{2})^{1/2}}+a_{3}y_{0}\\frac{L_{6}}{(L_{9}^{2}+L_{10}^{2}+L_{11}^{2})^{1/2}}+b_{3}y_{0}\\frac{L_{7}}{(L_{9}^{2}+L_{10}^{2}+L_{11}^{2})^{1/2}}+c_{3}y_{0}\\end{bmatrix}$$\n\n$$!\\begin{bmatrix}a_{3}&amp;b_{3}&amp;c_{3}\\end{bmatrix}=\\frac{1}{(L_{9}^{2}+L_{10^{2}}+L_{11}^{2})^{1/2}}\\begin{bmatrix}L_{9}&amp;L_{10}&amp;L_{11}\\end{bmatrix}$$\n\n可以注意到的是，DLT解求内外方位元素是有次序的，因为外方位元素解求的公式中包含有所有的内方位元素。\n\n$$!\\left\\{\\begin{matrix}\\varphi =arctan(\\frac{a_{3}}{c_{3}})=arctan(\\frac{l_{9}}{l_{11}})\\\\\\omega =arcsin(-b_{3})=arcsin(-\\frac{l_{10}}{l_{9}^2+l_{10}^{2}+l_{11}^{2}})\\\\\\kappa =arctan(\\frac{b_{1}}{b_{2}})=arctan(\\frac{f_{y}[x_{0}\\frac{L_{2}}{(L_{9}^{2}+L_{10}^{2}+L_{11}^{2})^{1/2}}+b_{3}]}{f_{x}[y_{0}\\frac{L_{6}}{(L_{9}^{2}+L_{10}^{2}+L_{11}^{2})^{1/2}}+b_{3}]})\\end{matrix}\\right.$$\n\n(3)外方位线元素\n 则需要根据如下方程解出\n\n$$!a_{3}X_{s}+b_{3}Y_{s}+c_{3}Z_{s}+r_{3}$$\n\n$$!\\frac{a_{1}f_{x}-a_{3}x_{0}}{r_{3}}X_{s}+\\frac{b_{1}f_{x}-b_{3}x_{0}}{r_{3}}Y_{s}+\\frac{c_{1}f_{x}-c_{3}x_{0}}{r_{3}}+L_{4}=0$$\n\n$$!\\frac{a_{2}f_{y}-a_{3}y_{0}}{r_{3}}X_{s}+\\frac{b_{2}f_{y}-b_{3}y_{0}}{r_{3}}Y_{s}+\\frac{c_{2}f_{y}-c_{3}y_{0}}{r_{3}}+L_{8}=0$$\n\n&nbsp;\n\nDLT实质上与共线方程等价，Li之间的相关性，因为2个条件=11个参数-必要观测个数\n\n* * *\n\n以上是只解求内外方位元素的时候，Li与各参数的关系，如果加上光学畸变、非正交比例、比例尺不一致等误差，光学畸变在前文中提到。\n\nx轴方向上比例系数为1，y轴方向比例系数为(1+ds).则\n\nx轴方向上的主距为fx，y轴方向上的主距为fy=fx/(1+ds).\n\n对数字相机，比例尺不一致可认为是襄垣x、y方向长度不等引起的；而不正交性误差可认为是像元x、y方向排列不垂直引起的。\n\n<a name=\"非正交与比例尺不一致因素\">如图展现了以上两种误差的原因。</a>\n\n![](http://www.dooby.me/wp-content/uploads/2015/11/C99CDEAA218715286FA9FE07A8E69B343C345FAA.jpg)\n\n以下表述中，小括号代表坐标系，中括号代表坐标值。\n\n$$!(\\overline{x},\\overline{y})[on_{2},on_{1}]$$——以像主点为原点（像平面坐标系的原点），不包含线性误差的<font color=\"#FF0000\">某像点p的坐标</font>\n\n$$!(x,y)[om_{2},0m_{1}]$$——以像主点为原点，不包含正交性dβ误差的像点p坐标。\n\n$$!(x,y)[om_{2},om_{1}^{'}]$$——以像主点为原点，不包括正交性dβ误差及比例尺不一致误差ds的像点坐标p\n\n则从图中可知，$$!\\delta x=on_{2}-om_{2}=m_{2}p\\cdot sin d\\beta=om_{1}\\cdot sin d\\beta=(1+ds)(y-y_{0})sind\\beta\\approx (y-y_{0})sind\\beta$$\n\n$$!\\delta y=on_{1}-om_{1}^{'}=om_{1}\\cdot cosd\\beta -om_{1}^{'}=(1+ds)(y-y_{0})\\cdot cosd\\beta-(y-y_{0})=[(1+ds)\\cdot cosd\\beta -1](y-y_{0})\\approx (y-y_{0})\\cdot ds$$\n\n将上式2值带入线性方程<font color=\"#FF0000\">有线性误差的形式</font>：式中有11个独立参数，3个内方位x0,yo,fx6个外方位Xs，Ys，Zs，φ，ω，k，比例尺不一致系数ds，xy轴不正交系数dβ。\n\n$$!\\left\\{\\begin{matrix}x-x_{0}+(1+ds)(y-y_{0})\\cdot sind\\beta +f_{x}\\frac{a_{1}(X-X_{s}+b_{1}(Y-Y_{s})+c_{1}(Z-Z_{s})}{a_{3}(X-X_{s})+b_{3}(Y-Y_{s})+c_{3}(Z-Z_{s})}=0\\\\y-y_{0}+[(1+ds)\\cdot cosd\\beta-1] (y-y_{0})+f_{x}\\frac{a_{1}(X-X_{s}+b_{1}(Y-Y_{s})+c_{1}(Z-Z_{s})}{a_{3}(X-X_{s})+b_{3}(Y-Y_{s})+c_{3}(Z-Z_{s})}=0\\end{matrix}\\right.$$\n\n通过一系列的化简，如前面介绍不带线性误差一样，提取出r1，r2，r3，<a name=\"DLT的真正一般形式\">得到：</a>\n\n$$!x+\\frac{\\frac{1}{r_{3}}(a_{1}f_{x}-a_{2}f_{x}tand\\beta -a_{3}x_{0})}{\\frac{a_{3}}{r_{3}}X+\\frac{b_{3}}{r_{3}}Y+\\frac{c_{3}}{r_{3}}Z+1}\\cdot X+\\frac{\\frac{1}{r_{3}}(b_{1}f_{x}-b_{2}f_{x}tand\\beta -b_{3}x_{0})}{\\frac{a_{3}}{r_{3}}X+\\frac{b_{3}}{r_{3}}Y+\\frac{c_{3}}{r_{3}}Z+1}\\cdot Y+\\frac{\\frac{1}{r_{3}}(c_{1}f_{x}-c_{2}f_{x}tand\\beta -c_{3}x_{0})}{\\frac{a_{3}}{r_{3}}X+\\frac{b_{3}}{r_{3}}Y+\\frac{c_{3}}{r_{3}}Z+1}\\cdot Z+\\frac{\\frac{1}{r_{3}}(r_{1}f_{x}-r_{2}f_{x}tand\\beta -r_{3}x_{0})}{\\frac{a_{3}}{r_{3}}X+\\frac{b_{3}}{r_{3}}Y+\\frac{c_{3}}{r_{3}}Z+1}=0$$\n\n$$!y+\\frac{\\frac{1}{r_{3}}[\\frac{a_{2}f_{x}}{(1+ds)cosd\\beta }-a_{3}\\cdot y_{0}]}{\\frac{a_{3}}{r_{3}}X+\\frac{b_{3}}{r_{3}}Y+\\frac{c_{3}}{r_{3}}Z+1}\\cdot X+\\frac{\\frac{1}{r_{3}}[\\frac{b_{2}f_{x}}{(1+ds)cosd\\beta }-b_{3}\\cdot y_{0}]}{\\frac{a_{3}}{r_{3}}X+\\frac{b_{3}}{r_{3}}Y+\\frac{c_{3}}{r_{3}}Z+1}\\cdot Y+\\frac{\\frac{1}{r_{3}}[\\frac{c_{2}f}{(1+ds)cosd\\beta }-c_{3}\\cdot y_{0}]}{\\frac{a_{3}}{r_{3}}X+\\frac{b_{3}}{r_{3}}Y+\\frac{c_{3}}{r_{3}}Z+1}\\cdot Z+\\frac{\\frac{1}{r_{3}}[\\frac{r_{2}f_{x}}{(1+ds)cosd\\beta }-r_{3}\\cdot y_{0}]}{\\frac{a_{3}}{r_{3}}X+\\frac{b_{3}}{r_{3}}Y+\\frac{c_{3}}{r_{3}}Z+1}=0$$\n\n则上式即可化为基本式：\n\n$$!x+\\frac{l_{1}X+l_{2}Y+l_{3}Z+l_{4}}{l_{9}X+l_{10}Y+l_{11}Z+1}=0$$\n\n$$!y+\\frac{l_{5}X+l_{6}Y+l_{7}Z+l_{8}}{l_{9}X+l_{10}Y+l_{11}Z+1}=0$$\n\n其中，l4、l8可化简：\n\n$$!l_{8}=\\frac{1}{r_{3}}[\\frac{r_{2}f_{x}}{(1+ds)\\cdot d\\beta}-r_{3}\\cdot y_{0}]=\\frac{1}{r_{3}}[\\frac{-(a_{2}Xs+b_{2}Y_{s}+c_{2}Z_{s})f_{x}}{(1+ds)\\cdot cosd\\beta }+(a_{3}X_{s}+b_{3}Y_{s}+c_{3}Z_{s})\\cdot y_{0}]=-\\frac{1}{r_{3}}[(\\frac{a_{2}f_{x}}{(1+ds)\\cdot cosd\\beta }-a_{3}y_{0})X_{s}+(\\frac{b_{2}f_{x}}{(1+ds)\\cdot cosd\\beta }-b_{3}y_{0})Y_{s}+(\\frac{c_{2}f_{x}}{(1+ds)\\cdot cosd\\beta }-c_{3}y_{0})Z_{s}]=-(l_{5}X_{s}+l_{6}Y_{s}+l_{7}Z_{s})$$\n\n$$!l_{4}=\\frac{1}{r_{3}}(r_{1}f_{x}-r_{2}f_{x}tand\\beta -r_{3}x_{0})=-(l_{1}X_{s}+l_{2}Y_{s}+l_{3}Z_{s})$$\n\n由于未知数是11个，因此最少需要布置6个控制点。\n\n值得一提的是，像主点的求解公式与没有畸变参与<a name=\"包含2项因素的Li表达内外参数\">相同</a>，\n\n$$!x_{0}=-(L_{1}L_{9}+L_{2}L_{10}+L_{3}L_{11})/(L_{9}^{2}+_{10}^{2}+L_{11}^{2})$$\n\n$$!y_{0}=-(L_{5}L_{9}+L_{6}L_{10}+L_{7}L_{11})/(L_{9}^{2}+_{10}^{2}+L_{11}^{2})$$\n\n最重要的ds和dβ，设：\n\n$$!\\overline{A}=r_{3}^{2}(l_{1}^{2}+l_{2}^{2}+l_{3}^{2})-x_{0}^{2}=\\frac{f_{x}^{2}}{cos^{2}d\\beta }$$\n\n$$!B=r_{3}^{2}(l_{5}^{2}+l_{6}^{2}+l_{7}^{2})-y_{0}^{2}=\\frac{f_{x}^{2}}{(1+ds)^{2}cos^{2}d\\beta }$$\n\n$$!C=r_{3}^{2}(l_{1}l_{5}+l_{2}l_{6}+l_{3}l_{7})-x_{0}y_{0}=\\frac{-f_{x}^{2}sind\\beta }{(1+ds)cos^{2}d\\beta }$$\n\n$$!ds=\\sqrt{\\frac{\\overline{A}}{B}-1}$$\n\n$$!sind\\beta =\\pm \\sqrt{\\frac{C^{2}}{\\overline{A}B}}$$\n\n而主距的公式变为：\n\n$$!f_{x}=\\sqrt{\\overline{A}}cosd\\beta $$\n\n$$!f_{y}=\\frac{f_{x}}{1+ds}$$\n\n外方位角元素：\n\n$$!tan\\varphi =\\frac{a_{3}}{c_{3}}$$\n\n$$!sin\\omega =-b_{3}$$\n\n$$!tan\\kappa =\\frac{b_{1}}{b_{2}}$$\n\n其中，$$a_{3}=r_{3}l_{9},b_{3}=r_{3}l_{10},c_{3}=r_{3}l_{11}$$\n\n而外方位线元素由以下三个式子构成：\n\n$$!l_{1}X_{s}+l_{2}Y_{s}+l_{3}Z_{s}=-l_{4}$$\n\n$$!l_{5}X_{s}+l_{6}Y_{s}+l_{7}Z_{s}=-l_{8}$$\n\n$$!l_{9}X_{s}+l_{10}Y_{s}+l_{11}Z_{s}=\\frac{a_{3}}{r_{3}}X_{s}+\\frac{b_{3}}{r_{3}}Y_{s}+\\frac{c_{3}}{r_{3}}Z_{s}=-\\frac{a_{3}Xs+b_{3}Y_{s}+c_{3}Z_{s}}{a_{3}Xs+b_{3}Y_{s}+c_{3}Z_{s}}=-1$$\n\n到这里，能解求出包含非正交比例和xy不一致比例，但缺乏了对镜头畸变的改正。若将镜头畸变写入DLT方程式，则变为：\n\n$$!x+v_{x}+\\Delta x+\\frac{l_{1}X+l_{2}Y+l_{3}Z+l_{4}}{l_{9}X+l_{10}Y+l_{11}Z+1}=0$$\n\n$$!y+v_{y}+\\Delta y+\\frac{l_{5}X+l_{6}Y+l_{7}Z+l_{8}}{l_{9}X+l_{10}Y+l_{11}Z+1}=0$$\n\n其中，vx vy是残差，△x △y是畸变的改正数，若忽略切向畸变且只去一项径向畸变的参数作为例子，\n\n$$!\\left\\{\\begin{matrix}\\Delta x=(x-x_{0})r^{2}k_{1}\\\\\\Delta y=(y-y_{0})r^{2}k_{1}\\end{matrix}\\right.$$\n\n再令$$A=l_{9}X+l_{10}Y+l_{11}Z+1$$\n\n以li为未知数，列误差方程，则DLT<a name=\"包含畸变参数校正的DLT\">公式可化简为</a>：\n\n$$!v_{x}=-\\frac{1}{A}[Xl_{1}+Yl_{2}+Zl_{3}+l_{4}+xXl_{9}+xYl_{10}+xZl_{11}+A(x-x_{0}^{2})r^{2}k_{1}+x]$$\n\n$$!v_{y}=-\\frac{1}{A}[Xl_{5}+Yl_{6}+Zl_{7}+l_{8}+yXl_{9}+yYl_{10}+yZl_{11}+A(y-y_{0}^{2})r^{2}k_{1}+x]$$\n\n矩阵的形式则可写为（以物方坐标表示像点坐标）：\n\n<font color=\"#FF0000\">$$!\\begin{bmatrix}v_{x}\\\\v_{y}\\end{bmatrix}=\\begin{bmatrix}\\frac{X}{A}&amp;\\frac{Y}{A}&amp;\\frac{Z}{A}&amp;\\frac{1}{A}&amp;0&amp;0&amp;0&amp;0&amp;\\frac{xX}{A}&amp;\\frac{xY}{A}&amp;\\frac{xZ}{A}&amp;(x-x_{0})r^{2}\\\\0&amp;0&amp;0&amp;0&amp;\\frac{X}{A}&amp;\\frac{Y}{A}&amp;\\frac{Z}{A}&amp;\\frac{1}{A}&amp;\\frac{yX}{A}&amp;\\frac{yY}{A}&amp;\\frac{yZ}{A}&amp;(y-y_{0})r^{2}\\end{bmatrix}\\begin{bmatrix}l_{1}\\\\l_{2}\\\\l_{3}\\\\l_{4}\\\\l_{5}\\\\l_{6}\\\\l_{7}\\\\l_{8}\\\\l_{9}\\\\l_{10}\\\\l_{11}\\\\k_{1}\\end{bmatrix}-\\begin{bmatrix}\\frac{x}{A}\\\\\\frac{y}{A}\\end{bmatrix}$$</font>\n\n可简写为:\n\n$$!V=AL+BX-W$$\n\n其中L是11个（二维DLT是可能是8个）li参数，X是单独提出来计算的畸变系数，在后交时通常加载改正数值里，当学要加入更多畸变参数时，需要确定更多的B矩阵中的形式。W一般是x/A,y/A.\n\nA和B的求取也是迭代计算，每次迭代A的值计算是通过控制点求得的。对不同控制点像点坐标列误差方程，A的值也不同。\n\n简单提一下以像方坐标表示物放坐标的DLT公式：\n\n$$!(l_{1}+\\overline{x}l_{9})X+(l_{2}+\\overline{x}l_{10})Y+(l_{3}+\\overline{x}l_{11})Z+(l_{4}+\\overline{x})=0$$\n\n$$!(l_{5}+\\overline{y}l_{9})X+(l_{6}+\\overline{y}l_{10})Y+(l_{7}+\\overline{y}l_{11})Z+(l_{8}+\\overline{y})=0$$\n\n直接线性变换的精度：可提供1/5000摄影距离精度的测量成果。影响DLT解法精度的是：控制点分布数量质量、像点坐标的测量精度、两张相片主光轴的交会角、像片张数、非线性畸变误差的改正数。\n\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\">[](http://sns.juziyue.com/webinvite.php?u=94887)&nbsp;今天你[菊子曰](http://sns.juziyue.com/webinvite.php?u=94887)了么？</div>","slug":"后方交会检校(6)--后方交会的补充及DLT和角锥体法","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7qw006zuco45h26ctkm","content":"<p>除了后方交会之外，常用的进行内外参数检校的方法还有DLT和角锥体法。</p>\n<p>写在前面：DLT可在<font color=\"#FF0000\">未提供初值</font>的情况下推导内外方位元素，同时<font color=\"#FF0000\">不需要迭代</font>，但精度相比后方交会较低；<font color=\"#FF0000\">DLT与后方交会等价</font>。</p>\n<p><strong><font color=\"#FF0000\" size=\"5\">内容提要</font></strong></p>\n<p><a href=\"#DLT基本原理与公式\">DLT基本原理与公式</a>&nbsp; <a href=\"#其中\">L的基本形式</a>&nbsp;&nbsp;<a href=\"#根据求得的li计算各参数\">用Li表示内外参数</a>&nbsp;</p>\n<p><a href=\"#非正交与比例尺不一致因素\">非正交与比例尺不一致因素</a>&nbsp; <a href=\"#DLT的真正一般形式\">DLT的真正一般形式</a>&nbsp; <a href=\"#包含2项因素的Li表达内外参数\">包含2项因素的Li表达内外参数</a>&nbsp;</p>\n<p><a href=\"#包含畸变参数校正的DLT\">包含畸变参数校正的DLT</a></p>\n<p><a name=\"DLT基本原理与公式\">DLT基本原理与公式</a></p>\n<p>基本原理：将物方点坐标（X,Y,Z）和(x,y)看做是空间中的某种线性变换，可以互为函数。一般地，将x,y用X,Y,Z表示。</p>\n<p>基本公式：</p>\n<p>$$!\\left{\\begin{matrix}x+\\frac{L<em>{1}X+L</em>{2}Y+L<em>{3}Z+L</em>{4}}{L<em>{9}X+L</em>{10}Y+L<em>{11}Z+1}=0\\y+\\frac{L</em>{5}X+L<em>{6}Y+L</em>{7}Z+L<em>{8}}{L</em>{9}X+L<em>{10}Y+L</em>{11}Z+1}=0\\end{matrix}\\right.$$</p>\n<p>DLT误差方程：</p>\n<font color=\"#FF0000\">$$!\\begin{pmatrix}v<em>{x}\\v</em>{y}\\end{pmatrix}=\\begin{pmatrix}X&amp;Y&amp;Z&amp;1&amp;0&amp;0&amp;0&amp;0&amp;xX&amp;xY&amp;xZ\\0&amp;0&amp;0&amp;0&amp;X&amp;Y&amp;Z&amp;1&amp;yX&amp;yY&amp;yZ\\end{pmatrix}\\begin{pmatrix}L<em>{1}\\L</em>{2}\\L<em>{3}\\L</em>{4}\\L<em>{5}\\L</em>{6}\\L<em>{7}\\L</em>{8}\\L<em>{9}\\L</em>{10}\\L<em>{11}\\end{pmatrix}+\\begin{pmatrix}l</em>{x}\\l_{y}\\end{pmatrix}$$</font>\n\n<p>与后方交会一样，若有n个控制点，则A矩阵有2n行。还是利用求改正数的公式求取。</p>\n<p>DLT推导过程如下：</p>\n<p>根据共线方程的后方交会形式：</p>\n<p>$$!x-x<em>{0}+f</em>{x}\\frac{a<em>{1}(X-X</em>{s})+b<em>{1}(Y-Y</em>{s})+c<em>{1}(Z-Z</em>{s})}{a<em>{3}(X-X</em>{s})+b<em>{3}(Y-Y</em>{s})+c<em>{3}(Z-Z</em>{s})}=0$$</p>\n<p>$$!y-y<em>{0}+f</em>{y}\\frac{a<em>{2}(X-X</em>{s})+b<em>{2}(Y-Y</em>{s})+c<em>{2}(Z-Z</em>{s})}{a<em>{3}(X-X</em>{s})+b<em>{3}(Y-Y</em>{s})+c<em>{3}(Z-Z</em>{s})}=0$$</p>\n<p>这里，f分为fx和fy，即主距在像空系中这两个分量的投影。因为有的单个ccd xy方向上的大小不一致，即不是正方形。</p>\n<p>将X，Y，Z和Xs，Ys，Zs分离，将之看作是摄影中心的变换坐标。</p>\n<font color=\"#FF0000\">$$!\\left{\\begin{matrix}r<em>{1}=-(a</em>{1}X<em>{s}+b</em>{1}Y<em>{s}+c</em>{1}Z<em>{s})\\r</em>{2}=-(a<em>{2}X</em>{s}+b<em>{2}Y</em>{s}+c<em>{2}Z</em>{s})\\r<em>{3}=-(a</em>{3}X<em>{s}+b</em>{3}Y<em>{s}+c</em>{3}Z_{s})\\end{matrix}\\right.$$</font>\n\n<p>化简可得</p>\n<p>$$!x-x<em>{0}+f</em>{x}\\frac{a<em>{1}X+b</em>{1}Y+c<em>{1}Z+r</em>{1}}{a<em>{3}X+b</em>{3}Y+c<em>{3}Z+r</em>{3}}=0$$</p>\n<p>$$!y-y<em>{0}+f</em>{y}\\frac{a<em>{2}X+b</em>{2}Y+c<em>{2}Z+r</em>{1}}{a<em>{3}X+b</em>{3}Y+c<em>{3}Z+r</em>{3}}=0$$</p>\n<p>将x0，y0通分。</p>\n<p>$$!x+\\frac{(a<em>{1}f</em>{x}-a<em>{3}x</em>{0})X+(b<em>{1}f</em>{x}-b<em>{3}x</em>{0})Y+(c<em>{1}f</em>{x}-c<em>{3}x</em>{0})Z+(r<em>{1}f</em>{x}-r<em>{3}x</em>{0})}{a<em>{3}X+b</em>{3}Y+c<em>{3}Z+r</em>{3}}=0$$</p>\n<p>$$!y+\\frac{(a<em>{2}f</em>{y}-a<em>{3}y</em>{0})X+(b<em>{2}f</em>{y}-b<em>{3}y</em>{0})Y+(c<em>{2}f</em>{y}-c<em>{3}y</em>{0})Z+(r<em>{2}f</em>{y}-r<em>{3}y</em>{0})}{a<em>{3}X+b</em>{3}Y+c<em>{3}Z+r</em>{3}}=0$$</p>\n<p>将X、Y、Z的系数简化为L，即</p>\n<p>$$!x+\\frac{L<em>{1}X+L</em>{2}Y+L<em>{3}Z+L</em>{4}}{L<em>{9}X+L</em>{10}Y+L_{11}Z+1}=0$$</p>\n<p>$$!y+\\frac{L<em>{5}X+L</em>{6}Y+L<em>{7}Z+L</em>{8}}{L<em>{9}X+L</em>{10}Y+L_{11}Z+1}=0$$</p>\n<p><a name=\"其中\">其中，L为：</a></p>\n<font color=\"#FF0000\">$$!L=\\begin{bmatrix}L<em>{1}&amp;L</em>{2}&amp;L<em>{3}&amp;L</em>{4}\\L<em>{5}&amp;L</em>{6}&amp;L<em>{7}&amp;L</em>{8}\\L<em>{9}&amp;L</em>{10}&amp;L<em>{11}&amp;L</em>{12}\\end{bmatrix}$$</font>\n\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/151C86750F1FFF17ECE621971610488CBAE13A81.jpg\" alt=\"\"></p>\n<p>该公式表示像点测量坐标与物方点坐标直接的变化，无需内方位元素。从另一个角度看，L矩阵其实是二维坐标通过三次矩阵变换得到的三维坐标，即：</p>\n<p>$$!L=\\frac{1}{r<em>{3}}\\begin{bmatrix}f</em>{x}&amp;0&amp;-x<em>{0}\\0&amp;f</em>{y}&amp;-y<em>{0}\\0&amp;0&amp;1\\end{bmatrix}\\begin{bmatrix}a</em>{1}&amp;b<em>{1}&amp;c</em>{1}\\a<em>{2}&amp;b</em>{2}&amp;c<em>{2}\\a</em>{3}&amp;b<em>{3}&amp;c</em>{3}\\end{bmatrix}\\begin{bmatrix}1&amp;0&amp;0&amp;X<em>{s}\\0&amp;1&amp;0&amp;Y</em>{s}\\0&amp;0&amp;1&amp;Z<em>{s}\\end{bmatrix}=\\frac{1}{r</em>{3}}\\begin{bmatrix}f<em>{x}&amp;0&amp;-x</em>{0}\\0&amp;f<em>{y}&amp;-y</em>{0}\\0&amp;0&amp;1\\end{bmatrix}\\begin{bmatrix}R&amp;t\\0^{T}&amp;1\\end{bmatrix}$$</p>\n<p>第一个矩阵由内方位元素组成，是辅助坐标和像平面坐标的平移和比例关系；第二个矩阵是外方位元素的角元素，表达物方系和地辅系的坐标旋转关系；第三个矩阵是外方位线元素，表达物方坐标和地辅系坐标的原点平移关系。</p>\n<p>由于计算机视觉中使用齐次坐标，即如下形式</p>\n<p>$$!\\begin{pmatrix}x\\y\\1\\end{pmatrix}=L\\begin{pmatrix}X\\Y\\Z\\1\\end{pmatrix}=\\begin{bmatrix}L<em>{1}&amp;L</em>{2}&amp;L<em>{3}&amp;L</em>{4}\\L<em>{5}&amp;L</em>{6}&amp;L<em>{7}&amp;L</em>{8}\\L<em>{9}&amp;L</em>{10}&amp;L<em>{11}&amp;L</em>{12}\\end{bmatrix}\\begin{pmatrix}X\\Y\\Z\\1\\end{pmatrix}$$因此形成了上红色式子。</p>\n<p><a name=\"根据求得的li计算各参数\">根据求得的li计算各参数</a></p>\n<p>重要参数的求解：</p>\n<p>$$!r<em>{3}=\\frac{1}{(L</em>{9}^{2}+L<em>{10}^{2}+L</em>{11}^{2})^{1/2}}$$</p>\n<p>(1)内方位元素</p>\n<p>$$!x<em>{0}=-(L</em>{1}L<em>{9}+L</em>{2}L<em>{10}+L</em>{3}L<em>{11})/(L</em>{9}^{2}+<em>{10}^{2}+L</em>{11}^{2})$$</p>\n<p>$$!y<em>{0}=-(L</em>{5}L<em>{9}+L</em>{6}L<em>{10}+L</em>{7}L<em>{11})/(L</em>{9}^{2}+<em>{10}^{2}+L</em>{11}^{2})$$</p>\n<p>$$!f<em>{x}^{2}=-x</em>{0}^{2}+(L<em>{1}^{2}+L</em>{2}^{2}+L<em>{3}^{2})/(L</em>{9}^{2}+<em>{10}^{2}+L</em>{11}^{2})$$</p>\n<p>$$!f<em>{y}^{2}=-y</em>{0}^{2}+(L<em>{4}^{2}+L</em>{5}^{2}+L<em>{6}^{2})/(L</em>{9}^{2}+<em>{10}^{2}+L</em>{11}^{2})$$</p>\n<p>$$!f=\\frac{1}{2}(f<em>{x}+f</em>{y})$$</p>\n<p>(2)外方位角元素</p>\n<p>$$!\\begin{bmatrix}a<em>{1}&amp;b</em>{1}&amp;c<em>{1}\\end{bmatrix}=\\frac{1}{f</em>{x}}\\begin{bmatrix}\\frac{L<em>{1}}{(L</em>{9}^{2}+L<em>{10}^{2}+L</em>{11}^{2})^{1/2}}+a<em>{3}x</em>{0}\\frac{L<em>{2}}{(L</em>{9}^{2}+L<em>{10}^{2}+L</em>{11}^{2})^{1/2}}+b<em>{3}x</em>{0}\\frac{L<em>{3}}{(L</em>{9}^{2}+L<em>{10}^{2}+L</em>{11}^{2})^{1/2}}+c<em>{3}x</em>{0}\\end{bmatrix}$$</p>\n<p>$$!\\begin{bmatrix}a<em>{2}&amp;b</em>{2}&amp;c<em>{2}\\end{bmatrix}=\\frac{1}{f</em>{y}}\\begin{bmatrix}\\frac{L<em>{5}}{(L</em>{9}^{2}+L<em>{10}^{2}+L</em>{11}^{2})^{1/2}}+a<em>{3}y</em>{0}\\frac{L<em>{6}}{(L</em>{9}^{2}+L<em>{10}^{2}+L</em>{11}^{2})^{1/2}}+b<em>{3}y</em>{0}\\frac{L<em>{7}}{(L</em>{9}^{2}+L<em>{10}^{2}+L</em>{11}^{2})^{1/2}}+c<em>{3}y</em>{0}\\end{bmatrix}$$</p>\n<p>$$!\\begin{bmatrix}a<em>{3}&amp;b</em>{3}&amp;c<em>{3}\\end{bmatrix}=\\frac{1}{(L</em>{9}^{2}+L<em>{10^{2}}+L</em>{11}^{2})^{1/2}}\\begin{bmatrix}L<em>{9}&amp;L</em>{10}&amp;L_{11}\\end{bmatrix}$$</p>\n<p>可以注意到的是，DLT解求内外方位元素是有次序的，因为外方位元素解求的公式中包含有所有的内方位元素。</p>\n<p>$$!\\left{\\begin{matrix}\\varphi =arctan(\\frac{a<em>{3}}{c</em>{3}})=arctan(\\frac{l<em>{9}}{l</em>{11}})\\\\omega =arcsin(-b<em>{3})=arcsin(-\\frac{l</em>{10}}{l<em>{9}^2+l</em>{10}^{2}+l<em>{11}^{2}})\\\\kappa =arctan(\\frac{b</em>{1}}{b<em>{2}})=arctan(\\frac{f</em>{y}[x<em>{0}\\frac{L</em>{2}}{(L<em>{9}^{2}+L</em>{10}^{2}+L<em>{11}^{2})^{1/2}}+b</em>{3}]}{f<em>{x}[y</em>{0}\\frac{L<em>{6}}{(L</em>{9}^{2}+L<em>{10}^{2}+L</em>{11}^{2})^{1/2}}+b_{3}]})\\end{matrix}\\right.$$</p>\n<p>(3)外方位线元素<br> 则需要根据如下方程解出</p>\n<p>$$!a<em>{3}X</em>{s}+b<em>{3}Y</em>{s}+c<em>{3}Z</em>{s}+r_{3}$$</p>\n<p>$$!\\frac{a<em>{1}f</em>{x}-a<em>{3}x</em>{0}}{r<em>{3}}X</em>{s}+\\frac{b<em>{1}f</em>{x}-b<em>{3}x</em>{0}}{r<em>{3}}Y</em>{s}+\\frac{c<em>{1}f</em>{x}-c<em>{3}x</em>{0}}{r<em>{3}}+L</em>{4}=0$$</p>\n<p>$$!\\frac{a<em>{2}f</em>{y}-a<em>{3}y</em>{0}}{r<em>{3}}X</em>{s}+\\frac{b<em>{2}f</em>{y}-b<em>{3}y</em>{0}}{r<em>{3}}Y</em>{s}+\\frac{c<em>{2}f</em>{y}-c<em>{3}y</em>{0}}{r<em>{3}}+L</em>{8}=0$$</p>\n<p>&nbsp;</p>\n<p>DLT实质上与共线方程等价，Li之间的相关性，因为2个条件=11个参数-必要观测个数</p>\n<hr>\n<p>以上是只解求内外方位元素的时候，Li与各参数的关系，如果加上光学畸变、非正交比例、比例尺不一致等误差，光学畸变在前文中提到。</p>\n<p>x轴方向上比例系数为1，y轴方向比例系数为(1+ds).则</p>\n<p>x轴方向上的主距为fx，y轴方向上的主距为fy=fx/(1+ds).</p>\n<p>对数字相机，比例尺不一致可认为是襄垣x、y方向长度不等引起的；而不正交性误差可认为是像元x、y方向排列不垂直引起的。</p>\n<p><a name=\"非正交与比例尺不一致因素\">如图展现了以上两种误差的原因。</a></p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/C99CDEAA218715286FA9FE07A8E69B343C345FAA.jpg\" alt=\"\"></p>\n<p>以下表述中，小括号代表坐标系，中括号代表坐标值。</p>\n<p>$$!(\\overline{x},\\overline{y})[on<em>{2},on</em>{1}]$$——以像主点为原点（像平面坐标系的原点），不包含线性误差的<font color=\"#FF0000\">某像点p的坐标</font></p>\n<p>$$!(x,y)[om<em>{2},0m</em>{1}]$$——以像主点为原点，不包含正交性dβ误差的像点p坐标。</p>\n<p>$$!(x,y)[om<em>{2},om</em>{1}^{‘}]$$——以像主点为原点，不包括正交性dβ误差及比例尺不一致误差ds的像点坐标p</p>\n<p>则从图中可知，$$!\\delta x=on<em>{2}-om</em>{2}=m<em>{2}p\\cdot sin d\\beta=om</em>{1}\\cdot sin d\\beta=(1+ds)(y-y<em>{0})sind\\beta\\approx (y-y</em>{0})sind\\beta$$</p>\n<p>$$!\\delta y=on<em>{1}-om</em>{1}^{‘}=om<em>{1}\\cdot cosd\\beta -om</em>{1}^{‘}=(1+ds)(y-y<em>{0})\\cdot cosd\\beta-(y-y</em>{0})=<a href=\"y-y_{0}\">(1+ds)\\cdot cosd\\beta -1</a>\\approx (y-y_{0})\\cdot ds$$</p>\n<p>将上式2值带入线性方程<font color=\"#FF0000\">有线性误差的形式</font>：式中有11个独立参数，3个内方位x0,yo,fx6个外方位Xs，Ys，Zs，φ，ω，k，比例尺不一致系数ds，xy轴不正交系数dβ。</p>\n<p>$$!\\left{\\begin{matrix}x-x<em>{0}+(1+ds)(y-y</em>{0})\\cdot sind\\beta +f<em>{x}\\frac{a</em>{1}(X-X<em>{s}+b</em>{1}(Y-Y<em>{s})+c</em>{1}(Z-Z<em>{s})}{a</em>{3}(X-X<em>{s})+b</em>{3}(Y-Y<em>{s})+c</em>{3}(Z-Z<em>{s})}=0\\y-y</em>{0}+[(1+ds)\\cdot cosd\\beta-1] (y-y<em>{0})+f</em>{x}\\frac{a<em>{1}(X-X</em>{s}+b<em>{1}(Y-Y</em>{s})+c<em>{1}(Z-Z</em>{s})}{a<em>{3}(X-X</em>{s})+b<em>{3}(Y-Y</em>{s})+c<em>{3}(Z-Z</em>{s})}=0\\end{matrix}\\right.$$</p>\n<p>通过一系列的化简，如前面介绍不带线性误差一样，提取出r1，r2，r3，<a name=\"DLT的真正一般形式\">得到：</a></p>\n<p>$$!x+\\frac{\\frac{1}{r<em>{3}}(a</em>{1}f<em>{x}-a</em>{2}f<em>{x}tand\\beta -a</em>{3}x<em>{0})}{\\frac{a</em>{3}}{r<em>{3}}X+\\frac{b</em>{3}}{r<em>{3}}Y+\\frac{c</em>{3}}{r<em>{3}}Z+1}\\cdot X+\\frac{\\frac{1}{r</em>{3}}(b<em>{1}f</em>{x}-b<em>{2}f</em>{x}tand\\beta -b<em>{3}x</em>{0})}{\\frac{a<em>{3}}{r</em>{3}}X+\\frac{b<em>{3}}{r</em>{3}}Y+\\frac{c<em>{3}}{r</em>{3}}Z+1}\\cdot Y+\\frac{\\frac{1}{r<em>{3}}(c</em>{1}f<em>{x}-c</em>{2}f<em>{x}tand\\beta -c</em>{3}x<em>{0})}{\\frac{a</em>{3}}{r<em>{3}}X+\\frac{b</em>{3}}{r<em>{3}}Y+\\frac{c</em>{3}}{r<em>{3}}Z+1}\\cdot Z+\\frac{\\frac{1}{r</em>{3}}(r<em>{1}f</em>{x}-r<em>{2}f</em>{x}tand\\beta -r<em>{3}x</em>{0})}{\\frac{a<em>{3}}{r</em>{3}}X+\\frac{b<em>{3}}{r</em>{3}}Y+\\frac{c<em>{3}}{r</em>{3}}Z+1}=0$$</p>\n<p>$$!y+\\frac{\\frac{1}{r<em>{3}}[\\frac{a</em>{2}f<em>{x}}{(1+ds)cosd\\beta }-a</em>{3}\\cdot y<em>{0}]}{\\frac{a</em>{3}}{r<em>{3}}X+\\frac{b</em>{3}}{r<em>{3}}Y+\\frac{c</em>{3}}{r<em>{3}}Z+1}\\cdot X+\\frac{\\frac{1}{r</em>{3}}[\\frac{b<em>{2}f</em>{x}}{(1+ds)cosd\\beta }-b<em>{3}\\cdot y</em>{0}]}{\\frac{a<em>{3}}{r</em>{3}}X+\\frac{b<em>{3}}{r</em>{3}}Y+\\frac{c<em>{3}}{r</em>{3}}Z+1}\\cdot Y+\\frac{\\frac{1}{r<em>{3}}[\\frac{c</em>{2}f}{(1+ds)cosd\\beta }-c<em>{3}\\cdot y</em>{0}]}{\\frac{a<em>{3}}{r</em>{3}}X+\\frac{b<em>{3}}{r</em>{3}}Y+\\frac{c<em>{3}}{r</em>{3}}Z+1}\\cdot Z+\\frac{\\frac{1}{r<em>{3}}[\\frac{r</em>{2}f<em>{x}}{(1+ds)cosd\\beta }-r</em>{3}\\cdot y<em>{0}]}{\\frac{a</em>{3}}{r<em>{3}}X+\\frac{b</em>{3}}{r<em>{3}}Y+\\frac{c</em>{3}}{r_{3}}Z+1}=0$$</p>\n<p>则上式即可化为基本式：</p>\n<p>$$!x+\\frac{l<em>{1}X+l</em>{2}Y+l<em>{3}Z+l</em>{4}}{l<em>{9}X+l</em>{10}Y+l_{11}Z+1}=0$$</p>\n<p>$$!y+\\frac{l<em>{5}X+l</em>{6}Y+l<em>{7}Z+l</em>{8}}{l<em>{9}X+l</em>{10}Y+l_{11}Z+1}=0$$</p>\n<p>其中，l4、l8可化简：</p>\n<p>$$!l<em>{8}=\\frac{1}{r</em>{3}}[\\frac{r<em>{2}f</em>{x}}{(1+ds)\\cdot d\\beta}-r<em>{3}\\cdot y</em>{0}]=\\frac{1}{r<em>{3}}[\\frac{-(a</em>{2}Xs+b<em>{2}Y</em>{s}+c<em>{2}Z</em>{s})f<em>{x}}{(1+ds)\\cdot cosd\\beta }+(a</em>{3}X<em>{s}+b</em>{3}Y<em>{s}+c</em>{3}Z<em>{s})\\cdot y</em>{0}]=-\\frac{1}{r<em>{3}}[(\\frac{a</em>{2}f<em>{x}}{(1+ds)\\cdot cosd\\beta }-a</em>{3}y<em>{0})X</em>{s}+(\\frac{b<em>{2}f</em>{x}}{(1+ds)\\cdot cosd\\beta }-b<em>{3}y</em>{0})Y<em>{s}+(\\frac{c</em>{2}f<em>{x}}{(1+ds)\\cdot cosd\\beta }-c</em>{3}y<em>{0})Z</em>{s}]=-(l<em>{5}X</em>{s}+l<em>{6}Y</em>{s}+l<em>{7}Z</em>{s})$$</p>\n<p>$$!l<em>{4}=\\frac{1}{r</em>{3}}(r<em>{1}f</em>{x}-r<em>{2}f</em>{x}tand\\beta -r<em>{3}x</em>{0})=-(l<em>{1}X</em>{s}+l<em>{2}Y</em>{s}+l<em>{3}Z</em>{s})$$</p>\n<p>由于未知数是11个，因此最少需要布置6个控制点。</p>\n<p>值得一提的是，像主点的求解公式与没有畸变参与<a name=\"包含2项因素的Li表达内外参数\">相同</a>，</p>\n<p>$$!x<em>{0}=-(L</em>{1}L<em>{9}+L</em>{2}L<em>{10}+L</em>{3}L<em>{11})/(L</em>{9}^{2}+<em>{10}^{2}+L</em>{11}^{2})$$</p>\n<p>$$!y<em>{0}=-(L</em>{5}L<em>{9}+L</em>{6}L<em>{10}+L</em>{7}L<em>{11})/(L</em>{9}^{2}+<em>{10}^{2}+L</em>{11}^{2})$$</p>\n<p>最重要的ds和dβ，设：</p>\n<p>$$!\\overline{A}=r<em>{3}^{2}(l</em>{1}^{2}+l<em>{2}^{2}+l</em>{3}^{2})-x<em>{0}^{2}=\\frac{f</em>{x}^{2}}{cos^{2}d\\beta }$$</p>\n<p>$$!B=r<em>{3}^{2}(l</em>{5}^{2}+l<em>{6}^{2}+l</em>{7}^{2})-y<em>{0}^{2}=\\frac{f</em>{x}^{2}}{(1+ds)^{2}cos^{2}d\\beta }$$</p>\n<p>$$!C=r<em>{3}^{2}(l</em>{1}l<em>{5}+l</em>{2}l<em>{6}+l</em>{3}l<em>{7})-x</em>{0}y<em>{0}=\\frac{-f</em>{x}^{2}sind\\beta }{(1+ds)cos^{2}d\\beta }$$</p>\n<p>$$!ds=\\sqrt{\\frac{\\overline{A}}{B}-1}$$</p>\n<p>$$!sind\\beta =\\pm \\sqrt{\\frac{C^{2}}{\\overline{A}B}}$$</p>\n<p>而主距的公式变为：</p>\n<p>$$!f_{x}=\\sqrt{\\overline{A}}cosd\\beta $$</p>\n<p>$$!f<em>{y}=\\frac{f</em>{x}}{1+ds}$$</p>\n<p>外方位角元素：</p>\n<p>$$!tan\\varphi =\\frac{a<em>{3}}{c</em>{3}}$$</p>\n<p>$$!sin\\omega =-b_{3}$$</p>\n<p>$$!tan\\kappa =\\frac{b<em>{1}}{b</em>{2}}$$</p>\n<p>其中，$$a<em>{3}=r</em>{3}l<em>{9},b</em>{3}=r<em>{3}l</em>{10},c<em>{3}=r</em>{3}l_{11}$$</p>\n<p>而外方位线元素由以下三个式子构成：</p>\n<p>$$!l<em>{1}X</em>{s}+l<em>{2}Y</em>{s}+l<em>{3}Z</em>{s}=-l_{4}$$</p>\n<p>$$!l<em>{5}X</em>{s}+l<em>{6}Y</em>{s}+l<em>{7}Z</em>{s}=-l_{8}$$</p>\n<p>$$!l<em>{9}X</em>{s}+l<em>{10}Y</em>{s}+l<em>{11}Z</em>{s}=\\frac{a<em>{3}}{r</em>{3}}X<em>{s}+\\frac{b</em>{3}}{r<em>{3}}Y</em>{s}+\\frac{c<em>{3}}{r</em>{3}}Z<em>{s}=-\\frac{a</em>{3}Xs+b<em>{3}Y</em>{s}+c<em>{3}Z</em>{s}}{a<em>{3}Xs+b</em>{3}Y<em>{s}+c</em>{3}Z_{s}}=-1$$</p>\n<p>到这里，能解求出包含非正交比例和xy不一致比例，但缺乏了对镜头畸变的改正。若将镜头畸变写入DLT方程式，则变为：</p>\n<p>$$!x+v<em>{x}+\\Delta x+\\frac{l</em>{1}X+l<em>{2}Y+l</em>{3}Z+l<em>{4}}{l</em>{9}X+l<em>{10}Y+l</em>{11}Z+1}=0$$</p>\n<p>$$!y+v<em>{y}+\\Delta y+\\frac{l</em>{5}X+l<em>{6}Y+l</em>{7}Z+l<em>{8}}{l</em>{9}X+l<em>{10}Y+l</em>{11}Z+1}=0$$</p>\n<p>其中，vx vy是残差，△x △y是畸变的改正数，若忽略切向畸变且只去一项径向畸变的参数作为例子，</p>\n<p>$$!\\left{\\begin{matrix}\\Delta x=(x-x<em>{0})r^{2}k</em>{1}\\\\Delta y=(y-y<em>{0})r^{2}k</em>{1}\\end{matrix}\\right.$$</p>\n<p>再令$$A=l<em>{9}X+l</em>{10}Y+l_{11}Z+1$$</p>\n<p>以li为未知数，列误差方程，则DLT<a name=\"包含畸变参数校正的DLT\">公式可化简为</a>：</p>\n<p>$$!v<em>{x}=-\\frac{1}{A}[Xl</em>{1}+Yl<em>{2}+Zl</em>{3}+l<em>{4}+xXl</em>{9}+xYl<em>{10}+xZl</em>{11}+A(x-x<em>{0}^{2})r^{2}k</em>{1}+x]$$</p>\n<p>$$!v<em>{y}=-\\frac{1}{A}[Xl</em>{5}+Yl<em>{6}+Zl</em>{7}+l<em>{8}+yXl</em>{9}+yYl<em>{10}+yZl</em>{11}+A(y-y<em>{0}^{2})r^{2}k</em>{1}+x]$$</p>\n<p>矩阵的形式则可写为（以物方坐标表示像点坐标）：</p>\n<font color=\"#FF0000\">$$!\\begin{bmatrix}v<em>{x}\\v</em>{y}\\end{bmatrix}=\\begin{bmatrix}\\frac{X}{A}&amp;\\frac{Y}{A}&amp;\\frac{Z}{A}&amp;\\frac{1}{A}&amp;0&amp;0&amp;0&amp;0&amp;\\frac{xX}{A}&amp;\\frac{xY}{A}&amp;\\frac{xZ}{A}&amp;(x-x<em>{0})r^{2}\\0&amp;0&amp;0&amp;0&amp;\\frac{X}{A}&amp;\\frac{Y}{A}&amp;\\frac{Z}{A}&amp;\\frac{1}{A}&amp;\\frac{yX}{A}&amp;\\frac{yY}{A}&amp;\\frac{yZ}{A}&amp;(y-y</em>{0})r^{2}\\end{bmatrix}\\begin{bmatrix}l<em>{1}\\l</em>{2}\\l<em>{3}\\l</em>{4}\\l<em>{5}\\l</em>{6}\\l<em>{7}\\l</em>{8}\\l<em>{9}\\l</em>{10}\\l<em>{11}\\k</em>{1}\\end{bmatrix}-\\begin{bmatrix}\\frac{x}{A}\\\\frac{y}{A}\\end{bmatrix}$$</font>\n\n<p>可简写为:</p>\n<p>$$!V=AL+BX-W$$</p>\n<p>其中L是11个（二维DLT是可能是8个）li参数，X是单独提出来计算的畸变系数，在后交时通常加载改正数值里，当学要加入更多畸变参数时，需要确定更多的B矩阵中的形式。W一般是x/A,y/A.</p>\n<p>A和B的求取也是迭代计算，每次迭代A的值计算是通过控制点求得的。对不同控制点像点坐标列误差方程，A的值也不同。</p>\n<p>简单提一下以像方坐标表示物放坐标的DLT公式：</p>\n<p>$$!(l<em>{1}+\\overline{x}l</em>{9})X+(l<em>{2}+\\overline{x}l</em>{10})Y+(l<em>{3}+\\overline{x}l</em>{11})Z+(l_{4}+\\overline{x})=0$$</p>\n<p>$$!(l<em>{5}+\\overline{y}l</em>{9})X+(l<em>{6}+\\overline{y}l</em>{10})Y+(l<em>{7}+\\overline{y}l</em>{11})Z+(l_{8}+\\overline{y})=0$$</p>\n<p>直接线性变换的精度：可提供1/5000摄影距离精度的测量成果。影响DLT解法精度的是：控制点分布数量质量、像点坐标的测量精度、两张相片主光轴的交会角、像片张数、非线性畸变误差的改正数。</p>\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\"><a href=\"http://sns.juziyue.com/webinvite.php?u=94887\" target=\"_blank\" rel=\"external\"></a>&nbsp;今天你<a href=\"http://sns.juziyue.com/webinvite.php?u=94887\" target=\"_blank\" rel=\"external\">菊子曰</a>了么？</div>","excerpt":"","more":"<p>除了后方交会之外，常用的进行内外参数检校的方法还有DLT和角锥体法。</p>\n<p>写在前面：DLT可在<font color=\"#FF0000\">未提供初值</font>的情况下推导内外方位元素，同时<font color=\"#FF0000\">不需要迭代</font>，但精度相比后方交会较低；<font color=\"#FF0000\">DLT与后方交会等价</font>。</p>\n<p><strong><font color=\"#FF0000\" size=\"5\">内容提要</font></strong></p>\n<p><a href=\"#DLT基本原理与公式\">DLT基本原理与公式</a>&nbsp; <a href=\"#其中\">L的基本形式</a>&nbsp;&nbsp;<a href=\"#根据求得的li计算各参数\">用Li表示内外参数</a>&nbsp;</p>\n<p><a href=\"#非正交与比例尺不一致因素\">非正交与比例尺不一致因素</a>&nbsp; <a href=\"#DLT的真正一般形式\">DLT的真正一般形式</a>&nbsp; <a href=\"#包含2项因素的Li表达内外参数\">包含2项因素的Li表达内外参数</a>&nbsp;</p>\n<p><a href=\"#包含畸变参数校正的DLT\">包含畸变参数校正的DLT</a></p>\n<p><a name=\"DLT基本原理与公式\">DLT基本原理与公式</a></p>\n<p>基本原理：将物方点坐标（X,Y,Z）和(x,y)看做是空间中的某种线性变换，可以互为函数。一般地，将x,y用X,Y,Z表示。</p>\n<p>基本公式：</p>\n<p>$$!\\left{\\begin{matrix}x+\\frac{L<em>{1}X+L</em>{2}Y+L<em>{3}Z+L</em>{4}}{L<em>{9}X+L</em>{10}Y+L<em>{11}Z+1}=0\\y+\\frac{L</em>{5}X+L<em>{6}Y+L</em>{7}Z+L<em>{8}}{L</em>{9}X+L<em>{10}Y+L</em>{11}Z+1}=0\\end{matrix}\\right.$$</p>\n<p>DLT误差方程：</p>\n<font color=\"#FF0000\">$$!\\begin{pmatrix}v<em>{x}\\v</em>{y}\\end{pmatrix}=\\begin{pmatrix}X&amp;Y&amp;Z&amp;1&amp;0&amp;0&amp;0&amp;0&amp;xX&amp;xY&amp;xZ\\0&amp;0&amp;0&amp;0&amp;X&amp;Y&amp;Z&amp;1&amp;yX&amp;yY&amp;yZ\\end{pmatrix}\\begin{pmatrix}L<em>{1}\\L</em>{2}\\L<em>{3}\\L</em>{4}\\L<em>{5}\\L</em>{6}\\L<em>{7}\\L</em>{8}\\L<em>{9}\\L</em>{10}\\L<em>{11}\\end{pmatrix}+\\begin{pmatrix}l</em>{x}\\l_{y}\\end{pmatrix}$$</font>\n\n<p>与后方交会一样，若有n个控制点，则A矩阵有2n行。还是利用求改正数的公式求取。</p>\n<p>DLT推导过程如下：</p>\n<p>根据共线方程的后方交会形式：</p>\n<p>$$!x-x<em>{0}+f</em>{x}\\frac{a<em>{1}(X-X</em>{s})+b<em>{1}(Y-Y</em>{s})+c<em>{1}(Z-Z</em>{s})}{a<em>{3}(X-X</em>{s})+b<em>{3}(Y-Y</em>{s})+c<em>{3}(Z-Z</em>{s})}=0$$</p>\n<p>$$!y-y<em>{0}+f</em>{y}\\frac{a<em>{2}(X-X</em>{s})+b<em>{2}(Y-Y</em>{s})+c<em>{2}(Z-Z</em>{s})}{a<em>{3}(X-X</em>{s})+b<em>{3}(Y-Y</em>{s})+c<em>{3}(Z-Z</em>{s})}=0$$</p>\n<p>这里，f分为fx和fy，即主距在像空系中这两个分量的投影。因为有的单个ccd xy方向上的大小不一致，即不是正方形。</p>\n<p>将X，Y，Z和Xs，Ys，Zs分离，将之看作是摄影中心的变换坐标。</p>\n<font color=\"#FF0000\">$$!\\left{\\begin{matrix}r<em>{1}=-(a</em>{1}X<em>{s}+b</em>{1}Y<em>{s}+c</em>{1}Z<em>{s})\\r</em>{2}=-(a<em>{2}X</em>{s}+b<em>{2}Y</em>{s}+c<em>{2}Z</em>{s})\\r<em>{3}=-(a</em>{3}X<em>{s}+b</em>{3}Y<em>{s}+c</em>{3}Z_{s})\\end{matrix}\\right.$$</font>\n\n<p>化简可得</p>\n<p>$$!x-x<em>{0}+f</em>{x}\\frac{a<em>{1}X+b</em>{1}Y+c<em>{1}Z+r</em>{1}}{a<em>{3}X+b</em>{3}Y+c<em>{3}Z+r</em>{3}}=0$$</p>\n<p>$$!y-y<em>{0}+f</em>{y}\\frac{a<em>{2}X+b</em>{2}Y+c<em>{2}Z+r</em>{1}}{a<em>{3}X+b</em>{3}Y+c<em>{3}Z+r</em>{3}}=0$$</p>\n<p>将x0，y0通分。</p>\n<p>$$!x+\\frac{(a<em>{1}f</em>{x}-a<em>{3}x</em>{0})X+(b<em>{1}f</em>{x}-b<em>{3}x</em>{0})Y+(c<em>{1}f</em>{x}-c<em>{3}x</em>{0})Z+(r<em>{1}f</em>{x}-r<em>{3}x</em>{0})}{a<em>{3}X+b</em>{3}Y+c<em>{3}Z+r</em>{3}}=0$$</p>\n<p>$$!y+\\frac{(a<em>{2}f</em>{y}-a<em>{3}y</em>{0})X+(b<em>{2}f</em>{y}-b<em>{3}y</em>{0})Y+(c<em>{2}f</em>{y}-c<em>{3}y</em>{0})Z+(r<em>{2}f</em>{y}-r<em>{3}y</em>{0})}{a<em>{3}X+b</em>{3}Y+c<em>{3}Z+r</em>{3}}=0$$</p>\n<p>将X、Y、Z的系数简化为L，即</p>\n<p>$$!x+\\frac{L<em>{1}X+L</em>{2}Y+L<em>{3}Z+L</em>{4}}{L<em>{9}X+L</em>{10}Y+L_{11}Z+1}=0$$</p>\n<p>$$!y+\\frac{L<em>{5}X+L</em>{6}Y+L<em>{7}Z+L</em>{8}}{L<em>{9}X+L</em>{10}Y+L_{11}Z+1}=0$$</p>\n<p><a name=\"其中\">其中，L为：</a></p>\n<font color=\"#FF0000\">$$!L=\\begin{bmatrix}L<em>{1}&amp;L</em>{2}&amp;L<em>{3}&amp;L</em>{4}\\L<em>{5}&amp;L</em>{6}&amp;L<em>{7}&amp;L</em>{8}\\L<em>{9}&amp;L</em>{10}&amp;L<em>{11}&amp;L</em>{12}\\end{bmatrix}$$</font>\n\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/151C86750F1FFF17ECE621971610488CBAE13A81.jpg\" alt=\"\"></p>\n<p>该公式表示像点测量坐标与物方点坐标直接的变化，无需内方位元素。从另一个角度看，L矩阵其实是二维坐标通过三次矩阵变换得到的三维坐标，即：</p>\n<p>$$!L=\\frac{1}{r<em>{3}}\\begin{bmatrix}f</em>{x}&amp;0&amp;-x<em>{0}\\0&amp;f</em>{y}&amp;-y<em>{0}\\0&amp;0&amp;1\\end{bmatrix}\\begin{bmatrix}a</em>{1}&amp;b<em>{1}&amp;c</em>{1}\\a<em>{2}&amp;b</em>{2}&amp;c<em>{2}\\a</em>{3}&amp;b<em>{3}&amp;c</em>{3}\\end{bmatrix}\\begin{bmatrix}1&amp;0&amp;0&amp;X<em>{s}\\0&amp;1&amp;0&amp;Y</em>{s}\\0&amp;0&amp;1&amp;Z<em>{s}\\end{bmatrix}=\\frac{1}{r</em>{3}}\\begin{bmatrix}f<em>{x}&amp;0&amp;-x</em>{0}\\0&amp;f<em>{y}&amp;-y</em>{0}\\0&amp;0&amp;1\\end{bmatrix}\\begin{bmatrix}R&amp;t\\0^{T}&amp;1\\end{bmatrix}$$</p>\n<p>第一个矩阵由内方位元素组成，是辅助坐标和像平面坐标的平移和比例关系；第二个矩阵是外方位元素的角元素，表达物方系和地辅系的坐标旋转关系；第三个矩阵是外方位线元素，表达物方坐标和地辅系坐标的原点平移关系。</p>\n<p>由于计算机视觉中使用齐次坐标，即如下形式</p>\n<p>$$!\\begin{pmatrix}x\\y\\1\\end{pmatrix}=L\\begin{pmatrix}X\\Y\\Z\\1\\end{pmatrix}=\\begin{bmatrix}L<em>{1}&amp;L</em>{2}&amp;L<em>{3}&amp;L</em>{4}\\L<em>{5}&amp;L</em>{6}&amp;L<em>{7}&amp;L</em>{8}\\L<em>{9}&amp;L</em>{10}&amp;L<em>{11}&amp;L</em>{12}\\end{bmatrix}\\begin{pmatrix}X\\Y\\Z\\1\\end{pmatrix}$$因此形成了上红色式子。</p>\n<p><a name=\"根据求得的li计算各参数\">根据求得的li计算各参数</a></p>\n<p>重要参数的求解：</p>\n<p>$$!r<em>{3}=\\frac{1}{(L</em>{9}^{2}+L<em>{10}^{2}+L</em>{11}^{2})^{1/2}}$$</p>\n<p>(1)内方位元素</p>\n<p>$$!x<em>{0}=-(L</em>{1}L<em>{9}+L</em>{2}L<em>{10}+L</em>{3}L<em>{11})/(L</em>{9}^{2}+<em>{10}^{2}+L</em>{11}^{2})$$</p>\n<p>$$!y<em>{0}=-(L</em>{5}L<em>{9}+L</em>{6}L<em>{10}+L</em>{7}L<em>{11})/(L</em>{9}^{2}+<em>{10}^{2}+L</em>{11}^{2})$$</p>\n<p>$$!f<em>{x}^{2}=-x</em>{0}^{2}+(L<em>{1}^{2}+L</em>{2}^{2}+L<em>{3}^{2})/(L</em>{9}^{2}+<em>{10}^{2}+L</em>{11}^{2})$$</p>\n<p>$$!f<em>{y}^{2}=-y</em>{0}^{2}+(L<em>{4}^{2}+L</em>{5}^{2}+L<em>{6}^{2})/(L</em>{9}^{2}+<em>{10}^{2}+L</em>{11}^{2})$$</p>\n<p>$$!f=\\frac{1}{2}(f<em>{x}+f</em>{y})$$</p>\n<p>(2)外方位角元素</p>\n<p>$$!\\begin{bmatrix}a<em>{1}&amp;b</em>{1}&amp;c<em>{1}\\end{bmatrix}=\\frac{1}{f</em>{x}}\\begin{bmatrix}\\frac{L<em>{1}}{(L</em>{9}^{2}+L<em>{10}^{2}+L</em>{11}^{2})^{1/2}}+a<em>{3}x</em>{0}\\frac{L<em>{2}}{(L</em>{9}^{2}+L<em>{10}^{2}+L</em>{11}^{2})^{1/2}}+b<em>{3}x</em>{0}\\frac{L<em>{3}}{(L</em>{9}^{2}+L<em>{10}^{2}+L</em>{11}^{2})^{1/2}}+c<em>{3}x</em>{0}\\end{bmatrix}$$</p>\n<p>$$!\\begin{bmatrix}a<em>{2}&amp;b</em>{2}&amp;c<em>{2}\\end{bmatrix}=\\frac{1}{f</em>{y}}\\begin{bmatrix}\\frac{L<em>{5}}{(L</em>{9}^{2}+L<em>{10}^{2}+L</em>{11}^{2})^{1/2}}+a<em>{3}y</em>{0}\\frac{L<em>{6}}{(L</em>{9}^{2}+L<em>{10}^{2}+L</em>{11}^{2})^{1/2}}+b<em>{3}y</em>{0}\\frac{L<em>{7}}{(L</em>{9}^{2}+L<em>{10}^{2}+L</em>{11}^{2})^{1/2}}+c<em>{3}y</em>{0}\\end{bmatrix}$$</p>\n<p>$$!\\begin{bmatrix}a<em>{3}&amp;b</em>{3}&amp;c<em>{3}\\end{bmatrix}=\\frac{1}{(L</em>{9}^{2}+L<em>{10^{2}}+L</em>{11}^{2})^{1/2}}\\begin{bmatrix}L<em>{9}&amp;L</em>{10}&amp;L_{11}\\end{bmatrix}$$</p>\n<p>可以注意到的是，DLT解求内外方位元素是有次序的，因为外方位元素解求的公式中包含有所有的内方位元素。</p>\n<p>$$!\\left{\\begin{matrix}\\varphi =arctan(\\frac{a<em>{3}}{c</em>{3}})=arctan(\\frac{l<em>{9}}{l</em>{11}})\\\\omega =arcsin(-b<em>{3})=arcsin(-\\frac{l</em>{10}}{l<em>{9}^2+l</em>{10}^{2}+l<em>{11}^{2}})\\\\kappa =arctan(\\frac{b</em>{1}}{b<em>{2}})=arctan(\\frac{f</em>{y}[x<em>{0}\\frac{L</em>{2}}{(L<em>{9}^{2}+L</em>{10}^{2}+L<em>{11}^{2})^{1/2}}+b</em>{3}]}{f<em>{x}[y</em>{0}\\frac{L<em>{6}}{(L</em>{9}^{2}+L<em>{10}^{2}+L</em>{11}^{2})^{1/2}}+b_{3}]})\\end{matrix}\\right.$$</p>\n<p>(3)外方位线元素<br> 则需要根据如下方程解出</p>\n<p>$$!a<em>{3}X</em>{s}+b<em>{3}Y</em>{s}+c<em>{3}Z</em>{s}+r_{3}$$</p>\n<p>$$!\\frac{a<em>{1}f</em>{x}-a<em>{3}x</em>{0}}{r<em>{3}}X</em>{s}+\\frac{b<em>{1}f</em>{x}-b<em>{3}x</em>{0}}{r<em>{3}}Y</em>{s}+\\frac{c<em>{1}f</em>{x}-c<em>{3}x</em>{0}}{r<em>{3}}+L</em>{4}=0$$</p>\n<p>$$!\\frac{a<em>{2}f</em>{y}-a<em>{3}y</em>{0}}{r<em>{3}}X</em>{s}+\\frac{b<em>{2}f</em>{y}-b<em>{3}y</em>{0}}{r<em>{3}}Y</em>{s}+\\frac{c<em>{2}f</em>{y}-c<em>{3}y</em>{0}}{r<em>{3}}+L</em>{8}=0$$</p>\n<p>&nbsp;</p>\n<p>DLT实质上与共线方程等价，Li之间的相关性，因为2个条件=11个参数-必要观测个数</p>\n<hr>\n<p>以上是只解求内外方位元素的时候，Li与各参数的关系，如果加上光学畸变、非正交比例、比例尺不一致等误差，光学畸变在前文中提到。</p>\n<p>x轴方向上比例系数为1，y轴方向比例系数为(1+ds).则</p>\n<p>x轴方向上的主距为fx，y轴方向上的主距为fy=fx/(1+ds).</p>\n<p>对数字相机，比例尺不一致可认为是襄垣x、y方向长度不等引起的；而不正交性误差可认为是像元x、y方向排列不垂直引起的。</p>\n<p><a name=\"非正交与比例尺不一致因素\">如图展现了以上两种误差的原因。</a></p>\n<p><img src=\"http://www.dooby.me/wp-content/uploads/2015/11/C99CDEAA218715286FA9FE07A8E69B343C345FAA.jpg\" alt=\"\"></p>\n<p>以下表述中，小括号代表坐标系，中括号代表坐标值。</p>\n<p>$$!(\\overline{x},\\overline{y})[on<em>{2},on</em>{1}]$$——以像主点为原点（像平面坐标系的原点），不包含线性误差的<font color=\"#FF0000\">某像点p的坐标</font></p>\n<p>$$!(x,y)[om<em>{2},0m</em>{1}]$$——以像主点为原点，不包含正交性dβ误差的像点p坐标。</p>\n<p>$$!(x,y)[om<em>{2},om</em>{1}^{‘}]$$——以像主点为原点，不包括正交性dβ误差及比例尺不一致误差ds的像点坐标p</p>\n<p>则从图中可知，$$!\\delta x=on<em>{2}-om</em>{2}=m<em>{2}p\\cdot sin d\\beta=om</em>{1}\\cdot sin d\\beta=(1+ds)(y-y<em>{0})sind\\beta\\approx (y-y</em>{0})sind\\beta$$</p>\n<p>$$!\\delta y=on<em>{1}-om</em>{1}^{‘}=om<em>{1}\\cdot cosd\\beta -om</em>{1}^{‘}=(1+ds)(y-y<em>{0})\\cdot cosd\\beta-(y-y</em>{0})=<a href=\"y-y_{0}\">(1+ds)\\cdot cosd\\beta -1</a>\\approx (y-y_{0})\\cdot ds$$</p>\n<p>将上式2值带入线性方程<font color=\"#FF0000\">有线性误差的形式</font>：式中有11个独立参数，3个内方位x0,yo,fx6个外方位Xs，Ys，Zs，φ，ω，k，比例尺不一致系数ds，xy轴不正交系数dβ。</p>\n<p>$$!\\left{\\begin{matrix}x-x<em>{0}+(1+ds)(y-y</em>{0})\\cdot sind\\beta +f<em>{x}\\frac{a</em>{1}(X-X<em>{s}+b</em>{1}(Y-Y<em>{s})+c</em>{1}(Z-Z<em>{s})}{a</em>{3}(X-X<em>{s})+b</em>{3}(Y-Y<em>{s})+c</em>{3}(Z-Z<em>{s})}=0\\y-y</em>{0}+[(1+ds)\\cdot cosd\\beta-1] (y-y<em>{0})+f</em>{x}\\frac{a<em>{1}(X-X</em>{s}+b<em>{1}(Y-Y</em>{s})+c<em>{1}(Z-Z</em>{s})}{a<em>{3}(X-X</em>{s})+b<em>{3}(Y-Y</em>{s})+c<em>{3}(Z-Z</em>{s})}=0\\end{matrix}\\right.$$</p>\n<p>通过一系列的化简，如前面介绍不带线性误差一样，提取出r1，r2，r3，<a name=\"DLT的真正一般形式\">得到：</a></p>\n<p>$$!x+\\frac{\\frac{1}{r<em>{3}}(a</em>{1}f<em>{x}-a</em>{2}f<em>{x}tand\\beta -a</em>{3}x<em>{0})}{\\frac{a</em>{3}}{r<em>{3}}X+\\frac{b</em>{3}}{r<em>{3}}Y+\\frac{c</em>{3}}{r<em>{3}}Z+1}\\cdot X+\\frac{\\frac{1}{r</em>{3}}(b<em>{1}f</em>{x}-b<em>{2}f</em>{x}tand\\beta -b<em>{3}x</em>{0})}{\\frac{a<em>{3}}{r</em>{3}}X+\\frac{b<em>{3}}{r</em>{3}}Y+\\frac{c<em>{3}}{r</em>{3}}Z+1}\\cdot Y+\\frac{\\frac{1}{r<em>{3}}(c</em>{1}f<em>{x}-c</em>{2}f<em>{x}tand\\beta -c</em>{3}x<em>{0})}{\\frac{a</em>{3}}{r<em>{3}}X+\\frac{b</em>{3}}{r<em>{3}}Y+\\frac{c</em>{3}}{r<em>{3}}Z+1}\\cdot Z+\\frac{\\frac{1}{r</em>{3}}(r<em>{1}f</em>{x}-r<em>{2}f</em>{x}tand\\beta -r<em>{3}x</em>{0})}{\\frac{a<em>{3}}{r</em>{3}}X+\\frac{b<em>{3}}{r</em>{3}}Y+\\frac{c<em>{3}}{r</em>{3}}Z+1}=0$$</p>\n<p>$$!y+\\frac{\\frac{1}{r<em>{3}}[\\frac{a</em>{2}f<em>{x}}{(1+ds)cosd\\beta }-a</em>{3}\\cdot y<em>{0}]}{\\frac{a</em>{3}}{r<em>{3}}X+\\frac{b</em>{3}}{r<em>{3}}Y+\\frac{c</em>{3}}{r<em>{3}}Z+1}\\cdot X+\\frac{\\frac{1}{r</em>{3}}[\\frac{b<em>{2}f</em>{x}}{(1+ds)cosd\\beta }-b<em>{3}\\cdot y</em>{0}]}{\\frac{a<em>{3}}{r</em>{3}}X+\\frac{b<em>{3}}{r</em>{3}}Y+\\frac{c<em>{3}}{r</em>{3}}Z+1}\\cdot Y+\\frac{\\frac{1}{r<em>{3}}[\\frac{c</em>{2}f}{(1+ds)cosd\\beta }-c<em>{3}\\cdot y</em>{0}]}{\\frac{a<em>{3}}{r</em>{3}}X+\\frac{b<em>{3}}{r</em>{3}}Y+\\frac{c<em>{3}}{r</em>{3}}Z+1}\\cdot Z+\\frac{\\frac{1}{r<em>{3}}[\\frac{r</em>{2}f<em>{x}}{(1+ds)cosd\\beta }-r</em>{3}\\cdot y<em>{0}]}{\\frac{a</em>{3}}{r<em>{3}}X+\\frac{b</em>{3}}{r<em>{3}}Y+\\frac{c</em>{3}}{r_{3}}Z+1}=0$$</p>\n<p>则上式即可化为基本式：</p>\n<p>$$!x+\\frac{l<em>{1}X+l</em>{2}Y+l<em>{3}Z+l</em>{4}}{l<em>{9}X+l</em>{10}Y+l_{11}Z+1}=0$$</p>\n<p>$$!y+\\frac{l<em>{5}X+l</em>{6}Y+l<em>{7}Z+l</em>{8}}{l<em>{9}X+l</em>{10}Y+l_{11}Z+1}=0$$</p>\n<p>其中，l4、l8可化简：</p>\n<p>$$!l<em>{8}=\\frac{1}{r</em>{3}}[\\frac{r<em>{2}f</em>{x}}{(1+ds)\\cdot d\\beta}-r<em>{3}\\cdot y</em>{0}]=\\frac{1}{r<em>{3}}[\\frac{-(a</em>{2}Xs+b<em>{2}Y</em>{s}+c<em>{2}Z</em>{s})f<em>{x}}{(1+ds)\\cdot cosd\\beta }+(a</em>{3}X<em>{s}+b</em>{3}Y<em>{s}+c</em>{3}Z<em>{s})\\cdot y</em>{0}]=-\\frac{1}{r<em>{3}}[(\\frac{a</em>{2}f<em>{x}}{(1+ds)\\cdot cosd\\beta }-a</em>{3}y<em>{0})X</em>{s}+(\\frac{b<em>{2}f</em>{x}}{(1+ds)\\cdot cosd\\beta }-b<em>{3}y</em>{0})Y<em>{s}+(\\frac{c</em>{2}f<em>{x}}{(1+ds)\\cdot cosd\\beta }-c</em>{3}y<em>{0})Z</em>{s}]=-(l<em>{5}X</em>{s}+l<em>{6}Y</em>{s}+l<em>{7}Z</em>{s})$$</p>\n<p>$$!l<em>{4}=\\frac{1}{r</em>{3}}(r<em>{1}f</em>{x}-r<em>{2}f</em>{x}tand\\beta -r<em>{3}x</em>{0})=-(l<em>{1}X</em>{s}+l<em>{2}Y</em>{s}+l<em>{3}Z</em>{s})$$</p>\n<p>由于未知数是11个，因此最少需要布置6个控制点。</p>\n<p>值得一提的是，像主点的求解公式与没有畸变参与<a name=\"包含2项因素的Li表达内外参数\">相同</a>，</p>\n<p>$$!x<em>{0}=-(L</em>{1}L<em>{9}+L</em>{2}L<em>{10}+L</em>{3}L<em>{11})/(L</em>{9}^{2}+<em>{10}^{2}+L</em>{11}^{2})$$</p>\n<p>$$!y<em>{0}=-(L</em>{5}L<em>{9}+L</em>{6}L<em>{10}+L</em>{7}L<em>{11})/(L</em>{9}^{2}+<em>{10}^{2}+L</em>{11}^{2})$$</p>\n<p>最重要的ds和dβ，设：</p>\n<p>$$!\\overline{A}=r<em>{3}^{2}(l</em>{1}^{2}+l<em>{2}^{2}+l</em>{3}^{2})-x<em>{0}^{2}=\\frac{f</em>{x}^{2}}{cos^{2}d\\beta }$$</p>\n<p>$$!B=r<em>{3}^{2}(l</em>{5}^{2}+l<em>{6}^{2}+l</em>{7}^{2})-y<em>{0}^{2}=\\frac{f</em>{x}^{2}}{(1+ds)^{2}cos^{2}d\\beta }$$</p>\n<p>$$!C=r<em>{3}^{2}(l</em>{1}l<em>{5}+l</em>{2}l<em>{6}+l</em>{3}l<em>{7})-x</em>{0}y<em>{0}=\\frac{-f</em>{x}^{2}sind\\beta }{(1+ds)cos^{2}d\\beta }$$</p>\n<p>$$!ds=\\sqrt{\\frac{\\overline{A}}{B}-1}$$</p>\n<p>$$!sind\\beta =\\pm \\sqrt{\\frac{C^{2}}{\\overline{A}B}}$$</p>\n<p>而主距的公式变为：</p>\n<p>$$!f_{x}=\\sqrt{\\overline{A}}cosd\\beta $$</p>\n<p>$$!f<em>{y}=\\frac{f</em>{x}}{1+ds}$$</p>\n<p>外方位角元素：</p>\n<p>$$!tan\\varphi =\\frac{a<em>{3}}{c</em>{3}}$$</p>\n<p>$$!sin\\omega =-b_{3}$$</p>\n<p>$$!tan\\kappa =\\frac{b<em>{1}}{b</em>{2}}$$</p>\n<p>其中，$$a<em>{3}=r</em>{3}l<em>{9},b</em>{3}=r<em>{3}l</em>{10},c<em>{3}=r</em>{3}l_{11}$$</p>\n<p>而外方位线元素由以下三个式子构成：</p>\n<p>$$!l<em>{1}X</em>{s}+l<em>{2}Y</em>{s}+l<em>{3}Z</em>{s}=-l_{4}$$</p>\n<p>$$!l<em>{5}X</em>{s}+l<em>{6}Y</em>{s}+l<em>{7}Z</em>{s}=-l_{8}$$</p>\n<p>$$!l<em>{9}X</em>{s}+l<em>{10}Y</em>{s}+l<em>{11}Z</em>{s}=\\frac{a<em>{3}}{r</em>{3}}X<em>{s}+\\frac{b</em>{3}}{r<em>{3}}Y</em>{s}+\\frac{c<em>{3}}{r</em>{3}}Z<em>{s}=-\\frac{a</em>{3}Xs+b<em>{3}Y</em>{s}+c<em>{3}Z</em>{s}}{a<em>{3}Xs+b</em>{3}Y<em>{s}+c</em>{3}Z_{s}}=-1$$</p>\n<p>到这里，能解求出包含非正交比例和xy不一致比例，但缺乏了对镜头畸变的改正。若将镜头畸变写入DLT方程式，则变为：</p>\n<p>$$!x+v<em>{x}+\\Delta x+\\frac{l</em>{1}X+l<em>{2}Y+l</em>{3}Z+l<em>{4}}{l</em>{9}X+l<em>{10}Y+l</em>{11}Z+1}=0$$</p>\n<p>$$!y+v<em>{y}+\\Delta y+\\frac{l</em>{5}X+l<em>{6}Y+l</em>{7}Z+l<em>{8}}{l</em>{9}X+l<em>{10}Y+l</em>{11}Z+1}=0$$</p>\n<p>其中，vx vy是残差，△x △y是畸变的改正数，若忽略切向畸变且只去一项径向畸变的参数作为例子，</p>\n<p>$$!\\left{\\begin{matrix}\\Delta x=(x-x<em>{0})r^{2}k</em>{1}\\\\Delta y=(y-y<em>{0})r^{2}k</em>{1}\\end{matrix}\\right.$$</p>\n<p>再令$$A=l<em>{9}X+l</em>{10}Y+l_{11}Z+1$$</p>\n<p>以li为未知数，列误差方程，则DLT<a name=\"包含畸变参数校正的DLT\">公式可化简为</a>：</p>\n<p>$$!v<em>{x}=-\\frac{1}{A}[Xl</em>{1}+Yl<em>{2}+Zl</em>{3}+l<em>{4}+xXl</em>{9}+xYl<em>{10}+xZl</em>{11}+A(x-x<em>{0}^{2})r^{2}k</em>{1}+x]$$</p>\n<p>$$!v<em>{y}=-\\frac{1}{A}[Xl</em>{5}+Yl<em>{6}+Zl</em>{7}+l<em>{8}+yXl</em>{9}+yYl<em>{10}+yZl</em>{11}+A(y-y<em>{0}^{2})r^{2}k</em>{1}+x]$$</p>\n<p>矩阵的形式则可写为（以物方坐标表示像点坐标）：</p>\n<font color=\"#FF0000\">$$!\\begin{bmatrix}v<em>{x}\\v</em>{y}\\end{bmatrix}=\\begin{bmatrix}\\frac{X}{A}&amp;\\frac{Y}{A}&amp;\\frac{Z}{A}&amp;\\frac{1}{A}&amp;0&amp;0&amp;0&amp;0&amp;\\frac{xX}{A}&amp;\\frac{xY}{A}&amp;\\frac{xZ}{A}&amp;(x-x<em>{0})r^{2}\\0&amp;0&amp;0&amp;0&amp;\\frac{X}{A}&amp;\\frac{Y}{A}&amp;\\frac{Z}{A}&amp;\\frac{1}{A}&amp;\\frac{yX}{A}&amp;\\frac{yY}{A}&amp;\\frac{yZ}{A}&amp;(y-y</em>{0})r^{2}\\end{bmatrix}\\begin{bmatrix}l<em>{1}\\l</em>{2}\\l<em>{3}\\l</em>{4}\\l<em>{5}\\l</em>{6}\\l<em>{7}\\l</em>{8}\\l<em>{9}\\l</em>{10}\\l<em>{11}\\k</em>{1}\\end{bmatrix}-\\begin{bmatrix}\\frac{x}{A}\\\\frac{y}{A}\\end{bmatrix}$$</font>\n\n<p>可简写为:</p>\n<p>$$!V=AL+BX-W$$</p>\n<p>其中L是11个（二维DLT是可能是8个）li参数，X是单独提出来计算的畸变系数，在后交时通常加载改正数值里，当学要加入更多畸变参数时，需要确定更多的B矩阵中的形式。W一般是x/A,y/A.</p>\n<p>A和B的求取也是迭代计算，每次迭代A的值计算是通过控制点求得的。对不同控制点像点坐标列误差方程，A的值也不同。</p>\n<p>简单提一下以像方坐标表示物放坐标的DLT公式：</p>\n<p>$$!(l<em>{1}+\\overline{x}l</em>{9})X+(l<em>{2}+\\overline{x}l</em>{10})Y+(l<em>{3}+\\overline{x}l</em>{11})Z+(l_{4}+\\overline{x})=0$$</p>\n<p>$$!(l<em>{5}+\\overline{y}l</em>{9})X+(l<em>{6}+\\overline{y}l</em>{10})Y+(l<em>{7}+\\overline{y}l</em>{11})Z+(l_{8}+\\overline{y})=0$$</p>\n<p>直接线性变换的精度：可提供1/5000摄影距离精度的测量成果。影响DLT解法精度的是：控制点分布数量质量、像点坐标的测量精度、两张相片主光轴的交会角、像片张数、非线性畸变误差的改正数。</p>\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\"><a href=\"http://sns.juziyue.com/webinvite.php?u=94887\"></a>&nbsp;今天你<a href=\"http://sns.juziyue.com/webinvite.php?u=94887\">菊子曰</a>了么？</div>"},{"title":"后方交会检校(7)--后方检校精度的检验","id":"831","date":"2015-11-09T09:39:06.000Z","_content":"\n后方交会得到的结果，除了使用平差误差表达式来计算之外，还可以通过以下方式进行检验和矫正。\n\n①利用旋转矩阵，使用物放三维数据，反算二维坐标点，比较二者之差。\n\n&nbsp;\n\n②利用多片空间前方交会，通过未参与空间后方交会计算的控制点像点坐标反算理论空间坐标，得出空间坐标的误差。\n\n使用条件：至少2张相片的内方位元素、外方位元素、畸变因子。把待定点的像点坐标作为观测值，逐点求解待定点物方空间坐标的过程。\n\n其步骤与多片空间前方交会也类似，给定初值后，进行逐次迭代运算。误差方程为\n\n&nbsp;\n\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\">[](http://sns.juziyue.com/webinvite.php?u=94887)&nbsp;今天你[菊子曰](http://sns.juziyue.com/webinvite.php?u=94887)了么？</div>","source":"_posts/后方交会检校(7)--后方检校精度的检验.md","raw":"---\ntitle: 后方交会检校(7)--后方检校精度的检验\ncategories:\n  - 什么都学一下\n  - 学习log\ntags:\n  - 后方交会\n  - 检校\n  - 精度\nid: 831\ndate: 2015-11-09 17:39:06\n---\n\n后方交会得到的结果，除了使用平差误差表达式来计算之外，还可以通过以下方式进行检验和矫正。\n\n①利用旋转矩阵，使用物放三维数据，反算二维坐标点，比较二者之差。\n\n&nbsp;\n\n②利用多片空间前方交会，通过未参与空间后方交会计算的控制点像点坐标反算理论空间坐标，得出空间坐标的误差。\n\n使用条件：至少2张相片的内方位元素、外方位元素、畸变因子。把待定点的像点坐标作为观测值，逐点求解待定点物方空间坐标的过程。\n\n其步骤与多片空间前方交会也类似，给定初值后，进行逐次迭代运算。误差方程为\n\n&nbsp;\n\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\">[](http://sns.juziyue.com/webinvite.php?u=94887)&nbsp;今天你[菊子曰](http://sns.juziyue.com/webinvite.php?u=94887)了么？</div>","slug":"后方交会检校(7)--后方检校精度的检验","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7qz0072uco41j4t56qz","content":"<p>后方交会得到的结果，除了使用平差误差表达式来计算之外，还可以通过以下方式进行检验和矫正。</p>\n<p>①利用旋转矩阵，使用物放三维数据，反算二维坐标点，比较二者之差。</p>\n<p>&nbsp;</p>\n<p>②利用多片空间前方交会，通过未参与空间后方交会计算的控制点像点坐标反算理论空间坐标，得出空间坐标的误差。</p>\n<p>使用条件：至少2张相片的内方位元素、外方位元素、畸变因子。把待定点的像点坐标作为观测值，逐点求解待定点物方空间坐标的过程。</p>\n<p>其步骤与多片空间前方交会也类似，给定初值后，进行逐次迭代运算。误差方程为</p>\n<p>&nbsp;</p>\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\"><a href=\"http://sns.juziyue.com/webinvite.php?u=94887\" target=\"_blank\" rel=\"external\"></a>&nbsp;今天你<a href=\"http://sns.juziyue.com/webinvite.php?u=94887\" target=\"_blank\" rel=\"external\">菊子曰</a>了么？</div>","excerpt":"","more":"<p>后方交会得到的结果，除了使用平差误差表达式来计算之外，还可以通过以下方式进行检验和矫正。</p>\n<p>①利用旋转矩阵，使用物放三维数据，反算二维坐标点，比较二者之差。</p>\n<p>&nbsp;</p>\n<p>②利用多片空间前方交会，通过未参与空间后方交会计算的控制点像点坐标反算理论空间坐标，得出空间坐标的误差。</p>\n<p>使用条件：至少2张相片的内方位元素、外方位元素、畸变因子。把待定点的像点坐标作为观测值，逐点求解待定点物方空间坐标的过程。</p>\n<p>其步骤与多片空间前方交会也类似，给定初值后，进行逐次迭代运算。误差方程为</p>\n<p>&nbsp;</p>\n<div class=\"PoweredByWebStory\" style=\"margin-top:15px;margin-bottom:10px\"><a href=\"http://sns.juziyue.com/webinvite.php?u=94887\"></a>&nbsp;今天你<a href=\"http://sns.juziyue.com/webinvite.php?u=94887\">菊子曰</a>了么？</div>"},{"title":"后方交会检校(8)--光束法区域平差 bundle block adjustment","id":"871","date":"2015-11-18T15:17:39.000Z","_content":"\n<font size=\"3\">航空摄影最终的目标都是，将某一波段的图像（传感器接收的某一宽度波长的电磁波），在一定范围（地理空间范畴）内融合在一起。原因有：</font></p>\n\n<font size=\"3\">①拍摄的每幅图像幅宽有限（高的分辨率不够低了拍的面积不够多）</font>\n\n<font size=\"3\">②需要研究的区域相对一张或几张照片来说，太太太大了，没有或难以测量地面的标识，就只能靠拼接（然而飞机需要飞行，飞行需要时间，时间就带来光照、镜头本身、飞行姿态等各种变化）</font>\n\n<font size=\"3\">③除了高端的飞机带有精度极高的POS（position &amp; orientation system）能够实时记录飞行的姿态，即飞机的朝向、飞机的地理位置等明确告诉我该用哪个位置的点拼起来的，其他只能依赖，连续两张图片的相关性来拼（这里讲的就是，同名点即tie point）</font>\n\n——航摄大致思路？完成这一工作，最主要的工作是法一：利用地面其他物体的三维坐标（灰机、相机的某一时刻姿态也可以）点确定相邻两幅图像的地理位置（三维的，依赖地理空间的）——&gt;解算相对位置；法二，利用同名点（两幅图像都拍到的点，二维的，不依赖地理空间的），找到某个投影变换（即一个投影矩阵），直接解求两幅相邻图像的相对位置。\n\n&nbsp;\n\n<font size=\"3\">航摄中常用的三种用于加密控制点的方法有<span style=\"color: #ff0000\">航带法、独立模型法、光束法</span>。其中航带法精度较低，不能用于高精度的测量。独立模型法较前者精度略高，光束法则是精度最高同时计算量最大的模型，适用于高精度航摄。</font>\n\n<font size=\"3\">——用来做啥?不同时刻的航摄图片，对绝对位置或相对坐标进行确认，为拼接准备。</font>\n\n<font size=\"3\"><font color=\"#ff0000\">自检较光束</font>则是最广泛应用的做法，尽管<font size=\"3\">粗差（奇葩的大误差）对于精度的影响极大</font>。其基本思想是选用一个由若干个参数组成的系统误差模型，将这些附加参数作为未知数与区域网的其他参数一起解求，从而达到在平差过程中自动消除系统误差的目的。其缺点是①<span style=\"color: #ff0000\">附加参数人为选择</span>，选择不当会导致迭代结果不收敛恶化计算结果。②附加参数与区域网参数一起解求，会使<span style=\"color: #ff0000\">计算量明显上升</span>。</font>\n\n<font size=\"3\"></font>&nbsp;\n\n<font size=\"3\">光束法平差以单个像片作为平差单元（意思就是一个观测值是一个像片，主要包含像片的内外方位元素，它们作为一个整体，就如测量一个高程的值 一个坐标的值一样&nbsp; 在整个区域进行一边计算一边排错 进行平差处理 解算出每张相片的外方位元素 然后按照前方交会计算加密点（不同像片的拍下的重复点 tie point）坐标。</font>\n\n<div class=\"PoweredByWebStory\" style=\"margin-bottom: 10px; margin-top: 15px\"><font size=\"3\">&nbsp;</font></div>\n\n<font size=\"3\"></font>","source":"_posts/后方交会检校(8)--光束法区域平差 bundle block adjustment.md","raw":"---\ntitle: 后方交会检校(8)--光束法区域平差 bundle block adjustment\ncategories:\n  - 什么都学一下\n  - 学习log\ntags:\n  - 检校\nid: 871\ndate: 2015-11-18 23:17:39\n---\n\n<font size=\"3\">航空摄影最终的目标都是，将某一波段的图像（传感器接收的某一宽度波长的电磁波），在一定范围（地理空间范畴）内融合在一起。原因有：</font></p>\n\n<font size=\"3\">①拍摄的每幅图像幅宽有限（高的分辨率不够低了拍的面积不够多）</font>\n\n<font size=\"3\">②需要研究的区域相对一张或几张照片来说，太太太大了，没有或难以测量地面的标识，就只能靠拼接（然而飞机需要飞行，飞行需要时间，时间就带来光照、镜头本身、飞行姿态等各种变化）</font>\n\n<font size=\"3\">③除了高端的飞机带有精度极高的POS（position &amp; orientation system）能够实时记录飞行的姿态，即飞机的朝向、飞机的地理位置等明确告诉我该用哪个位置的点拼起来的，其他只能依赖，连续两张图片的相关性来拼（这里讲的就是，同名点即tie point）</font>\n\n——航摄大致思路？完成这一工作，最主要的工作是法一：利用地面其他物体的三维坐标（灰机、相机的某一时刻姿态也可以）点确定相邻两幅图像的地理位置（三维的，依赖地理空间的）——&gt;解算相对位置；法二，利用同名点（两幅图像都拍到的点，二维的，不依赖地理空间的），找到某个投影变换（即一个投影矩阵），直接解求两幅相邻图像的相对位置。\n\n&nbsp;\n\n<font size=\"3\">航摄中常用的三种用于加密控制点的方法有<span style=\"color: #ff0000\">航带法、独立模型法、光束法</span>。其中航带法精度较低，不能用于高精度的测量。独立模型法较前者精度略高，光束法则是精度最高同时计算量最大的模型，适用于高精度航摄。</font>\n\n<font size=\"3\">——用来做啥?不同时刻的航摄图片，对绝对位置或相对坐标进行确认，为拼接准备。</font>\n\n<font size=\"3\"><font color=\"#ff0000\">自检较光束</font>则是最广泛应用的做法，尽管<font size=\"3\">粗差（奇葩的大误差）对于精度的影响极大</font>。其基本思想是选用一个由若干个参数组成的系统误差模型，将这些附加参数作为未知数与区域网的其他参数一起解求，从而达到在平差过程中自动消除系统误差的目的。其缺点是①<span style=\"color: #ff0000\">附加参数人为选择</span>，选择不当会导致迭代结果不收敛恶化计算结果。②附加参数与区域网参数一起解求，会使<span style=\"color: #ff0000\">计算量明显上升</span>。</font>\n\n<font size=\"3\"></font>&nbsp;\n\n<font size=\"3\">光束法平差以单个像片作为平差单元（意思就是一个观测值是一个像片，主要包含像片的内外方位元素，它们作为一个整体，就如测量一个高程的值 一个坐标的值一样&nbsp; 在整个区域进行一边计算一边排错 进行平差处理 解算出每张相片的外方位元素 然后按照前方交会计算加密点（不同像片的拍下的重复点 tie point）坐标。</font>\n\n<div class=\"PoweredByWebStory\" style=\"margin-bottom: 10px; margin-top: 15px\"><font size=\"3\">&nbsp;</font></div>\n\n<font size=\"3\"></font>","slug":"后方交会检校(8)--光束法区域平差 bundle block adjustment","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7r10076uco4vda7qdpy","content":"<font size=\"3\">航空摄影最终的目标都是，将某一波段的图像（传感器接收的某一宽度波长的电磁波），在一定范围（地理空间范畴）内融合在一起。原因有：</font><br><br><font size=\"3\">①拍摄的每幅图像幅宽有限（高的分辨率不够低了拍的面积不够多）</font>\n\n<font size=\"3\">②需要研究的区域相对一张或几张照片来说，太太太大了，没有或难以测量地面的标识，就只能靠拼接（然而飞机需要飞行，飞行需要时间，时间就带来光照、镜头本身、飞行姿态等各种变化）</font>\n\n<font size=\"3\">③除了高端的飞机带有精度极高的POS（position &amp; orientation system）能够实时记录飞行的姿态，即飞机的朝向、飞机的地理位置等明确告诉我该用哪个位置的点拼起来的，其他只能依赖，连续两张图片的相关性来拼（这里讲的就是，同名点即tie point）</font>\n\n<p>——航摄大致思路？完成这一工作，最主要的工作是法一：利用地面其他物体的三维坐标（灰机、相机的某一时刻姿态也可以）点确定相邻两幅图像的地理位置（三维的，依赖地理空间的）——&gt;解算相对位置；法二，利用同名点（两幅图像都拍到的点，二维的，不依赖地理空间的），找到某个投影变换（即一个投影矩阵），直接解求两幅相邻图像的相对位置。</p>\n<p>&nbsp;</p>\n<font size=\"3\">航摄中常用的三种用于加密控制点的方法有<span style=\"color: #ff0000\">航带法、独立模型法、光束法</span>。其中航带法精度较低，不能用于高精度的测量。独立模型法较前者精度略高，光束法则是精度最高同时计算量最大的模型，适用于高精度航摄。</font>\n\n<font size=\"3\">——用来做啥?不同时刻的航摄图片，对绝对位置或相对坐标进行确认，为拼接准备。</font>\n\n<font size=\"3\"><font color=\"#ff0000\">自检较光束</font>则是最广泛应用的做法，尽管<font size=\"3\">粗差（奇葩的大误差）对于精度的影响极大</font>。其基本思想是选用一个由若干个参数组成的系统误差模型，将这些附加参数作为未知数与区域网的其他参数一起解求，从而达到在平差过程中自动消除系统误差的目的。其缺点是①<span style=\"color: #ff0000\">附加参数人为选择</span>，选择不当会导致迭代结果不收敛恶化计算结果。②附加参数与区域网参数一起解求，会使<span style=\"color: #ff0000\">计算量明显上升</span>。</font>\n\n<font size=\"3\"></font>&nbsp;<br><br><font size=\"3\">光束法平差以单个像片作为平差单元（意思就是一个观测值是一个像片，主要包含像片的内外方位元素，它们作为一个整体，就如测量一个高程的值 一个坐标的值一样&nbsp; 在整个区域进行一边计算一边排错 进行平差处理 解算出每张相片的外方位元素 然后按照前方交会计算加密点（不同像片的拍下的重复点 tie point）坐标。</font>\n\n<div class=\"PoweredByWebStory\" style=\"margin-bottom: 10px; margin-top: 15px\"><font size=\"3\">&nbsp;</font></div>\n\n<font size=\"3\"></font>","excerpt":"","more":"<font size=\"3\">航空摄影最终的目标都是，将某一波段的图像（传感器接收的某一宽度波长的电磁波），在一定范围（地理空间范畴）内融合在一起。原因有：</font><br><br><font size=\"3\">①拍摄的每幅图像幅宽有限（高的分辨率不够低了拍的面积不够多）</font>\n\n<font size=\"3\">②需要研究的区域相对一张或几张照片来说，太太太大了，没有或难以测量地面的标识，就只能靠拼接（然而飞机需要飞行，飞行需要时间，时间就带来光照、镜头本身、飞行姿态等各种变化）</font>\n\n<font size=\"3\">③除了高端的飞机带有精度极高的POS（position &amp; orientation system）能够实时记录飞行的姿态，即飞机的朝向、飞机的地理位置等明确告诉我该用哪个位置的点拼起来的，其他只能依赖，连续两张图片的相关性来拼（这里讲的就是，同名点即tie point）</font>\n\n<p>——航摄大致思路？完成这一工作，最主要的工作是法一：利用地面其他物体的三维坐标（灰机、相机的某一时刻姿态也可以）点确定相邻两幅图像的地理位置（三维的，依赖地理空间的）——&gt;解算相对位置；法二，利用同名点（两幅图像都拍到的点，二维的，不依赖地理空间的），找到某个投影变换（即一个投影矩阵），直接解求两幅相邻图像的相对位置。</p>\n<p>&nbsp;</p>\n<font size=\"3\">航摄中常用的三种用于加密控制点的方法有<span style=\"color: #ff0000\">航带法、独立模型法、光束法</span>。其中航带法精度较低，不能用于高精度的测量。独立模型法较前者精度略高，光束法则是精度最高同时计算量最大的模型，适用于高精度航摄。</font>\n\n<font size=\"3\">——用来做啥?不同时刻的航摄图片，对绝对位置或相对坐标进行确认，为拼接准备。</font>\n\n<font size=\"3\"><font color=\"#ff0000\">自检较光束</font>则是最广泛应用的做法，尽管<font size=\"3\">粗差（奇葩的大误差）对于精度的影响极大</font>。其基本思想是选用一个由若干个参数组成的系统误差模型，将这些附加参数作为未知数与区域网的其他参数一起解求，从而达到在平差过程中自动消除系统误差的目的。其缺点是①<span style=\"color: #ff0000\">附加参数人为选择</span>，选择不当会导致迭代结果不收敛恶化计算结果。②附加参数与区域网参数一起解求，会使<span style=\"color: #ff0000\">计算量明显上升</span>。</font>\n\n<font size=\"3\"></font>&nbsp;<br><br><font size=\"3\">光束法平差以单个像片作为平差单元（意思就是一个观测值是一个像片，主要包含像片的内外方位元素，它们作为一个整体，就如测量一个高程的值 一个坐标的值一样&nbsp; 在整个区域进行一边计算一边排错 进行平差处理 解算出每张相片的外方位元素 然后按照前方交会计算加密点（不同像片的拍下的重复点 tie point）坐标。</font>\n\n<div class=\"PoweredByWebStory\" style=\"margin-bottom: 10px; margin-top: 15px\"><font size=\"3\">&nbsp;</font></div>\n\n<font size=\"3\"></font>"},{"title":"国内主要科技博客类型表","id":"227","date":"2013-06-09T15:03:17.000Z","_content":"\n![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/1364270291925.png)","source":"_posts/国内主要科技博客类型表.md","raw":"---\ntitle: 国内主要科技博客类型表\ncategories:\n  - 什么都学一下\n  - 学习log\ntags:\n  - recommend\nid: 227\ndate: 2013-06-09 23:03:17\n---\n\n![](http://i1061.photobucket.com/albums/t476/ov_beeshoot/1364270291925.png)","slug":"国内主要科技博客类型表","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7r50079uco4b0hw8ffu","content":"<p><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/1364270291925.png\" alt=\"\"></p>","excerpt":"","more":"<p><img src=\"http://i1061.photobucket.com/albums/t476/ov_beeshoot/1364270291925.png\" alt=\"\"></p>"},{"title":"大巴黎-摩纳哥","id":"300","date":"2013-07-20T07:14:38.000Z","_content":"\n大巴黎的节奏是在太tmd吓人了。35m又签了19岁的罗马中卫，我萨备胎也给买过去了。法克啊艹 弟媳+马克斯韦尔+华莱士+马尔吉尼奥斯/范德维尔+帕斯托雷+拉维奇+维拉蒂/伊布+卡瓦尼 真是作死的阵容。。。对面摩纳哥避税天堂0%的个人所得税 直接撸来波尔图3天才浩克+罗德里格斯+法尔考+阿比达尔+卡瓦略+穆蒂尼奥+图拉朗真是不关注法甲都有点不可能了，。我大蓝月亮洁厕剂野不甘示弱。。一连串小明星大价钱。。。真.屌丝明星队了，。阿圭罗+哲科+内格雷多+纳瓦斯+费尔南迪奥+约维蒂奇也是略微有点可怕。。。足坛真是熔钱炉","source":"_posts/大巴黎 摩纳哥.md","raw":"---\ntitle: '大巴黎-摩纳哥'\ncategories:\n  - 槽\ntags:\n  - 吐槽\n  - 足球\nid: 300\ndate: 2013-07-20 15:14:38\n---\n\n大巴黎的节奏是在太tmd吓人了。35m又签了19岁的罗马中卫，我萨备胎也给买过去了。法克啊艹 弟媳+马克斯韦尔+华莱士+马尔吉尼奥斯/范德维尔+帕斯托雷+拉维奇+维拉蒂/伊布+卡瓦尼 真是作死的阵容。。。对面摩纳哥避税天堂0%的个人所得税 直接撸来波尔图3天才浩克+罗德里格斯+法尔考+阿比达尔+卡瓦略+穆蒂尼奥+图拉朗真是不关注法甲都有点不可能了，。我大蓝月亮洁厕剂野不甘示弱。。一连串小明星大价钱。。。真.屌丝明星队了，。阿圭罗+哲科+内格雷多+纳瓦斯+费尔南迪奥+约维蒂奇也是略微有点可怕。。。足坛真是熔钱炉","slug":"大巴黎 摩纳哥","published":1,"updated":"2016-04-13T13:28:29.383Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7r6007duco428o0c6sk","content":"<p>大巴黎的节奏是在太tmd吓人了。35m又签了19岁的罗马中卫，我萨备胎也给买过去了。法克啊艹 弟媳+马克斯韦尔+华莱士+马尔吉尼奥斯/范德维尔+帕斯托雷+拉维奇+维拉蒂/伊布+卡瓦尼 真是作死的阵容。。。对面摩纳哥避税天堂0%的个人所得税 直接撸来波尔图3天才浩克+罗德里格斯+法尔考+阿比达尔+卡瓦略+穆蒂尼奥+图拉朗真是不关注法甲都有点不可能了，。我大蓝月亮洁厕剂野不甘示弱。。一连串小明星大价钱。。。真.屌丝明星队了，。阿圭罗+哲科+内格雷多+纳瓦斯+费尔南迪奥+约维蒂奇也是略微有点可怕。。。足坛真是熔钱炉</p>","excerpt":"","more":"<p>大巴黎的节奏是在太tmd吓人了。35m又签了19岁的罗马中卫，我萨备胎也给买过去了。法克啊艹 弟媳+马克斯韦尔+华莱士+马尔吉尼奥斯/范德维尔+帕斯托雷+拉维奇+维拉蒂/伊布+卡瓦尼 真是作死的阵容。。。对面摩纳哥避税天堂0%的个人所得税 直接撸来波尔图3天才浩克+罗德里格斯+法尔考+阿比达尔+卡瓦略+穆蒂尼奥+图拉朗真是不关注法甲都有点不可能了，。我大蓝月亮洁厕剂野不甘示弱。。一连串小明星大价钱。。。真.屌丝明星队了，。阿圭罗+哲科+内格雷多+纳瓦斯+费尔南迪奥+约维蒂奇也是略微有点可怕。。。足坛真是熔钱炉</p>"},{"title":"坑爹呢摔。","id":"76","date":"2013-05-07T02:28:41.000Z","_content":"\n不顺利啊不顺利。找插件找的心累。不过主题就这么愉快的定下来了。目测要找的插件有。。。翻页。豆瓣。代码高亮。加关注。幻灯片。网站缓存优化。。。\n法克。。。居然有人登陆我的状态发布站了。。。麻痹啊","source":"_posts/坑爹呢摔.md","raw":"---\ntitle: 坑爹呢摔。\ncategories:\n  - 槽\ntags:\nid: 76\ndate: 2013-05-07 10:28:41\n---\n\n不顺利啊不顺利。找插件找的心累。不过主题就这么愉快的定下来了。目测要找的插件有。。。翻页。豆瓣。代码高亮。加关注。幻灯片。网站缓存优化。。。\n法克。。。居然有人登陆我的状态发布站了。。。麻痹啊","slug":"坑爹呢摔","published":1,"updated":"2016-04-13T09:13:02.903Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7r8007guco4agvnwzlz","content":"<p>不顺利啊不顺利。找插件找的心累。不过主题就这么愉快的定下来了。目测要找的插件有。。。翻页。豆瓣。代码高亮。加关注。幻灯片。网站缓存优化。。。<br>法克。。。居然有人登陆我的状态发布站了。。。麻痹啊</p>","excerpt":"","more":"<p>不顺利啊不顺利。找插件找的心累。不过主题就这么愉快的定下来了。目测要找的插件有。。。翻页。豆瓣。代码高亮。加关注。幻灯片。网站缓存优化。。。<br>法克。。。居然有人登陆我的状态发布站了。。。麻痹啊</p>"},{"title":"小目标","id":"293","date":"2013-07-18T13:42:28.000Z","_content":"\n1.写一个wordpress的查件。同步人人状态和照片的。不用设计模拟登陆应该很方便。\n\n2.常识写一个chrome的插件。但不知道是否可行。下载的时候根据不同url对应不同的保存路径。好像要涉及chrome的设置操作。","source":"_posts/小目标.md","raw":"---\ntitle: 小目标\ncategories:\n  - 槽\ntags:\n  - 吐槽\nid: 293\ndate: 2013-07-18 21:42:28\n---\n\n1.写一个wordpress的查件。同步人人状态和照片的。不用设计模拟登陆应该很方便。\n\n2.常识写一个chrome的插件。但不知道是否可行。下载的时候根据不同url对应不同的保存路径。好像要涉及chrome的设置操作。","slug":"小目标","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7ra007kuco470662hmy","content":"<p>1.写一个wordpress的查件。同步人人状态和照片的。不用设计模拟登陆应该很方便。</p>\n<p>2.常识写一个chrome的插件。但不知道是否可行。下载的时候根据不同url对应不同的保存路径。好像要涉及chrome的设置操作。</p>","excerpt":"","more":"<p>1.写一个wordpress的查件。同步人人状态和照片的。不用设计模拟登陆应该很方便。</p>\n<p>2.常识写一个chrome的插件。但不知道是否可行。下载的时候根据不同url对应不同的保存路径。好像要涉及chrome的设置操作。</p>"},{"title":"","id":"175","date":"2013-05-10T11:01:10.000Z","_content":"\n喷。为什么会觉得微博是个很潮的社区而不是很傻逼的地方呢。充斥着僵尸粉，淘宝短链，广告转发微博营销，木耳晒清纯，明星晒慈善，该呛声个个成哑巴的地方。烦透了。\n\n<span class=\"post_sig\">发自 WordPress for iPhone</span>","source":"_posts/微博咋还没挂.md","raw":"---\ntitle: ''\ncategories:\n  - 槽\ntags:\n  - 吐槽\nid: 175\ndate: 2013-05-10 19:01:10\n---\n\n喷。为什么会觉得微博是个很潮的社区而不是很傻逼的地方呢。充斥着僵尸粉，淘宝短链，广告转发微博营销，木耳晒清纯，明星晒慈善，该呛声个个成哑巴的地方。烦透了。\n\n<span class=\"post_sig\">发自 WordPress for iPhone</span>","slug":"微博咋还没挂","published":1,"updated":"2016-04-13T09:24:16.022Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7rb007muco4w4qwmsvb","content":"<p>喷。为什么会觉得微博是个很潮的社区而不是很傻逼的地方呢。充斥着僵尸粉，淘宝短链，广告转发微博营销，木耳晒清纯，明星晒慈善，该呛声个个成哑巴的地方。烦透了。</p>\n<p><span class=\"post_sig\">发自 WordPress for iPhone</span></p>","excerpt":"","more":"<p>喷。为什么会觉得微博是个很潮的社区而不是很傻逼的地方呢。充斥着僵尸粉，淘宝短链，广告转发微博营销，木耳晒清纯，明星晒慈善，该呛声个个成哑巴的地方。烦透了。</p>\n<p><span class=\"post_sig\">发自 WordPress for iPhone</span></p>"},{"title":"新浪微博的衰败","id":"449","date":"2014-01-18T12:46:39.000Z","_content":"\nhttp://fenng.baijia.baidu.com/article/2873\n\n> 中国互联网络信息中心 16 日发布的数据显示，2013年，微博相比 2012 年底用户规模下降 2783 万人，使用率降低。\n\n中国互联网络信息中心 16 日发布的数据显示，2013年，微博相比 2012 年底用户规模下降 2783 万人，使用率降低。我在微博上调侃道：「在有关部门打击下，在微信的蚕食下，在微博产品经理的努力下，终于完成了一年下降 2783 万人这一宏伟目标。」\n\n最近半年来，已经看到过数次第三方机构发布的分析数据，报告微博的用户活跃在下降，但是新浪一直对外否认这个说法。互联网络信息中心这次的数据不知道怎么得出来的，或许具有一定的可信度，目前也还看不到微博对外澄清。\n\n我通过其他渠道得到的数据是：微博的五亿用户中，大约有 80% 都是从来不登录的，日活跃用户从 2013 年年中的 6000 万跌落到现在的 2500 万。这个数据如果是真的，则更惨一些。(所以，互联网络信息中心提到的数据即使包括腾讯微博，新浪微博的用户下降也是相当大的。)\n\n据说微博估值最高时达到 100 亿美元，但 2013 年 4 月底，阿里巴巴宣布以 5.86 亿美元收购新浪微博大约 18% 的股份，估计是 30 多亿美元，又经过大半年的折腾，从前面的业务数据来看，目前的估值或许要更低。反观微博的学习对象 Twitter，强敌林立之下居然保持了独立，不但各种业务数据一路走高，2013 年成功 IPO 之后股价也一路上扬，目前市值已经超过 300 亿。\n\n有人说微博出现这样的局面是因为微信崛起之后在不断蚕食微博用户，也包括我文章开头的那句调侃。微信的冲击毕竟只是外因。微博面对的外部问题，Twitter 同样也有。Twitter 面对的外部挑战不比微博小，有 Facebook(包括 Instagram )的虎视眈眈，有 WhatsApp、Snapchat 对用户时间的争夺，但 Twitter 依然做到了增长。\n\nTwitter 面对的内部问题也不少，核心管理层连续不断的动荡，公司内斗激烈，先后换掉几任 CEO；服务稳定性一度面临绝境，继而连三的网站宕机让用户抓狂，直到收购 Summize 团队之后网站稳定性才得到很大缓解；产品改进也曾一度停滞不前；从营收上来看，直到第三任 CEO 走马上任，才有了第一笔实实在在的收入。\n\n而微博呢? 从微博创建到现在，虽有经历高层调整，管理层基本上还是比较稳定；技术团队足够优秀，有效支撑了微博的高速发展；产品能力也「一度」很优秀，短短一段时间内就吸收了 Twitter 以及类似产品的所有优点；营收虽然一直也不见起色，但至少商业化时间相当的早。\n\n从以上对比来看，微博优势相当之多，之所以变成现在这样，归根结底还是自己要把自己玩死。\n\n在我看来，Twitter 虽然产品并不那么好 - 当然这是一家之言，但 Twitter 至少做对了一件事，那就是始终保持简洁，如果 Twitter 也像微博这样开发出一大堆功能估计也活不到今天。而微博在产品方面「一度」优秀之后则开始走向繁复。令人嘲讽的是曹国伟当初决定做微博据说是因为产品形态简单，如果他能预见到微博变成今天这么复杂，或许会做点别的吧。在 KPI 驱动之下，或者说在管理层的贪婪之下，作茧自缚，微博团队成功弄出来一大堆绝大多数用户根本不用的垃圾功能。\n\n这些垃圾功能出来之后，运营团队惊喜的发现他们找到了用来赶走用户的有力武器。用我过去的一句话说，这帮家伙「以骚扰用户为己任」。举几个特别蠢的例子：任由各种抽奖信息占据用户的时间线，任由各种营销号的内容长期占据排行榜，接连不断的给用户发各种私信内容，这种运营不是竞争对手派来的么? 就是这样让用户不胜其烦，加速了用户的流失。\n\n同时期的微信，则在尽可能的控制产品上的欲望，尽可能的不叠加功能，尽可能的打击各种干扰用户的行为，尽可能的压制各种营销手段对用户的骚扰。微信在拉用户，微博则在「赶」用户走。\n\n引入阿里投资之后，微博更是义无反顾的把自己成功的变成了淘宝的流量来源，变成了大一号的「蘑菇街」「美丽说」，这又加剧了用户的流失。更为好笑的是，现在微博又成功的把自己变成了「来往」的流量工具和新用户入口，而「来往」则在加紧的蚕食微博的用户，别说这只是个「干爹」，就是亲爹也不能这么祸害儿子的，微博不死谁死?\n\n我曾经一度假设微博有可能在数据上变现，有那么一段时间以为微博会在广告和搜索技术上发力，结果看到的结果却是在广告技术上毫无建树，现在看起来是直接用淘宝的广告平台了。而搜索上呢，我听到的未经证实的消息是曾经把搜索技术部门卖给了云云网，结果人员流失不少，然后过几个月又买了回来。经过这么一折腾，这方面变现的能力大打折扣。\n\n微博针对个人用户的增值服务问题也很严重。比如我自己也是付费会员，但付费之后，除了关注用户数能增加之外，没有任何比普通会员更有价值的地方，那么用户付费的动力来自哪里? 广告照样显示，不管是 Web 页面还是移动客户端上同样有广告，各种骚扰信息照旧。\n\n模仿微信的公众帐号功能到现在看则是彻底的失败，对微信来说，公众帐号是通信功能上内容补充，而对微博来说，内容叠加内容，这有什么意义，除了给用户造成更大的困扰。当然，微博过去一年也不是没作对过事情，对「中 V」 的扶植就是一个很好的策略，希望在 2014 年能加大力度，以便刺激优质内容的生产。可惜，对用户「正确」的事情做的太少了。\n\n所有这些如果归结成一个问题的话，那就是新浪微博的初心和方向已经失去，变成了没有「核心价值」的东西。\n\n不要误会，即使到今天，我依然认为新浪微博的潜力巨大，仍然是当前不可替代的一个工具，微博的有些属性依然是微信无法取代的，我自己也依然是微博的重度用户，我坚信微博依然有巨大的潜在价值。\n\n如果微博的发展历程是一场足球比赛的话，这只一度被看好的球队的上半场，踢得还算精彩，但到了下半场，很明显出现了一些致命的策略问题。用足球评论员常用的句式来说「留给微博的时间已经不多了」。\n\n&nbsp;","source":"_posts/新浪微博的衰败 (2).md","raw":"---\ntitle: 新浪微博的衰败\ncategories:\n  - 槽\ntags:\n  - 吐槽\nid: 449\ndate: 2014-01-18 20:46:39\n---\n\nhttp://fenng.baijia.baidu.com/article/2873\n\n> 中国互联网络信息中心 16 日发布的数据显示，2013年，微博相比 2012 年底用户规模下降 2783 万人，使用率降低。\n\n中国互联网络信息中心 16 日发布的数据显示，2013年，微博相比 2012 年底用户规模下降 2783 万人，使用率降低。我在微博上调侃道：「在有关部门打击下，在微信的蚕食下，在微博产品经理的努力下，终于完成了一年下降 2783 万人这一宏伟目标。」\n\n最近半年来，已经看到过数次第三方机构发布的分析数据，报告微博的用户活跃在下降，但是新浪一直对外否认这个说法。互联网络信息中心这次的数据不知道怎么得出来的，或许具有一定的可信度，目前也还看不到微博对外澄清。\n\n我通过其他渠道得到的数据是：微博的五亿用户中，大约有 80% 都是从来不登录的，日活跃用户从 2013 年年中的 6000 万跌落到现在的 2500 万。这个数据如果是真的，则更惨一些。(所以，互联网络信息中心提到的数据即使包括腾讯微博，新浪微博的用户下降也是相当大的。)\n\n据说微博估值最高时达到 100 亿美元，但 2013 年 4 月底，阿里巴巴宣布以 5.86 亿美元收购新浪微博大约 18% 的股份，估计是 30 多亿美元，又经过大半年的折腾，从前面的业务数据来看，目前的估值或许要更低。反观微博的学习对象 Twitter，强敌林立之下居然保持了独立，不但各种业务数据一路走高，2013 年成功 IPO 之后股价也一路上扬，目前市值已经超过 300 亿。\n\n有人说微博出现这样的局面是因为微信崛起之后在不断蚕食微博用户，也包括我文章开头的那句调侃。微信的冲击毕竟只是外因。微博面对的外部问题，Twitter 同样也有。Twitter 面对的外部挑战不比微博小，有 Facebook(包括 Instagram )的虎视眈眈，有 WhatsApp、Snapchat 对用户时间的争夺，但 Twitter 依然做到了增长。\n\nTwitter 面对的内部问题也不少，核心管理层连续不断的动荡，公司内斗激烈，先后换掉几任 CEO；服务稳定性一度面临绝境，继而连三的网站宕机让用户抓狂，直到收购 Summize 团队之后网站稳定性才得到很大缓解；产品改进也曾一度停滞不前；从营收上来看，直到第三任 CEO 走马上任，才有了第一笔实实在在的收入。\n\n而微博呢? 从微博创建到现在，虽有经历高层调整，管理层基本上还是比较稳定；技术团队足够优秀，有效支撑了微博的高速发展；产品能力也「一度」很优秀，短短一段时间内就吸收了 Twitter 以及类似产品的所有优点；营收虽然一直也不见起色，但至少商业化时间相当的早。\n\n从以上对比来看，微博优势相当之多，之所以变成现在这样，归根结底还是自己要把自己玩死。\n\n在我看来，Twitter 虽然产品并不那么好 - 当然这是一家之言，但 Twitter 至少做对了一件事，那就是始终保持简洁，如果 Twitter 也像微博这样开发出一大堆功能估计也活不到今天。而微博在产品方面「一度」优秀之后则开始走向繁复。令人嘲讽的是曹国伟当初决定做微博据说是因为产品形态简单，如果他能预见到微博变成今天这么复杂，或许会做点别的吧。在 KPI 驱动之下，或者说在管理层的贪婪之下，作茧自缚，微博团队成功弄出来一大堆绝大多数用户根本不用的垃圾功能。\n\n这些垃圾功能出来之后，运营团队惊喜的发现他们找到了用来赶走用户的有力武器。用我过去的一句话说，这帮家伙「以骚扰用户为己任」。举几个特别蠢的例子：任由各种抽奖信息占据用户的时间线，任由各种营销号的内容长期占据排行榜，接连不断的给用户发各种私信内容，这种运营不是竞争对手派来的么? 就是这样让用户不胜其烦，加速了用户的流失。\n\n同时期的微信，则在尽可能的控制产品上的欲望，尽可能的不叠加功能，尽可能的打击各种干扰用户的行为，尽可能的压制各种营销手段对用户的骚扰。微信在拉用户，微博则在「赶」用户走。\n\n引入阿里投资之后，微博更是义无反顾的把自己成功的变成了淘宝的流量来源，变成了大一号的「蘑菇街」「美丽说」，这又加剧了用户的流失。更为好笑的是，现在微博又成功的把自己变成了「来往」的流量工具和新用户入口，而「来往」则在加紧的蚕食微博的用户，别说这只是个「干爹」，就是亲爹也不能这么祸害儿子的，微博不死谁死?\n\n我曾经一度假设微博有可能在数据上变现，有那么一段时间以为微博会在广告和搜索技术上发力，结果看到的结果却是在广告技术上毫无建树，现在看起来是直接用淘宝的广告平台了。而搜索上呢，我听到的未经证实的消息是曾经把搜索技术部门卖给了云云网，结果人员流失不少，然后过几个月又买了回来。经过这么一折腾，这方面变现的能力大打折扣。\n\n微博针对个人用户的增值服务问题也很严重。比如我自己也是付费会员，但付费之后，除了关注用户数能增加之外，没有任何比普通会员更有价值的地方，那么用户付费的动力来自哪里? 广告照样显示，不管是 Web 页面还是移动客户端上同样有广告，各种骚扰信息照旧。\n\n模仿微信的公众帐号功能到现在看则是彻底的失败，对微信来说，公众帐号是通信功能上内容补充，而对微博来说，内容叠加内容，这有什么意义，除了给用户造成更大的困扰。当然，微博过去一年也不是没作对过事情，对「中 V」 的扶植就是一个很好的策略，希望在 2014 年能加大力度，以便刺激优质内容的生产。可惜，对用户「正确」的事情做的太少了。\n\n所有这些如果归结成一个问题的话，那就是新浪微博的初心和方向已经失去，变成了没有「核心价值」的东西。\n\n不要误会，即使到今天，我依然认为新浪微博的潜力巨大，仍然是当前不可替代的一个工具，微博的有些属性依然是微信无法取代的，我自己也依然是微博的重度用户，我坚信微博依然有巨大的潜在价值。\n\n如果微博的发展历程是一场足球比赛的话，这只一度被看好的球队的上半场，踢得还算精彩，但到了下半场，很明显出现了一些致命的策略问题。用足球评论员常用的句式来说「留给微博的时间已经不多了」。\n\n&nbsp;","slug":"新浪微博的衰败 (2)","published":1,"updated":"2016-04-13T09:11:17.250Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7rd007ruco4phh0wd90","content":"<p><a href=\"http://fenng.baijia.baidu.com/article/2873\" target=\"_blank\" rel=\"external\">http://fenng.baijia.baidu.com/article/2873</a></p>\n<blockquote>\n<p>中国互联网络信息中心 16 日发布的数据显示，2013年，微博相比 2012 年底用户规模下降 2783 万人，使用率降低。</p>\n</blockquote>\n<p>中国互联网络信息中心 16 日发布的数据显示，2013年，微博相比 2012 年底用户规模下降 2783 万人，使用率降低。我在微博上调侃道：「在有关部门打击下，在微信的蚕食下，在微博产品经理的努力下，终于完成了一年下降 2783 万人这一宏伟目标。」</p>\n<p>最近半年来，已经看到过数次第三方机构发布的分析数据，报告微博的用户活跃在下降，但是新浪一直对外否认这个说法。互联网络信息中心这次的数据不知道怎么得出来的，或许具有一定的可信度，目前也还看不到微博对外澄清。</p>\n<p>我通过其他渠道得到的数据是：微博的五亿用户中，大约有 80% 都是从来不登录的，日活跃用户从 2013 年年中的 6000 万跌落到现在的 2500 万。这个数据如果是真的，则更惨一些。(所以，互联网络信息中心提到的数据即使包括腾讯微博，新浪微博的用户下降也是相当大的。)</p>\n<p>据说微博估值最高时达到 100 亿美元，但 2013 年 4 月底，阿里巴巴宣布以 5.86 亿美元收购新浪微博大约 18% 的股份，估计是 30 多亿美元，又经过大半年的折腾，从前面的业务数据来看，目前的估值或许要更低。反观微博的学习对象 Twitter，强敌林立之下居然保持了独立，不但各种业务数据一路走高，2013 年成功 IPO 之后股价也一路上扬，目前市值已经超过 300 亿。</p>\n<p>有人说微博出现这样的局面是因为微信崛起之后在不断蚕食微博用户，也包括我文章开头的那句调侃。微信的冲击毕竟只是外因。微博面对的外部问题，Twitter 同样也有。Twitter 面对的外部挑战不比微博小，有 Facebook(包括 Instagram )的虎视眈眈，有 WhatsApp、Snapchat 对用户时间的争夺，但 Twitter 依然做到了增长。</p>\n<p>Twitter 面对的内部问题也不少，核心管理层连续不断的动荡，公司内斗激烈，先后换掉几任 CEO；服务稳定性一度面临绝境，继而连三的网站宕机让用户抓狂，直到收购 Summize 团队之后网站稳定性才得到很大缓解；产品改进也曾一度停滞不前；从营收上来看，直到第三任 CEO 走马上任，才有了第一笔实实在在的收入。</p>\n<p>而微博呢? 从微博创建到现在，虽有经历高层调整，管理层基本上还是比较稳定；技术团队足够优秀，有效支撑了微博的高速发展；产品能力也「一度」很优秀，短短一段时间内就吸收了 Twitter 以及类似产品的所有优点；营收虽然一直也不见起色，但至少商业化时间相当的早。</p>\n<p>从以上对比来看，微博优势相当之多，之所以变成现在这样，归根结底还是自己要把自己玩死。</p>\n<p>在我看来，Twitter 虽然产品并不那么好 - 当然这是一家之言，但 Twitter 至少做对了一件事，那就是始终保持简洁，如果 Twitter 也像微博这样开发出一大堆功能估计也活不到今天。而微博在产品方面「一度」优秀之后则开始走向繁复。令人嘲讽的是曹国伟当初决定做微博据说是因为产品形态简单，如果他能预见到微博变成今天这么复杂，或许会做点别的吧。在 KPI 驱动之下，或者说在管理层的贪婪之下，作茧自缚，微博团队成功弄出来一大堆绝大多数用户根本不用的垃圾功能。</p>\n<p>这些垃圾功能出来之后，运营团队惊喜的发现他们找到了用来赶走用户的有力武器。用我过去的一句话说，这帮家伙「以骚扰用户为己任」。举几个特别蠢的例子：任由各种抽奖信息占据用户的时间线，任由各种营销号的内容长期占据排行榜，接连不断的给用户发各种私信内容，这种运营不是竞争对手派来的么? 就是这样让用户不胜其烦，加速了用户的流失。</p>\n<p>同时期的微信，则在尽可能的控制产品上的欲望，尽可能的不叠加功能，尽可能的打击各种干扰用户的行为，尽可能的压制各种营销手段对用户的骚扰。微信在拉用户，微博则在「赶」用户走。</p>\n<p>引入阿里投资之后，微博更是义无反顾的把自己成功的变成了淘宝的流量来源，变成了大一号的「蘑菇街」「美丽说」，这又加剧了用户的流失。更为好笑的是，现在微博又成功的把自己变成了「来往」的流量工具和新用户入口，而「来往」则在加紧的蚕食微博的用户，别说这只是个「干爹」，就是亲爹也不能这么祸害儿子的，微博不死谁死?</p>\n<p>我曾经一度假设微博有可能在数据上变现，有那么一段时间以为微博会在广告和搜索技术上发力，结果看到的结果却是在广告技术上毫无建树，现在看起来是直接用淘宝的广告平台了。而搜索上呢，我听到的未经证实的消息是曾经把搜索技术部门卖给了云云网，结果人员流失不少，然后过几个月又买了回来。经过这么一折腾，这方面变现的能力大打折扣。</p>\n<p>微博针对个人用户的增值服务问题也很严重。比如我自己也是付费会员，但付费之后，除了关注用户数能增加之外，没有任何比普通会员更有价值的地方，那么用户付费的动力来自哪里? 广告照样显示，不管是 Web 页面还是移动客户端上同样有广告，各种骚扰信息照旧。</p>\n<p>模仿微信的公众帐号功能到现在看则是彻底的失败，对微信来说，公众帐号是通信功能上内容补充，而对微博来说，内容叠加内容，这有什么意义，除了给用户造成更大的困扰。当然，微博过去一年也不是没作对过事情，对「中 V」 的扶植就是一个很好的策略，希望在 2014 年能加大力度，以便刺激优质内容的生产。可惜，对用户「正确」的事情做的太少了。</p>\n<p>所有这些如果归结成一个问题的话，那就是新浪微博的初心和方向已经失去，变成了没有「核心价值」的东西。</p>\n<p>不要误会，即使到今天，我依然认为新浪微博的潜力巨大，仍然是当前不可替代的一个工具，微博的有些属性依然是微信无法取代的，我自己也依然是微博的重度用户，我坚信微博依然有巨大的潜在价值。</p>\n<p>如果微博的发展历程是一场足球比赛的话，这只一度被看好的球队的上半场，踢得还算精彩，但到了下半场，很明显出现了一些致命的策略问题。用足球评论员常用的句式来说「留给微博的时间已经不多了」。</p>\n<p>&nbsp;</p>","excerpt":"","more":"<p><a href=\"http://fenng.baijia.baidu.com/article/2873\">http://fenng.baijia.baidu.com/article/2873</a></p>\n<blockquote>\n<p>中国互联网络信息中心 16 日发布的数据显示，2013年，微博相比 2012 年底用户规模下降 2783 万人，使用率降低。</p>\n</blockquote>\n<p>中国互联网络信息中心 16 日发布的数据显示，2013年，微博相比 2012 年底用户规模下降 2783 万人，使用率降低。我在微博上调侃道：「在有关部门打击下，在微信的蚕食下，在微博产品经理的努力下，终于完成了一年下降 2783 万人这一宏伟目标。」</p>\n<p>最近半年来，已经看到过数次第三方机构发布的分析数据，报告微博的用户活跃在下降，但是新浪一直对外否认这个说法。互联网络信息中心这次的数据不知道怎么得出来的，或许具有一定的可信度，目前也还看不到微博对外澄清。</p>\n<p>我通过其他渠道得到的数据是：微博的五亿用户中，大约有 80% 都是从来不登录的，日活跃用户从 2013 年年中的 6000 万跌落到现在的 2500 万。这个数据如果是真的，则更惨一些。(所以，互联网络信息中心提到的数据即使包括腾讯微博，新浪微博的用户下降也是相当大的。)</p>\n<p>据说微博估值最高时达到 100 亿美元，但 2013 年 4 月底，阿里巴巴宣布以 5.86 亿美元收购新浪微博大约 18% 的股份，估计是 30 多亿美元，又经过大半年的折腾，从前面的业务数据来看，目前的估值或许要更低。反观微博的学习对象 Twitter，强敌林立之下居然保持了独立，不但各种业务数据一路走高，2013 年成功 IPO 之后股价也一路上扬，目前市值已经超过 300 亿。</p>\n<p>有人说微博出现这样的局面是因为微信崛起之后在不断蚕食微博用户，也包括我文章开头的那句调侃。微信的冲击毕竟只是外因。微博面对的外部问题，Twitter 同样也有。Twitter 面对的外部挑战不比微博小，有 Facebook(包括 Instagram )的虎视眈眈，有 WhatsApp、Snapchat 对用户时间的争夺，但 Twitter 依然做到了增长。</p>\n<p>Twitter 面对的内部问题也不少，核心管理层连续不断的动荡，公司内斗激烈，先后换掉几任 CEO；服务稳定性一度面临绝境，继而连三的网站宕机让用户抓狂，直到收购 Summize 团队之后网站稳定性才得到很大缓解；产品改进也曾一度停滞不前；从营收上来看，直到第三任 CEO 走马上任，才有了第一笔实实在在的收入。</p>\n<p>而微博呢? 从微博创建到现在，虽有经历高层调整，管理层基本上还是比较稳定；技术团队足够优秀，有效支撑了微博的高速发展；产品能力也「一度」很优秀，短短一段时间内就吸收了 Twitter 以及类似产品的所有优点；营收虽然一直也不见起色，但至少商业化时间相当的早。</p>\n<p>从以上对比来看，微博优势相当之多，之所以变成现在这样，归根结底还是自己要把自己玩死。</p>\n<p>在我看来，Twitter 虽然产品并不那么好 - 当然这是一家之言，但 Twitter 至少做对了一件事，那就是始终保持简洁，如果 Twitter 也像微博这样开发出一大堆功能估计也活不到今天。而微博在产品方面「一度」优秀之后则开始走向繁复。令人嘲讽的是曹国伟当初决定做微博据说是因为产品形态简单，如果他能预见到微博变成今天这么复杂，或许会做点别的吧。在 KPI 驱动之下，或者说在管理层的贪婪之下，作茧自缚，微博团队成功弄出来一大堆绝大多数用户根本不用的垃圾功能。</p>\n<p>这些垃圾功能出来之后，运营团队惊喜的发现他们找到了用来赶走用户的有力武器。用我过去的一句话说，这帮家伙「以骚扰用户为己任」。举几个特别蠢的例子：任由各种抽奖信息占据用户的时间线，任由各种营销号的内容长期占据排行榜，接连不断的给用户发各种私信内容，这种运营不是竞争对手派来的么? 就是这样让用户不胜其烦，加速了用户的流失。</p>\n<p>同时期的微信，则在尽可能的控制产品上的欲望，尽可能的不叠加功能，尽可能的打击各种干扰用户的行为，尽可能的压制各种营销手段对用户的骚扰。微信在拉用户，微博则在「赶」用户走。</p>\n<p>引入阿里投资之后，微博更是义无反顾的把自己成功的变成了淘宝的流量来源，变成了大一号的「蘑菇街」「美丽说」，这又加剧了用户的流失。更为好笑的是，现在微博又成功的把自己变成了「来往」的流量工具和新用户入口，而「来往」则在加紧的蚕食微博的用户，别说这只是个「干爹」，就是亲爹也不能这么祸害儿子的，微博不死谁死?</p>\n<p>我曾经一度假设微博有可能在数据上变现，有那么一段时间以为微博会在广告和搜索技术上发力，结果看到的结果却是在广告技术上毫无建树，现在看起来是直接用淘宝的广告平台了。而搜索上呢，我听到的未经证实的消息是曾经把搜索技术部门卖给了云云网，结果人员流失不少，然后过几个月又买了回来。经过这么一折腾，这方面变现的能力大打折扣。</p>\n<p>微博针对个人用户的增值服务问题也很严重。比如我自己也是付费会员，但付费之后，除了关注用户数能增加之外，没有任何比普通会员更有价值的地方，那么用户付费的动力来自哪里? 广告照样显示，不管是 Web 页面还是移动客户端上同样有广告，各种骚扰信息照旧。</p>\n<p>模仿微信的公众帐号功能到现在看则是彻底的失败，对微信来说，公众帐号是通信功能上内容补充，而对微博来说，内容叠加内容，这有什么意义，除了给用户造成更大的困扰。当然，微博过去一年也不是没作对过事情，对「中 V」 的扶植就是一个很好的策略，希望在 2014 年能加大力度，以便刺激优质内容的生产。可惜，对用户「正确」的事情做的太少了。</p>\n<p>所有这些如果归结成一个问题的话，那就是新浪微博的初心和方向已经失去，变成了没有「核心价值」的东西。</p>\n<p>不要误会，即使到今天，我依然认为新浪微博的潜力巨大，仍然是当前不可替代的一个工具，微博的有些属性依然是微信无法取代的，我自己也依然是微博的重度用户，我坚信微博依然有巨大的潜在价值。</p>\n<p>如果微博的发展历程是一场足球比赛的话，这只一度被看好的球队的上半场，踢得还算精彩，但到了下半场，很明显出现了一些致命的策略问题。用足球评论员常用的句式来说「留给微博的时间已经不多了」。</p>\n<p>&nbsp;</p>"},{"title":"新浪微博的衰败","id":"449","date":"2014-01-18T12:46:39.000Z","_content":"\nhttp://fenng.baijia.baidu.com/article/2873\n\n> 中国互联网络信息中心 16 日发布的数据显示，2013年，微博相比 2012 年底用户规模下降 2783 万人，使用率降低。\n\n中国互联网络信息中心 16 日发布的数据显示，2013年，微博相比 2012 年底用户规模下降 2783 万人，使用率降低。我在微博上调侃道：「在有关部门打击下，在微信的蚕食下，在微博产品经理的努力下，终于完成了一年下降 2783 万人这一宏伟目标。」\n\n最近半年来，已经看到过数次第三方机构发布的分析数据，报告微博的用户活跃在下降，但是新浪一直对外否认这个说法。互联网络信息中心这次的数据不知道怎么得出来的，或许具有一定的可信度，目前也还看不到微博对外澄清。\n\n我通过其他渠道得到的数据是：微博的五亿用户中，大约有 80% 都是从来不登录的，日活跃用户从 2013 年年中的 6000 万跌落到现在的 2500 万。这个数据如果是真的，则更惨一些。(所以，互联网络信息中心提到的数据即使包括腾讯微博，新浪微博的用户下降也是相当大的。)\n\n据说微博估值最高时达到 100 亿美元，但 2013 年 4 月底，阿里巴巴宣布以 5.86 亿美元收购新浪微博大约 18% 的股份，估计是 30 多亿美元，又经过大半年的折腾，从前面的业务数据来看，目前的估值或许要更低。反观微博的学习对象 Twitter，强敌林立之下居然保持了独立，不但各种业务数据一路走高，2013 年成功 IPO 之后股价也一路上扬，目前市值已经超过 300 亿。\n\n有人说微博出现这样的局面是因为微信崛起之后在不断蚕食微博用户，也包括我文章开头的那句调侃。微信的冲击毕竟只是外因。微博面对的外部问题，Twitter 同样也有。Twitter 面对的外部挑战不比微博小，有 Facebook(包括 Instagram )的虎视眈眈，有 WhatsApp、Snapchat 对用户时间的争夺，但 Twitter 依然做到了增长。\n\nTwitter 面对的内部问题也不少，核心管理层连续不断的动荡，公司内斗激烈，先后换掉几任 CEO；服务稳定性一度面临绝境，继而连三的网站宕机让用户抓狂，直到收购 Summize 团队之后网站稳定性才得到很大缓解；产品改进也曾一度停滞不前；从营收上来看，直到第三任 CEO 走马上任，才有了第一笔实实在在的收入。\n\n而微博呢? 从微博创建到现在，虽有经历高层调整，管理层基本上还是比较稳定；技术团队足够优秀，有效支撑了微博的高速发展；产品能力也「一度」很优秀，短短一段时间内就吸收了 Twitter 以及类似产品的所有优点；营收虽然一直也不见起色，但至少商业化时间相当的早。\n\n从以上对比来看，微博优势相当之多，之所以变成现在这样，归根结底还是自己要把自己玩死。\n\n在我看来，Twitter 虽然产品并不那么好 - 当然这是一家之言，但 Twitter 至少做对了一件事，那就是始终保持简洁，如果 Twitter 也像微博这样开发出一大堆功能估计也活不到今天。而微博在产品方面「一度」优秀之后则开始走向繁复。令人嘲讽的是曹国伟当初决定做微博据说是因为产品形态简单，如果他能预见到微博变成今天这么复杂，或许会做点别的吧。在 KPI 驱动之下，或者说在管理层的贪婪之下，作茧自缚，微博团队成功弄出来一大堆绝大多数用户根本不用的垃圾功能。\n\n这些垃圾功能出来之后，运营团队惊喜的发现他们找到了用来赶走用户的有力武器。用我过去的一句话说，这帮家伙「以骚扰用户为己任」。举几个特别蠢的例子：任由各种抽奖信息占据用户的时间线，任由各种营销号的内容长期占据排行榜，接连不断的给用户发各种私信内容，这种运营不是竞争对手派来的么? 就是这样让用户不胜其烦，加速了用户的流失。\n\n同时期的微信，则在尽可能的控制产品上的欲望，尽可能的不叠加功能，尽可能的打击各种干扰用户的行为，尽可能的压制各种营销手段对用户的骚扰。微信在拉用户，微博则在「赶」用户走。\n\n引入阿里投资之后，微博更是义无反顾的把自己成功的变成了淘宝的流量来源，变成了大一号的「蘑菇街」「美丽说」，这又加剧了用户的流失。更为好笑的是，现在微博又成功的把自己变成了「来往」的流量工具和新用户入口，而「来往」则在加紧的蚕食微博的用户，别说这只是个「干爹」，就是亲爹也不能这么祸害儿子的，微博不死谁死?\n\n我曾经一度假设微博有可能在数据上变现，有那么一段时间以为微博会在广告和搜索技术上发力，结果看到的结果却是在广告技术上毫无建树，现在看起来是直接用淘宝的广告平台了。而搜索上呢，我听到的未经证实的消息是曾经把搜索技术部门卖给了云云网，结果人员流失不少，然后过几个月又买了回来。经过这么一折腾，这方面变现的能力大打折扣。\n\n微博针对个人用户的增值服务问题也很严重。比如我自己也是付费会员，但付费之后，除了关注用户数能增加之外，没有任何比普通会员更有价值的地方，那么用户付费的动力来自哪里? 广告照样显示，不管是 Web 页面还是移动客户端上同样有广告，各种骚扰信息照旧。\n\n模仿微信的公众帐号功能到现在看则是彻底的失败，对微信来说，公众帐号是通信功能上内容补充，而对微博来说，内容叠加内容，这有什么意义，除了给用户造成更大的困扰。当然，微博过去一年也不是没作对过事情，对「中 V」 的扶植就是一个很好的策略，希望在 2014 年能加大力度，以便刺激优质内容的生产。可惜，对用户「正确」的事情做的太少了。\n\n所有这些如果归结成一个问题的话，那就是新浪微博的初心和方向已经失去，变成了没有「核心价值」的东西。\n\n不要误会，即使到今天，我依然认为新浪微博的潜力巨大，仍然是当前不可替代的一个工具，微博的有些属性依然是微信无法取代的，我自己也依然是微博的重度用户，我坚信微博依然有巨大的潜在价值。\n\n如果微博的发展历程是一场足球比赛的话，这只一度被看好的球队的上半场，踢得还算精彩，但到了下半场，很明显出现了一些致命的策略问题。用足球评论员常用的句式来说「留给微博的时间已经不多了」。\n\n&nbsp;","source":"_posts/新浪微博的衰败.md","raw":"---\ntitle: 新浪微博的衰败\ncategories:\n  - 槽\ntags:\n  - 吐槽\nid: 449\ndate: 2014-01-18 20:46:39\n---\n\nhttp://fenng.baijia.baidu.com/article/2873\n\n> 中国互联网络信息中心 16 日发布的数据显示，2013年，微博相比 2012 年底用户规模下降 2783 万人，使用率降低。\n\n中国互联网络信息中心 16 日发布的数据显示，2013年，微博相比 2012 年底用户规模下降 2783 万人，使用率降低。我在微博上调侃道：「在有关部门打击下，在微信的蚕食下，在微博产品经理的努力下，终于完成了一年下降 2783 万人这一宏伟目标。」\n\n最近半年来，已经看到过数次第三方机构发布的分析数据，报告微博的用户活跃在下降，但是新浪一直对外否认这个说法。互联网络信息中心这次的数据不知道怎么得出来的，或许具有一定的可信度，目前也还看不到微博对外澄清。\n\n我通过其他渠道得到的数据是：微博的五亿用户中，大约有 80% 都是从来不登录的，日活跃用户从 2013 年年中的 6000 万跌落到现在的 2500 万。这个数据如果是真的，则更惨一些。(所以，互联网络信息中心提到的数据即使包括腾讯微博，新浪微博的用户下降也是相当大的。)\n\n据说微博估值最高时达到 100 亿美元，但 2013 年 4 月底，阿里巴巴宣布以 5.86 亿美元收购新浪微博大约 18% 的股份，估计是 30 多亿美元，又经过大半年的折腾，从前面的业务数据来看，目前的估值或许要更低。反观微博的学习对象 Twitter，强敌林立之下居然保持了独立，不但各种业务数据一路走高，2013 年成功 IPO 之后股价也一路上扬，目前市值已经超过 300 亿。\n\n有人说微博出现这样的局面是因为微信崛起之后在不断蚕食微博用户，也包括我文章开头的那句调侃。微信的冲击毕竟只是外因。微博面对的外部问题，Twitter 同样也有。Twitter 面对的外部挑战不比微博小，有 Facebook(包括 Instagram )的虎视眈眈，有 WhatsApp、Snapchat 对用户时间的争夺，但 Twitter 依然做到了增长。\n\nTwitter 面对的内部问题也不少，核心管理层连续不断的动荡，公司内斗激烈，先后换掉几任 CEO；服务稳定性一度面临绝境，继而连三的网站宕机让用户抓狂，直到收购 Summize 团队之后网站稳定性才得到很大缓解；产品改进也曾一度停滞不前；从营收上来看，直到第三任 CEO 走马上任，才有了第一笔实实在在的收入。\n\n而微博呢? 从微博创建到现在，虽有经历高层调整，管理层基本上还是比较稳定；技术团队足够优秀，有效支撑了微博的高速发展；产品能力也「一度」很优秀，短短一段时间内就吸收了 Twitter 以及类似产品的所有优点；营收虽然一直也不见起色，但至少商业化时间相当的早。\n\n从以上对比来看，微博优势相当之多，之所以变成现在这样，归根结底还是自己要把自己玩死。\n\n在我看来，Twitter 虽然产品并不那么好 - 当然这是一家之言，但 Twitter 至少做对了一件事，那就是始终保持简洁，如果 Twitter 也像微博这样开发出一大堆功能估计也活不到今天。而微博在产品方面「一度」优秀之后则开始走向繁复。令人嘲讽的是曹国伟当初决定做微博据说是因为产品形态简单，如果他能预见到微博变成今天这么复杂，或许会做点别的吧。在 KPI 驱动之下，或者说在管理层的贪婪之下，作茧自缚，微博团队成功弄出来一大堆绝大多数用户根本不用的垃圾功能。\n\n这些垃圾功能出来之后，运营团队惊喜的发现他们找到了用来赶走用户的有力武器。用我过去的一句话说，这帮家伙「以骚扰用户为己任」。举几个特别蠢的例子：任由各种抽奖信息占据用户的时间线，任由各种营销号的内容长期占据排行榜，接连不断的给用户发各种私信内容，这种运营不是竞争对手派来的么? 就是这样让用户不胜其烦，加速了用户的流失。\n\n同时期的微信，则在尽可能的控制产品上的欲望，尽可能的不叠加功能，尽可能的打击各种干扰用户的行为，尽可能的压制各种营销手段对用户的骚扰。微信在拉用户，微博则在「赶」用户走。\n\n引入阿里投资之后，微博更是义无反顾的把自己成功的变成了淘宝的流量来源，变成了大一号的「蘑菇街」「美丽说」，这又加剧了用户的流失。更为好笑的是，现在微博又成功的把自己变成了「来往」的流量工具和新用户入口，而「来往」则在加紧的蚕食微博的用户，别说这只是个「干爹」，就是亲爹也不能这么祸害儿子的，微博不死谁死?\n\n我曾经一度假设微博有可能在数据上变现，有那么一段时间以为微博会在广告和搜索技术上发力，结果看到的结果却是在广告技术上毫无建树，现在看起来是直接用淘宝的广告平台了。而搜索上呢，我听到的未经证实的消息是曾经把搜索技术部门卖给了云云网，结果人员流失不少，然后过几个月又买了回来。经过这么一折腾，这方面变现的能力大打折扣。\n\n微博针对个人用户的增值服务问题也很严重。比如我自己也是付费会员，但付费之后，除了关注用户数能增加之外，没有任何比普通会员更有价值的地方，那么用户付费的动力来自哪里? 广告照样显示，不管是 Web 页面还是移动客户端上同样有广告，各种骚扰信息照旧。\n\n模仿微信的公众帐号功能到现在看则是彻底的失败，对微信来说，公众帐号是通信功能上内容补充，而对微博来说，内容叠加内容，这有什么意义，除了给用户造成更大的困扰。当然，微博过去一年也不是没作对过事情，对「中 V」 的扶植就是一个很好的策略，希望在 2014 年能加大力度，以便刺激优质内容的生产。可惜，对用户「正确」的事情做的太少了。\n\n所有这些如果归结成一个问题的话，那就是新浪微博的初心和方向已经失去，变成了没有「核心价值」的东西。\n\n不要误会，即使到今天，我依然认为新浪微博的潜力巨大，仍然是当前不可替代的一个工具，微博的有些属性依然是微信无法取代的，我自己也依然是微博的重度用户，我坚信微博依然有巨大的潜在价值。\n\n如果微博的发展历程是一场足球比赛的话，这只一度被看好的球队的上半场，踢得还算精彩，但到了下半场，很明显出现了一些致命的策略问题。用足球评论员常用的句式来说「留给微博的时间已经不多了」。\n\n&nbsp;","slug":"新浪微博的衰败","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7rf007uuco4fpvjlqqu","content":"<p><a href=\"http://fenng.baijia.baidu.com/article/2873\" target=\"_blank\" rel=\"external\">http://fenng.baijia.baidu.com/article/2873</a></p>\n<blockquote>\n<p>中国互联网络信息中心 16 日发布的数据显示，2013年，微博相比 2012 年底用户规模下降 2783 万人，使用率降低。</p>\n</blockquote>\n<p>中国互联网络信息中心 16 日发布的数据显示，2013年，微博相比 2012 年底用户规模下降 2783 万人，使用率降低。我在微博上调侃道：「在有关部门打击下，在微信的蚕食下，在微博产品经理的努力下，终于完成了一年下降 2783 万人这一宏伟目标。」</p>\n<p>最近半年来，已经看到过数次第三方机构发布的分析数据，报告微博的用户活跃在下降，但是新浪一直对外否认这个说法。互联网络信息中心这次的数据不知道怎么得出来的，或许具有一定的可信度，目前也还看不到微博对外澄清。</p>\n<p>我通过其他渠道得到的数据是：微博的五亿用户中，大约有 80% 都是从来不登录的，日活跃用户从 2013 年年中的 6000 万跌落到现在的 2500 万。这个数据如果是真的，则更惨一些。(所以，互联网络信息中心提到的数据即使包括腾讯微博，新浪微博的用户下降也是相当大的。)</p>\n<p>据说微博估值最高时达到 100 亿美元，但 2013 年 4 月底，阿里巴巴宣布以 5.86 亿美元收购新浪微博大约 18% 的股份，估计是 30 多亿美元，又经过大半年的折腾，从前面的业务数据来看，目前的估值或许要更低。反观微博的学习对象 Twitter，强敌林立之下居然保持了独立，不但各种业务数据一路走高，2013 年成功 IPO 之后股价也一路上扬，目前市值已经超过 300 亿。</p>\n<p>有人说微博出现这样的局面是因为微信崛起之后在不断蚕食微博用户，也包括我文章开头的那句调侃。微信的冲击毕竟只是外因。微博面对的外部问题，Twitter 同样也有。Twitter 面对的外部挑战不比微博小，有 Facebook(包括 Instagram )的虎视眈眈，有 WhatsApp、Snapchat 对用户时间的争夺，但 Twitter 依然做到了增长。</p>\n<p>Twitter 面对的内部问题也不少，核心管理层连续不断的动荡，公司内斗激烈，先后换掉几任 CEO；服务稳定性一度面临绝境，继而连三的网站宕机让用户抓狂，直到收购 Summize 团队之后网站稳定性才得到很大缓解；产品改进也曾一度停滞不前；从营收上来看，直到第三任 CEO 走马上任，才有了第一笔实实在在的收入。</p>\n<p>而微博呢? 从微博创建到现在，虽有经历高层调整，管理层基本上还是比较稳定；技术团队足够优秀，有效支撑了微博的高速发展；产品能力也「一度」很优秀，短短一段时间内就吸收了 Twitter 以及类似产品的所有优点；营收虽然一直也不见起色，但至少商业化时间相当的早。</p>\n<p>从以上对比来看，微博优势相当之多，之所以变成现在这样，归根结底还是自己要把自己玩死。</p>\n<p>在我看来，Twitter 虽然产品并不那么好 - 当然这是一家之言，但 Twitter 至少做对了一件事，那就是始终保持简洁，如果 Twitter 也像微博这样开发出一大堆功能估计也活不到今天。而微博在产品方面「一度」优秀之后则开始走向繁复。令人嘲讽的是曹国伟当初决定做微博据说是因为产品形态简单，如果他能预见到微博变成今天这么复杂，或许会做点别的吧。在 KPI 驱动之下，或者说在管理层的贪婪之下，作茧自缚，微博团队成功弄出来一大堆绝大多数用户根本不用的垃圾功能。</p>\n<p>这些垃圾功能出来之后，运营团队惊喜的发现他们找到了用来赶走用户的有力武器。用我过去的一句话说，这帮家伙「以骚扰用户为己任」。举几个特别蠢的例子：任由各种抽奖信息占据用户的时间线，任由各种营销号的内容长期占据排行榜，接连不断的给用户发各种私信内容，这种运营不是竞争对手派来的么? 就是这样让用户不胜其烦，加速了用户的流失。</p>\n<p>同时期的微信，则在尽可能的控制产品上的欲望，尽可能的不叠加功能，尽可能的打击各种干扰用户的行为，尽可能的压制各种营销手段对用户的骚扰。微信在拉用户，微博则在「赶」用户走。</p>\n<p>引入阿里投资之后，微博更是义无反顾的把自己成功的变成了淘宝的流量来源，变成了大一号的「蘑菇街」「美丽说」，这又加剧了用户的流失。更为好笑的是，现在微博又成功的把自己变成了「来往」的流量工具和新用户入口，而「来往」则在加紧的蚕食微博的用户，别说这只是个「干爹」，就是亲爹也不能这么祸害儿子的，微博不死谁死?</p>\n<p>我曾经一度假设微博有可能在数据上变现，有那么一段时间以为微博会在广告和搜索技术上发力，结果看到的结果却是在广告技术上毫无建树，现在看起来是直接用淘宝的广告平台了。而搜索上呢，我听到的未经证实的消息是曾经把搜索技术部门卖给了云云网，结果人员流失不少，然后过几个月又买了回来。经过这么一折腾，这方面变现的能力大打折扣。</p>\n<p>微博针对个人用户的增值服务问题也很严重。比如我自己也是付费会员，但付费之后，除了关注用户数能增加之外，没有任何比普通会员更有价值的地方，那么用户付费的动力来自哪里? 广告照样显示，不管是 Web 页面还是移动客户端上同样有广告，各种骚扰信息照旧。</p>\n<p>模仿微信的公众帐号功能到现在看则是彻底的失败，对微信来说，公众帐号是通信功能上内容补充，而对微博来说，内容叠加内容，这有什么意义，除了给用户造成更大的困扰。当然，微博过去一年也不是没作对过事情，对「中 V」 的扶植就是一个很好的策略，希望在 2014 年能加大力度，以便刺激优质内容的生产。可惜，对用户「正确」的事情做的太少了。</p>\n<p>所有这些如果归结成一个问题的话，那就是新浪微博的初心和方向已经失去，变成了没有「核心价值」的东西。</p>\n<p>不要误会，即使到今天，我依然认为新浪微博的潜力巨大，仍然是当前不可替代的一个工具，微博的有些属性依然是微信无法取代的，我自己也依然是微博的重度用户，我坚信微博依然有巨大的潜在价值。</p>\n<p>如果微博的发展历程是一场足球比赛的话，这只一度被看好的球队的上半场，踢得还算精彩，但到了下半场，很明显出现了一些致命的策略问题。用足球评论员常用的句式来说「留给微博的时间已经不多了」。</p>\n<p>&nbsp;</p>","excerpt":"","more":"<p><a href=\"http://fenng.baijia.baidu.com/article/2873\">http://fenng.baijia.baidu.com/article/2873</a></p>\n<blockquote>\n<p>中国互联网络信息中心 16 日发布的数据显示，2013年，微博相比 2012 年底用户规模下降 2783 万人，使用率降低。</p>\n</blockquote>\n<p>中国互联网络信息中心 16 日发布的数据显示，2013年，微博相比 2012 年底用户规模下降 2783 万人，使用率降低。我在微博上调侃道：「在有关部门打击下，在微信的蚕食下，在微博产品经理的努力下，终于完成了一年下降 2783 万人这一宏伟目标。」</p>\n<p>最近半年来，已经看到过数次第三方机构发布的分析数据，报告微博的用户活跃在下降，但是新浪一直对外否认这个说法。互联网络信息中心这次的数据不知道怎么得出来的，或许具有一定的可信度，目前也还看不到微博对外澄清。</p>\n<p>我通过其他渠道得到的数据是：微博的五亿用户中，大约有 80% 都是从来不登录的，日活跃用户从 2013 年年中的 6000 万跌落到现在的 2500 万。这个数据如果是真的，则更惨一些。(所以，互联网络信息中心提到的数据即使包括腾讯微博，新浪微博的用户下降也是相当大的。)</p>\n<p>据说微博估值最高时达到 100 亿美元，但 2013 年 4 月底，阿里巴巴宣布以 5.86 亿美元收购新浪微博大约 18% 的股份，估计是 30 多亿美元，又经过大半年的折腾，从前面的业务数据来看，目前的估值或许要更低。反观微博的学习对象 Twitter，强敌林立之下居然保持了独立，不但各种业务数据一路走高，2013 年成功 IPO 之后股价也一路上扬，目前市值已经超过 300 亿。</p>\n<p>有人说微博出现这样的局面是因为微信崛起之后在不断蚕食微博用户，也包括我文章开头的那句调侃。微信的冲击毕竟只是外因。微博面对的外部问题，Twitter 同样也有。Twitter 面对的外部挑战不比微博小，有 Facebook(包括 Instagram )的虎视眈眈，有 WhatsApp、Snapchat 对用户时间的争夺，但 Twitter 依然做到了增长。</p>\n<p>Twitter 面对的内部问题也不少，核心管理层连续不断的动荡，公司内斗激烈，先后换掉几任 CEO；服务稳定性一度面临绝境，继而连三的网站宕机让用户抓狂，直到收购 Summize 团队之后网站稳定性才得到很大缓解；产品改进也曾一度停滞不前；从营收上来看，直到第三任 CEO 走马上任，才有了第一笔实实在在的收入。</p>\n<p>而微博呢? 从微博创建到现在，虽有经历高层调整，管理层基本上还是比较稳定；技术团队足够优秀，有效支撑了微博的高速发展；产品能力也「一度」很优秀，短短一段时间内就吸收了 Twitter 以及类似产品的所有优点；营收虽然一直也不见起色，但至少商业化时间相当的早。</p>\n<p>从以上对比来看，微博优势相当之多，之所以变成现在这样，归根结底还是自己要把自己玩死。</p>\n<p>在我看来，Twitter 虽然产品并不那么好 - 当然这是一家之言，但 Twitter 至少做对了一件事，那就是始终保持简洁，如果 Twitter 也像微博这样开发出一大堆功能估计也活不到今天。而微博在产品方面「一度」优秀之后则开始走向繁复。令人嘲讽的是曹国伟当初决定做微博据说是因为产品形态简单，如果他能预见到微博变成今天这么复杂，或许会做点别的吧。在 KPI 驱动之下，或者说在管理层的贪婪之下，作茧自缚，微博团队成功弄出来一大堆绝大多数用户根本不用的垃圾功能。</p>\n<p>这些垃圾功能出来之后，运营团队惊喜的发现他们找到了用来赶走用户的有力武器。用我过去的一句话说，这帮家伙「以骚扰用户为己任」。举几个特别蠢的例子：任由各种抽奖信息占据用户的时间线，任由各种营销号的内容长期占据排行榜，接连不断的给用户发各种私信内容，这种运营不是竞争对手派来的么? 就是这样让用户不胜其烦，加速了用户的流失。</p>\n<p>同时期的微信，则在尽可能的控制产品上的欲望，尽可能的不叠加功能，尽可能的打击各种干扰用户的行为，尽可能的压制各种营销手段对用户的骚扰。微信在拉用户，微博则在「赶」用户走。</p>\n<p>引入阿里投资之后，微博更是义无反顾的把自己成功的变成了淘宝的流量来源，变成了大一号的「蘑菇街」「美丽说」，这又加剧了用户的流失。更为好笑的是，现在微博又成功的把自己变成了「来往」的流量工具和新用户入口，而「来往」则在加紧的蚕食微博的用户，别说这只是个「干爹」，就是亲爹也不能这么祸害儿子的，微博不死谁死?</p>\n<p>我曾经一度假设微博有可能在数据上变现，有那么一段时间以为微博会在广告和搜索技术上发力，结果看到的结果却是在广告技术上毫无建树，现在看起来是直接用淘宝的广告平台了。而搜索上呢，我听到的未经证实的消息是曾经把搜索技术部门卖给了云云网，结果人员流失不少，然后过几个月又买了回来。经过这么一折腾，这方面变现的能力大打折扣。</p>\n<p>微博针对个人用户的增值服务问题也很严重。比如我自己也是付费会员，但付费之后，除了关注用户数能增加之外，没有任何比普通会员更有价值的地方，那么用户付费的动力来自哪里? 广告照样显示，不管是 Web 页面还是移动客户端上同样有广告，各种骚扰信息照旧。</p>\n<p>模仿微信的公众帐号功能到现在看则是彻底的失败，对微信来说，公众帐号是通信功能上内容补充，而对微博来说，内容叠加内容，这有什么意义，除了给用户造成更大的困扰。当然，微博过去一年也不是没作对过事情，对「中 V」 的扶植就是一个很好的策略，希望在 2014 年能加大力度，以便刺激优质内容的生产。可惜，对用户「正确」的事情做的太少了。</p>\n<p>所有这些如果归结成一个问题的话，那就是新浪微博的初心和方向已经失去，变成了没有「核心价值」的东西。</p>\n<p>不要误会，即使到今天，我依然认为新浪微博的潜力巨大，仍然是当前不可替代的一个工具，微博的有些属性依然是微信无法取代的，我自己也依然是微博的重度用户，我坚信微博依然有巨大的潜在价值。</p>\n<p>如果微博的发展历程是一场足球比赛的话，这只一度被看好的球队的上半场，踢得还算精彩，但到了下半场，很明显出现了一些致命的策略问题。用足球评论员常用的句式来说「留给微博的时间已经不多了」。</p>\n<p>&nbsp;</p>"},{"title":"最近demo 模块 算法总结","id":"1109","date":"2016-03-08T09:43:56.000Z","_content":"\n[http://ju.outofmemory.cn/entry/106397](http://ju.outofmemory.cn/entry/106397 \"http://ju.outofmemory.cn/entry/106397\") 【坑妹填完】</p>\n\n最近各种乱整。。文章妹时间管光顾着折腾手头派下来的事情了。再加上每天固定的复习提高一下。小论文完全没有头绪。\n最近get到的实用方法还是很多阿。\n<!-- more -->\n# **DBScan**（Density-Based Spatial Clustering of Applications with Noise）**基于密度的含噪空间聚类** #\n\n最大特点是：多维、任何形状聚类、聚类数任意、噪声可控、对输入不敏感；缺点很明显，需要提前知道2个参数（一般实验多了，根据经验对同一类型聚类可以不用改。），时间复杂度和空间复杂度都很大，需要计算点两两之间距离[这里需要优化，否则算法超出一般忍受时间] 不对密度变化做出选择。\n输入参数2个，单一点半径范围R及其最小包含的点数N。算法本质是遍历所有点并计算邻域内的点数并拓展该类（以R范围内是否达到N来判断）。被分类的点将会标记并不再被检测到。因此耗时表现在邻域查找和拓展聚类上。但解算效果相当良好。\n算法的优化方案相当多：kdtree的、基于网格计算的、基于适应性解算阈值的、局部敏感哈希。主要解决的都是如何加快求解邻域解求速度。诚然它的算法复杂度有n^3显然想要加快并不是那么容易。深入研讨了一番发现计算距离时有的不止一遍，因此写入硬盘或许是个好的方案，但是I/O读取的效率就要考虑进来了；还有一种方式是限制深入迭代次数，即做多在第几层nearestpoint()这个数组中进行聚类的拓展。这种做法的危害是使得同一个点集很可能多次才并入，或者完全没有并到一块，因此需要一个后手，将聚类中心相近的再次组合，其实在kdtree中也有类似的做法。参考[基于SPark的DBSCAN的图解](https://github.com/alitouka/spark_dbscan)，KDTree建立时，按区域分割好数据后，同一类的点集亦可能先分散于个个区间。各自区间先进行小聚类后，再进行大聚类。\n\n![](http://ooo.0o0.ooo/2016/03/30/56fb7e092b350.png)\n\n（中了SPark的毒，后面会进行测试）\ndemo很好的展示了算法的原理。\n\n[http://www.naftaliharris.com/blog/visualizing-dbscan-clustering/](http://www.naftaliharris.com/blog/visualizing-dbscan-clustering/ \"http://www.naftaliharris.com/blog/visualizing-dbscan-clustering/\") 在线666可视化理解dbscan过程。不同的实例可以看到，对不同图形的检测相当准确；同时聚类精度亦相当高。\n\n[http://stackoverflow.com/questions/6621630/dbscan-code-in-c-sharp-or-vb-net-for-cluster-analysis](http://stackoverflow.com/questions/6621630/dbscan-code-in-c-sharp-or-vb-net-for-cluster-analysis \"http://stackoverflow.com/questions/6621630/dbscan-code-in-c-sharp-or-vb-net-for-cluster-analysis\")stackoverflow图解dbscan\n\n[https://www.yzuzun.com/2015/07/dbscan-clustering-algorithm-and-c-implementation/](https://www.yzuzun.com/2015/07/dbscan-clustering-algorithm-and-c-implementation/ \"https://www.yzuzun.com/2015/07/dbscan-clustering-algorithm-and-c-implementation/\") dbscan的C#实现和作者的gayhub项目\n\n[http://download.csdn.net/detail/f112122/7482303 ](http://download.csdn.net/detail/f112122/7482303  \"http://download.csdn.net/detail/f112122/7482303\")c#简易可视化工程例子\n\n诚然，boost把很多常用的算法都写进去了。但c++使用起来才比较顺。这是c++环境下使用dbscan的正确方式：上boost。比如下面这个\n\n[https://github.com/yusufuzun/dbscan](https://github.com/yusufuzun/dbscan \"https://github.com/yusufuzun/dbscan\")（C# 以算法原理为基准 不是很快）\n\n或这个[https://github.com/Terranlee/DBSCAN](https://github.com/Terranlee/DBSCAN \"https://github.com/Terranlee/DBSCAN\")（C++&amp;boost&amp;KDTree&nbsp; 至今没有明白第一个参数ire的含义啊。一般都2个参数就好了啊 而且结果貌似也不太对 等待修正）\n\n# **boost的使用** #\n\n上边两个github的例子都基于c++开发，其中都使用到了流行的c++高性能计算类库boost。\n\nlinux下的编译和安装遵循这个帖比较顺 \n\n[http://ju.outofmemory.cn/entry/106397](http://ju.outofmemory.cn/entry/106397 \"http://ju.outofmemory.cn/entry/106397\")\n\n* * *\n\nKDTree \n\nKDTree作为一种数据结构的拓展，其实是一种变异的二叉排序树，其最最最原始的构造就是，在二叉树左小右大的基础上，对多维数据，第一层比较第一个维度，第二层比较第二个维度，以此类推…………排到最后一维又返回第一位继续排，当然，而已设定排序的次数，到多少维就懒得排了。这个数据结构的好处是，寻找欧几里得空间（也就是任意维度的两个对象的连线长度&amp;有的地方也使用该值当做两个对象相似度）的最邻近点（集）复杂度大大降低，不用迭代整个数就能找到最近的点。\n\n上面说的DBSCAN、后面的ICP、图像匹配中的SIFT算子比较相似度（128维），使用KDTree可以很好的解决时间太长的问题。\n\n来一波树形结合，\n\nKDTree的改进方法有Best Bin Fisrt、Best First Search。它主要的临近查找是基于路径和回路的，但没有考虑节点的一些性质，BBF则根据查询路径上的节点进行排序，排序原则是按照超平面的最短距离。另外还可设置超时，优先级队列中的所有节点都经过检查或者超出时间限制时，返回当前最好结果当做近似的最近邻。这种方式在高维上效率提升很大。（尤其sift）\n\n&nbsp;\n\n* * *\n\n<font color=\"#555555\"></font>&nbsp;\n\n# **ICP**（[Iterative closest point](https://en.wikipedia.org/wiki/Iterative_closest_point)）#\n\n点集匹配算法——两组有部分重叠区域的点集，进行拟合和对应点匹配。匹配中如果模式重复程度过高可能陷入局部最小值，因此需要对模式进行了良好的解析。\n\n算法原理：①算法先解算归一两组点集比例尺、解算质心，将质心重合②对其中一个点集，寻找每个另一点集的最近点，解算梯度和旋转平移量③再次计算最近点，若旋转量小于阈值则停止，若大于阈值则继续②步骤。④按照对应点计算H矩阵（单映矩阵）。\n\n第二部中的关键步骤其实就是解算每一步的迭代旋转和平移量，用到的是最小二乘法；其次，输入模式及输入顺序对匹配影像也比较大。一般的，停止迭代可以设置限差或者迭代次数。\n\nVTK5.8的C#dll中有包含ICP最新的算法，但算法较旧，效率较低，但新版6.0+在C#上未开源，忧伤。算法中，求取最近点有三种做法，一点对点，直接找最近点，常用kd-tree实现；二点对面，求取最近的切面的一个切点，主要针对点集和曲面匹配；三点做发现与另一曲面交点，主要针对面与面配准。\n\nmrpt类库中关于ICP的例子\n\n[http://www.mrpt.org/Iterative_Closest_Point_%28ICP%29_and_other_matching_algorithms](http://www.mrpt.org/Iterative_Closest_Point_%28ICP%29_and_other_matching_algorithms \"http://www.mrpt.org/Iterative_Closest_Point_%28ICP%29_and_other_matching_algorithms\")\n\n结合NUnit的ICP算法\n\n[http://www.codeproject.com/Articles/865830/Point-cloud-alignment-ICP-methods-compared](http://www.codeproject.com/Articles/865830/Point-cloud-alignment-ICP-methods-compared \"http://www.codeproject.com/Articles/865830/Point-cloud-alignment-ICP-methods-compared\")\n\n&nbsp;\n\n适应性：对自由形状的曲面适应性较好，VTK算法在LiDar数据扫描配准中应用较好。\n\n* * *\n\n# **convex hull of a set of points** 点集的凸包 #\n\n没啥特点。但相当基础。在外接圆计算、外接矩形计算的时候必须首先解算。demo相当完美。可直接改了用了。能把demo做的这么直白这么易用相当666了(c#)\n\n[查找点集外包圆](http://csharphelper.com/blog/2014/07/find-the-convex-hull-of-a-set-of-points-in-c/)\n\n&nbsp;\n\n**minimal bounding rectangle for a polygon **凸包的最小外接矩形。这个算法在解求聚类、数据形态方面有很多利用。前提是前面提到的点集凸包以及点集是否按顺时针排序。同样的网站，给的demo我只能说酷炸了。（c#）包含了两种模式：最小面积和最小周长，两者相差不会很大。demo的计算原则是面积。\n\n[计算凸多边形最小外接矩形](http://csharphelper.com/blog/2014/07/find-minimal-bounding-rectangle-polygon-c/)","source":"_posts/最近demo 模块 算法总结.md","raw":"---\ntitle: 最近demo 模块 算法总结\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - dbscan\n  - demo\n  - ICP\n  - MMC\n  - MME\n  - SPark\n  - 算法\nid: 1109\ndate: 2016-03-08 17:43:56\n---\n\n[http://ju.outofmemory.cn/entry/106397](http://ju.outofmemory.cn/entry/106397 \"http://ju.outofmemory.cn/entry/106397\") 【坑妹填完】</p>\n\n最近各种乱整。。文章妹时间管光顾着折腾手头派下来的事情了。再加上每天固定的复习提高一下。小论文完全没有头绪。\n最近get到的实用方法还是很多阿。\n<!-- more -->\n# **DBScan**（Density-Based Spatial Clustering of Applications with Noise）**基于密度的含噪空间聚类** #\n\n最大特点是：多维、任何形状聚类、聚类数任意、噪声可控、对输入不敏感；缺点很明显，需要提前知道2个参数（一般实验多了，根据经验对同一类型聚类可以不用改。），时间复杂度和空间复杂度都很大，需要计算点两两之间距离[这里需要优化，否则算法超出一般忍受时间] 不对密度变化做出选择。\n输入参数2个，单一点半径范围R及其最小包含的点数N。算法本质是遍历所有点并计算邻域内的点数并拓展该类（以R范围内是否达到N来判断）。被分类的点将会标记并不再被检测到。因此耗时表现在邻域查找和拓展聚类上。但解算效果相当良好。\n算法的优化方案相当多：kdtree的、基于网格计算的、基于适应性解算阈值的、局部敏感哈希。主要解决的都是如何加快求解邻域解求速度。诚然它的算法复杂度有n^3显然想要加快并不是那么容易。深入研讨了一番发现计算距离时有的不止一遍，因此写入硬盘或许是个好的方案，但是I/O读取的效率就要考虑进来了；还有一种方式是限制深入迭代次数，即做多在第几层nearestpoint()这个数组中进行聚类的拓展。这种做法的危害是使得同一个点集很可能多次才并入，或者完全没有并到一块，因此需要一个后手，将聚类中心相近的再次组合，其实在kdtree中也有类似的做法。参考[基于SPark的DBSCAN的图解](https://github.com/alitouka/spark_dbscan)，KDTree建立时，按区域分割好数据后，同一类的点集亦可能先分散于个个区间。各自区间先进行小聚类后，再进行大聚类。\n\n![](http://ooo.0o0.ooo/2016/03/30/56fb7e092b350.png)\n\n（中了SPark的毒，后面会进行测试）\ndemo很好的展示了算法的原理。\n\n[http://www.naftaliharris.com/blog/visualizing-dbscan-clustering/](http://www.naftaliharris.com/blog/visualizing-dbscan-clustering/ \"http://www.naftaliharris.com/blog/visualizing-dbscan-clustering/\") 在线666可视化理解dbscan过程。不同的实例可以看到，对不同图形的检测相当准确；同时聚类精度亦相当高。\n\n[http://stackoverflow.com/questions/6621630/dbscan-code-in-c-sharp-or-vb-net-for-cluster-analysis](http://stackoverflow.com/questions/6621630/dbscan-code-in-c-sharp-or-vb-net-for-cluster-analysis \"http://stackoverflow.com/questions/6621630/dbscan-code-in-c-sharp-or-vb-net-for-cluster-analysis\")stackoverflow图解dbscan\n\n[https://www.yzuzun.com/2015/07/dbscan-clustering-algorithm-and-c-implementation/](https://www.yzuzun.com/2015/07/dbscan-clustering-algorithm-and-c-implementation/ \"https://www.yzuzun.com/2015/07/dbscan-clustering-algorithm-and-c-implementation/\") dbscan的C#实现和作者的gayhub项目\n\n[http://download.csdn.net/detail/f112122/7482303 ](http://download.csdn.net/detail/f112122/7482303  \"http://download.csdn.net/detail/f112122/7482303\")c#简易可视化工程例子\n\n诚然，boost把很多常用的算法都写进去了。但c++使用起来才比较顺。这是c++环境下使用dbscan的正确方式：上boost。比如下面这个\n\n[https://github.com/yusufuzun/dbscan](https://github.com/yusufuzun/dbscan \"https://github.com/yusufuzun/dbscan\")（C# 以算法原理为基准 不是很快）\n\n或这个[https://github.com/Terranlee/DBSCAN](https://github.com/Terranlee/DBSCAN \"https://github.com/Terranlee/DBSCAN\")（C++&amp;boost&amp;KDTree&nbsp; 至今没有明白第一个参数ire的含义啊。一般都2个参数就好了啊 而且结果貌似也不太对 等待修正）\n\n# **boost的使用** #\n\n上边两个github的例子都基于c++开发，其中都使用到了流行的c++高性能计算类库boost。\n\nlinux下的编译和安装遵循这个帖比较顺 \n\n[http://ju.outofmemory.cn/entry/106397](http://ju.outofmemory.cn/entry/106397 \"http://ju.outofmemory.cn/entry/106397\")\n\n* * *\n\nKDTree \n\nKDTree作为一种数据结构的拓展，其实是一种变异的二叉排序树，其最最最原始的构造就是，在二叉树左小右大的基础上，对多维数据，第一层比较第一个维度，第二层比较第二个维度，以此类推…………排到最后一维又返回第一位继续排，当然，而已设定排序的次数，到多少维就懒得排了。这个数据结构的好处是，寻找欧几里得空间（也就是任意维度的两个对象的连线长度&amp;有的地方也使用该值当做两个对象相似度）的最邻近点（集）复杂度大大降低，不用迭代整个数就能找到最近的点。\n\n上面说的DBSCAN、后面的ICP、图像匹配中的SIFT算子比较相似度（128维），使用KDTree可以很好的解决时间太长的问题。\n\n来一波树形结合，\n\nKDTree的改进方法有Best Bin Fisrt、Best First Search。它主要的临近查找是基于路径和回路的，但没有考虑节点的一些性质，BBF则根据查询路径上的节点进行排序，排序原则是按照超平面的最短距离。另外还可设置超时，优先级队列中的所有节点都经过检查或者超出时间限制时，返回当前最好结果当做近似的最近邻。这种方式在高维上效率提升很大。（尤其sift）\n\n&nbsp;\n\n* * *\n\n<font color=\"#555555\"></font>&nbsp;\n\n# **ICP**（[Iterative closest point](https://en.wikipedia.org/wiki/Iterative_closest_point)）#\n\n点集匹配算法——两组有部分重叠区域的点集，进行拟合和对应点匹配。匹配中如果模式重复程度过高可能陷入局部最小值，因此需要对模式进行了良好的解析。\n\n算法原理：①算法先解算归一两组点集比例尺、解算质心，将质心重合②对其中一个点集，寻找每个另一点集的最近点，解算梯度和旋转平移量③再次计算最近点，若旋转量小于阈值则停止，若大于阈值则继续②步骤。④按照对应点计算H矩阵（单映矩阵）。\n\n第二部中的关键步骤其实就是解算每一步的迭代旋转和平移量，用到的是最小二乘法；其次，输入模式及输入顺序对匹配影像也比较大。一般的，停止迭代可以设置限差或者迭代次数。\n\nVTK5.8的C#dll中有包含ICP最新的算法，但算法较旧，效率较低，但新版6.0+在C#上未开源，忧伤。算法中，求取最近点有三种做法，一点对点，直接找最近点，常用kd-tree实现；二点对面，求取最近的切面的一个切点，主要针对点集和曲面匹配；三点做发现与另一曲面交点，主要针对面与面配准。\n\nmrpt类库中关于ICP的例子\n\n[http://www.mrpt.org/Iterative_Closest_Point_%28ICP%29_and_other_matching_algorithms](http://www.mrpt.org/Iterative_Closest_Point_%28ICP%29_and_other_matching_algorithms \"http://www.mrpt.org/Iterative_Closest_Point_%28ICP%29_and_other_matching_algorithms\")\n\n结合NUnit的ICP算法\n\n[http://www.codeproject.com/Articles/865830/Point-cloud-alignment-ICP-methods-compared](http://www.codeproject.com/Articles/865830/Point-cloud-alignment-ICP-methods-compared \"http://www.codeproject.com/Articles/865830/Point-cloud-alignment-ICP-methods-compared\")\n\n&nbsp;\n\n适应性：对自由形状的曲面适应性较好，VTK算法在LiDar数据扫描配准中应用较好。\n\n* * *\n\n# **convex hull of a set of points** 点集的凸包 #\n\n没啥特点。但相当基础。在外接圆计算、外接矩形计算的时候必须首先解算。demo相当完美。可直接改了用了。能把demo做的这么直白这么易用相当666了(c#)\n\n[查找点集外包圆](http://csharphelper.com/blog/2014/07/find-the-convex-hull-of-a-set-of-points-in-c/)\n\n&nbsp;\n\n**minimal bounding rectangle for a polygon **凸包的最小外接矩形。这个算法在解求聚类、数据形态方面有很多利用。前提是前面提到的点集凸包以及点集是否按顺时针排序。同样的网站，给的demo我只能说酷炸了。（c#）包含了两种模式：最小面积和最小周长，两者相差不会很大。demo的计算原则是面积。\n\n[计算凸多边形最小外接矩形](http://csharphelper.com/blog/2014/07/find-minimal-bounding-rectangle-polygon-c/)","slug":"最近demo 模块 算法总结","published":1,"updated":"2016-04-23T12:22:24.295Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7rj007zuco4rs62awvj","content":"<p><a href=\"http://ju.outofmemory.cn/entry/106397\" title=\"http://ju.outofmemory.cn/entry/106397\" target=\"_blank\" rel=\"external\">http://ju.outofmemory.cn/entry/106397</a> 【坑妹填完】</p>\n<p>最近各种乱整。。文章妹时间管光顾着折腾手头派下来的事情了。再加上每天固定的复习提高一下。小论文完全没有头绪。<br>最近get到的实用方法还是很多阿。<br><a id=\"more\"></a></p>\n<h1 id=\"DBScan（Density-Based-Spatial-Clustering-of-Applications-with-Noise）基于密度的含噪空间聚类\"><a href=\"#DBScan（Density-Based-Spatial-Clustering-of-Applications-with-Noise）基于密度的含噪空间聚类\" class=\"headerlink\" title=\"DBScan（Density-Based Spatial Clustering of Applications with Noise）基于密度的含噪空间聚类\"></a><strong>DBScan</strong>（Density-Based Spatial Clustering of Applications with Noise）<strong>基于密度的含噪空间聚类</strong></h1><p>最大特点是：多维、任何形状聚类、聚类数任意、噪声可控、对输入不敏感；缺点很明显，需要提前知道2个参数（一般实验多了，根据经验对同一类型聚类可以不用改。），时间复杂度和空间复杂度都很大，需要计算点两两之间距离[这里需要优化，否则算法超出一般忍受时间] 不对密度变化做出选择。<br>输入参数2个，单一点半径范围R及其最小包含的点数N。算法本质是遍历所有点并计算邻域内的点数并拓展该类（以R范围内是否达到N来判断）。被分类的点将会标记并不再被检测到。因此耗时表现在邻域查找和拓展聚类上。但解算效果相当良好。<br>算法的优化方案相当多：kdtree的、基于网格计算的、基于适应性解算阈值的、局部敏感哈希。主要解决的都是如何加快求解邻域解求速度。诚然它的算法复杂度有n^3显然想要加快并不是那么容易。深入研讨了一番发现计算距离时有的不止一遍，因此写入硬盘或许是个好的方案，但是I/O读取的效率就要考虑进来了；还有一种方式是限制深入迭代次数，即做多在第几层nearestpoint()这个数组中进行聚类的拓展。这种做法的危害是使得同一个点集很可能多次才并入，或者完全没有并到一块，因此需要一个后手，将聚类中心相近的再次组合，其实在kdtree中也有类似的做法。参考<a href=\"https://github.com/alitouka/spark_dbscan\" target=\"_blank\" rel=\"external\">基于SPark的DBSCAN的图解</a>，KDTree建立时，按区域分割好数据后，同一类的点集亦可能先分散于个个区间。各自区间先进行小聚类后，再进行大聚类。</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/03/30/56fb7e092b350.png\" alt=\"\"></p>\n<p>（中了SPark的毒，后面会进行测试）<br>demo很好的展示了算法的原理。</p>\n<p><a href=\"http://www.naftaliharris.com/blog/visualizing-dbscan-clustering/\" title=\"http://www.naftaliharris.com/blog/visualizing-dbscan-clustering/\" target=\"_blank\" rel=\"external\">http://www.naftaliharris.com/blog/visualizing-dbscan-clustering/</a> 在线666可视化理解dbscan过程。不同的实例可以看到，对不同图形的检测相当准确；同时聚类精度亦相当高。</p>\n<p><a href=\"http://stackoverflow.com/questions/6621630/dbscan-code-in-c-sharp-or-vb-net-for-cluster-analysis\" title=\"http://stackoverflow.com/questions/6621630/dbscan-code-in-c-sharp-or-vb-net-for-cluster-analysis\" target=\"_blank\" rel=\"external\">http://stackoverflow.com/questions/6621630/dbscan-code-in-c-sharp-or-vb-net-for-cluster-analysis</a>stackoverflow图解dbscan</p>\n<p><a href=\"https://www.yzuzun.com/2015/07/dbscan-clustering-algorithm-and-c-implementation/\" title=\"https://www.yzuzun.com/2015/07/dbscan-clustering-algorithm-and-c-implementation/\" target=\"_blank\" rel=\"external\">https://www.yzuzun.com/2015/07/dbscan-clustering-algorithm-and-c-implementation/</a> dbscan的C#实现和作者的gayhub项目</p>\n<p><a href=\"http://download.csdn.net/detail/f112122/7482303\" title=\"http://download.csdn.net/detail/f112122/7482303\" target=\"_blank\" rel=\"external\">http://download.csdn.net/detail/f112122/7482303 </a>c#简易可视化工程例子</p>\n<p>诚然，boost把很多常用的算法都写进去了。但c++使用起来才比较顺。这是c++环境下使用dbscan的正确方式：上boost。比如下面这个</p>\n<p><a href=\"https://github.com/yusufuzun/dbscan\" title=\"https://github.com/yusufuzun/dbscan\" target=\"_blank\" rel=\"external\">https://github.com/yusufuzun/dbscan</a>（C# 以算法原理为基准 不是很快）</p>\n<p>或这个<a href=\"https://github.com/Terranlee/DBSCAN\" title=\"https://github.com/Terranlee/DBSCAN\" target=\"_blank\" rel=\"external\">https://github.com/Terranlee/DBSCAN</a>（C++&amp;boost&amp;KDTree&nbsp; 至今没有明白第一个参数ire的含义啊。一般都2个参数就好了啊 而且结果貌似也不太对 等待修正）</p>\n<h1 id=\"boost的使用\"><a href=\"#boost的使用\" class=\"headerlink\" title=\"boost的使用\"></a><strong>boost的使用</strong></h1><p>上边两个github的例子都基于c++开发，其中都使用到了流行的c++高性能计算类库boost。</p>\n<p>linux下的编译和安装遵循这个帖比较顺 </p>\n<p><a href=\"http://ju.outofmemory.cn/entry/106397\" title=\"http://ju.outofmemory.cn/entry/106397\" target=\"_blank\" rel=\"external\">http://ju.outofmemory.cn/entry/106397</a></p>\n<hr>\n<p>KDTree </p>\n<p>KDTree作为一种数据结构的拓展，其实是一种变异的二叉排序树，其最最最原始的构造就是，在二叉树左小右大的基础上，对多维数据，第一层比较第一个维度，第二层比较第二个维度，以此类推…………排到最后一维又返回第一位继续排，当然，而已设定排序的次数，到多少维就懒得排了。这个数据结构的好处是，寻找欧几里得空间（也就是任意维度的两个对象的连线长度&amp;有的地方也使用该值当做两个对象相似度）的最邻近点（集）复杂度大大降低，不用迭代整个数就能找到最近的点。</p>\n<p>上面说的DBSCAN、后面的ICP、图像匹配中的SIFT算子比较相似度（128维），使用KDTree可以很好的解决时间太长的问题。</p>\n<p>来一波树形结合，</p>\n<p>KDTree的改进方法有Best Bin Fisrt、Best First Search。它主要的临近查找是基于路径和回路的，但没有考虑节点的一些性质，BBF则根据查询路径上的节点进行排序，排序原则是按照超平面的最短距离。另外还可设置超时，优先级队列中的所有节点都经过检查或者超出时间限制时，返回当前最好结果当做近似的最近邻。这种方式在高维上效率提升很大。（尤其sift）</p>\n<p>&nbsp;</p>\n<hr>\n<p><font color=\"#555555\"></font>&nbsp;</p>\n<h1 id=\"ICP（Iterative-closest-point）\"><a href=\"#ICP（Iterative-closest-point）\" class=\"headerlink\" title=\"ICP（Iterative closest point）\"></a><strong>ICP</strong>（<a href=\"https://en.wikipedia.org/wiki/Iterative_closest_point\" target=\"_blank\" rel=\"external\">Iterative closest point</a>）</h1><p>点集匹配算法——两组有部分重叠区域的点集，进行拟合和对应点匹配。匹配中如果模式重复程度过高可能陷入局部最小值，因此需要对模式进行了良好的解析。</p>\n<p>算法原理：①算法先解算归一两组点集比例尺、解算质心，将质心重合②对其中一个点集，寻找每个另一点集的最近点，解算梯度和旋转平移量③再次计算最近点，若旋转量小于阈值则停止，若大于阈值则继续②步骤。④按照对应点计算H矩阵（单映矩阵）。</p>\n<p>第二部中的关键步骤其实就是解算每一步的迭代旋转和平移量，用到的是最小二乘法；其次，输入模式及输入顺序对匹配影像也比较大。一般的，停止迭代可以设置限差或者迭代次数。</p>\n<p>VTK5.8的C#dll中有包含ICP最新的算法，但算法较旧，效率较低，但新版6.0+在C#上未开源，忧伤。算法中，求取最近点有三种做法，一点对点，直接找最近点，常用kd-tree实现；二点对面，求取最近的切面的一个切点，主要针对点集和曲面匹配；三点做发现与另一曲面交点，主要针对面与面配准。</p>\n<p>mrpt类库中关于ICP的例子</p>\n<p><a href=\"http://www.mrpt.org/Iterative_Closest_Point_%28ICP%29_and_other_matching_algorithms\" title=\"http://www.mrpt.org/Iterative_Closest_Point_%28ICP%29_and_other_matching_algorithms\" target=\"_blank\" rel=\"external\">http://www.mrpt.org/Iterative_Closest<em>Point</em>%28ICP%29_and_other_matching_algorithms</a></p>\n<p>结合NUnit的ICP算法</p>\n<p><a href=\"http://www.codeproject.com/Articles/865830/Point-cloud-alignment-ICP-methods-compared\" title=\"http://www.codeproject.com/Articles/865830/Point-cloud-alignment-ICP-methods-compared\" target=\"_blank\" rel=\"external\">http://www.codeproject.com/Articles/865830/Point-cloud-alignment-ICP-methods-compared</a></p>\n<p>&nbsp;</p>\n<p>适应性：对自由形状的曲面适应性较好，VTK算法在LiDar数据扫描配准中应用较好。</p>\n<hr>\n<h1 id=\"convex-hull-of-a-set-of-points-点集的凸包\"><a href=\"#convex-hull-of-a-set-of-points-点集的凸包\" class=\"headerlink\" title=\"convex hull of a set of points 点集的凸包\"></a><strong>convex hull of a set of points</strong> 点集的凸包</h1><p>没啥特点。但相当基础。在外接圆计算、外接矩形计算的时候必须首先解算。demo相当完美。可直接改了用了。能把demo做的这么直白这么易用相当666了(c#)</p>\n<p><a href=\"http://csharphelper.com/blog/2014/07/find-the-convex-hull-of-a-set-of-points-in-c/\" target=\"_blank\" rel=\"external\">查找点集外包圆</a></p>\n<p>&nbsp;</p>\n<p><strong>minimal bounding rectangle for a polygon </strong>凸包的最小外接矩形。这个算法在解求聚类、数据形态方面有很多利用。前提是前面提到的点集凸包以及点集是否按顺时针排序。同样的网站，给的demo我只能说酷炸了。（c#）包含了两种模式：最小面积和最小周长，两者相差不会很大。demo的计算原则是面积。</p>\n<p><a href=\"http://csharphelper.com/blog/2014/07/find-minimal-bounding-rectangle-polygon-c/\" target=\"_blank\" rel=\"external\">计算凸多边形最小外接矩形</a></p>","excerpt":"<p><a href=\"http://ju.outofmemory.cn/entry/106397\" title=\"http://ju.outofmemory.cn/entry/106397\">http://ju.outofmemory.cn/entry/106397</a> 【坑妹填完】</p>\n<p>最近各种乱整。。文章妹时间管光顾着折腾手头派下来的事情了。再加上每天固定的复习提高一下。小论文完全没有头绪。<br>最近get到的实用方法还是很多阿。<br>","more":"</p>\n<h1 id=\"DBScan（Density-Based-Spatial-Clustering-of-Applications-with-Noise）基于密度的含噪空间聚类\"><a href=\"#DBScan（Density-Based-Spatial-Clustering-of-Applications-with-Noise）基于密度的含噪空间聚类\" class=\"headerlink\" title=\"DBScan（Density-Based Spatial Clustering of Applications with Noise）基于密度的含噪空间聚类\"></a><strong>DBScan</strong>（Density-Based Spatial Clustering of Applications with Noise）<strong>基于密度的含噪空间聚类</strong></h1><p>最大特点是：多维、任何形状聚类、聚类数任意、噪声可控、对输入不敏感；缺点很明显，需要提前知道2个参数（一般实验多了，根据经验对同一类型聚类可以不用改。），时间复杂度和空间复杂度都很大，需要计算点两两之间距离[这里需要优化，否则算法超出一般忍受时间] 不对密度变化做出选择。<br>输入参数2个，单一点半径范围R及其最小包含的点数N。算法本质是遍历所有点并计算邻域内的点数并拓展该类（以R范围内是否达到N来判断）。被分类的点将会标记并不再被检测到。因此耗时表现在邻域查找和拓展聚类上。但解算效果相当良好。<br>算法的优化方案相当多：kdtree的、基于网格计算的、基于适应性解算阈值的、局部敏感哈希。主要解决的都是如何加快求解邻域解求速度。诚然它的算法复杂度有n^3显然想要加快并不是那么容易。深入研讨了一番发现计算距离时有的不止一遍，因此写入硬盘或许是个好的方案，但是I/O读取的效率就要考虑进来了；还有一种方式是限制深入迭代次数，即做多在第几层nearestpoint()这个数组中进行聚类的拓展。这种做法的危害是使得同一个点集很可能多次才并入，或者完全没有并到一块，因此需要一个后手，将聚类中心相近的再次组合，其实在kdtree中也有类似的做法。参考<a href=\"https://github.com/alitouka/spark_dbscan\">基于SPark的DBSCAN的图解</a>，KDTree建立时，按区域分割好数据后，同一类的点集亦可能先分散于个个区间。各自区间先进行小聚类后，再进行大聚类。</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/03/30/56fb7e092b350.png\" alt=\"\"></p>\n<p>（中了SPark的毒，后面会进行测试）<br>demo很好的展示了算法的原理。</p>\n<p><a href=\"http://www.naftaliharris.com/blog/visualizing-dbscan-clustering/\" title=\"http://www.naftaliharris.com/blog/visualizing-dbscan-clustering/\">http://www.naftaliharris.com/blog/visualizing-dbscan-clustering/</a> 在线666可视化理解dbscan过程。不同的实例可以看到，对不同图形的检测相当准确；同时聚类精度亦相当高。</p>\n<p><a href=\"http://stackoverflow.com/questions/6621630/dbscan-code-in-c-sharp-or-vb-net-for-cluster-analysis\" title=\"http://stackoverflow.com/questions/6621630/dbscan-code-in-c-sharp-or-vb-net-for-cluster-analysis\">http://stackoverflow.com/questions/6621630/dbscan-code-in-c-sharp-or-vb-net-for-cluster-analysis</a>stackoverflow图解dbscan</p>\n<p><a href=\"https://www.yzuzun.com/2015/07/dbscan-clustering-algorithm-and-c-implementation/\" title=\"https://www.yzuzun.com/2015/07/dbscan-clustering-algorithm-and-c-implementation/\">https://www.yzuzun.com/2015/07/dbscan-clustering-algorithm-and-c-implementation/</a> dbscan的C#实现和作者的gayhub项目</p>\n<p><a href=\"http://download.csdn.net/detail/f112122/7482303\" title=\"http://download.csdn.net/detail/f112122/7482303\">http://download.csdn.net/detail/f112122/7482303 </a>c#简易可视化工程例子</p>\n<p>诚然，boost把很多常用的算法都写进去了。但c++使用起来才比较顺。这是c++环境下使用dbscan的正确方式：上boost。比如下面这个</p>\n<p><a href=\"https://github.com/yusufuzun/dbscan\" title=\"https://github.com/yusufuzun/dbscan\">https://github.com/yusufuzun/dbscan</a>（C# 以算法原理为基准 不是很快）</p>\n<p>或这个<a href=\"https://github.com/Terranlee/DBSCAN\" title=\"https://github.com/Terranlee/DBSCAN\">https://github.com/Terranlee/DBSCAN</a>（C++&amp;boost&amp;KDTree&nbsp; 至今没有明白第一个参数ire的含义啊。一般都2个参数就好了啊 而且结果貌似也不太对 等待修正）</p>\n<h1 id=\"boost的使用\"><a href=\"#boost的使用\" class=\"headerlink\" title=\"boost的使用\"></a><strong>boost的使用</strong></h1><p>上边两个github的例子都基于c++开发，其中都使用到了流行的c++高性能计算类库boost。</p>\n<p>linux下的编译和安装遵循这个帖比较顺 </p>\n<p><a href=\"http://ju.outofmemory.cn/entry/106397\" title=\"http://ju.outofmemory.cn/entry/106397\">http://ju.outofmemory.cn/entry/106397</a></p>\n<hr>\n<p>KDTree </p>\n<p>KDTree作为一种数据结构的拓展，其实是一种变异的二叉排序树，其最最最原始的构造就是，在二叉树左小右大的基础上，对多维数据，第一层比较第一个维度，第二层比较第二个维度，以此类推…………排到最后一维又返回第一位继续排，当然，而已设定排序的次数，到多少维就懒得排了。这个数据结构的好处是，寻找欧几里得空间（也就是任意维度的两个对象的连线长度&amp;有的地方也使用该值当做两个对象相似度）的最邻近点（集）复杂度大大降低，不用迭代整个数就能找到最近的点。</p>\n<p>上面说的DBSCAN、后面的ICP、图像匹配中的SIFT算子比较相似度（128维），使用KDTree可以很好的解决时间太长的问题。</p>\n<p>来一波树形结合，</p>\n<p>KDTree的改进方法有Best Bin Fisrt、Best First Search。它主要的临近查找是基于路径和回路的，但没有考虑节点的一些性质，BBF则根据查询路径上的节点进行排序，排序原则是按照超平面的最短距离。另外还可设置超时，优先级队列中的所有节点都经过检查或者超出时间限制时，返回当前最好结果当做近似的最近邻。这种方式在高维上效率提升很大。（尤其sift）</p>\n<p>&nbsp;</p>\n<hr>\n<p><font color=\"#555555\"></font>&nbsp;</p>\n<h1 id=\"ICP（Iterative-closest-point）\"><a href=\"#ICP（Iterative-closest-point）\" class=\"headerlink\" title=\"ICP（Iterative closest point）\"></a><strong>ICP</strong>（<a href=\"https://en.wikipedia.org/wiki/Iterative_closest_point\">Iterative closest point</a>）</h1><p>点集匹配算法——两组有部分重叠区域的点集，进行拟合和对应点匹配。匹配中如果模式重复程度过高可能陷入局部最小值，因此需要对模式进行了良好的解析。</p>\n<p>算法原理：①算法先解算归一两组点集比例尺、解算质心，将质心重合②对其中一个点集，寻找每个另一点集的最近点，解算梯度和旋转平移量③再次计算最近点，若旋转量小于阈值则停止，若大于阈值则继续②步骤。④按照对应点计算H矩阵（单映矩阵）。</p>\n<p>第二部中的关键步骤其实就是解算每一步的迭代旋转和平移量，用到的是最小二乘法；其次，输入模式及输入顺序对匹配影像也比较大。一般的，停止迭代可以设置限差或者迭代次数。</p>\n<p>VTK5.8的C#dll中有包含ICP最新的算法，但算法较旧，效率较低，但新版6.0+在C#上未开源，忧伤。算法中，求取最近点有三种做法，一点对点，直接找最近点，常用kd-tree实现；二点对面，求取最近的切面的一个切点，主要针对点集和曲面匹配；三点做发现与另一曲面交点，主要针对面与面配准。</p>\n<p>mrpt类库中关于ICP的例子</p>\n<p><a href=\"http://www.mrpt.org/Iterative_Closest_Point_%28ICP%29_and_other_matching_algorithms\" title=\"http://www.mrpt.org/Iterative_Closest_Point_%28ICP%29_and_other_matching_algorithms\">http://www.mrpt.org/Iterative_Closest<em>Point</em>%28ICP%29_and_other_matching_algorithms</a></p>\n<p>结合NUnit的ICP算法</p>\n<p><a href=\"http://www.codeproject.com/Articles/865830/Point-cloud-alignment-ICP-methods-compared\" title=\"http://www.codeproject.com/Articles/865830/Point-cloud-alignment-ICP-methods-compared\">http://www.codeproject.com/Articles/865830/Point-cloud-alignment-ICP-methods-compared</a></p>\n<p>&nbsp;</p>\n<p>适应性：对自由形状的曲面适应性较好，VTK算法在LiDar数据扫描配准中应用较好。</p>\n<hr>\n<h1 id=\"convex-hull-of-a-set-of-points-点集的凸包\"><a href=\"#convex-hull-of-a-set-of-points-点集的凸包\" class=\"headerlink\" title=\"convex hull of a set of points 点集的凸包\"></a><strong>convex hull of a set of points</strong> 点集的凸包</h1><p>没啥特点。但相当基础。在外接圆计算、外接矩形计算的时候必须首先解算。demo相当完美。可直接改了用了。能把demo做的这么直白这么易用相当666了(c#)</p>\n<p><a href=\"http://csharphelper.com/blog/2014/07/find-the-convex-hull-of-a-set-of-points-in-c/\">查找点集外包圆</a></p>\n<p>&nbsp;</p>\n<p><strong>minimal bounding rectangle for a polygon </strong>凸包的最小外接矩形。这个算法在解求聚类、数据形态方面有很多利用。前提是前面提到的点集凸包以及点集是否按顺时针排序。同样的网站，给的demo我只能说酷炸了。（c#）包含了两种模式：最小面积和最小周长，两者相差不会很大。demo的计算原则是面积。</p>\n<p><a href=\"http://csharphelper.com/blog/2014/07/find-minimal-bounding-rectangle-polygon-c/\">计算凸多边形最小外接矩形</a></p>"},{"title":"最近听的音乐","id":"586","date":"2015-05-30T10:10:51.000Z","_content":"\n今天。听李志和陈粒","source":"_posts/最近听的音乐.md","raw":"---\ntitle: 最近听的音乐\ncategories:\n  - 槽\ntags:\n  - 音乐\nid: 586\ndate: 2015-05-30 18:10:51\n---\n\n今天。听李志和陈粒","slug":"最近听的音乐","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7rl0082uco4a1jus2t1","content":"<p>今天。听李志和陈粒</p>","excerpt":"","more":"<p>今天。听李志和陈粒</p>"},{"title":"最近的一些推荐拉","id":"210","date":"2013-05-23T17:27:41.000Z","_content":"\n1.PDF转Word的格式完整转换工具 [ 易捷PDF转换器 ](http://www.google.com.hk/cse?ie=utf-8&cx=partner-pub-6463892505403669%3A5358528477&q=%E6%98%93%E6%8D%B7pdf%E8%BD%AC%E6%8D%A2%E5%99%A8#gsc.tab=0&gsc.q=%E6%98%93%E6%8D%B7pdf%E8%BD%AC%E6%8D%A2%E5%99%A8&gsc.page=1 \"易捷PDF转换器\")\n2.图床云服务 之前有过API的介绍 方便的简单图片存放的免费!服务器 [imgur.com/](http://imgur.com/ \"imgur\")\n3.前端 桌面工具箱 各种截图 取色 像素测量 方便简单 [picpick ](http://www.google.com.hk/search?ix=seb&sourceid=chrome&ie=UTF-8&q=picpick \"picpick\")","source":"_posts/最近的一些推荐拉.md","raw":"---\ntitle: 最近的一些推荐拉\ncategories:\n  - App强推\n  - 软文\ntags:\n  - recommend\nid: 210\ndate: 2013-05-24 01:27:41\n---\n\n1.PDF转Word的格式完整转换工具 [ 易捷PDF转换器 ](http://www.google.com.hk/cse?ie=utf-8&cx=partner-pub-6463892505403669%3A5358528477&q=%E6%98%93%E6%8D%B7pdf%E8%BD%AC%E6%8D%A2%E5%99%A8#gsc.tab=0&gsc.q=%E6%98%93%E6%8D%B7pdf%E8%BD%AC%E6%8D%A2%E5%99%A8&gsc.page=1 \"易捷PDF转换器\")\n2.图床云服务 之前有过API的介绍 方便的简单图片存放的免费!服务器 [imgur.com/](http://imgur.com/ \"imgur\")\n3.前端 桌面工具箱 各种截图 取色 像素测量 方便简单 [picpick ](http://www.google.com.hk/search?ix=seb&sourceid=chrome&ie=UTF-8&q=picpick \"picpick\")","slug":"最近的一些推荐拉","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7rn0087uco4lu0sa39p","content":"<p>1.PDF转Word的格式完整转换工具 <a href=\"http://www.google.com.hk/cse?ie=utf-8&amp;cx=partner-pub-6463892505403669%3A5358528477&amp;q=%E6%98%93%E6%8D%B7pdf%E8%BD%AC%E6%8D%A2%E5%99%A8#gsc.tab=0&amp;gsc.q=%E6%98%93%E6%8D%B7pdf%E8%BD%AC%E6%8D%A2%E5%99%A8&amp;gsc.page=1\" title=\"易捷PDF转换器\" target=\"_blank\" rel=\"external\"> 易捷PDF转换器 </a><br>2.图床云服务 之前有过API的介绍 方便的简单图片存放的免费!服务器 <a href=\"http://imgur.com/\" title=\"imgur\" target=\"_blank\" rel=\"external\">imgur.com/</a><br>3.前端 桌面工具箱 各种截图 取色 像素测量 方便简单 <a href=\"http://www.google.com.hk/search?ix=seb&amp;sourceid=chrome&amp;ie=UTF-8&amp;q=picpick\" title=\"picpick\" target=\"_blank\" rel=\"external\">picpick </a></p>","excerpt":"","more":"<p>1.PDF转Word的格式完整转换工具 <a href=\"http://www.google.com.hk/cse?ie=utf-8&amp;cx=partner-pub-6463892505403669%3A5358528477&amp;q=%E6%98%93%E6%8D%B7pdf%E8%BD%AC%E6%8D%A2%E5%99%A8#gsc.tab=0&amp;gsc.q=%E6%98%93%E6%8D%B7pdf%E8%BD%AC%E6%8D%A2%E5%99%A8&amp;gsc.page=1\" title=\"易捷PDF转换器\"> 易捷PDF转换器 </a><br>2.图床云服务 之前有过API的介绍 方便的简单图片存放的免费!服务器 <a href=\"http://imgur.com/\" title=\"imgur\">imgur.com/</a><br>3.前端 桌面工具箱 各种截图 取色 像素测量 方便简单 <a href=\"http://www.google.com.hk/search?ix=seb&amp;sourceid=chrome&amp;ie=UTF-8&amp;q=picpick\" title=\"picpick\">picpick </a></p>"},{"title":"本体的介绍","id":"269","date":"2013-07-11T20:06:39.000Z","_content":"\n[本体的基本介绍](http://imarine.blog.163.com/blog/#m=0&t=3&c=ontology \"ontology-imarine163 本体的基本介绍\")","source":"_posts/本体的介绍.md","raw":"---\ntitle: 本体的介绍\ncategories:\n  - 什么都学一下\n  - 学习log\ntags:\n  - jena\n  - ontology\n  - 本体论\n  - 语义网\nid: 269\ndate: 2013-07-12 04:06:39\n---\n\n[本体的基本介绍](http://imarine.blog.163.com/blog/#m=0&t=3&c=ontology \"ontology-imarine163 本体的基本介绍\")","slug":"本体的介绍","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7rq008auco43m1axq7u","content":"<p><a href=\"http://imarine.blog.163.com/blog/#m=0&amp;t=3&amp;c=ontology\" title=\"ontology-imarine163 本体的基本介绍\" target=\"_blank\" rel=\"external\">本体的基本介绍</a></p>","excerpt":"","more":"<p><a href=\"http://imarine.blog.163.com/blog/#m=0&amp;t=3&amp;c=ontology\" title=\"ontology-imarine163 本体的基本介绍\">本体的基本介绍</a></p>"},{"title":"树系列码集合[持更20160517]","date":"2016-05-03T15:06:28.000Z","_content":"本文持更树操作集合-码狗学习中\n<!--more-->\n# 二叉查找树转双链表（c++）\n> 需求就是一个二叉树查找树 ，要转成按顺序排列的双向链表\n> \n> 思路差不多就是：中序可以按顺序输出；左儿子指针指向相邻小的，右儿子指针指向相邻大的；相邻由中序控制,左右儿子改动的时候寄存在pre(前驱)和root(当前)下\n\n**关键代码**\n\n定义模版类及head pre指针\n```c++\n    template<class T>                  //模版结构体\n    struct TreeNode\n    {\n        T data;                       //节点的内容\n        TreeNode <T> *Lchild, *Rchild,*pParent; //节点的左子树和右子树\n    //可选择参数的默认构造函数\n    TreeNode(T nodeValue = T(), TreeNode<T> *leftNode = NULL, TreeNode<T> *rightNode = NULL, TreeNode<T> *parentNode = NULL)\n    :data(nodeValue),Lchild(leftNode),Rchild(rightNode),pParent(parentNode){}\n    };\n\n    TreeNode<int> * pHead =NULL;//存放头指针\n    TreeNode<int> * previous = NULL;//存放前驱\n```\n核心转换代码\n\n```c++\n    template<class T>\n    void Tranverse(TreeNode<T> * root)//记前序\n    {\n        if (root){\n            Tranverse(root->Lchild);//很明显的中序遍历阿！\n            if (previous){\n                if (!pHead){//这个if可以不写啊 只是为了记录头结点而已\n                    pHead = previous;\n                }\n                previous->Rchild = root;//前驱的右指针指向root\n                root->Lchild = previous;//root的左指针指向前驱\n            }\n            previous = root;//前驱跑到下一个更新\n            Tranverse(root->Rchild);\n        }\n    }\n```\n调用代码,我才懒得写insert代码啊，rootNode从哪里来的我也不管啊\n\n```c+\n    Tranverse(rootNode);\n    while (pHead != NULL){\n        cout << pHead->data << endl;\n        pHead = pHead->Rchild;\n    }\n```\n代码见[这里](https://github.com/ovjaywang/TreeInvolved/tree/master/BSTree2DoubleLinkList)  \n\n# 在二叉查找树里查找范围内数据(c++)\n> 二叉查找树对于范围查找效率比普通线性查找效率高，Point仍旧是中序按序输出。\n> \n> 思路：这次换一个c语言方式类typedef定义二叉树模版，以二叉按次序找到下限第一个，然后其后的数据与最大最小值比较，在范围内就输出。因此，在二叉查找树中序输出中中，加两个判断条件\n> 1. 进入左子树需要根节点比最小值大  \n> 2. 进入右子树需要根节点比最大值小\n\n类模版定义\n\n```c\ntypedef int KeyType;\ntypedef struct TreeNode\n{\n    KeyType key;          //关键字\n    struct TreeNode * left;   //左孩子指针\n    struct TreeNode * right;  //右孩子指针\n    struct TreeNode * parent; //指向父节点指针\n}TreeNode, *PNode;\n```\n\n关键代码 以范围搜索\n\n```c\n    set<KeyType> searchRange(KeyType min, KeyType max, set<KeyType> &vt, TreeNode *root){\n        if (!root) return vt ;\n        if (min < root->key)\n            searchRange(min, max, vt,root->left);\n        if (min <= root->key && max >= root->key){\n            vt.insert(root->key);\n        }\n        if (max>root->key)\n            searchRange(min, max, vt,root->right);\n        return vt;\n    }\n```\n\n调用代码\n\n```c\n    set<int> ss = set<int>();\n    //很多地方都会把set带进函数迭代传递\n    ss = searchRange(0, 3, ss, root);\n    cout << \"vv.size() \"<<ss.size()<<endl<<\"范围内包含节点有:\"<<endl;\n    for each (int item in ss)\n    {\n        cout << item<<\" \";\n    }\n```\n代码见[这里](https://github.com/ovjaywang/TreeInvolved/tree/master/FindInBSTree)\n\n# 输出(平衡)二叉树所有和为某值的路径\n\n>需求：一条路径就是从根到叶子所有节点，路径数就是叶子数。要输出所有满足路径上所有节点和为某值的路径。\n> \n> 思路：为了保证效率，不能每次从头遍历到每个叶子才输出一次。\n> 1. 使用栈压入根到当前节点的路径所有制，以便求和\n> 2. 栈和超过值可以不继续寻找当前路径的儿子\n> 3. 找一个儿子就在栈压入一个数值，跳回一个根就弹出一个儿子的值\n\n当然，我很无聊，试一试平衡二叉(AVL).平衡二叉防止了直接建立查找二叉时候的随机，保证了时间复杂式始终在log(n).但建立AVL时候的插入删除代价也相对较大。\n\nAVL模版类的声明，多了一个height（高度）属性。\n\n```c++\n    template <class T>\n    class AVLTreeNode{\n    public:\n        T key;                // 关键字(键值)\n        int height;         // 高度\n        AVLTreeNode *left;    // 左孩子\n        AVLTreeNode *right;    // 右孩子\n        //构造函数\n        AVLTreeNode(T value, AVLTreeNode *l, AVLTreeNode *r) :\n            key(value), height(0), left(l), right(r) {}\n    };\n```\n\nAVLtree类中包含了函数声明和一个``AVLTreeNode<T> *mRoot;``作为根节点；一个public的函数``void SearchPath(const T value);``给外部调用；一个private的函数``void SearchPath(AVLTreeNode<T>* root, T* seq, T top, T sumCount, const T value);``作为自迭代的函数，传入当前节点指针，当前线性表指针，栈顶指针(栈压入的数目)，当前和以及目标值。\n\n关键代码，使用的是栈，但其实就是个顺序表，系统自动建立内存空间，每次进栈自增。\n公有函数\n\n```c++\n    template<class T>\n    void AVLTree<T>::SearchPath(const T value){\n        T * seq = new int[0];\n        T sumCount = 0;//当前累积值\n        T top = 0;\n        return SearchPath(mRoot, seq, top, sumCount, value);\n    }\n```\n\n私有函数  \n\n```c++\n    //遍历次序无所谓的 反正要遍历所有叶子\n    template<class T>\n    void AVLTree<T>::SearchPath(AVLTreeNode<T>* root, T* seq, T top, T sumCount, const T value)//按值传递回溯不用恢复参数值和栈顶  \n    {\n        seq[top++] = root->key;//入栈\n        sumCount += root->key;//累加和\n        //if(sumCount > value) return;//当值为正数时可加上这句话\n        if (root->left == NULL && root->right == NULL){//为叶子节点\n            if (sumCount == value)\n                for (int i = 0; i<top; i++)\n                    cout << seq[i] << \" \";\n        }\n        else{\n            if (root->left)\n                SearchPath(root->left, seq, top, sumCount, value);\n            if (root->right)\n                SearchPath(root->right, seq, top, sumCount, value);\n        }\n    }\n```\n\n调用代码  \n\n```c++\n    AVLTree<int>* tree = new AVLTree<int>();\n    int const value = 16;//目标和\n    tree->SearchPath(value);\n```\n代码见[这里](https://github.com/ovjaywang/TreeInvolved/tree/master/FindSumEqualNumInAVL)\n\n# 求树高的几种方式\n首先定义一波树结构属性名字\n\n```c++\n    typedef struct TreeNode{\n        char data;\n        struct TreeNode *lchild, *rchild;\n    }TreeNode, *BiTree;\n```\n## 后序遍历，栈求高，最大栈长度为树高\n> 思路：进左右子则入栈，返回根节点则出栈。每次左右子树检查完毕就比较一次栈长度是否大于最大高度\n\n```c++\n    int BT_high(BiTree T){\n        BiTree p = T, r = NULL;\n        int max = 0;//记录最大树高  \n        stack<BiTree> s;//声明一个堆 存放树根节点\n        while (p || !s.empty()){//节点非空且堆栈非空\n            if (p != NULL){\n                s.push(p);//入栈\n                p = p->lchild;\n            }\n            else{\n                p = s.top();\n                if (p->rchild != NULL && p->rchild != r)\n                //判断是否从右子树返回根\n                    p = p->rchild;\n                else{//左右子树都算完了 比较一下\n                    if (s.size()>max) max = s.size();//最大层次即为高度  \n                    r = p;\n                    s.pop();//出栈\n                    p = NULL;\n                }\n            }\n        }\n        return max;\n    }\n```\n\n## 层次遍历 层高即树高\n层次遍历服用队列或堆栈效果更佳！  \n### 层次遍历-单数组\n> 思路：按层将树输入到数组，下标记下本层元素头尾，从头遍历到尾加入它们的儿子，不断循环\n\n```c++\nint BT_level_depth(BiTree T)\n{\n    if (!T)  return 0;\n    BiTree p = T, Q[100];//队列\n    int front = -1, rear = -1, last = 0, level = 0;\n    //定义首指针 尾指针 上层尾元素 当前高度\n    Q[++rear] = p;//入队列\n    while (front<rear){\n        p = Q[++front];//先设置本次循环的根\n        if (p->lchild)//加入根的左儿子 同时移动尾\n            Q[++rear] = p->lchild;\n        if (p->rchild)//加入根的右儿子 同时移动尾\n            Q[++rear] = p->rchild;\n        if (front == last){//当头指针遍历完本层所有元素\n            last = rear;\n            level++;//层次+1  \n        }\n    }\n    return level;\n}\n```\n\n### 层次遍历-双端队列\n> 思路：按层将树输入到双端队列，一个队列记录上一层所有节点，另一个队列加入所有另一个队列的儿子，不断交替。\n\n```c++\nint BT_level_depth222(BiTree T)\n{\n    int  max = 0;\n    deque<TreeNode*> q_first, q_second;\n    q_first.push_back(T);\n    while (!q_first.empty()) {\n        while (!q_first.empty()) {\n            TreeNode *temp = q_first.front();\n            q_first.pop_front();\n            cout << (int)temp->data << \" \";\n            if (temp->lchild)\n                q_second.push_back(temp->lchild);\n            if (temp->rchild)\n                q_second.push_back(temp->rchild);\n        }\n        cout << endl;\n        max++;\n        q_first.swap(q_second);\n    }\n    return max;\n}\n```\n## 递归求树高  \n### 后序递归带深度求高\n> 思路:后序遍历所有节点，递归调用并检查当前节点是否为最大值。\n\n```c++\nint max1 = 0;//树高  \nint BT_depth1(BiTree T, int depth)\n{\n    if (T)\n    {\n        if (T->lchild)\n            BT_depth1(T->lchild, depth + 1);\n        if (T->rchild)\n            BT_depth1(T->rchild, depth + 1);\n    }\n    if (depth>max1)\n        max1 = depth;\n    return depth;\n}\n```\n\n### 左右子树递归求树高\n> 思路： 求左右子树的高度，分别又把左右子树当做根求他们的子树。每次迭代返回当前左右子树高的那一个。\n\n``` \nint Height(BiTree T)\n{\n    if (T == NULL) return 0;\n    else\n    {\n        int m = Height(T->lchild);\n        int n = Height(T->rchild);\n        return (m > n) ? (m + 1) : (n + 1);\n    }\n}\n```\n代码见[这里](https://github.com/ovjaywang/TreeInvolved/tree/master/GetMaxDepth)","source":"_posts/树系列码集合-持更.md","raw":"---\ntitle: '树系列码集合[持更20160517]'\ndate: 2016-05-03 23:06:28\ncategories:\n  - 代码狗\n  - 学习log\ntags:\n  - code\n---\n本文持更树操作集合-码狗学习中\n<!--more-->\n# 二叉查找树转双链表（c++）\n> 需求就是一个二叉树查找树 ，要转成按顺序排列的双向链表\n> \n> 思路差不多就是：中序可以按顺序输出；左儿子指针指向相邻小的，右儿子指针指向相邻大的；相邻由中序控制,左右儿子改动的时候寄存在pre(前驱)和root(当前)下\n\n**关键代码**\n\n定义模版类及head pre指针\n```c++\n    template<class T>                  //模版结构体\n    struct TreeNode\n    {\n        T data;                       //节点的内容\n        TreeNode <T> *Lchild, *Rchild,*pParent; //节点的左子树和右子树\n    //可选择参数的默认构造函数\n    TreeNode(T nodeValue = T(), TreeNode<T> *leftNode = NULL, TreeNode<T> *rightNode = NULL, TreeNode<T> *parentNode = NULL)\n    :data(nodeValue),Lchild(leftNode),Rchild(rightNode),pParent(parentNode){}\n    };\n\n    TreeNode<int> * pHead =NULL;//存放头指针\n    TreeNode<int> * previous = NULL;//存放前驱\n```\n核心转换代码\n\n```c++\n    template<class T>\n    void Tranverse(TreeNode<T> * root)//记前序\n    {\n        if (root){\n            Tranverse(root->Lchild);//很明显的中序遍历阿！\n            if (previous){\n                if (!pHead){//这个if可以不写啊 只是为了记录头结点而已\n                    pHead = previous;\n                }\n                previous->Rchild = root;//前驱的右指针指向root\n                root->Lchild = previous;//root的左指针指向前驱\n            }\n            previous = root;//前驱跑到下一个更新\n            Tranverse(root->Rchild);\n        }\n    }\n```\n调用代码,我才懒得写insert代码啊，rootNode从哪里来的我也不管啊\n\n```c+\n    Tranverse(rootNode);\n    while (pHead != NULL){\n        cout << pHead->data << endl;\n        pHead = pHead->Rchild;\n    }\n```\n代码见[这里](https://github.com/ovjaywang/TreeInvolved/tree/master/BSTree2DoubleLinkList)  \n\n# 在二叉查找树里查找范围内数据(c++)\n> 二叉查找树对于范围查找效率比普通线性查找效率高，Point仍旧是中序按序输出。\n> \n> 思路：这次换一个c语言方式类typedef定义二叉树模版，以二叉按次序找到下限第一个，然后其后的数据与最大最小值比较，在范围内就输出。因此，在二叉查找树中序输出中中，加两个判断条件\n> 1. 进入左子树需要根节点比最小值大  \n> 2. 进入右子树需要根节点比最大值小\n\n类模版定义\n\n```c\ntypedef int KeyType;\ntypedef struct TreeNode\n{\n    KeyType key;          //关键字\n    struct TreeNode * left;   //左孩子指针\n    struct TreeNode * right;  //右孩子指针\n    struct TreeNode * parent; //指向父节点指针\n}TreeNode, *PNode;\n```\n\n关键代码 以范围搜索\n\n```c\n    set<KeyType> searchRange(KeyType min, KeyType max, set<KeyType> &vt, TreeNode *root){\n        if (!root) return vt ;\n        if (min < root->key)\n            searchRange(min, max, vt,root->left);\n        if (min <= root->key && max >= root->key){\n            vt.insert(root->key);\n        }\n        if (max>root->key)\n            searchRange(min, max, vt,root->right);\n        return vt;\n    }\n```\n\n调用代码\n\n```c\n    set<int> ss = set<int>();\n    //很多地方都会把set带进函数迭代传递\n    ss = searchRange(0, 3, ss, root);\n    cout << \"vv.size() \"<<ss.size()<<endl<<\"范围内包含节点有:\"<<endl;\n    for each (int item in ss)\n    {\n        cout << item<<\" \";\n    }\n```\n代码见[这里](https://github.com/ovjaywang/TreeInvolved/tree/master/FindInBSTree)\n\n# 输出(平衡)二叉树所有和为某值的路径\n\n>需求：一条路径就是从根到叶子所有节点，路径数就是叶子数。要输出所有满足路径上所有节点和为某值的路径。\n> \n> 思路：为了保证效率，不能每次从头遍历到每个叶子才输出一次。\n> 1. 使用栈压入根到当前节点的路径所有制，以便求和\n> 2. 栈和超过值可以不继续寻找当前路径的儿子\n> 3. 找一个儿子就在栈压入一个数值，跳回一个根就弹出一个儿子的值\n\n当然，我很无聊，试一试平衡二叉(AVL).平衡二叉防止了直接建立查找二叉时候的随机，保证了时间复杂式始终在log(n).但建立AVL时候的插入删除代价也相对较大。\n\nAVL模版类的声明，多了一个height（高度）属性。\n\n```c++\n    template <class T>\n    class AVLTreeNode{\n    public:\n        T key;                // 关键字(键值)\n        int height;         // 高度\n        AVLTreeNode *left;    // 左孩子\n        AVLTreeNode *right;    // 右孩子\n        //构造函数\n        AVLTreeNode(T value, AVLTreeNode *l, AVLTreeNode *r) :\n            key(value), height(0), left(l), right(r) {}\n    };\n```\n\nAVLtree类中包含了函数声明和一个``AVLTreeNode<T> *mRoot;``作为根节点；一个public的函数``void SearchPath(const T value);``给外部调用；一个private的函数``void SearchPath(AVLTreeNode<T>* root, T* seq, T top, T sumCount, const T value);``作为自迭代的函数，传入当前节点指针，当前线性表指针，栈顶指针(栈压入的数目)，当前和以及目标值。\n\n关键代码，使用的是栈，但其实就是个顺序表，系统自动建立内存空间，每次进栈自增。\n公有函数\n\n```c++\n    template<class T>\n    void AVLTree<T>::SearchPath(const T value){\n        T * seq = new int[0];\n        T sumCount = 0;//当前累积值\n        T top = 0;\n        return SearchPath(mRoot, seq, top, sumCount, value);\n    }\n```\n\n私有函数  \n\n```c++\n    //遍历次序无所谓的 反正要遍历所有叶子\n    template<class T>\n    void AVLTree<T>::SearchPath(AVLTreeNode<T>* root, T* seq, T top, T sumCount, const T value)//按值传递回溯不用恢复参数值和栈顶  \n    {\n        seq[top++] = root->key;//入栈\n        sumCount += root->key;//累加和\n        //if(sumCount > value) return;//当值为正数时可加上这句话\n        if (root->left == NULL && root->right == NULL){//为叶子节点\n            if (sumCount == value)\n                for (int i = 0; i<top; i++)\n                    cout << seq[i] << \" \";\n        }\n        else{\n            if (root->left)\n                SearchPath(root->left, seq, top, sumCount, value);\n            if (root->right)\n                SearchPath(root->right, seq, top, sumCount, value);\n        }\n    }\n```\n\n调用代码  \n\n```c++\n    AVLTree<int>* tree = new AVLTree<int>();\n    int const value = 16;//目标和\n    tree->SearchPath(value);\n```\n代码见[这里](https://github.com/ovjaywang/TreeInvolved/tree/master/FindSumEqualNumInAVL)\n\n# 求树高的几种方式\n首先定义一波树结构属性名字\n\n```c++\n    typedef struct TreeNode{\n        char data;\n        struct TreeNode *lchild, *rchild;\n    }TreeNode, *BiTree;\n```\n## 后序遍历，栈求高，最大栈长度为树高\n> 思路：进左右子则入栈，返回根节点则出栈。每次左右子树检查完毕就比较一次栈长度是否大于最大高度\n\n```c++\n    int BT_high(BiTree T){\n        BiTree p = T, r = NULL;\n        int max = 0;//记录最大树高  \n        stack<BiTree> s;//声明一个堆 存放树根节点\n        while (p || !s.empty()){//节点非空且堆栈非空\n            if (p != NULL){\n                s.push(p);//入栈\n                p = p->lchild;\n            }\n            else{\n                p = s.top();\n                if (p->rchild != NULL && p->rchild != r)\n                //判断是否从右子树返回根\n                    p = p->rchild;\n                else{//左右子树都算完了 比较一下\n                    if (s.size()>max) max = s.size();//最大层次即为高度  \n                    r = p;\n                    s.pop();//出栈\n                    p = NULL;\n                }\n            }\n        }\n        return max;\n    }\n```\n\n## 层次遍历 层高即树高\n层次遍历服用队列或堆栈效果更佳！  \n### 层次遍历-单数组\n> 思路：按层将树输入到数组，下标记下本层元素头尾，从头遍历到尾加入它们的儿子，不断循环\n\n```c++\nint BT_level_depth(BiTree T)\n{\n    if (!T)  return 0;\n    BiTree p = T, Q[100];//队列\n    int front = -1, rear = -1, last = 0, level = 0;\n    //定义首指针 尾指针 上层尾元素 当前高度\n    Q[++rear] = p;//入队列\n    while (front<rear){\n        p = Q[++front];//先设置本次循环的根\n        if (p->lchild)//加入根的左儿子 同时移动尾\n            Q[++rear] = p->lchild;\n        if (p->rchild)//加入根的右儿子 同时移动尾\n            Q[++rear] = p->rchild;\n        if (front == last){//当头指针遍历完本层所有元素\n            last = rear;\n            level++;//层次+1  \n        }\n    }\n    return level;\n}\n```\n\n### 层次遍历-双端队列\n> 思路：按层将树输入到双端队列，一个队列记录上一层所有节点，另一个队列加入所有另一个队列的儿子，不断交替。\n\n```c++\nint BT_level_depth222(BiTree T)\n{\n    int  max = 0;\n    deque<TreeNode*> q_first, q_second;\n    q_first.push_back(T);\n    while (!q_first.empty()) {\n        while (!q_first.empty()) {\n            TreeNode *temp = q_first.front();\n            q_first.pop_front();\n            cout << (int)temp->data << \" \";\n            if (temp->lchild)\n                q_second.push_back(temp->lchild);\n            if (temp->rchild)\n                q_second.push_back(temp->rchild);\n        }\n        cout << endl;\n        max++;\n        q_first.swap(q_second);\n    }\n    return max;\n}\n```\n## 递归求树高  \n### 后序递归带深度求高\n> 思路:后序遍历所有节点，递归调用并检查当前节点是否为最大值。\n\n```c++\nint max1 = 0;//树高  \nint BT_depth1(BiTree T, int depth)\n{\n    if (T)\n    {\n        if (T->lchild)\n            BT_depth1(T->lchild, depth + 1);\n        if (T->rchild)\n            BT_depth1(T->rchild, depth + 1);\n    }\n    if (depth>max1)\n        max1 = depth;\n    return depth;\n}\n```\n\n### 左右子树递归求树高\n> 思路： 求左右子树的高度，分别又把左右子树当做根求他们的子树。每次迭代返回当前左右子树高的那一个。\n\n``` \nint Height(BiTree T)\n{\n    if (T == NULL) return 0;\n    else\n    {\n        int m = Height(T->lchild);\n        int n = Height(T->rchild);\n        return (m > n) ? (m + 1) : (n + 1);\n    }\n}\n```\n代码见[这里](https://github.com/ovjaywang/TreeInvolved/tree/master/GetMaxDepth)","slug":"树系列码集合-持更","published":1,"updated":"2016-05-18T02:26:24.567Z","_id":"cio8sn7rt008fuco4rof8grdi","comments":1,"layout":"post","photos":[],"link":"","content":"<p>本文持更树操作集合-码狗学习中<br><a id=\"more\"></a></p>\n<h1 id=\"二叉查找树转双链表（c-）\"><a href=\"#二叉查找树转双链表（c-）\" class=\"headerlink\" title=\"二叉查找树转双链表（c++）\"></a>二叉查找树转双链表（c++）</h1><blockquote>\n<p>需求就是一个二叉树查找树 ，要转成按顺序排列的双向链表</p>\n<p>思路差不多就是：中序可以按顺序输出；左儿子指针指向相邻小的，右儿子指针指向相邻大的；相邻由中序控制,左右儿子改动的时候寄存在pre(前驱)和root(当前)下</p>\n</blockquote>\n<p><strong>关键代码</strong></p>\n<p>定义模版类及head pre指针</p>\n<pre><code class=\"c++\">    template&lt;class T&gt;                  //模版结构体\n    struct TreeNode\n    {\n        T data;                       //节点的内容\n        TreeNode &lt;T&gt; *Lchild, *Rchild,*pParent; //节点的左子树和右子树\n    //可选择参数的默认构造函数\n    TreeNode(T nodeValue = T(), TreeNode&lt;T&gt; *leftNode = NULL, TreeNode&lt;T&gt; *rightNode = NULL, TreeNode&lt;T&gt; *parentNode = NULL)\n    :data(nodeValue),Lchild(leftNode),Rchild(rightNode),pParent(parentNode){}\n    };\n\n    TreeNode&lt;int&gt; * pHead =NULL;//存放头指针\n    TreeNode&lt;int&gt; * previous = NULL;//存放前驱\n</code></pre>\n<p>核心转换代码</p>\n<pre><code class=\"c++\">    template&lt;class T&gt;\n    void Tranverse(TreeNode&lt;T&gt; * root)//记前序\n    {\n        if (root){\n            Tranverse(root-&gt;Lchild);//很明显的中序遍历阿！\n            if (previous){\n                if (!pHead){//这个if可以不写啊 只是为了记录头结点而已\n                    pHead = previous;\n                }\n                previous-&gt;Rchild = root;//前驱的右指针指向root\n                root-&gt;Lchild = previous;//root的左指针指向前驱\n            }\n            previous = root;//前驱跑到下一个更新\n            Tranverse(root-&gt;Rchild);\n        }\n    }\n</code></pre>\n<p>调用代码,我才懒得写insert代码啊，rootNode从哪里来的我也不管啊</p>\n<pre><code class=\"c+\">    Tranverse(rootNode);\n    while (pHead != NULL){\n        cout &lt;&lt; pHead-&gt;data &lt;&lt; endl;\n        pHead = pHead-&gt;Rchild;\n    }\n</code></pre>\n<p>代码见<a href=\"https://github.com/ovjaywang/TreeInvolved/tree/master/BSTree2DoubleLinkList\" target=\"_blank\" rel=\"external\">这里</a>  </p>\n<h1 id=\"在二叉查找树里查找范围内数据-c\"><a href=\"#在二叉查找树里查找范围内数据-c\" class=\"headerlink\" title=\"在二叉查找树里查找范围内数据(c++)\"></a>在二叉查找树里查找范围内数据(c++)</h1><blockquote>\n<p>二叉查找树对于范围查找效率比普通线性查找效率高，Point仍旧是中序按序输出。</p>\n<p>思路：这次换一个c语言方式类typedef定义二叉树模版，以二叉按次序找到下限第一个，然后其后的数据与最大最小值比较，在范围内就输出。因此，在二叉查找树中序输出中中，加两个判断条件</p>\n<ol>\n<li>进入左子树需要根节点比最小值大  </li>\n<li>进入右子树需要根节点比最大值小</li>\n</ol>\n</blockquote>\n<p>类模版定义</p>\n<pre><code class=\"c\">typedef int KeyType;\ntypedef struct TreeNode\n{\n    KeyType key;          //关键字\n    struct TreeNode * left;   //左孩子指针\n    struct TreeNode * right;  //右孩子指针\n    struct TreeNode * parent; //指向父节点指针\n}TreeNode, *PNode;\n</code></pre>\n<p>关键代码 以范围搜索</p>\n<pre><code class=\"c\">    set&lt;KeyType&gt; searchRange(KeyType min, KeyType max, set&lt;KeyType&gt; &amp;vt, TreeNode *root){\n        if (!root) return vt ;\n        if (min &lt; root-&gt;key)\n            searchRange(min, max, vt,root-&gt;left);\n        if (min &lt;= root-&gt;key &amp;&amp; max &gt;= root-&gt;key){\n            vt.insert(root-&gt;key);\n        }\n        if (max&gt;root-&gt;key)\n            searchRange(min, max, vt,root-&gt;right);\n        return vt;\n    }\n</code></pre>\n<p>调用代码</p>\n<pre><code class=\"c\">    set&lt;int&gt; ss = set&lt;int&gt;();\n    //很多地方都会把set带进函数迭代传递\n    ss = searchRange(0, 3, ss, root);\n    cout &lt;&lt; &quot;vv.size() &quot;&lt;&lt;ss.size()&lt;&lt;endl&lt;&lt;&quot;范围内包含节点有:&quot;&lt;&lt;endl;\n    for each (int item in ss)\n    {\n        cout &lt;&lt; item&lt;&lt;&quot; &quot;;\n    }\n</code></pre>\n<p>代码见<a href=\"https://github.com/ovjaywang/TreeInvolved/tree/master/FindInBSTree\" target=\"_blank\" rel=\"external\">这里</a></p>\n<h1 id=\"输出-平衡-二叉树所有和为某值的路径\"><a href=\"#输出-平衡-二叉树所有和为某值的路径\" class=\"headerlink\" title=\"输出(平衡)二叉树所有和为某值的路径\"></a>输出(平衡)二叉树所有和为某值的路径</h1><blockquote>\n<p>需求：一条路径就是从根到叶子所有节点，路径数就是叶子数。要输出所有满足路径上所有节点和为某值的路径。</p>\n<p>思路：为了保证效率，不能每次从头遍历到每个叶子才输出一次。</p>\n<ol>\n<li>使用栈压入根到当前节点的路径所有制，以便求和</li>\n<li>栈和超过值可以不继续寻找当前路径的儿子</li>\n<li>找一个儿子就在栈压入一个数值，跳回一个根就弹出一个儿子的值</li>\n</ol>\n</blockquote>\n<p>当然，我很无聊，试一试平衡二叉(AVL).平衡二叉防止了直接建立查找二叉时候的随机，保证了时间复杂式始终在log(n).但建立AVL时候的插入删除代价也相对较大。</p>\n<p>AVL模版类的声明，多了一个height（高度）属性。</p>\n<pre><code class=\"c++\">    template &lt;class T&gt;\n    class AVLTreeNode{\n    public:\n        T key;                // 关键字(键值)\n        int height;         // 高度\n        AVLTreeNode *left;    // 左孩子\n        AVLTreeNode *right;    // 右孩子\n        //构造函数\n        AVLTreeNode(T value, AVLTreeNode *l, AVLTreeNode *r) :\n            key(value), height(0), left(l), right(r) {}\n    };\n</code></pre>\n<p>AVLtree类中包含了函数声明和一个<code>AVLTreeNode&lt;T&gt; *mRoot;</code>作为根节点；一个public的函数<code>void SearchPath(const T value);</code>给外部调用；一个private的函数<code>void SearchPath(AVLTreeNode&lt;T&gt;* root, T* seq, T top, T sumCount, const T value);</code>作为自迭代的函数，传入当前节点指针，当前线性表指针，栈顶指针(栈压入的数目)，当前和以及目标值。</p>\n<p>关键代码，使用的是栈，但其实就是个顺序表，系统自动建立内存空间，每次进栈自增。<br>公有函数</p>\n<pre><code class=\"c++\">    template&lt;class T&gt;\n    void AVLTree&lt;T&gt;::SearchPath(const T value){\n        T * seq = new int[0];\n        T sumCount = 0;//当前累积值\n        T top = 0;\n        return SearchPath(mRoot, seq, top, sumCount, value);\n    }\n</code></pre>\n<p>私有函数  </p>\n<pre><code class=\"c++\">    //遍历次序无所谓的 反正要遍历所有叶子\n    template&lt;class T&gt;\n    void AVLTree&lt;T&gt;::SearchPath(AVLTreeNode&lt;T&gt;* root, T* seq, T top, T sumCount, const T value)//按值传递回溯不用恢复参数值和栈顶  \n    {\n        seq[top++] = root-&gt;key;//入栈\n        sumCount += root-&gt;key;//累加和\n        //if(sumCount &gt; value) return;//当值为正数时可加上这句话\n        if (root-&gt;left == NULL &amp;&amp; root-&gt;right == NULL){//为叶子节点\n            if (sumCount == value)\n                for (int i = 0; i&lt;top; i++)\n                    cout &lt;&lt; seq[i] &lt;&lt; &quot; &quot;;\n        }\n        else{\n            if (root-&gt;left)\n                SearchPath(root-&gt;left, seq, top, sumCount, value);\n            if (root-&gt;right)\n                SearchPath(root-&gt;right, seq, top, sumCount, value);\n        }\n    }\n</code></pre>\n<p>调用代码  </p>\n<pre><code class=\"c++\">    AVLTree&lt;int&gt;* tree = new AVLTree&lt;int&gt;();\n    int const value = 16;//目标和\n    tree-&gt;SearchPath(value);\n</code></pre>\n<p>代码见<a href=\"https://github.com/ovjaywang/TreeInvolved/tree/master/FindSumEqualNumInAVL\" target=\"_blank\" rel=\"external\">这里</a></p>\n<h1 id=\"求树高的几种方式\"><a href=\"#求树高的几种方式\" class=\"headerlink\" title=\"求树高的几种方式\"></a>求树高的几种方式</h1><p>首先定义一波树结构属性名字</p>\n<pre><code class=\"c++\">    typedef struct TreeNode{\n        char data;\n        struct TreeNode *lchild, *rchild;\n    }TreeNode, *BiTree;\n</code></pre>\n<h2 id=\"后序遍历，栈求高，最大栈长度为树高\"><a href=\"#后序遍历，栈求高，最大栈长度为树高\" class=\"headerlink\" title=\"后序遍历，栈求高，最大栈长度为树高\"></a>后序遍历，栈求高，最大栈长度为树高</h2><blockquote>\n<p>思路：进左右子则入栈，返回根节点则出栈。每次左右子树检查完毕就比较一次栈长度是否大于最大高度</p>\n</blockquote>\n<pre><code class=\"c++\">    int BT_high(BiTree T){\n        BiTree p = T, r = NULL;\n        int max = 0;//记录最大树高  \n        stack&lt;BiTree&gt; s;//声明一个堆 存放树根节点\n        while (p || !s.empty()){//节点非空且堆栈非空\n            if (p != NULL){\n                s.push(p);//入栈\n                p = p-&gt;lchild;\n            }\n            else{\n                p = s.top();\n                if (p-&gt;rchild != NULL &amp;&amp; p-&gt;rchild != r)\n                //判断是否从右子树返回根\n                    p = p-&gt;rchild;\n                else{//左右子树都算完了 比较一下\n                    if (s.size()&gt;max) max = s.size();//最大层次即为高度  \n                    r = p;\n                    s.pop();//出栈\n                    p = NULL;\n                }\n            }\n        }\n        return max;\n    }\n</code></pre>\n<h2 id=\"层次遍历-层高即树高\"><a href=\"#层次遍历-层高即树高\" class=\"headerlink\" title=\"层次遍历 层高即树高\"></a>层次遍历 层高即树高</h2><p>层次遍历服用队列或堆栈效果更佳！  </p>\n<h3 id=\"层次遍历-单数组\"><a href=\"#层次遍历-单数组\" class=\"headerlink\" title=\"层次遍历-单数组\"></a>层次遍历-单数组</h3><blockquote>\n<p>思路：按层将树输入到数组，下标记下本层元素头尾，从头遍历到尾加入它们的儿子，不断循环</p>\n</blockquote>\n<pre><code class=\"c++\">int BT_level_depth(BiTree T)\n{\n    if (!T)  return 0;\n    BiTree p = T, Q[100];//队列\n    int front = -1, rear = -1, last = 0, level = 0;\n    //定义首指针 尾指针 上层尾元素 当前高度\n    Q[++rear] = p;//入队列\n    while (front&lt;rear){\n        p = Q[++front];//先设置本次循环的根\n        if (p-&gt;lchild)//加入根的左儿子 同时移动尾\n            Q[++rear] = p-&gt;lchild;\n        if (p-&gt;rchild)//加入根的右儿子 同时移动尾\n            Q[++rear] = p-&gt;rchild;\n        if (front == last){//当头指针遍历完本层所有元素\n            last = rear;\n            level++;//层次+1  \n        }\n    }\n    return level;\n}\n</code></pre>\n<h3 id=\"层次遍历-双端队列\"><a href=\"#层次遍历-双端队列\" class=\"headerlink\" title=\"层次遍历-双端队列\"></a>层次遍历-双端队列</h3><blockquote>\n<p>思路：按层将树输入到双端队列，一个队列记录上一层所有节点，另一个队列加入所有另一个队列的儿子，不断交替。</p>\n</blockquote>\n<pre><code class=\"c++\">int BT_level_depth222(BiTree T)\n{\n    int  max = 0;\n    deque&lt;TreeNode*&gt; q_first, q_second;\n    q_first.push_back(T);\n    while (!q_first.empty()) {\n        while (!q_first.empty()) {\n            TreeNode *temp = q_first.front();\n            q_first.pop_front();\n            cout &lt;&lt; (int)temp-&gt;data &lt;&lt; &quot; &quot;;\n            if (temp-&gt;lchild)\n                q_second.push_back(temp-&gt;lchild);\n            if (temp-&gt;rchild)\n                q_second.push_back(temp-&gt;rchild);\n        }\n        cout &lt;&lt; endl;\n        max++;\n        q_first.swap(q_second);\n    }\n    return max;\n}\n</code></pre>\n<h2 id=\"递归求树高\"><a href=\"#递归求树高\" class=\"headerlink\" title=\"递归求树高\"></a>递归求树高</h2><h3 id=\"后序递归带深度求高\"><a href=\"#后序递归带深度求高\" class=\"headerlink\" title=\"后序递归带深度求高\"></a>后序递归带深度求高</h3><blockquote>\n<p>思路:后序遍历所有节点，递归调用并检查当前节点是否为最大值。</p>\n</blockquote>\n<pre><code class=\"c++\">int max1 = 0;//树高  \nint BT_depth1(BiTree T, int depth)\n{\n    if (T)\n    {\n        if (T-&gt;lchild)\n            BT_depth1(T-&gt;lchild, depth + 1);\n        if (T-&gt;rchild)\n            BT_depth1(T-&gt;rchild, depth + 1);\n    }\n    if (depth&gt;max1)\n        max1 = depth;\n    return depth;\n}\n</code></pre>\n<h3 id=\"左右子树递归求树高\"><a href=\"#左右子树递归求树高\" class=\"headerlink\" title=\"左右子树递归求树高\"></a>左右子树递归求树高</h3><blockquote>\n<p>思路： 求左右子树的高度，分别又把左右子树当做根求他们的子树。每次迭代返回当前左右子树高的那一个。</p>\n</blockquote>\n<pre><code>int Height(BiTree T)\n{\n    if (T == NULL) return 0;\n    else\n    {\n        int m = Height(T-&gt;lchild);\n        int n = Height(T-&gt;rchild);\n        return (m &gt; n) ? (m + 1) : (n + 1);\n    }\n}\n</code></pre><p>代码见<a href=\"https://github.com/ovjaywang/TreeInvolved/tree/master/GetMaxDepth\" target=\"_blank\" rel=\"external\">这里</a></p>","excerpt":"<p>本文持更树操作集合-码狗学习中<br>","more":"</p>\n<h1 id=\"二叉查找树转双链表（c-）\"><a href=\"#二叉查找树转双链表（c-）\" class=\"headerlink\" title=\"二叉查找树转双链表（c++）\"></a>二叉查找树转双链表（c++）</h1><blockquote>\n<p>需求就是一个二叉树查找树 ，要转成按顺序排列的双向链表</p>\n<p>思路差不多就是：中序可以按顺序输出；左儿子指针指向相邻小的，右儿子指针指向相邻大的；相邻由中序控制,左右儿子改动的时候寄存在pre(前驱)和root(当前)下</p>\n</blockquote>\n<p><strong>关键代码</strong></p>\n<p>定义模版类及head pre指针</p>\n<pre><code class=\"c++\">    template&lt;class T&gt;                  //模版结构体\n    struct TreeNode\n    {\n        T data;                       //节点的内容\n        TreeNode &lt;T&gt; *Lchild, *Rchild,*pParent; //节点的左子树和右子树\n    //可选择参数的默认构造函数\n    TreeNode(T nodeValue = T(), TreeNode&lt;T&gt; *leftNode = NULL, TreeNode&lt;T&gt; *rightNode = NULL, TreeNode&lt;T&gt; *parentNode = NULL)\n    :data(nodeValue),Lchild(leftNode),Rchild(rightNode),pParent(parentNode){}\n    };\n\n    TreeNode&lt;int&gt; * pHead =NULL;//存放头指针\n    TreeNode&lt;int&gt; * previous = NULL;//存放前驱\n</code></pre>\n<p>核心转换代码</p>\n<pre><code class=\"c++\">    template&lt;class T&gt;\n    void Tranverse(TreeNode&lt;T&gt; * root)//记前序\n    {\n        if (root){\n            Tranverse(root-&gt;Lchild);//很明显的中序遍历阿！\n            if (previous){\n                if (!pHead){//这个if可以不写啊 只是为了记录头结点而已\n                    pHead = previous;\n                }\n                previous-&gt;Rchild = root;//前驱的右指针指向root\n                root-&gt;Lchild = previous;//root的左指针指向前驱\n            }\n            previous = root;//前驱跑到下一个更新\n            Tranverse(root-&gt;Rchild);\n        }\n    }\n</code></pre>\n<p>调用代码,我才懒得写insert代码啊，rootNode从哪里来的我也不管啊</p>\n<pre><code class=\"c+\">    Tranverse(rootNode);\n    while (pHead != NULL){\n        cout &lt;&lt; pHead-&gt;data &lt;&lt; endl;\n        pHead = pHead-&gt;Rchild;\n    }\n</code></pre>\n<p>代码见<a href=\"https://github.com/ovjaywang/TreeInvolved/tree/master/BSTree2DoubleLinkList\">这里</a>  </p>\n<h1 id=\"在二叉查找树里查找范围内数据-c\"><a href=\"#在二叉查找树里查找范围内数据-c\" class=\"headerlink\" title=\"在二叉查找树里查找范围内数据(c++)\"></a>在二叉查找树里查找范围内数据(c++)</h1><blockquote>\n<p>二叉查找树对于范围查找效率比普通线性查找效率高，Point仍旧是中序按序输出。</p>\n<p>思路：这次换一个c语言方式类typedef定义二叉树模版，以二叉按次序找到下限第一个，然后其后的数据与最大最小值比较，在范围内就输出。因此，在二叉查找树中序输出中中，加两个判断条件</p>\n<ol>\n<li>进入左子树需要根节点比最小值大  </li>\n<li>进入右子树需要根节点比最大值小</li>\n</ol>\n</blockquote>\n<p>类模版定义</p>\n<pre><code class=\"c\">typedef int KeyType;\ntypedef struct TreeNode\n{\n    KeyType key;          //关键字\n    struct TreeNode * left;   //左孩子指针\n    struct TreeNode * right;  //右孩子指针\n    struct TreeNode * parent; //指向父节点指针\n}TreeNode, *PNode;\n</code></pre>\n<p>关键代码 以范围搜索</p>\n<pre><code class=\"c\">    set&lt;KeyType&gt; searchRange(KeyType min, KeyType max, set&lt;KeyType&gt; &amp;vt, TreeNode *root){\n        if (!root) return vt ;\n        if (min &lt; root-&gt;key)\n            searchRange(min, max, vt,root-&gt;left);\n        if (min &lt;= root-&gt;key &amp;&amp; max &gt;= root-&gt;key){\n            vt.insert(root-&gt;key);\n        }\n        if (max&gt;root-&gt;key)\n            searchRange(min, max, vt,root-&gt;right);\n        return vt;\n    }\n</code></pre>\n<p>调用代码</p>\n<pre><code class=\"c\">    set&lt;int&gt; ss = set&lt;int&gt;();\n    //很多地方都会把set带进函数迭代传递\n    ss = searchRange(0, 3, ss, root);\n    cout &lt;&lt; &quot;vv.size() &quot;&lt;&lt;ss.size()&lt;&lt;endl&lt;&lt;&quot;范围内包含节点有:&quot;&lt;&lt;endl;\n    for each (int item in ss)\n    {\n        cout &lt;&lt; item&lt;&lt;&quot; &quot;;\n    }\n</code></pre>\n<p>代码见<a href=\"https://github.com/ovjaywang/TreeInvolved/tree/master/FindInBSTree\">这里</a></p>\n<h1 id=\"输出-平衡-二叉树所有和为某值的路径\"><a href=\"#输出-平衡-二叉树所有和为某值的路径\" class=\"headerlink\" title=\"输出(平衡)二叉树所有和为某值的路径\"></a>输出(平衡)二叉树所有和为某值的路径</h1><blockquote>\n<p>需求：一条路径就是从根到叶子所有节点，路径数就是叶子数。要输出所有满足路径上所有节点和为某值的路径。</p>\n<p>思路：为了保证效率，不能每次从头遍历到每个叶子才输出一次。</p>\n<ol>\n<li>使用栈压入根到当前节点的路径所有制，以便求和</li>\n<li>栈和超过值可以不继续寻找当前路径的儿子</li>\n<li>找一个儿子就在栈压入一个数值，跳回一个根就弹出一个儿子的值</li>\n</ol>\n</blockquote>\n<p>当然，我很无聊，试一试平衡二叉(AVL).平衡二叉防止了直接建立查找二叉时候的随机，保证了时间复杂式始终在log(n).但建立AVL时候的插入删除代价也相对较大。</p>\n<p>AVL模版类的声明，多了一个height（高度）属性。</p>\n<pre><code class=\"c++\">    template &lt;class T&gt;\n    class AVLTreeNode{\n    public:\n        T key;                // 关键字(键值)\n        int height;         // 高度\n        AVLTreeNode *left;    // 左孩子\n        AVLTreeNode *right;    // 右孩子\n        //构造函数\n        AVLTreeNode(T value, AVLTreeNode *l, AVLTreeNode *r) :\n            key(value), height(0), left(l), right(r) {}\n    };\n</code></pre>\n<p>AVLtree类中包含了函数声明和一个<code>AVLTreeNode&lt;T&gt; *mRoot;</code>作为根节点；一个public的函数<code>void SearchPath(const T value);</code>给外部调用；一个private的函数<code>void SearchPath(AVLTreeNode&lt;T&gt;* root, T* seq, T top, T sumCount, const T value);</code>作为自迭代的函数，传入当前节点指针，当前线性表指针，栈顶指针(栈压入的数目)，当前和以及目标值。</p>\n<p>关键代码，使用的是栈，但其实就是个顺序表，系统自动建立内存空间，每次进栈自增。<br>公有函数</p>\n<pre><code class=\"c++\">    template&lt;class T&gt;\n    void AVLTree&lt;T&gt;::SearchPath(const T value){\n        T * seq = new int[0];\n        T sumCount = 0;//当前累积值\n        T top = 0;\n        return SearchPath(mRoot, seq, top, sumCount, value);\n    }\n</code></pre>\n<p>私有函数  </p>\n<pre><code class=\"c++\">    //遍历次序无所谓的 反正要遍历所有叶子\n    template&lt;class T&gt;\n    void AVLTree&lt;T&gt;::SearchPath(AVLTreeNode&lt;T&gt;* root, T* seq, T top, T sumCount, const T value)//按值传递回溯不用恢复参数值和栈顶  \n    {\n        seq[top++] = root-&gt;key;//入栈\n        sumCount += root-&gt;key;//累加和\n        //if(sumCount &gt; value) return;//当值为正数时可加上这句话\n        if (root-&gt;left == NULL &amp;&amp; root-&gt;right == NULL){//为叶子节点\n            if (sumCount == value)\n                for (int i = 0; i&lt;top; i++)\n                    cout &lt;&lt; seq[i] &lt;&lt; &quot; &quot;;\n        }\n        else{\n            if (root-&gt;left)\n                SearchPath(root-&gt;left, seq, top, sumCount, value);\n            if (root-&gt;right)\n                SearchPath(root-&gt;right, seq, top, sumCount, value);\n        }\n    }\n</code></pre>\n<p>调用代码  </p>\n<pre><code class=\"c++\">    AVLTree&lt;int&gt;* tree = new AVLTree&lt;int&gt;();\n    int const value = 16;//目标和\n    tree-&gt;SearchPath(value);\n</code></pre>\n<p>代码见<a href=\"https://github.com/ovjaywang/TreeInvolved/tree/master/FindSumEqualNumInAVL\">这里</a></p>\n<h1 id=\"求树高的几种方式\"><a href=\"#求树高的几种方式\" class=\"headerlink\" title=\"求树高的几种方式\"></a>求树高的几种方式</h1><p>首先定义一波树结构属性名字</p>\n<pre><code class=\"c++\">    typedef struct TreeNode{\n        char data;\n        struct TreeNode *lchild, *rchild;\n    }TreeNode, *BiTree;\n</code></pre>\n<h2 id=\"后序遍历，栈求高，最大栈长度为树高\"><a href=\"#后序遍历，栈求高，最大栈长度为树高\" class=\"headerlink\" title=\"后序遍历，栈求高，最大栈长度为树高\"></a>后序遍历，栈求高，最大栈长度为树高</h2><blockquote>\n<p>思路：进左右子则入栈，返回根节点则出栈。每次左右子树检查完毕就比较一次栈长度是否大于最大高度</p>\n</blockquote>\n<pre><code class=\"c++\">    int BT_high(BiTree T){\n        BiTree p = T, r = NULL;\n        int max = 0;//记录最大树高  \n        stack&lt;BiTree&gt; s;//声明一个堆 存放树根节点\n        while (p || !s.empty()){//节点非空且堆栈非空\n            if (p != NULL){\n                s.push(p);//入栈\n                p = p-&gt;lchild;\n            }\n            else{\n                p = s.top();\n                if (p-&gt;rchild != NULL &amp;&amp; p-&gt;rchild != r)\n                //判断是否从右子树返回根\n                    p = p-&gt;rchild;\n                else{//左右子树都算完了 比较一下\n                    if (s.size()&gt;max) max = s.size();//最大层次即为高度  \n                    r = p;\n                    s.pop();//出栈\n                    p = NULL;\n                }\n            }\n        }\n        return max;\n    }\n</code></pre>\n<h2 id=\"层次遍历-层高即树高\"><a href=\"#层次遍历-层高即树高\" class=\"headerlink\" title=\"层次遍历 层高即树高\"></a>层次遍历 层高即树高</h2><p>层次遍历服用队列或堆栈效果更佳！  </p>\n<h3 id=\"层次遍历-单数组\"><a href=\"#层次遍历-单数组\" class=\"headerlink\" title=\"层次遍历-单数组\"></a>层次遍历-单数组</h3><blockquote>\n<p>思路：按层将树输入到数组，下标记下本层元素头尾，从头遍历到尾加入它们的儿子，不断循环</p>\n</blockquote>\n<pre><code class=\"c++\">int BT_level_depth(BiTree T)\n{\n    if (!T)  return 0;\n    BiTree p = T, Q[100];//队列\n    int front = -1, rear = -1, last = 0, level = 0;\n    //定义首指针 尾指针 上层尾元素 当前高度\n    Q[++rear] = p;//入队列\n    while (front&lt;rear){\n        p = Q[++front];//先设置本次循环的根\n        if (p-&gt;lchild)//加入根的左儿子 同时移动尾\n            Q[++rear] = p-&gt;lchild;\n        if (p-&gt;rchild)//加入根的右儿子 同时移动尾\n            Q[++rear] = p-&gt;rchild;\n        if (front == last){//当头指针遍历完本层所有元素\n            last = rear;\n            level++;//层次+1  \n        }\n    }\n    return level;\n}\n</code></pre>\n<h3 id=\"层次遍历-双端队列\"><a href=\"#层次遍历-双端队列\" class=\"headerlink\" title=\"层次遍历-双端队列\"></a>层次遍历-双端队列</h3><blockquote>\n<p>思路：按层将树输入到双端队列，一个队列记录上一层所有节点，另一个队列加入所有另一个队列的儿子，不断交替。</p>\n</blockquote>\n<pre><code class=\"c++\">int BT_level_depth222(BiTree T)\n{\n    int  max = 0;\n    deque&lt;TreeNode*&gt; q_first, q_second;\n    q_first.push_back(T);\n    while (!q_first.empty()) {\n        while (!q_first.empty()) {\n            TreeNode *temp = q_first.front();\n            q_first.pop_front();\n            cout &lt;&lt; (int)temp-&gt;data &lt;&lt; &quot; &quot;;\n            if (temp-&gt;lchild)\n                q_second.push_back(temp-&gt;lchild);\n            if (temp-&gt;rchild)\n                q_second.push_back(temp-&gt;rchild);\n        }\n        cout &lt;&lt; endl;\n        max++;\n        q_first.swap(q_second);\n    }\n    return max;\n}\n</code></pre>\n<h2 id=\"递归求树高\"><a href=\"#递归求树高\" class=\"headerlink\" title=\"递归求树高\"></a>递归求树高</h2><h3 id=\"后序递归带深度求高\"><a href=\"#后序递归带深度求高\" class=\"headerlink\" title=\"后序递归带深度求高\"></a>后序递归带深度求高</h3><blockquote>\n<p>思路:后序遍历所有节点，递归调用并检查当前节点是否为最大值。</p>\n</blockquote>\n<pre><code class=\"c++\">int max1 = 0;//树高  \nint BT_depth1(BiTree T, int depth)\n{\n    if (T)\n    {\n        if (T-&gt;lchild)\n            BT_depth1(T-&gt;lchild, depth + 1);\n        if (T-&gt;rchild)\n            BT_depth1(T-&gt;rchild, depth + 1);\n    }\n    if (depth&gt;max1)\n        max1 = depth;\n    return depth;\n}\n</code></pre>\n<h3 id=\"左右子树递归求树高\"><a href=\"#左右子树递归求树高\" class=\"headerlink\" title=\"左右子树递归求树高\"></a>左右子树递归求树高</h3><blockquote>\n<p>思路： 求左右子树的高度，分别又把左右子树当做根求他们的子树。每次迭代返回当前左右子树高的那一个。</p>\n</blockquote>\n<pre><code>int Height(BiTree T)\n{\n    if (T == NULL) return 0;\n    else\n    {\n        int m = Height(T-&gt;lchild);\n        int n = Height(T-&gt;rchild);\n        return (m &gt; n) ? (m + 1) : (n + 1);\n    }\n}\n</code></pre><p>代码见<a href=\"https://github.com/ovjaywang/TreeInvolved/tree/master/GetMaxDepth\">这里</a></p>"},{"title":"格言","id":"290","date":"2013-07-18T13:25:10.000Z","_content":"\n对技术可行性的认可要比对技术优劣的争论更为重要","source":"_posts/格言.md","raw":"---\ntitle: 格言\ncategories:\n  - 槽\ntags:\n  - 吐槽\nid: 290\ndate: 2013-07-18 21:25:10\n---\n\n对技术可行性的认可要比对技术优劣的争论更为重要","slug":"格言","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7rv008iuco4g67zvnk7","content":"<p>对技术可行性的认可要比对技术优劣的争论更为重要</p>","excerpt":"","more":"<p>对技术可行性的认可要比对技术优劣的争论更为重要</p>"},{"title":"求解释..布吉岛","id":"127","date":"2013-05-08T12:13:50.000Z","_content":"\n好吧突然看到好多大牛的感觉还是弱爆了...继续添加采购单...返回顶部...评论...ajax的链接缩略图...啊啊啊好羡慕别个的主题啊","source":"_posts/求解释..布吉岛.md","raw":"---\ntitle: 求解释..布吉岛\ncategories:\n  - 槽\ntags:\n  - 翔\nid: 127\ndate: 2013-05-08 20:13:50\n---\n\n好吧突然看到好多大牛的感觉还是弱爆了...继续添加采购单...返回顶部...评论...ajax的链接缩略图...啊啊啊好羡慕别个的主题啊","slug":"求解释..布吉岛","published":1,"updated":"2016-04-11T14:09:45.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7ry008muco4koijrqli","content":"<p>好吧突然看到好多大牛的感觉还是弱爆了…继续添加采购单…返回顶部…评论…ajax的链接缩略图…啊啊啊好羡慕别个的主题啊</p>","excerpt":"","more":"<p>好吧突然看到好多大牛的感觉还是弱爆了…继续添加采购单…返回顶部…评论…ajax的链接缩略图…啊啊啊好羡慕别个的主题啊</p>"},{"title":"测试flicker","id":"66","date":"2013-05-06T15:05:34.000Z","_content":"\n<gallery>[![Aurora loop](http://farm9.staticflickr.com/8459/8070488682_98b4d6e4b4.jpg)](http://www.flickr.com/photos/wrc-213/8070488682/ \"Flickr 上 wrc213 的 Aurora loop\")[![琉璃夜景](http://farm9.staticflickr.com/8444/7982688408_f1460da5b5.jpg)](http://www.flickr.com/photos/wrc-213/7982688408/ \"Flickr 上 wrc213 的 琉璃夜景\")</gallery>","source":"_posts/测试flicker.md","raw":"---\ntitle: 测试flicker\ncategories:\n  - 槽\ntags:\n  - test\nid: 66\ndate: 2013-05-06 23:05:34\n---\n\n<gallery>[![Aurora loop](http://farm9.staticflickr.com/8459/8070488682_98b4d6e4b4.jpg)](http://www.flickr.com/photos/wrc-213/8070488682/ \"Flickr 上 wrc213 的 Aurora loop\")[![琉璃夜景](http://farm9.staticflickr.com/8444/7982688408_f1460da5b5.jpg)](http://www.flickr.com/photos/wrc-213/7982688408/ \"Flickr 上 wrc213 的 琉璃夜景\")</gallery>","slug":"测试flicker","published":1,"updated":"2016-04-13T09:08:56.293Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7s0008quco4y0ia8l32","content":"<gallery><a href=\"http://www.flickr.com/photos/wrc-213/8070488682/\" title=\"Flickr 上 wrc213 的 Aurora loop\" target=\"_blank\" rel=\"external\"><img src=\"http://farm9.staticflickr.com/8459/8070488682_98b4d6e4b4.jpg\" alt=\"Aurora loop\"></a><a href=\"http://www.flickr.com/photos/wrc-213/7982688408/\" title=\"Flickr 上 wrc213 的 琉璃夜景\" target=\"_blank\" rel=\"external\"><img src=\"http://farm9.staticflickr.com/8444/7982688408_f1460da5b5.jpg\" alt=\"琉璃夜景\"></a></gallery>","excerpt":"","more":"<gallery><a href=\"http://www.flickr.com/photos/wrc-213/8070488682/\" title=\"Flickr 上 wrc213 的 Aurora loop\"><img src=\"http://farm9.staticflickr.com/8459/8070488682_98b4d6e4b4.jpg\" alt=\"Aurora loop\"></a><a href=\"http://www.flickr.com/photos/wrc-213/7982688408/\" title=\"Flickr 上 wrc213 的 琉璃夜景\"><img src=\"http://farm9.staticflickr.com/8444/7982688408_f1460da5b5.jpg\" alt=\"琉璃夜景\"></a></gallery>"},{"title":"猜地址游戏","id":"487","date":"2014-05-15T11:28:08.000Z","_content":"\n[http://www.geoguessr.com#.U3SkybblRoc.link](http://www.geoguessr.com#.U3SkybblRoc.link)\n碉堡的猜地址游戏！","source":"_posts/猜地址游戏.md","raw":"---\ntitle: 猜地址游戏\ncategories:\n  - App强推\n  - 软文\ntags:\n  - recommend\nid: 487\ndate: 2014-05-15 19:28:08\n---\n\n[http://www.geoguessr.com#.U3SkybblRoc.link](http://www.geoguessr.com#.U3SkybblRoc.link)\n碉堡的猜地址游戏！","slug":"猜地址游戏","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7s1008tuco4xt7t24da","content":"<p><a href=\"http://www.geoguessr.com#.U3SkybblRoc.link\" target=\"_blank\" rel=\"external\">http://www.geoguessr.com#.U3SkybblRoc.link</a><br>碉堡的猜地址游戏！</p>","excerpt":"","more":"<p><a href=\"http://www.geoguessr.com#.U3SkybblRoc.link\">http://www.geoguessr.com#.U3SkybblRoc.link</a><br>碉堡的猜地址游戏！</p>"},{"title":"瀚海箴言- -","id":"455","date":"2014-02-10T12:57:37.000Z","_content":"\n出卖灵魂的人一般都瞧不起出卖肉体的。","source":"_posts/瀚海箴言- -.md","raw":"---\ntitle: 瀚海箴言- -\ncategories:\n  - 槽\ntags:\n  - 吐槽\nid: 455\ndate: 2014-02-10 20:57:37\n---\n\n出卖灵魂的人一般都瞧不起出卖肉体的。","slug":"瀚海箴言- -","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7s3008xuco4r4zcpnrs","content":"<p>出卖灵魂的人一般都瞧不起出卖肉体的。</p>","excerpt":"","more":"<p>出卖灵魂的人一般都瞧不起出卖肉体的。</p>"},{"title":"真是心累","id":"21","date":"2013-05-05T17:41:51.000Z","_content":"\n找模板找插件真的不是那么有成就感啊。虽然歪打正着弄好了小站但是不知道得多久才坚持下去。域名可能会换。内容也要记得更新。少玩点游戏多睡觉都好。最近容易犯困","source":"_posts/真是心累.md","raw":"---\ntitle: 真是心累\ncategories:\n  - 槽\ntags:\n  - 寂寞寂寞就好\nid: 21\ndate: 2013-05-06 01:41:51\n---\n\n找模板找插件真的不是那么有成就感啊。虽然歪打正着弄好了小站但是不知道得多久才坚持下去。域名可能会换。内容也要记得更新。少玩点游戏多睡觉都好。最近容易犯困","slug":"真是心累","published":1,"updated":"2016-04-11T14:09:45.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7s50090uco4tdn1ycfl","content":"<p>找模板找插件真的不是那么有成就感啊。虽然歪打正着弄好了小站但是不知道得多久才坚持下去。域名可能会换。内容也要记得更新。少玩点游戏多睡觉都好。最近容易犯困</p>","excerpt":"","more":"<p>找模板找插件真的不是那么有成就感啊。虽然歪打正着弄好了小站但是不知道得多久才坚持下去。域名可能会换。内容也要记得更新。少玩点游戏多睡觉都好。最近容易犯困</p>"},{"title":"睡不着啊睡不着","id":"328","date":"2013-08-05T19:45:47.000Z","_content":"\n不知道是墨鱼肉松还是蛋挞还是奶油尖角还是梨还是吃多了还是凯哥要走了还是热水烫脚还是阅读错太多还是史纲不顺手还是白天的咖啡(略久了点)还是85℃打折还是脚痒总之我就是睡不着啊啊啊啊我要下床写题去算了明天毛邓三困死我吧。","source":"_posts/睡不着啊睡不着.md","raw":"---\ntitle: 睡不着啊睡不着\ncategories:\n  - 槽\ntags:\n  - 吐槽\nid: 328\ndate: 2013-08-06 03:45:47\n---\n\n不知道是墨鱼肉松还是蛋挞还是奶油尖角还是梨还是吃多了还是凯哥要走了还是热水烫脚还是阅读错太多还是史纲不顺手还是白天的咖啡(略久了点)还是85℃打折还是脚痒总之我就是睡不着啊啊啊啊我要下床写题去算了明天毛邓三困死我吧。","slug":"睡不着啊睡不着","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7s60094uco456biy5v4","content":"<p>不知道是墨鱼肉松还是蛋挞还是奶油尖角还是梨还是吃多了还是凯哥要走了还是热水烫脚还是阅读错太多还是史纲不顺手还是白天的咖啡(略久了点)还是85℃打折还是脚痒总之我就是睡不着啊啊啊啊我要下床写题去算了明天毛邓三困死我吧。</p>","excerpt":"","more":"<p>不知道是墨鱼肉松还是蛋挞还是奶油尖角还是梨还是吃多了还是凯哥要走了还是热水烫脚还是阅读错太多还是史纲不顺手还是白天的咖啡(略久了点)还是85℃打折还是脚痒总之我就是睡不着啊啊啊啊我要下床写题去算了明天毛邓三困死我吧。</p>"},{"title":"知乎与果壳","id":"451","date":"2014-01-20T07:31:35.000Z","_content":"\n> 知乎代表了一种典型文科傻，可以把每条问题都回答成「我牛逼不牛逼！我机不机灵！幽默不幽默！」。果壳则代表了一种理科傻，拒绝任何生活的美学「凡士林擦脸就行用什么雅诗兰黛」","source":"_posts/知乎与果壳.md","raw":"---\ntitle: 知乎与果壳\ncategories:\n  - 槽\ntags:\n  - 吐槽\nid: 451\ndate: 2014-01-20 15:31:35\n---\n\n> 知乎代表了一种典型文科傻，可以把每条问题都回答成「我牛逼不牛逼！我机不机灵！幽默不幽默！」。果壳则代表了一种理科傻，拒绝任何生活的美学「凡士林擦脸就行用什么雅诗兰黛」","slug":"知乎与果壳","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7s80097uco4jq55myhh","content":"<blockquote>\n<p>知乎代表了一种典型文科傻，可以把每条问题都回答成「我牛逼不牛逼！我机不机灵！幽默不幽默！」。果壳则代表了一种理科傻，拒绝任何生活的美学「凡士林擦脸就行用什么雅诗兰黛」</p>\n</blockquote>","excerpt":"","more":"<blockquote>\n<p>知乎代表了一种典型文科傻，可以把每条问题都回答成「我牛逼不牛逼！我机不机灵！幽默不幽默！」。果壳则代表了一种理科傻，拒绝任何生活的美学「凡士林擦脸就行用什么雅诗兰黛」</p>\n</blockquote>"},{"title":"破处篇...好吧","id":"14","date":"2013-05-05T15:54:51.000Z","_content":"\n#噗。这就开始了?还没准备好久特麽建了个部落格\n\n不想乱折腾了。。今天就开始写部落格。\n\n他们都说把太多的心思花在建博客上而不是写博客上，我连建博客的心思都懒得去弄了。就这样吧。\n\n##说一说这几天做了的事吧：\n\n1.rr树洞和wb树洞都成型了 css找的巴大神的 自己整了一下httpclient 模拟登陆 &amp;&amp; httpmethod和httpGet（Post）还是差了不少 不过模版有就不担心了。\n\n留个地址  把收藏夹清理了 [http://www.ishang123.com/jishubowen/java/2012-09-29/249.html](<a href= \"https的post\")\">关于Https发送post</a>\n\n里面继承实现的类就是控制证书的类了-->X509TrustManager [http://www.blogjava.net/willpower88/archive/2008/04/14/192679.html](<a href= \"旧的httpclient的例子\")\">旧的httplclient的例子</a>\n\n[http://2.xiaohuamao.duapp.com/](<a href= \"人人网页版树洞\")\">人人网页版树洞</a> [http://3.xiaohuamao.duapp.com/](<a href= \"人人应用树洞\")\">人人应用树洞</a> [http://4.xiaohuamao.duapp.com/](<a href= \"微勃应用树洞\")\">微勃应用树洞</a>\n\n2.啊真是受够了打击。各种炫offer的。各种炫技的。java被鄙视道一文不值但是我。。。额饿饿麻痹\n\nso 我决心当个产品经理 嗯 PDM就这么愉快的决定了\n\n3.其实信息量太大 真心不知道取舍 以至于选择困难症导致效率十分低下 想把所有的看完但是却有每个都看不细看不精 加油 我真的要学会怎么看书\n\n4.最近的项目就是做那狗血android了 机子太慢 跑虚拟机真心是累粗翔了 不在爱 我要弄好服务器。但是算法在哪里弄呢?不知道。\n\n5.自从加入了v2ex真心长了不少姿势。但是蒟蒻就是蒟蒻。我要googleN次才知道他们大概在讲什么\n\n6.明天撸数学。。不可以。跪下。\n\n好吧就这样。下周的安排----1.完善这个blog2.把客户端连上服务器3.把javaweb撸好了 完完整整的 4.数学打起精神来 每天按时写东西 不要再玩了。。这个赛季结束。。","source":"_posts/破处篇...好吧.md","raw":"---\ntitle: 破处篇...好吧\ncategories:\n  - 槽\ntags:\n  - test\nid: 14\ndate: 2013-05-05 23:54:51\n---\n\n#噗。这就开始了?还没准备好久特麽建了个部落格\n\n不想乱折腾了。。今天就开始写部落格。\n\n他们都说把太多的心思花在建博客上而不是写博客上，我连建博客的心思都懒得去弄了。就这样吧。\n\n##说一说这几天做了的事吧：\n\n1.rr树洞和wb树洞都成型了 css找的巴大神的 自己整了一下httpclient 模拟登陆 &amp;&amp; httpmethod和httpGet（Post）还是差了不少 不过模版有就不担心了。\n\n留个地址  把收藏夹清理了 [http://www.ishang123.com/jishubowen/java/2012-09-29/249.html](<a href= \"https的post\")\">关于Https发送post</a>\n\n里面继承实现的类就是控制证书的类了-->X509TrustManager [http://www.blogjava.net/willpower88/archive/2008/04/14/192679.html](<a href= \"旧的httpclient的例子\")\">旧的httplclient的例子</a>\n\n[http://2.xiaohuamao.duapp.com/](<a href= \"人人网页版树洞\")\">人人网页版树洞</a> [http://3.xiaohuamao.duapp.com/](<a href= \"人人应用树洞\")\">人人应用树洞</a> [http://4.xiaohuamao.duapp.com/](<a href= \"微勃应用树洞\")\">微勃应用树洞</a>\n\n2.啊真是受够了打击。各种炫offer的。各种炫技的。java被鄙视道一文不值但是我。。。额饿饿麻痹\n\nso 我决心当个产品经理 嗯 PDM就这么愉快的决定了\n\n3.其实信息量太大 真心不知道取舍 以至于选择困难症导致效率十分低下 想把所有的看完但是却有每个都看不细看不精 加油 我真的要学会怎么看书\n\n4.最近的项目就是做那狗血android了 机子太慢 跑虚拟机真心是累粗翔了 不在爱 我要弄好服务器。但是算法在哪里弄呢?不知道。\n\n5.自从加入了v2ex真心长了不少姿势。但是蒟蒻就是蒟蒻。我要googleN次才知道他们大概在讲什么\n\n6.明天撸数学。。不可以。跪下。\n\n好吧就这样。下周的安排----1.完善这个blog2.把客户端连上服务器3.把javaweb撸好了 完完整整的 4.数学打起精神来 每天按时写东西 不要再玩了。。这个赛季结束。。","slug":"破处篇...好吧","published":1,"updated":"2016-04-11T14:09:45.579Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7sb009buco4n4hvnur9","content":"<p>#噗。这就开始了?还没准备好久特麽建了个部落格</p>\n<p>不想乱折腾了。。今天就开始写部落格。</p>\n<p>他们都说把太多的心思花在建博客上而不是写博客上，我连建博客的心思都懒得去弄了。就这样吧。</p>\n<p>##说一说这几天做了的事吧：</p>\n<p>1.rr树洞和wb树洞都成型了 css找的巴大神的 自己整了一下httpclient 模拟登陆 &amp;&amp; httpmethod和httpGet（Post）还是差了不少 不过模版有就不担心了。</p>\n<p>留个地址  把收藏夹清理了 <a href=\"a href=\" title=\"https的post\">http://www.ishang123.com/jishubowen/java/2012-09-29/249.html</a>“&gt;关于Https发送post</p>\n<p>里面继承实现的类就是控制证书的类了–&gt;X509TrustManager <a href=\"a href=\" title=\"旧的httpclient的例子\">http://www.blogjava.net/willpower88/archive/2008/04/14/192679.html</a>“&gt;旧的httplclient的例子</p>\n<p><a href=\"a href=\" title=\"人人网页版树洞\">http://2.xiaohuamao.duapp.com/</a>“&gt;人人网页版树洞 <a href=\"a href=\" title=\"人人应用树洞\">http://3.xiaohuamao.duapp.com/</a>“&gt;人人应用树洞 <a href=\"a href=\" title=\"微勃应用树洞\">http://4.xiaohuamao.duapp.com/</a>“&gt;微勃应用树洞</p>\n<p>2.啊真是受够了打击。各种炫offer的。各种炫技的。java被鄙视道一文不值但是我。。。额饿饿麻痹</p>\n<p>so 我决心当个产品经理 嗯 PDM就这么愉快的决定了</p>\n<p>3.其实信息量太大 真心不知道取舍 以至于选择困难症导致效率十分低下 想把所有的看完但是却有每个都看不细看不精 加油 我真的要学会怎么看书</p>\n<p>4.最近的项目就是做那狗血android了 机子太慢 跑虚拟机真心是累粗翔了 不在爱 我要弄好服务器。但是算法在哪里弄呢?不知道。</p>\n<p>5.自从加入了v2ex真心长了不少姿势。但是蒟蒻就是蒟蒻。我要googleN次才知道他们大概在讲什么</p>\n<p>6.明天撸数学。。不可以。跪下。</p>\n<p>好吧就这样。下周的安排—-1.完善这个blog2.把客户端连上服务器3.把javaweb撸好了 完完整整的 4.数学打起精神来 每天按时写东西 不要再玩了。。这个赛季结束。。</p>","excerpt":"","more":"<p>#噗。这就开始了?还没准备好久特麽建了个部落格</p>\n<p>不想乱折腾了。。今天就开始写部落格。</p>\n<p>他们都说把太多的心思花在建博客上而不是写博客上，我连建博客的心思都懒得去弄了。就这样吧。</p>\n<p>##说一说这几天做了的事吧：</p>\n<p>1.rr树洞和wb树洞都成型了 css找的巴大神的 自己整了一下httpclient 模拟登陆 &amp;&amp; httpmethod和httpGet（Post）还是差了不少 不过模版有就不担心了。</p>\n<p>留个地址  把收藏夹清理了 <a href=\"a href=\" title=\"https的post\">http://www.ishang123.com/jishubowen/java/2012-09-29/249.html</a>“&gt;关于Https发送post</p>\n<p>里面继承实现的类就是控制证书的类了–&gt;X509TrustManager <a href=\"a href=\" title=\"旧的httpclient的例子\">http://www.blogjava.net/willpower88/archive/2008/04/14/192679.html</a>“&gt;旧的httplclient的例子</p>\n<p><a href=\"a href=\" title=\"人人网页版树洞\">http://2.xiaohuamao.duapp.com/</a>“&gt;人人网页版树洞 <a href=\"a href=\" title=\"人人应用树洞\">http://3.xiaohuamao.duapp.com/</a>“&gt;人人应用树洞 <a href=\"a href=\" title=\"微勃应用树洞\">http://4.xiaohuamao.duapp.com/</a>“&gt;微勃应用树洞</p>\n<p>2.啊真是受够了打击。各种炫offer的。各种炫技的。java被鄙视道一文不值但是我。。。额饿饿麻痹</p>\n<p>so 我决心当个产品经理 嗯 PDM就这么愉快的决定了</p>\n<p>3.其实信息量太大 真心不知道取舍 以至于选择困难症导致效率十分低下 想把所有的看完但是却有每个都看不细看不精 加油 我真的要学会怎么看书</p>\n<p>4.最近的项目就是做那狗血android了 机子太慢 跑虚拟机真心是累粗翔了 不在爱 我要弄好服务器。但是算法在哪里弄呢?不知道。</p>\n<p>5.自从加入了v2ex真心长了不少姿势。但是蒟蒻就是蒟蒻。我要googleN次才知道他们大概在讲什么</p>\n<p>6.明天撸数学。。不可以。跪下。</p>\n<p>好吧就这样。下周的安排—-1.完善这个blog2.把客户端连上服务器3.把javaweb撸好了 完完整整的 4.数学打起精神来 每天按时写东西 不要再玩了。。这个赛季结束。。</p>"},{"title":"社交app的2015","id":"1088","date":"2016-01-18T03:45:06.000Z","_content":"\n手机和网络重度使用患者也该是总结自己的时候了。庆幸的是各大app都热推了自己的2015数据流。把去年的数据库做个直白的excel统计。好吧。。我除了听歌看电影买买买也没别的(性)生活了。\n<!-- more -->\n\n![](http://ooo.0o0.ooo/2016/01/17/569b74dab78e7.png)\n\n进入微信还算比较早的。和我的两个基友都是300w内。但是潜水了快3年才在快毕业的时候旅行发了一条盆友圈。曾一度抗拒盆友圈这个类似空间的东西。当然大学的社交网络还是集中在“找人人上同学”的人人网。。毕竟各大校园通知新闻、文娱八卦、技术贴以及各种曾在校园见过又不知道是谁的人终于知道叫什么名字了。。还曾一度影响了各类插件的发展、影响了谁来看过我我被多少人看过的各类访问人数的截图。。现在看来。。大家当年都是一个水平的嘛\n\n![](http://ooo.0o0.ooo/2016/01/17/569b765a8c8ed.png)\n\n快一年也没旅游了。说是没时间不如说是没人陪。。只有寒假去东三省和海南度假算是正经的轻松了一回。不过上海的cj也是满满的收获。。红包多是借钱还钱。。。才没有人给我发红包呢。\n\n![](http://ooo.0o0.ooo/2016/01/17/569b76c34f72d.png)\n\n惨淡的人际网并不像急于拓展。收货了太多的信息来源反倒不如维护好几个重要的人。。还未曾到需要攀龙附凤的阶段。充实自己吧。用了一段时间的手环终究是没有逃过不出一年就坏掉的命运。。所以微信运动总是几百米的步数。\n\n![](http://ooo.0o0.ooo/2016/01/17/569b8cd37fbf6.png)\n\n其实点口碑外卖并不多。。不知道它计算了别的外卖支付没有。。。想想也就吃了下半年则么会这么多。。或许是把优惠支付也算进去了。\n\n![](http://ooo.0o0.ooo/2016/01/17/569b8d469df74.png)\n\n除了一个月试了试微信的信用卡还款基本都在支付宝还款了。。后面几个月已经扒不到网易邮箱的信用卡账单了。。每次都要手动输金额也是好烦。。生产力还没达到一定程度消费就花了这么多了。。手机充值的方式越来越多样化。总之和外卖 电影一样 谁便宜去谁家。\n\n![](http://ooo.0o0.ooo/2016/01/17/569b8dfc35999.png)\n\n大部分能用华北的地方都没主动用。。第一推荐的基本没人会主动换掉。。港真。芝麻信用分还是挺有用的。\n\n![](http://ooo.0o0.ooo/2016/01/17/569b92b0b7ced.png)\n\n常年有1w余额。。这年利率越来越低了\n\n![](http://ooo.0o0.ooo/2016/01/17/569b9351c9783.png)\n\n大多数买买买都是电子产品。。两个手机。两个耳机。。单反。。品质的一年。旅游真的变少了。\n\n![](http://ooo.0o0.ooo/2016/01/17/569b99e34fd85.png)\n\n比格这么高的音乐软件入碗了入碗了！！毕竟还是个网易最早用户呢\n\n![](http://ooo.0o0.ooo/2016/01/17/569b9a1dc8bf6.png)\n\n上班听歌狗。。。没歌没效率的最佳代言人。\n\n![](http://ooo.0o0.ooo/2016/01/17/569b9a48e60dc.png)\n\n真是李荣浩狗。。陈粒狗。。李志狗。。还是国语歌听的比较顺耳\n\n![](http://ooo.0o0.ooo/2016/01/17/569b9a7cebaa4.png)\n\n喂喂喂！！要你管啦！\n\n![](http://ooo.0o0.ooo/2016/01/17/569b9a99a92ea.png)\n\n是的！都怪你拉！\n\n&nbsp;\n\n![](https://ooo.0o0.ooo/2016/01/17/569c588aa63d8.png)\n\n也是由于从村里搬到了城里。本以为8.8的电影算是捡了大便宜。妹想到4块钱看了个星战。闲来无事，也只能有看电影能消遣了。\n\n![](http://ooo.0o0.ooo/2016/01/17/569c5ae2d384a.png)\n\n也是被自己的频率吓到。。毕竟前半个年基本没有机会看到电影院。。。或许是回忆标记的电影略多。\n\n![](https://ooo.0o0.ooo/2016/01/17/569c587a5e523.png)\n\n电影院基本四星以下。唯独记得的几部看的相当爽的只有【师傅】【暗杀】【心迷宫】其他的五星基本在补电影。\n\n![](https://ooo.0o0.ooo/2016/01/17/569c58890e21e.png)\n\n毕竟是互联网社交的先驱。极客的事业之道\n\n![](https://ooo.0o0.ooo/2016/01/17/569c588ab1ec6.png)\n\n港真。自尊心在受到歧视的人群更显得珍重。民族歧视、种族歧视、地域歧视，如果解决不好，就不是花钱能够应付的了\n\n![](https://ooo.0o0.ooo/2016/01/17/569c588c1f10b.png)\n\n第一次对动画电影这么赞叹，不愧是日本的高分动画。不愧是宫崎骏老师的配乐\n\n![](https://ooo.0o0.ooo/2016/01/17/569c5897d8f92.png)\n\n好吧。。容我矫情一回好了\n\n![](https://ooo.0o0.ooo/2016/01/17/569c588d50b2d.png)\n\n也不知道寒假怎么了。应该是约约约才对的阿。三月四月完全没有流量下电影。。也无心恋战。沉迷健身、跑步、羽毛球、课设、、、\n\n![](http://ooo.0o0.ooo/2016/01/17/569c5c4cdd158.png)\n\n豆瓣电影和豆瓣app相当混淆。。不知道应该取舍哪一个\n\n![](http://ooo.0o0.ooo/2016/01/17/569c5c7918c03.png)\n\n           &lt;p&gt;果然是2月挖坟了过往的很多电影。。毕竟也是太闲了这样算下来和前一年看的就差不多了&lt;/p&gt; &lt;p&gt;&lt;img src=\"http://ooo.0o0.ooo/2016/01/17/569c5cba269c4.png\"&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=\"http://ooo.0o0.ooo/2016/01/17/569c5cf85db53.png\"&gt;&lt;/p&gt; &lt;p&gt;虽然口味较重。但类型没有特别偏颇的。反倒是对美帝的电影相当喜爱。&lt;/p&gt; &lt;p&gt;&lt;img src=\"http://ooo.0o0.ooo/2016/01/17/569c5d1f44a7d.png\"&gt;&lt;/p&gt;    &lt;p&gt;虽然很爱大咪咪。但演的渣还是不能同情的。。虽然艾玛斯通对你国态度相当恶劣。但演得好还是要乖乖献出5分。&lt;img src=\"http://ooo.0o0.ooo/2016/01/17/569c5d7f7dbe0.png\"&gt;&lt;/p&gt; &lt;p&gt;第一部是欠的电影票。。第二部是第一次看到了电影院娇嗔的妹子。。第三部是18.8看了个imax。。我是奇葩恩恩我承认好了&lt;/p&gt; &lt;p&gt;&lt;img src=\"http://ooo.0o0.ooo/2016/01/17/569c5dc6997cf.png\"&gt;&lt;/p&gt; &lt;p&gt;港真。。特工学院这剧情和特效能看？还有那操蛋的英伦腔。\n    ","source":"_posts/社交app的2015.md","raw":"---\ntitle: 社交app的2015\ncategories:\n  - 槽\nid: 1088\ndate: 2016-01-18 11:45:06\ntags:\n---\n\n手机和网络重度使用患者也该是总结自己的时候了。庆幸的是各大app都热推了自己的2015数据流。把去年的数据库做个直白的excel统计。好吧。。我除了听歌看电影买买买也没别的(性)生活了。\n<!-- more -->\n\n![](http://ooo.0o0.ooo/2016/01/17/569b74dab78e7.png)\n\n进入微信还算比较早的。和我的两个基友都是300w内。但是潜水了快3年才在快毕业的时候旅行发了一条盆友圈。曾一度抗拒盆友圈这个类似空间的东西。当然大学的社交网络还是集中在“找人人上同学”的人人网。。毕竟各大校园通知新闻、文娱八卦、技术贴以及各种曾在校园见过又不知道是谁的人终于知道叫什么名字了。。还曾一度影响了各类插件的发展、影响了谁来看过我我被多少人看过的各类访问人数的截图。。现在看来。。大家当年都是一个水平的嘛\n\n![](http://ooo.0o0.ooo/2016/01/17/569b765a8c8ed.png)\n\n快一年也没旅游了。说是没时间不如说是没人陪。。只有寒假去东三省和海南度假算是正经的轻松了一回。不过上海的cj也是满满的收获。。红包多是借钱还钱。。。才没有人给我发红包呢。\n\n![](http://ooo.0o0.ooo/2016/01/17/569b76c34f72d.png)\n\n惨淡的人际网并不像急于拓展。收货了太多的信息来源反倒不如维护好几个重要的人。。还未曾到需要攀龙附凤的阶段。充实自己吧。用了一段时间的手环终究是没有逃过不出一年就坏掉的命运。。所以微信运动总是几百米的步数。\n\n![](http://ooo.0o0.ooo/2016/01/17/569b8cd37fbf6.png)\n\n其实点口碑外卖并不多。。不知道它计算了别的外卖支付没有。。。想想也就吃了下半年则么会这么多。。或许是把优惠支付也算进去了。\n\n![](http://ooo.0o0.ooo/2016/01/17/569b8d469df74.png)\n\n除了一个月试了试微信的信用卡还款基本都在支付宝还款了。。后面几个月已经扒不到网易邮箱的信用卡账单了。。每次都要手动输金额也是好烦。。生产力还没达到一定程度消费就花了这么多了。。手机充值的方式越来越多样化。总之和外卖 电影一样 谁便宜去谁家。\n\n![](http://ooo.0o0.ooo/2016/01/17/569b8dfc35999.png)\n\n大部分能用华北的地方都没主动用。。第一推荐的基本没人会主动换掉。。港真。芝麻信用分还是挺有用的。\n\n![](http://ooo.0o0.ooo/2016/01/17/569b92b0b7ced.png)\n\n常年有1w余额。。这年利率越来越低了\n\n![](http://ooo.0o0.ooo/2016/01/17/569b9351c9783.png)\n\n大多数买买买都是电子产品。。两个手机。两个耳机。。单反。。品质的一年。旅游真的变少了。\n\n![](http://ooo.0o0.ooo/2016/01/17/569b99e34fd85.png)\n\n比格这么高的音乐软件入碗了入碗了！！毕竟还是个网易最早用户呢\n\n![](http://ooo.0o0.ooo/2016/01/17/569b9a1dc8bf6.png)\n\n上班听歌狗。。。没歌没效率的最佳代言人。\n\n![](http://ooo.0o0.ooo/2016/01/17/569b9a48e60dc.png)\n\n真是李荣浩狗。。陈粒狗。。李志狗。。还是国语歌听的比较顺耳\n\n![](http://ooo.0o0.ooo/2016/01/17/569b9a7cebaa4.png)\n\n喂喂喂！！要你管啦！\n\n![](http://ooo.0o0.ooo/2016/01/17/569b9a99a92ea.png)\n\n是的！都怪你拉！\n\n&nbsp;\n\n![](https://ooo.0o0.ooo/2016/01/17/569c588aa63d8.png)\n\n也是由于从村里搬到了城里。本以为8.8的电影算是捡了大便宜。妹想到4块钱看了个星战。闲来无事，也只能有看电影能消遣了。\n\n![](http://ooo.0o0.ooo/2016/01/17/569c5ae2d384a.png)\n\n也是被自己的频率吓到。。毕竟前半个年基本没有机会看到电影院。。。或许是回忆标记的电影略多。\n\n![](https://ooo.0o0.ooo/2016/01/17/569c587a5e523.png)\n\n电影院基本四星以下。唯独记得的几部看的相当爽的只有【师傅】【暗杀】【心迷宫】其他的五星基本在补电影。\n\n![](https://ooo.0o0.ooo/2016/01/17/569c58890e21e.png)\n\n毕竟是互联网社交的先驱。极客的事业之道\n\n![](https://ooo.0o0.ooo/2016/01/17/569c588ab1ec6.png)\n\n港真。自尊心在受到歧视的人群更显得珍重。民族歧视、种族歧视、地域歧视，如果解决不好，就不是花钱能够应付的了\n\n![](https://ooo.0o0.ooo/2016/01/17/569c588c1f10b.png)\n\n第一次对动画电影这么赞叹，不愧是日本的高分动画。不愧是宫崎骏老师的配乐\n\n![](https://ooo.0o0.ooo/2016/01/17/569c5897d8f92.png)\n\n好吧。。容我矫情一回好了\n\n![](https://ooo.0o0.ooo/2016/01/17/569c588d50b2d.png)\n\n也不知道寒假怎么了。应该是约约约才对的阿。三月四月完全没有流量下电影。。也无心恋战。沉迷健身、跑步、羽毛球、课设、、、\n\n![](http://ooo.0o0.ooo/2016/01/17/569c5c4cdd158.png)\n\n豆瓣电影和豆瓣app相当混淆。。不知道应该取舍哪一个\n\n![](http://ooo.0o0.ooo/2016/01/17/569c5c7918c03.png)\n\n           &lt;p&gt;果然是2月挖坟了过往的很多电影。。毕竟也是太闲了这样算下来和前一年看的就差不多了&lt;/p&gt; &lt;p&gt;&lt;img src=\"http://ooo.0o0.ooo/2016/01/17/569c5cba269c4.png\"&gt;&lt;/p&gt; &lt;p&gt;&lt;img src=\"http://ooo.0o0.ooo/2016/01/17/569c5cf85db53.png\"&gt;&lt;/p&gt; &lt;p&gt;虽然口味较重。但类型没有特别偏颇的。反倒是对美帝的电影相当喜爱。&lt;/p&gt; &lt;p&gt;&lt;img src=\"http://ooo.0o0.ooo/2016/01/17/569c5d1f44a7d.png\"&gt;&lt;/p&gt;    &lt;p&gt;虽然很爱大咪咪。但演的渣还是不能同情的。。虽然艾玛斯通对你国态度相当恶劣。但演得好还是要乖乖献出5分。&lt;img src=\"http://ooo.0o0.ooo/2016/01/17/569c5d7f7dbe0.png\"&gt;&lt;/p&gt; &lt;p&gt;第一部是欠的电影票。。第二部是第一次看到了电影院娇嗔的妹子。。第三部是18.8看了个imax。。我是奇葩恩恩我承认好了&lt;/p&gt; &lt;p&gt;&lt;img src=\"http://ooo.0o0.ooo/2016/01/17/569c5dc6997cf.png\"&gt;&lt;/p&gt; &lt;p&gt;港真。。特工学院这剧情和特效能看？还有那操蛋的英伦腔。\n    ","slug":"社交app的2015","published":1,"updated":"2016-04-29T09:13:23.592Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7sc009euco4f902maum","content":"<p>手机和网络重度使用患者也该是总结自己的时候了。庆幸的是各大app都热推了自己的2015数据流。把去年的数据库做个直白的excel统计。好吧。。我除了听歌看电影买买买也没别的(性)生活了。<br><a id=\"more\"></a></p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b74dab78e7.png\" alt=\"\"></p>\n<p>进入微信还算比较早的。和我的两个基友都是300w内。但是潜水了快3年才在快毕业的时候旅行发了一条盆友圈。曾一度抗拒盆友圈这个类似空间的东西。当然大学的社交网络还是集中在“找人人上同学”的人人网。。毕竟各大校园通知新闻、文娱八卦、技术贴以及各种曾在校园见过又不知道是谁的人终于知道叫什么名字了。。还曾一度影响了各类插件的发展、影响了谁来看过我我被多少人看过的各类访问人数的截图。。现在看来。。大家当年都是一个水平的嘛</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b765a8c8ed.png\" alt=\"\"></p>\n<p>快一年也没旅游了。说是没时间不如说是没人陪。。只有寒假去东三省和海南度假算是正经的轻松了一回。不过上海的cj也是满满的收获。。红包多是借钱还钱。。。才没有人给我发红包呢。</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b76c34f72d.png\" alt=\"\"></p>\n<p>惨淡的人际网并不像急于拓展。收货了太多的信息来源反倒不如维护好几个重要的人。。还未曾到需要攀龙附凤的阶段。充实自己吧。用了一段时间的手环终究是没有逃过不出一年就坏掉的命运。。所以微信运动总是几百米的步数。</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b8cd37fbf6.png\" alt=\"\"></p>\n<p>其实点口碑外卖并不多。。不知道它计算了别的外卖支付没有。。。想想也就吃了下半年则么会这么多。。或许是把优惠支付也算进去了。</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b8d469df74.png\" alt=\"\"></p>\n<p>除了一个月试了试微信的信用卡还款基本都在支付宝还款了。。后面几个月已经扒不到网易邮箱的信用卡账单了。。每次都要手动输金额也是好烦。。生产力还没达到一定程度消费就花了这么多了。。手机充值的方式越来越多样化。总之和外卖 电影一样 谁便宜去谁家。</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b8dfc35999.png\" alt=\"\"></p>\n<p>大部分能用华北的地方都没主动用。。第一推荐的基本没人会主动换掉。。港真。芝麻信用分还是挺有用的。</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b92b0b7ced.png\" alt=\"\"></p>\n<p>常年有1w余额。。这年利率越来越低了</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b9351c9783.png\" alt=\"\"></p>\n<p>大多数买买买都是电子产品。。两个手机。两个耳机。。单反。。品质的一年。旅游真的变少了。</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b99e34fd85.png\" alt=\"\"></p>\n<p>比格这么高的音乐软件入碗了入碗了！！毕竟还是个网易最早用户呢</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b9a1dc8bf6.png\" alt=\"\"></p>\n<p>上班听歌狗。。。没歌没效率的最佳代言人。</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b9a48e60dc.png\" alt=\"\"></p>\n<p>真是李荣浩狗。。陈粒狗。。李志狗。。还是国语歌听的比较顺耳</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b9a7cebaa4.png\" alt=\"\"></p>\n<p>喂喂喂！！要你管啦！</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b9a99a92ea.png\" alt=\"\"></p>\n<p>是的！都怪你拉！</p>\n<p>&nbsp;</p>\n<p><img src=\"https://ooo.0o0.ooo/2016/01/17/569c588aa63d8.png\" alt=\"\"></p>\n<p>也是由于从村里搬到了城里。本以为8.8的电影算是捡了大便宜。妹想到4块钱看了个星战。闲来无事，也只能有看电影能消遣了。</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569c5ae2d384a.png\" alt=\"\"></p>\n<p>也是被自己的频率吓到。。毕竟前半个年基本没有机会看到电影院。。。或许是回忆标记的电影略多。</p>\n<p><img src=\"https://ooo.0o0.ooo/2016/01/17/569c587a5e523.png\" alt=\"\"></p>\n<p>电影院基本四星以下。唯独记得的几部看的相当爽的只有【师傅】【暗杀】【心迷宫】其他的五星基本在补电影。</p>\n<p><img src=\"https://ooo.0o0.ooo/2016/01/17/569c58890e21e.png\" alt=\"\"></p>\n<p>毕竟是互联网社交的先驱。极客的事业之道</p>\n<p><img src=\"https://ooo.0o0.ooo/2016/01/17/569c588ab1ec6.png\" alt=\"\"></p>\n<p>港真。自尊心在受到歧视的人群更显得珍重。民族歧视、种族歧视、地域歧视，如果解决不好，就不是花钱能够应付的了</p>\n<p><img src=\"https://ooo.0o0.ooo/2016/01/17/569c588c1f10b.png\" alt=\"\"></p>\n<p>第一次对动画电影这么赞叹，不愧是日本的高分动画。不愧是宫崎骏老师的配乐</p>\n<p><img src=\"https://ooo.0o0.ooo/2016/01/17/569c5897d8f92.png\" alt=\"\"></p>\n<p>好吧。。容我矫情一回好了</p>\n<p><img src=\"https://ooo.0o0.ooo/2016/01/17/569c588d50b2d.png\" alt=\"\"></p>\n<p>也不知道寒假怎么了。应该是约约约才对的阿。三月四月完全没有流量下电影。。也无心恋战。沉迷健身、跑步、羽毛球、课设、、、</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569c5c4cdd158.png\" alt=\"\"></p>\n<p>豆瓣电影和豆瓣app相当混淆。。不知道应该取舍哪一个</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569c5c7918c03.png\" alt=\"\"></p>\n<pre><code>       &amp;lt;p&amp;gt;果然是2月挖坟了过往的很多电影。。毕竟也是太闲了这样算下来和前一年看的就差不多了&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;&amp;lt;img src=&quot;http://ooo.0o0.ooo/2016/01/17/569c5cba269c4.png&quot;&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;&amp;lt;img src=&quot;http://ooo.0o0.ooo/2016/01/17/569c5cf85db53.png&quot;&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;虽然口味较重。但类型没有特别偏颇的。反倒是对美帝的电影相当喜爱。&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;&amp;lt;img src=&quot;http://ooo.0o0.ooo/2016/01/17/569c5d1f44a7d.png&quot;&amp;gt;&amp;lt;/p&amp;gt;    &amp;lt;p&amp;gt;虽然很爱大咪咪。但演的渣还是不能同情的。。虽然艾玛斯通对你国态度相当恶劣。但演得好还是要乖乖献出5分。&amp;lt;img src=&quot;http://ooo.0o0.ooo/2016/01/17/569c5d7f7dbe0.png&quot;&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;第一部是欠的电影票。。第二部是第一次看到了电影院娇嗔的妹子。。第三部是18.8看了个imax。。我是奇葩恩恩我承认好了&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;&amp;lt;img src=&quot;http://ooo.0o0.ooo/2016/01/17/569c5dc6997cf.png&quot;&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;港真。。特工学院这剧情和特效能看？还有那操蛋的英伦腔。\n</code></pre>","excerpt":"<p>手机和网络重度使用患者也该是总结自己的时候了。庆幸的是各大app都热推了自己的2015数据流。把去年的数据库做个直白的excel统计。好吧。。我除了听歌看电影买买买也没别的(性)生活了。<br>","more":"</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b74dab78e7.png\" alt=\"\"></p>\n<p>进入微信还算比较早的。和我的两个基友都是300w内。但是潜水了快3年才在快毕业的时候旅行发了一条盆友圈。曾一度抗拒盆友圈这个类似空间的东西。当然大学的社交网络还是集中在“找人人上同学”的人人网。。毕竟各大校园通知新闻、文娱八卦、技术贴以及各种曾在校园见过又不知道是谁的人终于知道叫什么名字了。。还曾一度影响了各类插件的发展、影响了谁来看过我我被多少人看过的各类访问人数的截图。。现在看来。。大家当年都是一个水平的嘛</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b765a8c8ed.png\" alt=\"\"></p>\n<p>快一年也没旅游了。说是没时间不如说是没人陪。。只有寒假去东三省和海南度假算是正经的轻松了一回。不过上海的cj也是满满的收获。。红包多是借钱还钱。。。才没有人给我发红包呢。</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b76c34f72d.png\" alt=\"\"></p>\n<p>惨淡的人际网并不像急于拓展。收货了太多的信息来源反倒不如维护好几个重要的人。。还未曾到需要攀龙附凤的阶段。充实自己吧。用了一段时间的手环终究是没有逃过不出一年就坏掉的命运。。所以微信运动总是几百米的步数。</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b8cd37fbf6.png\" alt=\"\"></p>\n<p>其实点口碑外卖并不多。。不知道它计算了别的外卖支付没有。。。想想也就吃了下半年则么会这么多。。或许是把优惠支付也算进去了。</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b8d469df74.png\" alt=\"\"></p>\n<p>除了一个月试了试微信的信用卡还款基本都在支付宝还款了。。后面几个月已经扒不到网易邮箱的信用卡账单了。。每次都要手动输金额也是好烦。。生产力还没达到一定程度消费就花了这么多了。。手机充值的方式越来越多样化。总之和外卖 电影一样 谁便宜去谁家。</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b8dfc35999.png\" alt=\"\"></p>\n<p>大部分能用华北的地方都没主动用。。第一推荐的基本没人会主动换掉。。港真。芝麻信用分还是挺有用的。</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b92b0b7ced.png\" alt=\"\"></p>\n<p>常年有1w余额。。这年利率越来越低了</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b9351c9783.png\" alt=\"\"></p>\n<p>大多数买买买都是电子产品。。两个手机。两个耳机。。单反。。品质的一年。旅游真的变少了。</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b99e34fd85.png\" alt=\"\"></p>\n<p>比格这么高的音乐软件入碗了入碗了！！毕竟还是个网易最早用户呢</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b9a1dc8bf6.png\" alt=\"\"></p>\n<p>上班听歌狗。。。没歌没效率的最佳代言人。</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b9a48e60dc.png\" alt=\"\"></p>\n<p>真是李荣浩狗。。陈粒狗。。李志狗。。还是国语歌听的比较顺耳</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b9a7cebaa4.png\" alt=\"\"></p>\n<p>喂喂喂！！要你管啦！</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569b9a99a92ea.png\" alt=\"\"></p>\n<p>是的！都怪你拉！</p>\n<p>&nbsp;</p>\n<p><img src=\"https://ooo.0o0.ooo/2016/01/17/569c588aa63d8.png\" alt=\"\"></p>\n<p>也是由于从村里搬到了城里。本以为8.8的电影算是捡了大便宜。妹想到4块钱看了个星战。闲来无事，也只能有看电影能消遣了。</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569c5ae2d384a.png\" alt=\"\"></p>\n<p>也是被自己的频率吓到。。毕竟前半个年基本没有机会看到电影院。。。或许是回忆标记的电影略多。</p>\n<p><img src=\"https://ooo.0o0.ooo/2016/01/17/569c587a5e523.png\" alt=\"\"></p>\n<p>电影院基本四星以下。唯独记得的几部看的相当爽的只有【师傅】【暗杀】【心迷宫】其他的五星基本在补电影。</p>\n<p><img src=\"https://ooo.0o0.ooo/2016/01/17/569c58890e21e.png\" alt=\"\"></p>\n<p>毕竟是互联网社交的先驱。极客的事业之道</p>\n<p><img src=\"https://ooo.0o0.ooo/2016/01/17/569c588ab1ec6.png\" alt=\"\"></p>\n<p>港真。自尊心在受到歧视的人群更显得珍重。民族歧视、种族歧视、地域歧视，如果解决不好，就不是花钱能够应付的了</p>\n<p><img src=\"https://ooo.0o0.ooo/2016/01/17/569c588c1f10b.png\" alt=\"\"></p>\n<p>第一次对动画电影这么赞叹，不愧是日本的高分动画。不愧是宫崎骏老师的配乐</p>\n<p><img src=\"https://ooo.0o0.ooo/2016/01/17/569c5897d8f92.png\" alt=\"\"></p>\n<p>好吧。。容我矫情一回好了</p>\n<p><img src=\"https://ooo.0o0.ooo/2016/01/17/569c588d50b2d.png\" alt=\"\"></p>\n<p>也不知道寒假怎么了。应该是约约约才对的阿。三月四月完全没有流量下电影。。也无心恋战。沉迷健身、跑步、羽毛球、课设、、、</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569c5c4cdd158.png\" alt=\"\"></p>\n<p>豆瓣电影和豆瓣app相当混淆。。不知道应该取舍哪一个</p>\n<p><img src=\"http://ooo.0o0.ooo/2016/01/17/569c5c7918c03.png\" alt=\"\"></p>\n<pre><code>       &amp;lt;p&amp;gt;果然是2月挖坟了过往的很多电影。。毕竟也是太闲了这样算下来和前一年看的就差不多了&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;&amp;lt;img src=&quot;http://ooo.0o0.ooo/2016/01/17/569c5cba269c4.png&quot;&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;&amp;lt;img src=&quot;http://ooo.0o0.ooo/2016/01/17/569c5cf85db53.png&quot;&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;虽然口味较重。但类型没有特别偏颇的。反倒是对美帝的电影相当喜爱。&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;&amp;lt;img src=&quot;http://ooo.0o0.ooo/2016/01/17/569c5d1f44a7d.png&quot;&amp;gt;&amp;lt;/p&amp;gt;    &amp;lt;p&amp;gt;虽然很爱大咪咪。但演的渣还是不能同情的。。虽然艾玛斯通对你国态度相当恶劣。但演得好还是要乖乖献出5分。&amp;lt;img src=&quot;http://ooo.0o0.ooo/2016/01/17/569c5d7f7dbe0.png&quot;&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;第一部是欠的电影票。。第二部是第一次看到了电影院娇嗔的妹子。。第三部是18.8看了个imax。。我是奇葩恩恩我承认好了&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;&amp;lt;img src=&quot;http://ooo.0o0.ooo/2016/01/17/569c5dc6997cf.png&quot;&amp;gt;&amp;lt;/p&amp;gt; &amp;lt;p&amp;gt;港真。。特工学院这剧情和特效能看？还有那操蛋的英伦腔。\n</code></pre>"},{"title":"红包在哪里","id":"596","date":"2015-10-08T18:16:05.000Z","_content":"\n在 2015 年这一年，这种从相杀到相爱的事情已经发生了三次：\n2015 年 2 月 14 日，滴滴和快的宣布合并；\n2015 年 4 月 17 日，58 与赶集宣布合并；\n2015 年 10 月 8 日，美团与大众点评宣布合并。","source":"_posts/红包在哪里.md","raw":"---\ntitle: 红包在哪里\ncategories:\n  - 槽\ntags:\n  - 呵呵哒\nid: 596\ndate: 2015-10-09 02:16:05\n---\n\n在 2015 年这一年，这种从相杀到相爱的事情已经发生了三次：\n2015 年 2 月 14 日，滴滴和快的宣布合并；\n2015 年 4 月 17 日，58 与赶集宣布合并；\n2015 年 10 月 8 日，美团与大众点评宣布合并。","slug":"红包在哪里","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7sf009iuco4mtgpatje","content":"<p>在 2015 年这一年，这种从相杀到相爱的事情已经发生了三次：<br>2015 年 2 月 14 日，滴滴和快的宣布合并；<br>2015 年 4 月 17 日，58 与赶集宣布合并；<br>2015 年 10 月 8 日，美团与大众点评宣布合并。</p>","excerpt":"","more":"<p>在 2015 年这一年，这种从相杀到相爱的事情已经发生了三次：<br>2015 年 2 月 14 日，滴滴和快的宣布合并；<br>2015 年 4 月 17 日，58 与赶集宣布合并；<br>2015 年 10 月 8 日，美团与大众点评宣布合并。</p>"},{"title":"考研目标。。。","id":"441","date":"2014-01-02T18:23:41.000Z","_content":"\n数学135。。这个鹅鹅鹅\n英语阅读错3个以下。。！\n政治选择上39@_@\n专业100好了。摸么大！","source":"_posts/考研目标。。。.md","raw":"---\ntitle: 考研目标。。。\ncategories:\n  - 什么都学一下\n  - 学习log\ntags:\n  - 考研\nid: 441\ndate: 2014-01-03 02:23:41\n---\n\n数学135。。这个鹅鹅鹅\n英语阅读错3个以下。。！\n政治选择上39@_@\n专业100好了。摸么大！","slug":"考研目标。。。","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7sh009luco4cuqjnekc","content":"<p>数学135。。这个鹅鹅鹅<br>英语阅读错3个以下。。！<br>政治选择上39@_@<br>专业100好了。摸么大！</p>","excerpt":"","more":"<p>数学135。。这个鹅鹅鹅<br>英语阅读错3个以下。。！<br>政治选择上39@_@<br>专业100好了。摸么大！</p>"},{"title":"考研政治预测","id":"443","date":"2014-01-02T18:48:27.000Z","_content":"\n本着大热不考的心态总结以下考点。\n马原。这个没有热不热的说法。矛盾普遍特殊，真理的绝对相对，认识的无限与反复，矛盾同一斗争极其作用，现象本质，可能性现实性，偶然必然，两点论重点论。都应该算是热点。历史人物的评价和无产阶级领袖的评价。至少都是出自辩证法和认识伦。所以，依据某位老师的意见，，预测是政治经济学的货币本质，物质观和实践观，结合史纲考察唯物史观可能会考察，结合毛胸特考察两点论重点论。\n\n毛胸特。这个热点可就非凡的多了。三个自信。三条道路。两个不能否定。改革开放意义。创新驱动发展战略。转变经济发展方式。民族区域自治。这些十八大的热点十足会考到。结合马哲和史纲也说不定。但是单独命题的话，我猜测是生态文明，文化体制改革，3个伟大成就。\n\n史纲。今年重点也很突出，结合群众实践教育活动考察两个务必，晚安争疯，西柏坡七姐二中。开罗宣言70年。毛泽东诞辰120年。改革开放35年。但是认为，这里会考察两个不能否定，以及两个时期的成就，两次抗日的不同结果。\n\n思想政治。网络自由。个人理想与中国梦。法制与法制。促进公平正义。爱国主义和改革创新。个人认为社会主义核心价值观是考点，以及宪法30周年。\n\n时政。不用解释了。三选一肯定考。中国外交新观念，合作共赢，独立自主，底线原则；中美中俄中非新兴大国关系；和谐中国与和谐世界，中国与美国梦非洲梦世界梦。","source":"_posts/考研政治预测.md","raw":"---\ntitle: 考研政治预测\ncategories:\n  - 槽\ntags:\n  - 考研\nid: 443\ndate: 2014-01-03 02:48:27\n---\n\n本着大热不考的心态总结以下考点。\n马原。这个没有热不热的说法。矛盾普遍特殊，真理的绝对相对，认识的无限与反复，矛盾同一斗争极其作用，现象本质，可能性现实性，偶然必然，两点论重点论。都应该算是热点。历史人物的评价和无产阶级领袖的评价。至少都是出自辩证法和认识伦。所以，依据某位老师的意见，，预测是政治经济学的货币本质，物质观和实践观，结合史纲考察唯物史观可能会考察，结合毛胸特考察两点论重点论。\n\n毛胸特。这个热点可就非凡的多了。三个自信。三条道路。两个不能否定。改革开放意义。创新驱动发展战略。转变经济发展方式。民族区域自治。这些十八大的热点十足会考到。结合马哲和史纲也说不定。但是单独命题的话，我猜测是生态文明，文化体制改革，3个伟大成就。\n\n史纲。今年重点也很突出，结合群众实践教育活动考察两个务必，晚安争疯，西柏坡七姐二中。开罗宣言70年。毛泽东诞辰120年。改革开放35年。但是认为，这里会考察两个不能否定，以及两个时期的成就，两次抗日的不同结果。\n\n思想政治。网络自由。个人理想与中国梦。法制与法制。促进公平正义。爱国主义和改革创新。个人认为社会主义核心价值观是考点，以及宪法30周年。\n\n时政。不用解释了。三选一肯定考。中国外交新观念，合作共赢，独立自主，底线原则；中美中俄中非新兴大国关系；和谐中国与和谐世界，中国与美国梦非洲梦世界梦。","slug":"考研政治预测","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7si009puco4ft6weeut","content":"<p>本着大热不考的心态总结以下考点。<br>马原。这个没有热不热的说法。矛盾普遍特殊，真理的绝对相对，认识的无限与反复，矛盾同一斗争极其作用，现象本质，可能性现实性，偶然必然，两点论重点论。都应该算是热点。历史人物的评价和无产阶级领袖的评价。至少都是出自辩证法和认识伦。所以，依据某位老师的意见，，预测是政治经济学的货币本质，物质观和实践观，结合史纲考察唯物史观可能会考察，结合毛胸特考察两点论重点论。</p>\n<p>毛胸特。这个热点可就非凡的多了。三个自信。三条道路。两个不能否定。改革开放意义。创新驱动发展战略。转变经济发展方式。民族区域自治。这些十八大的热点十足会考到。结合马哲和史纲也说不定。但是单独命题的话，我猜测是生态文明，文化体制改革，3个伟大成就。</p>\n<p>史纲。今年重点也很突出，结合群众实践教育活动考察两个务必，晚安争疯，西柏坡七姐二中。开罗宣言70年。毛泽东诞辰120年。改革开放35年。但是认为，这里会考察两个不能否定，以及两个时期的成就，两次抗日的不同结果。</p>\n<p>思想政治。网络自由。个人理想与中国梦。法制与法制。促进公平正义。爱国主义和改革创新。个人认为社会主义核心价值观是考点，以及宪法30周年。</p>\n<p>时政。不用解释了。三选一肯定考。中国外交新观念，合作共赢，独立自主，底线原则；中美中俄中非新兴大国关系；和谐中国与和谐世界，中国与美国梦非洲梦世界梦。</p>","excerpt":"","more":"<p>本着大热不考的心态总结以下考点。<br>马原。这个没有热不热的说法。矛盾普遍特殊，真理的绝对相对，认识的无限与反复，矛盾同一斗争极其作用，现象本质，可能性现实性，偶然必然，两点论重点论。都应该算是热点。历史人物的评价和无产阶级领袖的评价。至少都是出自辩证法和认识伦。所以，依据某位老师的意见，，预测是政治经济学的货币本质，物质观和实践观，结合史纲考察唯物史观可能会考察，结合毛胸特考察两点论重点论。</p>\n<p>毛胸特。这个热点可就非凡的多了。三个自信。三条道路。两个不能否定。改革开放意义。创新驱动发展战略。转变经济发展方式。民族区域自治。这些十八大的热点十足会考到。结合马哲和史纲也说不定。但是单独命题的话，我猜测是生态文明，文化体制改革，3个伟大成就。</p>\n<p>史纲。今年重点也很突出，结合群众实践教育活动考察两个务必，晚安争疯，西柏坡七姐二中。开罗宣言70年。毛泽东诞辰120年。改革开放35年。但是认为，这里会考察两个不能否定，以及两个时期的成就，两次抗日的不同结果。</p>\n<p>思想政治。网络自由。个人理想与中国梦。法制与法制。促进公平正义。爱国主义和改革创新。个人认为社会主义核心价值观是考点，以及宪法30周年。</p>\n<p>时政。不用解释了。三选一肯定考。中国外交新观念，合作共赢，独立自主，底线原则；中美中俄中非新兴大国关系；和谐中国与和谐世界，中国与美国梦非洲梦世界梦。</p>"},{"title":"考研视频马克","id":"329","date":"2013-08-10T13:00:01.000Z","_content":"\n[http://www.400gb.com/u/1704208/ ](http://www.400gb.com/u/1704208/ )  expensive900519 的所有共享 \n[http://www.400gb.com/u/32882/1509821](http://www.400gb.com/u/32882/1509821) 二愣子嘿嘿 的所有共享/考研资料","source":"_posts/考研视频马克.md","raw":"---\ntitle: 考研视频马克\ncategories:\n  - 什么都学一下\n  - 学习log\ntags:\n  - 考研\n  - 马克\nid: 329\ndate: 2013-08-10 21:00:01\n---\n\n[http://www.400gb.com/u/1704208/ ](http://www.400gb.com/u/1704208/ )  expensive900519 的所有共享 \n[http://www.400gb.com/u/32882/1509821](http://www.400gb.com/u/32882/1509821) 二愣子嘿嘿 的所有共享/考研资料","slug":"考研视频马克","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7sk009suco4qr3xysh6","content":"<p><a href=\"http://www.400gb.com/u/1704208/\" target=\"_blank\" rel=\"external\">http://www.400gb.com/u/1704208/ </a>  expensive900519 的所有共享<br><a href=\"http://www.400gb.com/u/32882/1509821\" target=\"_blank\" rel=\"external\">http://www.400gb.com/u/32882/1509821</a> 二愣子嘿嘿 的所有共享/考研资料</p>","excerpt":"","more":"<p><a href=\"http://www.400gb.com/u/1704208/\">http://www.400gb.com/u/1704208/ </a>  expensive900519 的所有共享<br><a href=\"http://www.400gb.com/u/32882/1509821\">http://www.400gb.com/u/32882/1509821</a> 二愣子嘿嘿 的所有共享/考研资料</p>"},{"title":"要有追求啊","id":"492","date":"2014-05-24T18:41:31.000Z","_content":"\n一定一定记得每周一篇测评啊。一定一定记得看美剧看教程看app啊。一定一定记得背单词刷书啊。拖延症伤不起！今天卖书收了60还是极好的","source":"_posts/要有追求啊.md","raw":"---\ntitle: 要有追求啊\ncategories:\n  - 槽\nid: 492\ndate: 2014-05-25 02:41:31\ntags:\n---\n\n一定一定记得每周一篇测评啊。一定一定记得看美剧看教程看app啊。一定一定记得背单词刷书啊。拖延症伤不起！今天卖书收了60还是极好的","slug":"要有追求啊","published":1,"updated":"2016-04-11T14:09:45.581Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7sm009wuco4espm8xlo","content":"<p>一定一定记得每周一篇测评啊。一定一定记得看美剧看教程看app啊。一定一定记得背单词刷书啊。拖延症伤不起！今天卖书收了60还是极好的</p>","excerpt":"","more":"<p>一定一定记得每周一篇测评啊。一定一定记得看美剧看教程看app啊。一定一定记得背单词刷书啊。拖延症伤不起！今天卖书收了60还是极好的</p>"},{"title":"记静态ip的坑","id":"1117","date":"2016-04-01T08:06:32.000Z","_content":"\n明明在hadoop配置静态IP的时候被坑过一次，却完全想不起来怎么解决的。尤其是在ssh登录的时候需要记下host和ip的对应，才能直接输出主机名来访问局域网内的其他主机。\n现在记下来。\n\n<!-- more -->\n1.原生linux+无线网卡/有线端口\nubuntu改interface和fedora改eth0-XXXXX都是极好的 里面对应的netmask ipaddress gateway dns1dns2（dnsnameserver）在resolv.conf配置dns信息\n但是**比较easy**的纯粹做法直接在有线/无线的连接信息里面加这几个对应信息\n\n![](https://ooo.0o0.ooo/2016/04/01/56fe2742cea08.png)\n\n最最最easy的就是直接在路由器dhcp绑定mac静态分配，直接原生效果拔群。\n\n2.虚拟机+有线端口/原生无线网卡\n\n这种情况有点坑 虚拟机切记开启桥接模式 直接把主机和虚拟机按照局域网内的两台机器分配ip。这样当然也可以按照配置文件配置 切记写入MN_COTROLLED=yes 然后开启networkmanager管理网络，并使用\n\n<pre class=\"brush: shell; gutter: true\">systemctl enable netwoekmanager</pre>\n\n开启开机启动。诚然，在连接信息直接配置也行。\n3.虚拟机+外接无线网卡\n呵呵 没找到解决方案。直接桥接驱动没法搞；直接nat不是我想要的结果。反正奏事上不了网ping不了局域网","source":"_posts/记静态ip的坑.md","raw":"---\ntitle: 记静态ip的坑\ncategories:\n  - 什么都学一下\n  - 学习log\ntags:\n  - hadoop\n  - 静态ip\nid: 1117\ndate: 2016-04-01 16:06:32\n---\n\n明明在hadoop配置静态IP的时候被坑过一次，却完全想不起来怎么解决的。尤其是在ssh登录的时候需要记下host和ip的对应，才能直接输出主机名来访问局域网内的其他主机。\n现在记下来。\n\n<!-- more -->\n1.原生linux+无线网卡/有线端口\nubuntu改interface和fedora改eth0-XXXXX都是极好的 里面对应的netmask ipaddress gateway dns1dns2（dnsnameserver）在resolv.conf配置dns信息\n但是**比较easy**的纯粹做法直接在有线/无线的连接信息里面加这几个对应信息\n\n![](https://ooo.0o0.ooo/2016/04/01/56fe2742cea08.png)\n\n最最最easy的就是直接在路由器dhcp绑定mac静态分配，直接原生效果拔群。\n\n2.虚拟机+有线端口/原生无线网卡\n\n这种情况有点坑 虚拟机切记开启桥接模式 直接把主机和虚拟机按照局域网内的两台机器分配ip。这样当然也可以按照配置文件配置 切记写入MN_COTROLLED=yes 然后开启networkmanager管理网络，并使用\n\n<pre class=\"brush: shell; gutter: true\">systemctl enable netwoekmanager</pre>\n\n开启开机启动。诚然，在连接信息直接配置也行。\n3.虚拟机+外接无线网卡\n呵呵 没找到解决方案。直接桥接驱动没法搞；直接nat不是我想要的结果。反正奏事上不了网ping不了局域网","slug":"记静态ip的坑","published":1,"updated":"2016-04-23T12:21:11.330Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7sn009zuco4mvrpfhka","content":"<p>明明在hadoop配置静态IP的时候被坑过一次，却完全想不起来怎么解决的。尤其是在ssh登录的时候需要记下host和ip的对应，才能直接输出主机名来访问局域网内的其他主机。<br>现在记下来。</p>\n<a id=\"more\"></a>\n<p>1.原生linux+无线网卡/有线端口<br>ubuntu改interface和fedora改eth0-XXXXX都是极好的 里面对应的netmask ipaddress gateway dns1dns2（dnsnameserver）在resolv.conf配置dns信息<br>但是<strong>比较easy</strong>的纯粹做法直接在有线/无线的连接信息里面加这几个对应信息</p>\n<p><img src=\"https://ooo.0o0.ooo/2016/04/01/56fe2742cea08.png\" alt=\"\"></p>\n<p>最最最easy的就是直接在路由器dhcp绑定mac静态分配，直接原生效果拔群。</p>\n<p>2.虚拟机+有线端口/原生无线网卡</p>\n<p>这种情况有点坑 虚拟机切记开启桥接模式 直接把主机和虚拟机按照局域网内的两台机器分配ip。这样当然也可以按照配置文件配置 切记写入MN_COTROLLED=yes 然后开启networkmanager管理网络，并使用</p>\n<pre class=\"brush: shell; gutter: true\">systemctl enable netwoekmanager</pre>\n\n<p>开启开机启动。诚然，在连接信息直接配置也行。<br>3.虚拟机+外接无线网卡<br>呵呵 没找到解决方案。直接桥接驱动没法搞；直接nat不是我想要的结果。反正奏事上不了网ping不了局域网</p>","excerpt":"<p>明明在hadoop配置静态IP的时候被坑过一次，却完全想不起来怎么解决的。尤其是在ssh登录的时候需要记下host和ip的对应，才能直接输出主机名来访问局域网内的其他主机。<br>现在记下来。</p>","more":"<p>1.原生linux+无线网卡/有线端口<br>ubuntu改interface和fedora改eth0-XXXXX都是极好的 里面对应的netmask ipaddress gateway dns1dns2（dnsnameserver）在resolv.conf配置dns信息<br>但是<strong>比较easy</strong>的纯粹做法直接在有线/无线的连接信息里面加这几个对应信息</p>\n<p><img src=\"https://ooo.0o0.ooo/2016/04/01/56fe2742cea08.png\" alt=\"\"></p>\n<p>最最最easy的就是直接在路由器dhcp绑定mac静态分配，直接原生效果拔群。</p>\n<p>2.虚拟机+有线端口/原生无线网卡</p>\n<p>这种情况有点坑 虚拟机切记开启桥接模式 直接把主机和虚拟机按照局域网内的两台机器分配ip。这样当然也可以按照配置文件配置 切记写入MN_COTROLLED=yes 然后开启networkmanager管理网络，并使用</p>\n<pre class=\"brush: shell; gutter: true\">systemctl enable netwoekmanager</pre>\n\n<p>开启开机启动。诚然，在连接信息直接配置也行。<br>3.虚拟机+外接无线网卡<br>呵呵 没找到解决方案。直接桥接驱动没法搞；直接nat不是我想要的结果。反正奏事上不了网ping不了局域网</p>"},{"title":"逼格不能随便装","id":"461","date":"2014-03-15T15:04:58.000Z","_content":"\n1。本想换个英文裤裤的区域的系统，，结果myeclipse的console总是中文乱码我就了天呐的debug。。。结果英文系统的console的默认是iso-8859-1，修改myeclipse.ini,添加-Dfile.encoding=utf-8也无解,只能调回中国区域。服务器乱码的问题还需要好好看看。\n\n2。本想对比着买个Nike Fuel vs Fitbit flex vs Jawbone up2。结果发现财力有点缺陷。。。考虑着弄个国产百度的咕咚好了。看了大多的评论结果一致是，nike的功能单一但是如果只是跑步那心率和测步还不错。up返修率太高，但是心率检测比较到位，flex功能最强大，各种运动的能量消耗能好计算，电池时间也不错。就是，就是都太小贵了。还是考虑上股东手环吧。\n\n3。315晚会，没什么新意的坑爹伎俩了，最重要是的新消法的出台还是比较看好的。个人和组织的力量终于被法律认同了。鱼肝油，内燃车，尼康，炒白银，额，都跟哥没什么干系吧。不过，恶意后台木马和风控自动系统的程序猿呐，良心呐!\n\n继续运动！！两天一次不能再断了。","source":"_posts/逼格不能随便装.md","raw":"---\ntitle: 逼格不能随便装\ncategories:\n  - 槽\ntags:\n  - 吐槽\nid: 461\ndate: 2014-03-15 23:04:58\n---\n\n1。本想换个英文裤裤的区域的系统，，结果myeclipse的console总是中文乱码我就了天呐的debug。。。结果英文系统的console的默认是iso-8859-1，修改myeclipse.ini,添加-Dfile.encoding=utf-8也无解,只能调回中国区域。服务器乱码的问题还需要好好看看。\n\n2。本想对比着买个Nike Fuel vs Fitbit flex vs Jawbone up2。结果发现财力有点缺陷。。。考虑着弄个国产百度的咕咚好了。看了大多的评论结果一致是，nike的功能单一但是如果只是跑步那心率和测步还不错。up返修率太高，但是心率检测比较到位，flex功能最强大，各种运动的能量消耗能好计算，电池时间也不错。就是，就是都太小贵了。还是考虑上股东手环吧。\n\n3。315晚会，没什么新意的坑爹伎俩了，最重要是的新消法的出台还是比较看好的。个人和组织的力量终于被法律认同了。鱼肝油，内燃车，尼康，炒白银，额，都跟哥没什么干系吧。不过，恶意后台木马和风控自动系统的程序猿呐，良心呐!\n\n继续运动！！两天一次不能再断了。","slug":"逼格不能随便装","published":1,"updated":"2016-04-11T14:09:45.580Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cio8sn7sp00a2uco4ncl89ma1","content":"<p>1。本想换个英文裤裤的区域的系统，，结果myeclipse的console总是中文乱码我就了天呐的debug。。。结果英文系统的console的默认是iso-8859-1，修改myeclipse.ini,添加-Dfile.encoding=utf-8也无解,只能调回中国区域。服务器乱码的问题还需要好好看看。</p>\n<p>2。本想对比着买个Nike Fuel vs Fitbit flex vs Jawbone up2。结果发现财力有点缺陷。。。考虑着弄个国产百度的咕咚好了。看了大多的评论结果一致是，nike的功能单一但是如果只是跑步那心率和测步还不错。up返修率太高，但是心率检测比较到位，flex功能最强大，各种运动的能量消耗能好计算，电池时间也不错。就是，就是都太小贵了。还是考虑上股东手环吧。</p>\n<p>3。315晚会，没什么新意的坑爹伎俩了，最重要是的新消法的出台还是比较看好的。个人和组织的力量终于被法律认同了。鱼肝油，内燃车，尼康，炒白银，额，都跟哥没什么干系吧。不过，恶意后台木马和风控自动系统的程序猿呐，良心呐!</p>\n<p>继续运动！！两天一次不能再断了。</p>","excerpt":"","more":"<p>1。本想换个英文裤裤的区域的系统，，结果myeclipse的console总是中文乱码我就了天呐的debug。。。结果英文系统的console的默认是iso-8859-1，修改myeclipse.ini,添加-Dfile.encoding=utf-8也无解,只能调回中国区域。服务器乱码的问题还需要好好看看。</p>\n<p>2。本想对比着买个Nike Fuel vs Fitbit flex vs Jawbone up2。结果发现财力有点缺陷。。。考虑着弄个国产百度的咕咚好了。看了大多的评论结果一致是，nike的功能单一但是如果只是跑步那心率和测步还不错。up返修率太高，但是心率检测比较到位，flex功能最强大，各种运动的能量消耗能好计算，电池时间也不错。就是，就是都太小贵了。还是考虑上股东手环吧。</p>\n<p>3。315晚会，没什么新意的坑爹伎俩了，最重要是的新消法的出台还是比较看好的。个人和组织的力量终于被法律认同了。鱼肝油，内燃车，尼康，炒白银，额，都跟哥没什么干系吧。不过，恶意后台木马和风控自动系统的程序猿呐，良心呐!</p>\n<p>继续运动！！两天一次不能再断了。</p>"}],"PostAsset":[],"PostCategory":[{"post_id":"cio8sn7jw0001uco4wbl2tuut","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7km000duco4zf29uphy"},{"post_id":"cio8sn7k40003uco4jrh6yzud","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7kt000juco4zi924r96"},{"post_id":"cio8sn7l4000wuco4q8etku7h","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7lj0015uco4ce80vpl9"},{"post_id":"cio8sn7k80006uco4x6ccokov","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7m8001ouco4g0k69fg9"},{"post_id":"cio8sn7k80006uco4x6ccokov","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7md001suco4uh2cito8"},{"post_id":"cio8sn7m0001muco4winm7avh","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7mh001vuco4epp18by9"},{"post_id":"cio8sn7m0001muco4winm7avh","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7mj0020uco4iy4omzvu"},{"post_id":"cio8sn7ku000kuco4i0nq45a5","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7mm0023uco40769q60h"},{"post_id":"cio8sn7ku000kuco4i0nq45a5","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7mp0028uco4vmrvkv16"},{"post_id":"cio8sn7m5001nuco4d54dxhj3","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7mr002buco49vsbsgmh"},{"post_id":"cio8sn7m5001nuco4d54dxhj3","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7n4002fuco42qu994cb"},{"post_id":"cio8sn7m9001ruco4obz1ossx","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7n6002juco4y5llb6zg"},{"post_id":"cio8sn7m9001ruco4obz1ossx","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7n8002muco413prh1yx"},{"post_id":"cio8sn7kx000ouco4yssbow2c","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7na002puco4o5nhp4is"},{"post_id":"cio8sn7kx000ouco4yssbow2c","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7nc002tuco4s14y3gg6"},{"post_id":"cio8sn7me001uuco4cgo8wqxm","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7ne002wuco45wj5s2we"},{"post_id":"cio8sn7me001uuco4cgo8wqxm","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7nh0030uco4ecg4wwf7"},{"post_id":"cio8sn7mh001yuco46pq0uu5d","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7nn0034uco43510gvxt"},{"post_id":"cio8sn7mh001yuco46pq0uu5d","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7nr0038uco4r5mvnx9f"},{"post_id":"cio8sn7kb0007uco4uahmwo6p","category_id":"cio8sn7kv000muco41giom107","_id":"cio8sn7nt003auco4j51n3bt4"},{"post_id":"cio8sn7kb0007uco4uahmwo6p","category_id":"cio8sn7mh001xuco4ksspexlx","_id":"cio8sn7nx003fuco40ru5cp86"},{"post_id":"cio8sn7mn0025uco4le39dmuj","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7o1003iuco4ss14apzx"},{"post_id":"cio8sn7kz000quco4a6eclqbw","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7o3003nuco4cl1bp1au"},{"post_id":"cio8sn7kz000quco4a6eclqbw","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7o6003quco4rotlve2w"},{"post_id":"cio8sn7ms002duco41y592jkn","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7o8003vuco42t272nni"},{"post_id":"cio8sn7ms002duco41y592jkn","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7on003xuco4xkwj7fl7"},{"post_id":"cio8sn7l2000uuco4rkoj23he","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7ov0042uco44q6fm8dd"},{"post_id":"cio8sn7l2000uuco4rkoj23he","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7ox0045uco4soi77w7r"},{"post_id":"cio8sn7n4002huco48p4r6rwi","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7oz0049uco4bv3sxd8l"},{"post_id":"cio8sn7n4002huco48p4r6rwi","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7p2004duco46ucp9ydh"},{"post_id":"cio8sn7n6002kuco4ko5tp6e1","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7p5004huco4pmoabu6b"},{"post_id":"cio8sn7n6002kuco4ko5tp6e1","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7p8004luco4glqvpz3a"},{"post_id":"cio8sn7ke0009uco4fogw0bi9","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7pc004puco4irk5eswn"},{"post_id":"cio8sn7ke0009uco4fogw0bi9","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7pf004suco4wbq5x14c"},{"post_id":"cio8sn7n8002ouco4zjdhpxk0","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7pi004vuco450cmuwey"},{"post_id":"cio8sn7n8002ouco4zjdhpxk0","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7pk004zuco4sgz0aztq"},{"post_id":"cio8sn7na002quco4pp3n47jn","category_id":"cio8sn7kv000muco41giom107","_id":"cio8sn7pm0053uco42tnuczjy"},{"post_id":"cio8sn7na002quco4pp3n47jn","category_id":"cio8sn7mh001xuco4ksspexlx","_id":"cio8sn7pp0057uco4roacek6q"},{"post_id":"cio8sn7la000zuco45yisbgtb","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7ps005buco40v1hrds5"},{"post_id":"cio8sn7la000zuco45yisbgtb","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7pu005fuco48mvb2zh2"},{"post_id":"cio8sn7nc002uuco4iomzjnch","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7pw005juco4bhciopdb"},{"post_id":"cio8sn7nc002uuco4iomzjnch","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7q1005nuco4a2rxwdfk"},{"post_id":"cio8sn7nf002yuco472tweta9","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7q4005ruco4j2qiwc1r"},{"post_id":"cio8sn7nf002yuco472tweta9","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7q5005uuco4qmnaj17y"},{"post_id":"cio8sn7kh000cuco4y754qa0g","category_id":"cio8sn7kv000muco41giom107","_id":"cio8sn7q9005yuco4ifn0lksj"},{"post_id":"cio8sn7kh000cuco4y754qa0g","category_id":"cio8sn7mh001xuco4ksspexlx","_id":"cio8sn7qb0062uco4b6z51pcz"},{"post_id":"cio8sn7nn0036uco4xxbe5p02","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7qe0066uco4rx7zoxqm"},{"post_id":"cio8sn7lh0011uco4j5asp58u","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7qh006auco4tbv41l99"},{"post_id":"cio8sn7lh0011uco4j5asp58u","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7ql006euco4f4ah5izt"},{"post_id":"cio8sn7nr0039uco423aztogq","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7qn006iuco43jpnvcar"},{"post_id":"cio8sn7nr0039uco423aztogq","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7qp006muco44g6jkpld"},{"post_id":"cio8sn7nu003cuco4p9679ymo","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7qq006quco4aqj8orye"},{"post_id":"cio8sn7nu003cuco4p9679ymo","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7qs006uuco4ajb6z4tu"},{"post_id":"cio8sn7lj0016uco4ppijy0bi","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7qv006yuco4wabjd649"},{"post_id":"cio8sn7lj0016uco4ppijy0bi","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7qy0071uco4u9l7fsxi"},{"post_id":"cio8sn7o4003ouco4s4shzanv","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7r00075uco4s4hnutiv"},{"post_id":"cio8sn7kn000fuco4zuspf6ql","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7r40077uco4omi93lt6"},{"post_id":"cio8sn7kn000fuco4zuspf6ql","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7r6007cuco40noeie1g"},{"post_id":"cio8sn7o6003ruco4popwxr5a","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7r8007euco4ag388y6t"},{"post_id":"cio8sn7o6003ruco4popwxr5a","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7r9007iuco44nes1r9l"},{"post_id":"cio8sn7o8003wuco4hd1cc2v7","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7rb007luco4vnb3004s"},{"post_id":"cio8sn7ov0043uco4sytuuysp","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7rd007quco4f4lzm3x3"},{"post_id":"cio8sn7ln001buco48n7afo4i","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7re007tuco4wtyel0f7"},{"post_id":"cio8sn7ln001buco48n7afo4i","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7rj007yuco4j7xs4z1j"},{"post_id":"cio8sn7oy0046uco46ovbz0s2","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7rl0081uco4iy62edey"},{"post_id":"cio8sn7p0004buco47qxpkiqe","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7rn0085uco48jx4pcqy"},{"post_id":"cio8sn7kr000iuco4yqrmodi0","category_id":"cio8sn7kv000muco41giom107","_id":"cio8sn7rp0089uco4y38b6gqo"},{"post_id":"cio8sn7kr000iuco4yqrmodi0","category_id":"cio8sn7mh001xuco4ksspexlx","_id":"cio8sn7rs008duco45347fz6y"},{"post_id":"cio8sn7p9004muco4zh1bd1ij","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7ru008huco4znh1ovkj"},{"post_id":"cio8sn7pg004tuco48tt9n2x0","category_id":"cio8sn7kv000muco41giom107","_id":"cio8sn7rx008luco4j946qrvx"},{"post_id":"cio8sn7pg004tuco48tt9n2x0","category_id":"cio8sn7mh001xuco4ksspexlx","_id":"cio8sn7rz008puco4t3le7ket"},{"post_id":"cio8sn7pm0054uco4l6jskjxl","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7s1008suco4g4z1ftpq"},{"post_id":"cio8sn7pp0058uco4pkpxykr6","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7s3008wuco4cgclkrjf"},{"post_id":"cio8sn7ps005cuco4zjje1cse","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7s5008zuco4evekqf3x"},{"post_id":"cio8sn7pu005guco41nu18y7r","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7s60093uco4m4nvanmv"},{"post_id":"cio8sn7px005kuco4vm18k8xp","category_id":"cio8sn7kv000muco41giom107","_id":"cio8sn7s70096uco40duwt85e"},{"post_id":"cio8sn7px005kuco4vm18k8xp","category_id":"cio8sn7mh001xuco4ksspexlx","_id":"cio8sn7sa0099uco4f6lnccgu"},{"post_id":"cio8sn7q2005ouco4hi7cn5d7","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7sc009duco45hsigdgf"},{"post_id":"cio8sn7q4005suco4aotrq8e6","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7sf009guco4bnpq5ht5"},{"post_id":"cio8sn7q6005wuco4cz6figzv","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7sh009kuco44qworov0"},{"post_id":"cio8sn7q90060uco4qkofiqax","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7si009nuco4d6t6q2xc"},{"post_id":"cio8sn7q90060uco4qkofiqax","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7sk009ruco4mmh0z5cn"},{"post_id":"cio8sn7qb0064uco44xhzd64c","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7sl009uuco4b2l88g2c"},{"post_id":"cio8sn7p3004euco4pc6rcly3","category_id":"cio8sn7o7003suco48w91hhrk","_id":"cio8sn7sn009yuco43720q3to"},{"post_id":"cio8sn7p3004euco4pc6rcly3","category_id":"cio8sn7q9005zuco4p234uruy","_id":"cio8sn7so00a1uco4nx60ol6j"},{"post_id":"cio8sn7qe0067uco4dlne288r","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7st00a5uco4m6d8sf19"},{"post_id":"cio8sn7qh006cuco4yhwwalec","category_id":"cio8sn7o7003suco48w91hhrk","_id":"cio8sn7su00a7uco4eq6tw7ca"},{"post_id":"cio8sn7qh006cuco4yhwwalec","category_id":"cio8sn7q9005zuco4p234uruy","_id":"cio8sn7su00aauco4giu6d916"},{"post_id":"cio8sn7ql006fuco4bysz62c5","category_id":"cio8sn7o7003suco48w91hhrk","_id":"cio8sn7su00acuco4ez58lqg0"},{"post_id":"cio8sn7ql006fuco4bysz62c5","category_id":"cio8sn7q9005zuco4p234uruy","_id":"cio8sn7sv00afuco4o7bozvqr"},{"post_id":"cio8sn7lq001duco41t0bbso2","category_id":"cio8sn7o7003suco48w91hhrk","_id":"cio8sn7sv00ahuco49we1ycj7"},{"post_id":"cio8sn7lq001duco41t0bbso2","category_id":"cio8sn7q9005zuco4p234uruy","_id":"cio8sn7sw00ajuco4m9ctfblx"},{"post_id":"cio8sn7qn006juco4ro38twny","category_id":"cio8sn7o7003suco48w91hhrk","_id":"cio8sn7sw00amuco461zloya9"},{"post_id":"cio8sn7qn006juco4ro38twny","category_id":"cio8sn7q9005zuco4p234uruy","_id":"cio8sn7sw00aouco4j2ktmgel"},{"post_id":"cio8sn7qp006nuco4qbrbd6gn","category_id":"cio8sn7o7003suco48w91hhrk","_id":"cio8sn7sx00aruco4vl9zw231"},{"post_id":"cio8sn7qp006nuco4qbrbd6gn","category_id":"cio8sn7q9005zuco4p234uruy","_id":"cio8sn7sx00atuco4bxexyplm"},{"post_id":"cio8sn7pd004ruco49uwum0js","category_id":"cio8sn7o7003suco48w91hhrk","_id":"cio8sn7sy00awuco4fl1wk9pg"},{"post_id":"cio8sn7pd004ruco49uwum0js","category_id":"cio8sn7q9005zuco4p234uruy","_id":"cio8sn7sy00ayuco44kkieqkq"},{"post_id":"cio8sn7qr006ruco4wuqzllur","category_id":"cio8sn7o7003suco48w91hhrk","_id":"cio8sn7sy00b1uco4n0i25t3s"},{"post_id":"cio8sn7qr006ruco4wuqzllur","category_id":"cio8sn7q9005zuco4p234uruy","_id":"cio8sn7sz00b3uco4f8mqokri"},{"post_id":"cio8sn7qt006vuco480j17kqy","category_id":"cio8sn7o7003suco48w91hhrk","_id":"cio8sn7sz00b5uco4slq1jc77"},{"post_id":"cio8sn7qt006vuco480j17kqy","category_id":"cio8sn7q9005zuco4p234uruy","_id":"cio8sn7t000b8uco4uwszktf3"},{"post_id":"cio8sn7lw001huco48bzqcuc1","category_id":"cio8sn7o7003suco48w91hhrk","_id":"cio8sn7t000b9uco4141u9oj9"},{"post_id":"cio8sn7lw001huco48bzqcuc1","category_id":"cio8sn7q9005zuco4p234uruy","_id":"cio8sn7t000bcuco4dbt89ve2"},{"post_id":"cio8sn7qw006zuco45h26ctkm","category_id":"cio8sn7o7003suco48w91hhrk","_id":"cio8sn7t100bduco47lc1gbdg"},{"post_id":"cio8sn7qw006zuco45h26ctkm","category_id":"cio8sn7q9005zuco4p234uruy","_id":"cio8sn7t100bfuco42opgl203"},{"post_id":"cio8sn7qz0072uco41j4t56qz","category_id":"cio8sn7o7003suco48w91hhrk","_id":"cio8sn7t100bhuco43tn7us2c"},{"post_id":"cio8sn7qz0072uco41j4t56qz","category_id":"cio8sn7q9005zuco4p234uruy","_id":"cio8sn7t200bjuco4gbmj397u"},{"post_id":"cio8sn7pi004wuco4v0oehfzf","category_id":"cio8sn7o7003suco48w91hhrk","_id":"cio8sn7t200bluco4wy8gyw6r"},{"post_id":"cio8sn7pi004wuco4v0oehfzf","category_id":"cio8sn7q9005zuco4p234uruy","_id":"cio8sn7t200bnuco4j3qpwdgl"},{"post_id":"cio8sn7r10076uco4vda7qdpy","category_id":"cio8sn7o7003suco48w91hhrk","_id":"cio8sn7t300bpuco43syee61g"},{"post_id":"cio8sn7r10076uco4vda7qdpy","category_id":"cio8sn7q9005zuco4p234uruy","_id":"cio8sn7t300bsuco4ny1alu16"},{"post_id":"cio8sn7r50079uco4b0hw8ffu","category_id":"cio8sn7o7003suco48w91hhrk","_id":"cio8sn7t300buuco4g91k84rx"},{"post_id":"cio8sn7r50079uco4b0hw8ffu","category_id":"cio8sn7q9005zuco4p234uruy","_id":"cio8sn7t400bxuco4yv2qomt5"},{"post_id":"cio8sn7r6007duco428o0c6sk","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7t400bzuco4bl8cg81n"},{"post_id":"cio8sn7ly001juco4h7ed2tje","category_id":"cio8sn7ph004uuco4m53b9x8s","_id":"cio8sn7t400c0uco436l95932"},{"post_id":"cio8sn7ly001juco4h7ed2tje","category_id":"cio8sn7r5007auco4gorz35dg","_id":"cio8sn7t500c2uco474mwdtk3"},{"post_id":"cio8sn7r8007guco4agvnwzlz","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7t500c3uco4yzzkue8j"},{"post_id":"cio8sn7ra007kuco470662hmy","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7t500c5uco4qhl07shg"},{"post_id":"cio8sn7pk0050uco4xsnm1kkl","category_id":"cio8sn7ph004uuco4m53b9x8s","_id":"cio8sn7t600c7uco41za5na5s"},{"post_id":"cio8sn7pk0050uco4xsnm1kkl","category_id":"cio8sn7r5007auco4gorz35dg","_id":"cio8sn7t700cauco4fo1v37gu"},{"post_id":"cio8sn7rb007muco4w4qwmsvb","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7t700ccuco4ao4b3un5"},{"post_id":"cio8sn7rd007ruco4phh0wd90","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7t800ceuco42cuur0br"},{"post_id":"cio8sn7mk0022uco4aforhncm","category_id":"cio8sn7ph004uuco4m53b9x8s","_id":"cio8sn7t800cguco45uzyal3c"},{"post_id":"cio8sn7mk0022uco4aforhncm","category_id":"cio8sn7r5007auco4gorz35dg","_id":"cio8sn7t900ciuco4xyzwgffz"},{"post_id":"cio8sn7rf007uuco4fpvjlqqu","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7t900cjuco4femi108w"},{"post_id":"cio8sn7rj007zuco4rs62awvj","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7ta00cluco43dq0f4zr"},{"post_id":"cio8sn7rj007zuco4rs62awvj","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7ta00cnuco4kv5m2ihz"},{"post_id":"cio8sn7ny003guco4ymzt31li","category_id":"cio8sn7o7003suco48w91hhrk","_id":"cio8sn7ta00cquco441ud7rw3"},{"post_id":"cio8sn7ny003guco4ymzt31li","category_id":"cio8sn7q9005zuco4p234uruy","_id":"cio8sn7tb00cruco4qwferhdz"},{"post_id":"cio8sn7rl0082uco4a1jus2t1","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7tb00ctuco4x498iuf3"},{"post_id":"cio8sn7rn0087uco4lu0sa39p","category_id":"cio8sn7kv000muco41giom107","_id":"cio8sn7tb00cvuco401rfmcr7"},{"post_id":"cio8sn7rn0087uco4lu0sa39p","category_id":"cio8sn7mh001xuco4ksspexlx","_id":"cio8sn7tc00cyuco4qdf4ftof"},{"post_id":"cio8sn7o2003kuco4w3ycwgal","category_id":"cio8sn7o7003suco48w91hhrk","_id":"cio8sn7tc00d0uco4izupyfb7"},{"post_id":"cio8sn7o2003kuco4w3ycwgal","category_id":"cio8sn7q9005zuco4p234uruy","_id":"cio8sn7td00d2uco45ivjlpp1"},{"post_id":"cio8sn7rq008auco43m1axq7u","category_id":"cio8sn7o7003suco48w91hhrk","_id":"cio8sn7td00d3uco4tqp2ht0m"},{"post_id":"cio8sn7rq008auco43m1axq7u","category_id":"cio8sn7q9005zuco4p234uruy","_id":"cio8sn7te00d5uco4rchi6o1k"},{"post_id":"cio8sn7rt008fuco4rof8grdi","category_id":"cio8sn7kp000guco4el25px95","_id":"cio8sn7te00d6uco4keb9nnil"},{"post_id":"cio8sn7rt008fuco4rof8grdi","category_id":"cio8sn7lt001euco4uqvqvptk","_id":"cio8sn7te00d8uco4lsgwfred"},{"post_id":"cio8sn7lk0018uco437orm6s7","category_id":"cio8sn7o7003suco48w91hhrk","_id":"cio8sn7tf00dauco426unw88g"},{"post_id":"cio8sn7lk0018uco437orm6s7","category_id":"cio8sn7q3005quco49cljsxnh","_id":"cio8sn7tf00dduco4xh5udjpl"},{"post_id":"cio8sn7lk0018uco437orm6s7","category_id":"cio8sn7rs008buco45bqqs5pc","_id":"cio8sn7tf00dfuco4q2izvbhq"},{"post_id":"cio8sn7rv008iuco4g67zvnk7","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7tg00diuco4uqzxg03i"},{"post_id":"cio8sn7ry008muco4koijrqli","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7tg00dkuco4tong4akv"},{"post_id":"cio8sn7p6004juco48wrzsam5","category_id":"cio8sn7ph004uuco4m53b9x8s","_id":"cio8sn7th00dluco4j73qidlt"},{"post_id":"cio8sn7p6004juco48wrzsam5","category_id":"cio8sn7r5007auco4gorz35dg","_id":"cio8sn7th00douco4hq1fckqd"},{"post_id":"cio8sn7s0008quco4y0ia8l32","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7th00dquco4sqx2vbm1"},{"post_id":"cio8sn7s1008tuco4xt7t24da","category_id":"cio8sn7kv000muco41giom107","_id":"cio8sn7ti00dsuco44913vvix"},{"post_id":"cio8sn7s1008tuco4xt7t24da","category_id":"cio8sn7mh001xuco4ksspexlx","_id":"cio8sn7ti00dtuco46py30fzx"},{"post_id":"cio8sn7s3008xuco4r4zcpnrs","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7ti00dvuco4v0gncpk0"},{"post_id":"cio8sn7s50090uco4tdn1ycfl","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7tj00dwuco4lfam64ew"},{"post_id":"cio8sn7s60094uco456biy5v4","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7tj00dyuco432q0f3h2"},{"post_id":"cio8sn7s80097uco4jq55myhh","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7tj00dzuco4rdm4w849"},{"post_id":"cio8sn7sb009buco4n4hvnur9","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7tj00e0uco4m1jltos1"},{"post_id":"cio8sn7sc009euco4f902maum","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7tk00e2uco4f86u9crp"},{"post_id":"cio8sn7sf009iuco4mtgpatje","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7tk00e3uco42drdz2qf"},{"post_id":"cio8sn7sh009luco4cuqjnekc","category_id":"cio8sn7o7003suco48w91hhrk","_id":"cio8sn7tk00e5uco4nalgpf1w"},{"post_id":"cio8sn7sh009luco4cuqjnekc","category_id":"cio8sn7q9005zuco4p234uruy","_id":"cio8sn7tk00e6uco4cdviying"},{"post_id":"cio8sn7si009puco4ft6weeut","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7tl00e8uco4lmnln90e"},{"post_id":"cio8sn7sk009suco4qr3xysh6","category_id":"cio8sn7o7003suco48w91hhrk","_id":"cio8sn7tl00e9uco4g5dd1bsh"},{"post_id":"cio8sn7sk009suco4qr3xysh6","category_id":"cio8sn7q9005zuco4p234uruy","_id":"cio8sn7tl00ebuco42n35ydlr"},{"post_id":"cio8sn7sm009wuco4espm8xlo","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7tm00educo4nf8wbbh3"},{"post_id":"cio8sn7sn009zuco4mvrpfhka","category_id":"cio8sn7o7003suco48w91hhrk","_id":"cio8sn7tm00efuco4bzw3ck8t"},{"post_id":"cio8sn7sn009zuco4mvrpfhka","category_id":"cio8sn7q9005zuco4p234uruy","_id":"cio8sn7tn00eiuco4vq965pi0"},{"post_id":"cio8sn7sp00a2uco4ncl89ma1","category_id":"cio8sn7k80005uco4rh5r71io","_id":"cio8sn7tn00ekuco4xu4llgcc"}],"PostTag":[{"post_id":"cio8sn7jw0001uco4wbl2tuut","tag_id":"cio8sn7k50004uco4yp8im95d","_id":"cio8sn7kh000buco4n805efp2"},{"post_id":"cio8sn7k40003uco4jrh6yzud","tag_id":"cio8sn7k50004uco4yp8im95d","_id":"cio8sn7kq000huco4dtv9imx8"},{"post_id":"cio8sn7kr000iuco4yqrmodi0","tag_id":"cio8sn7km000euco4sx9c6v97","_id":"cio8sn7kw000nuco45t6wcf68"},{"post_id":"cio8sn7k80006uco4x6ccokov","tag_id":"cio8sn7km000euco4sx9c6v97","_id":"cio8sn7kz000puco4bjjcxdaa"},{"post_id":"cio8sn7ku000kuco4i0nq45a5","tag_id":"cio8sn7km000euco4sx9c6v97","_id":"cio8sn7l1000suco4rj7jtvat"},{"post_id":"cio8sn7kx000ouco4yssbow2c","tag_id":"cio8sn7km000euco4sx9c6v97","_id":"cio8sn7l3000vuco4btl3if2q"},{"post_id":"cio8sn7kb0007uco4uahmwo6p","tag_id":"cio8sn7km000euco4sx9c6v97","_id":"cio8sn7lg0010uco43ae0xjmh"},{"post_id":"cio8sn7kb0007uco4uahmwo6p","tag_id":"cio8sn7l0000ruco4nye3p4yh","_id":"cio8sn7li0012uco4uruegp04"},{"post_id":"cio8sn7la000zuco45yisbgtb","tag_id":"cio8sn7km000euco4sx9c6v97","_id":"cio8sn7lk0017uco4wfsrola2"},{"post_id":"cio8sn7ke0009uco4fogw0bi9","tag_id":"cio8sn7l7000xuco4zzq6b2oh","_id":"cio8sn7lq001cuco40va52t7z"},{"post_id":"cio8sn7ke0009uco4fogw0bi9","tag_id":"cio8sn7lj0014uco4e9udlhdk","_id":"cio8sn7lu001fuco45lvumjj6"},{"post_id":"cio8sn7kh000cuco4y754qa0g","tag_id":"cio8sn7km000euco4sx9c6v97","_id":"cio8sn7lx001iuco4zzu3me84"},{"post_id":"cio8sn7kn000fuco4zuspf6ql","tag_id":"cio8sn7km000euco4sx9c6v97","_id":"cio8sn7md001tuco4wn99aaci"},{"post_id":"cio8sn7kn000fuco4zuspf6ql","tag_id":"cio8sn7l7000xuco4zzq6b2oh","_id":"cio8sn7mh001wuco4so0pjgnj"},{"post_id":"cio8sn7m9001ruco4obz1ossx","tag_id":"cio8sn7km000euco4sx9c6v97","_id":"cio8sn7mk0021uco4ll4oeomc"},{"post_id":"cio8sn7kz000quco4a6eclqbw","tag_id":"cio8sn7m8001quco49yamjw7a","_id":"cio8sn7mn0024uco45f60bi0b"},{"post_id":"cio8sn7mk0022uco4aforhncm","tag_id":"cio8sn7km000euco4sx9c6v97","_id":"cio8sn7mq0029uco4lgbcjdr8"},{"post_id":"cio8sn7l2000uuco4rkoj23he","tag_id":"cio8sn7mj001zuco48ia78cd8","_id":"cio8sn7ms002cuco4nq7gunsr"},{"post_id":"cio8sn7l4000wuco4q8etku7h","tag_id":"cio8sn7mp0027uco4ss5w3h4d","_id":"cio8sn7n5002iuco42kx8joe5"},{"post_id":"cio8sn7n8002ouco4zjdhpxk0","tag_id":"cio8sn7n4002guco4rrpz09ae","_id":"cio8sn7nc002suco47y73qm0l"},{"post_id":"cio8sn7lh0011uco4j5asp58u","tag_id":"cio8sn7n4002guco4rrpz09ae","_id":"cio8sn7nf002xuco4p4w2yyen"},{"post_id":"cio8sn7lh0011uco4j5asp58u","tag_id":"cio8sn7n8002nuco4j7v3c5ga","_id":"cio8sn7nh0031uco4mort3a1w"},{"post_id":"cio8sn7nf002yuco472tweta9","tag_id":"cio8sn7mj001zuco48ia78cd8","_id":"cio8sn7nn0035uco4n07bzhir"},{"post_id":"cio8sn7lj0016uco4ppijy0bi","tag_id":"cio8sn7ne002vuco4rkgve85e","_id":"cio8sn7nw003euco4y6avymlz"},{"post_id":"cio8sn7lj0016uco4ppijy0bi","tag_id":"cio8sn7nl0033uco4na31nq8d","_id":"cio8sn7o0003huco4ygsiwdq4"},{"post_id":"cio8sn7nu003cuco4p9679ymo","tag_id":"cio8sn7km000euco4sx9c6v97","_id":"cio8sn7o3003muco4ldmo8cbx"},{"post_id":"cio8sn7nu003cuco4p9679ymo","tag_id":"cio8sn7l7000xuco4zzq6b2oh","_id":"cio8sn7o6003puco4il5gd9uh"},{"post_id":"cio8sn7nu003cuco4p9679ymo","tag_id":"cio8sn7m8001quco49yamjw7a","_id":"cio8sn7o8003uuco48ngdu955"},{"post_id":"cio8sn7o8003wuco4hd1cc2v7","tag_id":"cio8sn7lj0014uco4e9udlhdk","_id":"cio8sn7ou0041uco4zmrmw0lu"},{"post_id":"cio8sn7lk0018uco437orm6s7","tag_id":"cio8sn7nt003buco4sr8xcgsu","_id":"cio8sn7ox0044uco42404i9h6"},{"post_id":"cio8sn7lk0018uco437orm6s7","tag_id":"cio8sn7o1003juco47i75zouw","_id":"cio8sn7oz0048uco4t09ywd6t"},{"post_id":"cio8sn7lk0018uco437orm6s7","tag_id":"cio8sn7o7003tuco44w6u53tx","_id":"cio8sn7p1004cuco4ahhikj84"},{"post_id":"cio8sn7ln001buco48n7afo4i","tag_id":"cio8sn7ou0040uco4fja1sehz","_id":"cio8sn7p5004guco492mbvtjl"},{"post_id":"cio8sn7p3004euco4pc6rcly3","tag_id":"cio8sn7km000euco4sx9c6v97","_id":"cio8sn7p8004kuco40la28od8"},{"post_id":"cio8sn7p3004euco4pc6rcly3","tag_id":"cio8sn7m8001quco49yamjw7a","_id":"cio8sn7pc004ouco4j7lwmupb"},{"post_id":"cio8sn7pg004tuco48tt9n2x0","tag_id":"cio8sn7lj0014uco4e9udlhdk","_id":"cio8sn7pk004yuco49zes5vdv"},{"post_id":"cio8sn7lq001duco41t0bbso2","tag_id":"cio8sn7p0004auco4qghp7rc0","_id":"cio8sn7pl0051uco438kpjn08"},{"post_id":"cio8sn7lq001duco41t0bbso2","tag_id":"cio8sn7o1003juco47i75zouw","_id":"cio8sn7po0056uco4ng1t84e9"},{"post_id":"cio8sn7lq001duco41t0bbso2","tag_id":"cio8sn7pd004quco4oylndrx7","_id":"cio8sn7pr0059uco43exfdv2v"},{"post_id":"cio8sn7lw001huco48bzqcuc1","tag_id":"cio8sn7pj004xuco4jlrpqw60","_id":"cio8sn7pu005euco4kw86y0fg"},{"post_id":"cio8sn7pm0054uco4l6jskjxl","tag_id":"cio8sn7lj0014uco4e9udlhdk","_id":"cio8sn7pv005huco4h6e7y0an"},{"post_id":"cio8sn7pp0058uco4pkpxykr6","tag_id":"cio8sn7lj0014uco4e9udlhdk","_id":"cio8sn7q1005muco4xcaqmi14"},{"post_id":"cio8sn7m0001muco4winm7avh","tag_id":"cio8sn7km000euco4sx9c6v97","_id":"cio8sn7q3005puco4sn9z76hk"},{"post_id":"cio8sn7m0001muco4winm7avh","tag_id":"cio8sn7n4002guco4rrpz09ae","_id":"cio8sn7q5005tuco4ipnx0xjz"},{"post_id":"cio8sn7m5001nuco4d54dxhj3","tag_id":"cio8sn7km000euco4sx9c6v97","_id":"cio8sn7q8005xuco4f98nxq8v"},{"post_id":"cio8sn7m5001nuco4d54dxhj3","tag_id":"cio8sn7n4002guco4rrpz09ae","_id":"cio8sn7qb0061uco43v2y17q1"},{"post_id":"cio8sn7q2005ouco4hi7cn5d7","tag_id":"cio8sn7lj0014uco4e9udlhdk","_id":"cio8sn7qe0065uco4xy3vzpzn"},{"post_id":"cio8sn7q4005suco4aotrq8e6","tag_id":"cio8sn7lj0014uco4e9udlhdk","_id":"cio8sn7qg0069uco457c96v99"},{"post_id":"cio8sn7q6005wuco4cz6figzv","tag_id":"cio8sn7lj0014uco4e9udlhdk","_id":"cio8sn7qk006duco45emmhwdp"},{"post_id":"cio8sn7me001uuco4cgo8wqxm","tag_id":"cio8sn7q0005luco40kvuodo2","_id":"cio8sn7qn006huco4u8m2mgq0"},{"post_id":"cio8sn7me001uuco4cgo8wqxm","tag_id":"cio8sn7n4002guco4rrpz09ae","_id":"cio8sn7qo006luco4fd8ehsiy"},{"post_id":"cio8sn7mh001yuco46pq0uu5d","tag_id":"cio8sn7qb0063uco4htvcq6ak","_id":"cio8sn7qq006puco4j7p1zj7a"},{"post_id":"cio8sn7mh001yuco46pq0uu5d","tag_id":"cio8sn7qh006buco4onkv1ijl","_id":"cio8sn7qs006tuco4ljnwwxog"},{"post_id":"cio8sn7mn0025uco4le39dmuj","tag_id":"cio8sn7qo006kuco4mi70gd5t","_id":"cio8sn7qv006xuco44hh8jlkw"},{"post_id":"cio8sn7ms002duco41y592jkn","tag_id":"cio8sn7n4002guco4rrpz09ae","_id":"cio8sn7r00074uco4nh00pcn8"},{"post_id":"cio8sn7n4002huco48p4r6rwi","tag_id":"cio8sn7qy0070uco48y1nd0ih","_id":"cio8sn7r6007buco4d844ps21"},{"post_id":"cio8sn7n6002kuco4ko5tp6e1","tag_id":"cio8sn7r40078uco41s0tkt0l","_id":"cio8sn7ra007juco44qg18ke0"},{"post_id":"cio8sn7ra007kuco470662hmy","tag_id":"cio8sn7lj0014uco4e9udlhdk","_id":"cio8sn7rd007puco4m4zfpl15"},{"post_id":"cio8sn7rb007muco4w4qwmsvb","tag_id":"cio8sn7lj0014uco4e9udlhdk","_id":"cio8sn7re007suco44lv4n7w3"},{"post_id":"cio8sn7rd007ruco4phh0wd90","tag_id":"cio8sn7lj0014uco4e9udlhdk","_id":"cio8sn7rj007xuco4c2eldtdy"},{"post_id":"cio8sn7na002quco4pp3n47jn","tag_id":"cio8sn7r8007fuco49ouo43t6","_id":"cio8sn7rl0080uco4nzahzukl"},{"post_id":"cio8sn7na002quco4pp3n47jn","tag_id":"cio8sn7rc007nuco418cgzflj","_id":"cio8sn7rn0084uco40qhrjgcs"},{"post_id":"cio8sn7rf007uuco4fpvjlqqu","tag_id":"cio8sn7lj0014uco4e9udlhdk","_id":"cio8sn7rp0088uco4rskw4b47"},{"post_id":"cio8sn7nc002uuco4iomzjnch","tag_id":"cio8sn7ri007wuco47se7oebz","_id":"cio8sn7rs008cuco4hgruizg2"},{"post_id":"cio8sn7rq008auco43m1axq7u","tag_id":"cio8sn7nt003buco4sr8xcgsu","_id":"cio8sn7ru008guco49w4kezot"},{"post_id":"cio8sn7rq008auco43m1axq7u","tag_id":"cio8sn7p0004auco4qghp7rc0","_id":"cio8sn7rx008juco4oisroz59"},{"post_id":"cio8sn7rq008auco43m1axq7u","tag_id":"cio8sn7pd004quco4oylndrx7","_id":"cio8sn7rz008ouco4lisdse4d"},{"post_id":"cio8sn7rq008auco43m1axq7u","tag_id":"cio8sn7o7003tuco44w6u53tx","_id":"cio8sn7s1008ruco41pexatoz"},{"post_id":"cio8sn7nr0039uco423aztogq","tag_id":"cio8sn7rn0086uco41jh0w6oh","_id":"cio8sn7s3008vuco4z54gjbb2"},{"post_id":"cio8sn7rv008iuco4g67zvnk7","tag_id":"cio8sn7lj0014uco4e9udlhdk","_id":"cio8sn7s4008yuco4p6m2vybo"},{"post_id":"cio8sn7s0008quco4y0ia8l32","tag_id":"cio8sn7qy0070uco48y1nd0ih","_id":"cio8sn7s60092uco4grmhwmcx"},{"post_id":"cio8sn7ny003guco4ymzt31li","tag_id":"cio8sn7rs008euco4286yptp1","_id":"cio8sn7s70095uco4ryiiu6lq"},{"post_id":"cio8sn7ny003guco4ymzt31li","tag_id":"cio8sn7l7000xuco4zzq6b2oh","_id":"cio8sn7sa0098uco42lrai0bp"},{"post_id":"cio8sn7ny003guco4ymzt31li","tag_id":"cio8sn7p0004auco4qghp7rc0","_id":"cio8sn7sc009cuco435hx2mel"},{"post_id":"cio8sn7ny003guco4ymzt31li","tag_id":"cio8sn7m8001quco49yamjw7a","_id":"cio8sn7se009fuco49vtkbyb1"},{"post_id":"cio8sn7s3008xuco4r4zcpnrs","tag_id":"cio8sn7lj0014uco4e9udlhdk","_id":"cio8sn7sg009juco4epo3se7l"},{"post_id":"cio8sn7s60094uco456biy5v4","tag_id":"cio8sn7lj0014uco4e9udlhdk","_id":"cio8sn7si009muco4ot39ovl2"},{"post_id":"cio8sn7o2003kuco4w3ycwgal","tag_id":"cio8sn7s2008uuco4hbk7z0ug","_id":"cio8sn7sk009quco4c6mc6k97"},{"post_id":"cio8sn7o2003kuco4w3ycwgal","tag_id":"cio8sn7s60091uco4asxuyuru","_id":"cio8sn7sl009tuco4o9rkzmpm"},{"post_id":"cio8sn7s80097uco4jq55myhh","tag_id":"cio8sn7lj0014uco4e9udlhdk","_id":"cio8sn7sn009xuco41rfld59m"},{"post_id":"cio8sn7sb009buco4n4hvnur9","tag_id":"cio8sn7qy0070uco48y1nd0ih","_id":"cio8sn7so00a0uco4sllbr7ud"},{"post_id":"cio8sn7o6003ruco4popwxr5a","tag_id":"cio8sn7ri007wuco47se7oebz","_id":"cio8sn7st00a4uco4r3d3ath6"},{"post_id":"cio8sn7sh009luco4cuqjnekc","tag_id":"cio8sn7sf009huco4sriextel","_id":"cio8sn7su00a6uco4gve14n5a"},{"post_id":"cio8sn7ov0043uco4sytuuysp","tag_id":"cio8sn7sf009huco4sriextel","_id":"cio8sn7su00a9uco4gydpk9r6"},{"post_id":"cio8sn7si009puco4ft6weeut","tag_id":"cio8sn7sf009huco4sriextel","_id":"cio8sn7su00abuco4h1trfbs6"},{"post_id":"cio8sn7sk009suco4qr3xysh6","tag_id":"cio8sn7sf009huco4sriextel","_id":"cio8sn7sv00aeuco4wssneo2i"},{"post_id":"cio8sn7sk009suco4qr3xysh6","tag_id":"cio8sn7m8001quco49yamjw7a","_id":"cio8sn7sv00aguco4rcu8boii"},{"post_id":"cio8sn7oy0046uco46ovbz0s2","tag_id":"cio8sn7lj0014uco4e9udlhdk","_id":"cio8sn7sv00aiuco4iyr7n31w"},{"post_id":"cio8sn7oy0046uco46ovbz0s2","tag_id":"cio8sn7sf009huco4sriextel","_id":"cio8sn7sw00aluco484iebr3z"},{"post_id":"cio8sn7p0004buco47qxpkiqe","tag_id":"cio8sn7sl009vuco4zqffmsqr","_id":"cio8sn7sw00anuco4wwgvjbh9"},{"post_id":"cio8sn7sp00a2uco4ncl89ma1","tag_id":"cio8sn7lj0014uco4e9udlhdk","_id":"cio8sn7sx00aquco4j7gyw8ks"},{"post_id":"cio8sn7p6004juco48wrzsam5","tag_id":"cio8sn7ss00a3uco4giw84166","_id":"cio8sn7sx00asuco4qff9cknj"},{"post_id":"cio8sn7p6004juco48wrzsam5","tag_id":"cio8sn7rc007nuco418cgzflj","_id":"cio8sn7sy00avuco4xu2owg01"},{"post_id":"cio8sn7p9004muco4zh1bd1ij","tag_id":"cio8sn7sv00aduco4cp80ui1k","_id":"cio8sn7sy00axuco4mfm1m663"},{"post_id":"cio8sn7pd004ruco49uwum0js","tag_id":"cio8sn7sw00akuco4z9slba2a","_id":"cio8sn7sy00b0uco4g8s3na67"},{"post_id":"cio8sn7pi004wuco4v0oehfzf","tag_id":"cio8sn7sw00apuco4m0baoxvx","_id":"cio8sn7sz00b2uco492qmidgv"},{"post_id":"cio8sn7pk0050uco4xsnm1kkl","tag_id":"cio8sn7sx00auuco4e6ljhfsq","_id":"cio8sn7sz00b4uco4sz1ewk29"},{"post_id":"cio8sn7ps005cuco4zjje1cse","tag_id":"cio8sn7sy00azuco4e9mxp6q8","_id":"cio8sn7t000b7uco4ua1lx1t7"},{"post_id":"cio8sn7pu005guco41nu18y7r","tag_id":"cio8sn7sy00azuco4e9mxp6q8","_id":"cio8sn7t000bbuco4a0tfhqef"},{"post_id":"cio8sn7px005kuco4vm18k8xp","tag_id":"cio8sn7t000bauco4nhe108cq","_id":"cio8sn7t100bguco47rcb69f7"},{"post_id":"cio8sn7q90060uco4qkofiqax","tag_id":"cio8sn7t100beuco4jw03z1ie","_id":"cio8sn7t200bkuco4qj93i251"},{"post_id":"cio8sn7qb0064uco44xhzd64c","tag_id":"cio8sn7lj0014uco4e9udlhdk","_id":"cio8sn7t300bouco4tw65s70i"},{"post_id":"cio8sn7qb0064uco44xhzd64c","tag_id":"cio8sn7sy00azuco4e9mxp6q8","_id":"cio8sn7t300bquco4jma0vi17"},{"post_id":"cio8sn7qe0067uco4dlne288r","tag_id":"cio8sn7lj0014uco4e9udlhdk","_id":"cio8sn7t300btuco4hq7lpjat"},{"post_id":"cio8sn7qe0067uco4dlne288r","tag_id":"cio8sn7t200bmuco4621tp14i","_id":"cio8sn7t400bvuco47s1fz98u"},{"post_id":"cio8sn7qh006cuco4yhwwalec","tag_id":"cio8sn7t200bmuco4621tp14i","_id":"cio8sn7t400byuco4kemc7296"},{"post_id":"cio8sn7ql006fuco4bysz62c5","tag_id":"cio8sn7t400bwuco4tshhmt7t","_id":"cio8sn7t600c6uco4675iguoi"},{"post_id":"cio8sn7ql006fuco4bysz62c5","tag_id":"cio8sn7t500c1uco4eovqqp1r","_id":"cio8sn7t600c8uco4j383qdtt"},{"post_id":"cio8sn7qn006juco4ro38twny","tag_id":"cio8sn7t500c1uco4eovqqp1r","_id":"cio8sn7t700cbuco48vszxajy"},{"post_id":"cio8sn7qp006nuco4qbrbd6gn","tag_id":"cio8sn7t400bwuco4tshhmt7t","_id":"cio8sn7t800cfuco4x454apcw"},{"post_id":"cio8sn7qr006ruco4wuqzllur","tag_id":"cio8sn7t400bwuco4tshhmt7t","_id":"cio8sn7ta00cmuco4y30r8hy4"},{"post_id":"cio8sn7qr006ruco4wuqzllur","tag_id":"cio8sn7t500c1uco4eovqqp1r","_id":"cio8sn7ta00couco438t4uqy3"},{"post_id":"cio8sn7qt006vuco480j17kqy","tag_id":"cio8sn7t400bwuco4tshhmt7t","_id":"cio8sn7tb00cuuco4dqd2hqv7"},{"post_id":"cio8sn7qt006vuco480j17kqy","tag_id":"cio8sn7t500c1uco4eovqqp1r","_id":"cio8sn7tc00cwuco4ki3slkje"},{"post_id":"cio8sn7qw006zuco45h26ctkm","tag_id":"cio8sn7t500c1uco4eovqqp1r","_id":"cio8sn7tc00czuco4gthqmdlr"},{"post_id":"cio8sn7qz0072uco41j4t56qz","tag_id":"cio8sn7t400bwuco4tshhmt7t","_id":"cio8sn7te00d9uco4sktg1136"},{"post_id":"cio8sn7qz0072uco41j4t56qz","tag_id":"cio8sn7t500c1uco4eovqqp1r","_id":"cio8sn7tf00dbuco42jdba5kd"},{"post_id":"cio8sn7qz0072uco41j4t56qz","tag_id":"cio8sn7td00d4uco4u3r9be1r","_id":"cio8sn7tf00deuco45yw6ihnt"},{"post_id":"cio8sn7r10076uco4vda7qdpy","tag_id":"cio8sn7t500c1uco4eovqqp1r","_id":"cio8sn7tf00dguco4nslv5uo0"},{"post_id":"cio8sn7r50079uco4b0hw8ffu","tag_id":"cio8sn7tf00dcuco4jdb7xwfu","_id":"cio8sn7tg00djuco4wvoqgots"},{"post_id":"cio8sn7r6007duco428o0c6sk","tag_id":"cio8sn7lj0014uco4e9udlhdk","_id":"cio8sn7th00dnuco4x26v10md"},{"post_id":"cio8sn7r6007duco428o0c6sk","tag_id":"cio8sn7tg00dhuco4zpxy0duj","_id":"cio8sn7th00dpuco4d5eetlgm"},{"post_id":"cio8sn7rj007zuco4rs62awvj","tag_id":"cio8sn7th00dmuco4fcqdmqp8","_id":"cio8sn7tm00ecuco4lp51cd23"},{"post_id":"cio8sn7rj007zuco4rs62awvj","tag_id":"cio8sn7ti00druco4byf64zd1","_id":"cio8sn7tm00eeuco4xys8byd4"},{"post_id":"cio8sn7rj007zuco4rs62awvj","tag_id":"cio8sn7ti00duuco4cf7jh4ps","_id":"cio8sn7tm00ehuco458kyo8hn"},{"post_id":"cio8sn7rj007zuco4rs62awvj","tag_id":"cio8sn7tj00dxuco4bx825w78","_id":"cio8sn7tn00ejuco4z0ch0ccl"},{"post_id":"cio8sn7rj007zuco4rs62awvj","tag_id":"cio8sn7tj00e1uco4t6vx5x58","_id":"cio8sn7tn00emuco4w4aueyub"},{"post_id":"cio8sn7rj007zuco4rs62awvj","tag_id":"cio8sn7tk00e4uco4zxfki3uq","_id":"cio8sn7tn00enuco4lsi7yqdc"},{"post_id":"cio8sn7rj007zuco4rs62awvj","tag_id":"cio8sn7tk00e7uco4txyiu2cb","_id":"cio8sn7to00epuco4ej0d85b7"},{"post_id":"cio8sn7rl0082uco4a1jus2t1","tag_id":"cio8sn7tl00eauco4sxgaptrn","_id":"cio8sn7to00equco4mpugram6"},{"post_id":"cio8sn7rn0087uco4lu0sa39p","tag_id":"cio8sn7tf00dcuco4jdb7xwfu","_id":"cio8sn7to00esuco4ozdi914r"},{"post_id":"cio8sn7rt008fuco4rof8grdi","tag_id":"cio8sn7tn00eluco4wuteeel8","_id":"cio8sn7tp00etuco4det4r0az"},{"post_id":"cio8sn7ry008muco4koijrqli","tag_id":"cio8sn7tn00eouco475qrunz9","_id":"cio8sn7tq00evuco44zv5gcx1"},{"post_id":"cio8sn7s1008tuco4xt7t24da","tag_id":"cio8sn7tf00dcuco4jdb7xwfu","_id":"cio8sn7tq00ewuco4zp7fwtjp"},{"post_id":"cio8sn7s50090uco4tdn1ycfl","tag_id":"cio8sn7t200bmuco4621tp14i","_id":"cio8sn7ts00eyuco4zh2ng2rt"},{"post_id":"cio8sn7sf009iuco4mtgpatje","tag_id":"cio8sn7tq00exuco4wgh71080","_id":"cio8sn7ts00f0uco4tlcv5qol"},{"post_id":"cio8sn7sn009zuco4mvrpfhka","tag_id":"cio8sn7mj001zuco48ia78cd8","_id":"cio8sn7tt00f1uco4go7j36t9"},{"post_id":"cio8sn7sn009zuco4mvrpfhka","tag_id":"cio8sn7ts00ezuco438rdeo62","_id":"cio8sn7tt00f2uco46bla24d0"}],"Tag":[{"name":"年度总结","_id":"cio8sn7k50004uco4yp8im95d"},{"name":"Android","_id":"cio8sn7km000euco4sx9c6v97"},{"name":"gms","_id":"cio8sn7l0000ruco4nye3p4yh"},{"name":"mark","_id":"cio8sn7l7000xuco4zzq6b2oh"},{"name":"吐槽","_id":"cio8sn7lj0014uco4e9udlhdk"},{"name":"马克","_id":"cio8sn7m8001quco49yamjw7a"},{"name":"hadoop","_id":"cio8sn7mj001zuco48ia78cd8"},{"name":"hello","_id":"cio8sn7mp0027uco4ss5w3h4d"},{"name":"java","_id":"cio8sn7n4002guco4rrpz09ae"},{"name":"mysql","_id":"cio8sn7n8002nuco4j7v3c5ga"},{"name":"mfc","_id":"cio8sn7ne002vuco4rkgve85e"},{"name":"控制台","_id":"cio8sn7nl0033uco4na31nq8d"},{"name":"jena","_id":"cio8sn7nt003buco4sr8xcgsu"},{"name":"本体","_id":"cio8sn7o1003juco47i75zouw"},{"name":"语义网","_id":"cio8sn7o7003tuco44w6u53tx"},{"name":"sublimetext","_id":"cio8sn7ou0040uco4fja1sehz"},{"name":"ontology","_id":"cio8sn7p0004auco4qghp7rc0"},{"name":"本体论","_id":"cio8sn7pd004quco4oylndrx7"},{"name":"机器学习","_id":"cio8sn7pj004xuco4jlrpqw60"},{"name":"bae","_id":"cio8sn7q0005luco40kvuodo2"},{"name":"点云","_id":"cio8sn7qb0063uco4htvcq6ak"},{"name":"cmake","_id":"cio8sn7qh006buco4onkv1ijl"},{"name":"呵呵","_id":"cio8sn7qo006kuco4mi70gd5t"},{"name":"test","_id":"cio8sn7qy0070uco48y1nd0ih"},{"name":"erdas","_id":"cio8sn7r40078uco41s0tkt0l"},{"name":"梯子","_id":"cio8sn7r8007fuco49ouo43t6"},{"name":"测评","_id":"cio8sn7rc007nuco418cgzflj"},{"name":"python","_id":"cio8sn7ri007wuco47se7oebz"},{"name":"jQuery","_id":"cio8sn7rn0086uco41jh0w6oh"},{"name":"juddi","_id":"cio8sn7rs008euco4286yptp1"},{"name":"opencv","_id":"cio8sn7s2008uuco4hbk7z0ug"},{"name":"计算机视觉","_id":"cio8sn7s60091uco4asxuyuru"},{"name":"考研","_id":"cio8sn7sf009huco4sriextel"},{"name":"我失恋了","_id":"cio8sn7sl009vuco4zqffmsqr"},{"name":"无线传输","_id":"cio8sn7ss00a3uco4giw84166"},{"name":"游记","_id":"cio8sn7sv00aduco4cp80ui1k"},{"name":"航空摄影测量","_id":"cio8sn7sw00akuco4z9slba2a"},{"name":"c++","_id":"cio8sn7sw00apuco4m0baoxvx"},{"name":"热点","_id":"cio8sn7sx00auuco4e6ljhfsq"},{"name":"电影","_id":"cio8sn7sy00azuco4e9mxp6q8"},{"name":"装机","_id":"cio8sn7t000bauco4nhe108cq"},{"name":"BitManipulattion","_id":"cio8sn7t100beuco4jw03z1ie"},{"name":"寂寞寂寞就好","_id":"cio8sn7t200bmuco4621tp14i"},{"name":"后方交会","_id":"cio8sn7t400bwuco4tshhmt7t"},{"name":"检校","_id":"cio8sn7t500c1uco4eovqqp1r"},{"name":"精度","_id":"cio8sn7td00d4uco4u3r9be1r"},{"name":"recommend","_id":"cio8sn7tf00dcuco4jdb7xwfu"},{"name":"足球","_id":"cio8sn7tg00dhuco4zpxy0duj"},{"name":"dbscan","_id":"cio8sn7th00dmuco4fcqdmqp8"},{"name":"demo","_id":"cio8sn7ti00druco4byf64zd1"},{"name":"ICP","_id":"cio8sn7ti00duuco4cf7jh4ps"},{"name":"MMC","_id":"cio8sn7tj00dxuco4bx825w78"},{"name":"MME","_id":"cio8sn7tj00e1uco4t6vx5x58"},{"name":"SPark","_id":"cio8sn7tk00e4uco4zxfki3uq"},{"name":"算法","_id":"cio8sn7tk00e7uco4txyiu2cb"},{"name":"音乐","_id":"cio8sn7tl00eauco4sxgaptrn"},{"name":"code","_id":"cio8sn7tn00eluco4wuteeel8"},{"name":"翔","_id":"cio8sn7tn00eouco475qrunz9"},{"name":"呵呵哒","_id":"cio8sn7tq00exuco4wgh71080"},{"name":"静态ip","_id":"cio8sn7ts00ezuco438rdeo62"}]}}